{"version":3,"file":"static/js/main.862c010f.js","mappings":"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","sources":["GameFeatures/NPCs/NPCGrazeBehavior.js","GameFeatures/NPCs/NPCQuestBehavior.js","GameFeatures/NPCs/NPCEnemyBehavior.js","GameFeatures/NPCs/NPCHealBehavior.js","GameFeatures/NPCs/NPCSpawnerBehavior.js","GameFeatures/NPCs/NPCWorkerBehavior.js","GameFeatures/NPCs/NPCTraderBehavior.js","GameFeatures/NPCs/AllNPCsShared.js","UI/StringsContext.js","../node_modules/react/index.js","PlayerMovement.js","Utils/TuningManager.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","Utils/GridManagement.js","../node_modules/react/cjs/react.production.min.js","../node_modules/axios/lib/helpers/bind.js","../node_modules/axios/lib/utils.js","../node_modules/axios/lib/core/AxiosError.js","../node_modules/axios/lib/helpers/toFormData.js","../node_modules/axios/lib/helpers/AxiosURLSearchParams.js","../node_modules/axios/lib/helpers/buildURL.js","../node_modules/axios/lib/core/InterceptorManager.js","../node_modules/axios/lib/defaults/transitional.js","../node_modules/axios/lib/platform/browser/index.js","../node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","../node_modules/axios/lib/platform/browser/classes/FormData.js","../node_modules/axios/lib/platform/browser/classes/Blob.js","../node_modules/axios/lib/platform/common/utils.js","../node_modules/axios/lib/platform/index.js","../node_modules/axios/lib/helpers/formDataToJSON.js","../node_modules/axios/lib/defaults/index.js","../node_modules/axios/lib/helpers/toURLEncodedForm.js","../node_modules/axios/lib/helpers/parseHeaders.js","../node_modules/axios/lib/core/AxiosHeaders.js","../node_modules/axios/lib/core/transformData.js","../node_modules/axios/lib/cancel/isCancel.js","../node_modules/axios/lib/cancel/CanceledError.js","../node_modules/axios/lib/core/settle.js","../node_modules/axios/lib/helpers/speedometer.js","../node_modules/axios/lib/helpers/throttle.js","../node_modules/axios/lib/helpers/progressEventReducer.js","../node_modules/axios/lib/helpers/isURLSameOrigin.js","../node_modules/axios/lib/helpers/cookies.js","../node_modules/axios/lib/core/buildFullPath.js","../node_modules/axios/lib/helpers/isAbsoluteURL.js","../node_modules/axios/lib/helpers/combineURLs.js","../node_modules/axios/lib/core/mergeConfig.js","../node_modules/axios/lib/helpers/resolveConfig.js","../node_modules/axios/lib/adapters/xhr.js","../node_modules/axios/lib/helpers/parseProtocol.js","../node_modules/axios/lib/helpers/composeSignals.js","../node_modules/axios/lib/helpers/trackStream.js","../node_modules/axios/lib/adapters/fetch.js","../node_modules/axios/lib/adapters/adapters.js","../node_modules/axios/lib/helpers/null.js","../node_modules/axios/lib/core/dispatchRequest.js","../node_modules/axios/lib/env/data.js","../node_modules/axios/lib/helpers/validator.js","../node_modules/axios/lib/core/Axios.js","../node_modules/axios/lib/cancel/CancelToken.js","../node_modules/axios/lib/helpers/HttpStatusCode.js","../node_modules/axios/lib/axios.js","../node_modules/axios/lib/helpers/spread.js","../node_modules/axios/lib/helpers/isAxiosError.js","../node_modules/scheduler/cjs/scheduler.production.min.js","VFX/VFX.js","GameFeatures/Trophies/TrophyUtils.js","../node_modules/react-dom/client.js","GridState/PlayersInGrid.js","config.js","Render/RenderAnimatePosition.js","../node_modules/react/jsx-runtime.js","Utils/worldHelpers.js","../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/@socket.io/component-emitter/lib/esm/index.js","../node_modules/engine.io-client/build/esm/globals.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../node_modules/engine.io-client/build/esm/transports/polling-xhr.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/transports/webtransport.js","../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/socket.io-parser/build/esm/is-binary.js","../node_modules/socket.io-parser/build/esm/binary.js","../node_modules/socket.io-parser/build/esm/index.js","../node_modules/socket.io-client/build/esm/on.js","../node_modules/socket.io-client/build/esm/socket.js","../node_modules/socket.io-client/build/esm/contrib/backo2.js","../node_modules/socket.io-client/build/esm/manager.js","../node_modules/socket.io-client/build/esm/index.js","../node_modules/socket.io-client/build/esm/url.js","socketManager.js","GridState/GridStateNPCs.js","GameFeatures/Transit/transitConfig.js","GameFeatures/Transit/Transit.js","../node_modules/react-dom/cjs/react-dom.production.min.js","Utils/ResourceHelpers.js","GridState/GlobalGridStateTilesAndResources.js","GameFeatures/FTUE/FTUE.js","../node_modules/scheduler/index.js","FarmState.js","UI/Notifications/Notifications.js","UI/FloatingText.js","UI/PanelContext.js","../node_modules/react-dom/index.js","AppInit.js","../webpack/bootstrap","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/load script","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/jsonp chunk loading","Utils/appUtils.js","GameFeatures/Chat/Chat.js","GridState/GridStateContext.js","GridState/GridStatePCContext.js","GameFeatures/Quests/QuestGoalTracker.js","GameFeatures/Combat/Combat.js","GameFeatures/NPCs/NPCUtils.js","Utils/InventoryManagement.js","UI/Panel.js","Utils/stringLookup.js","UI/TransactionButton.js","GameFeatures/FarmAnimals/FarmAnimals.js","UI/StatusBar/CollectionFormatters.js","UI/NPCOverlayContext.js","Utils/QuestCache.js","GameFeatures/Relationships/ConversationManager.js","Render/RenderDynamic.js","Render/Render.js","Utils/ResourceLockManager.js","Utils/DropRates.js","ResourceClicking.js","UI/UILockContext.js","GridState/NPCController.js","UI/StatusBar/StatusBar.js","UI/BulkOperationContext.js","ZoomedOut/ZoomedOut.js","ZoomedOut/SettlementView.js","Utils/Relocation.js","ZoomedOut/FrontierView.js","UI/Modal.js","UI/LanguagePickerModal.js","Authentication/ChangeIcon.js","../node_modules/@stripe/stripe-js/dist/index.mjs","Store/Store.js","UI/ChangeIconModal.js","UI/ModalContext.js","Authentication/ProfilePanel.js","settings.js","Authentication/CreateAccount.js","Authentication/LoginPanel.js","Utils/GridStateDebug.js","Utils/debug.js","Utils/WorldGeneration.js","GameFeatures/Inventory/InventoryPanel.js","UI/GemPurchaseCalculation.js","UI/ResourceButton.js","GameFeatures/Inventory/WarehousePanel.js","GameFeatures/Trophies/TrophyPanel.js","UI/HowToPanel.js","UI/HowToMoneyPanel.js","UI/HowToGemsPanel.js","UI/QuestButton.js","GameFeatures/Quests/QuestPanel.js","GameFeatures/Relationships/RelationshipUtils.js","GameFeatures/Relationships/Conversation.js","GameFeatures/Relationships/RelationshipCard.js","GameFeatures/NPCs/NPCsPanel.js","Utils/playerManagement.js","GameFeatures/BuildAndBuy.js","GameFeatures/Government/GovUtils.js","GameFeatures/Build/BuildPanel.js","GameFeatures/Buy/BuyPanel.js","GameFeatures/Deco/BuyDecoPanel.js","UI/Timers.js","GameFeatures/Farming/FarmingPanel.js","GameFeatures/Farming/Farming.js","GameFeatures/Farming/ToolsPanel.js","Utils/ProtectedSelling.js","GameFeatures/Skills/SkillsPanel.js","Utils/PopulationUtils.js","GameFeatures/Government/GovPanel.js","GameFeatures/Trading/Bank.js","GameFeatures/Trading/Train.js","GameFeatures/Government/Courthouse.js","GameFeatures/Crafting/CraftingStation.js","GameFeatures/Crafting/FarmHouse.js","UI/ProgressModal.js","GameFeatures/FarmHands/BulkHarvest.js","GameFeatures/FarmHands/BulkHarvestUtils.js","GameFeatures/FarmHands/BulkHarvestResultsModal.js","GameFeatures/FarmHands/BulkAnimalCollect.js","GameFeatures/FarmHands/BulkCrafting.js","GameFeatures/FarmHands/FarmHand.js","GameFeatures/Crafting/ShopStation.js","GameFeatures/Crafting/ScrollStation.js","Utils/SkillPowerManagement.js","GameFeatures/Crafting/ScrollReveal.js","GameFeatures/Pets/PetPanel.js","GameFeatures/FarmAnimals/AnimalStall.js","GameFeatures/Farming/CropPanel.js","GameFeatures/Deco/DecoPanel.js","GameFeatures/Trading/GlobalMarketModal.js","GameFeatures/Trading/TradeStall.js","GameFeatures/Trading/Outpost.js","GameFeatures/Mailbox/Mailbox.js","GameFeatures/Seasons/OffSeasonModal.js","UI/TownNews.js","GameFeatures/Seasons/SeasonPanel.js","GameFeatures/Social/SocialPanel.js","GameFeatures/Combat/CombatPanel.js","UI/GoldBenefitsPanel.js","Utils/share.js","UI/ShareModal.js","UI/CowboyAnimation.js","App.js","reportWebVitals.js","index.js"],"sourcesContent":["import axios from 'axios';\nimport GlobalGridStateTilesAndResources from '../../GridState/GlobalGridStateTilesAndResources';\nimport NPCsInGridManager from '../../GridState/GridStateNPCs';\nimport { calculateDistance } from '../../Utils/worldHelpers';\n\n// Behavior handler for farm animals (e.g., cows)\nasync function handleFarmAnimalBehavior(gridId) {\n    // Helper for updating just this NPC\n    const updateThisNPC = async () => {\n        // console.log(`[SAVE] NPC ${this.id}: Updating state to '${this.state}' at position (${this.position.x}, ${this.position.y})`);\n        await NPCsInGridManager.updateNPC(gridId, this.id, {\n            state: this.state,\n            grazeEnd: this.grazeEnd,\n            position: this.position,\n      });\n    };\n    const tiles = GlobalGridStateTilesAndResources.getTiles();\n    const resources = GlobalGridStateTilesAndResources.getResources();\n    const npcs = Object.values(NPCsInGridManager.getNPCsInGrid(gridId) || {}); \n\n    gridId = gridId || this.gridId; // Fallback to npc.gridId if not provided\n\n    //console.log(`handleFarmAnimalBehavior: gridId: ${gridId}; NPC ${this.id} is in state: ${this.state}`);\n\n    if (!tiles || !resources) {\n        console.error(`Tiles or resources are missing for NPC ${this.id}.`);\n        return;\n    }\n    \n    // IMPORTANT: If NPC is in processing state, don't allow any state transitions except to emptystall\n    if (this.state === 'processing') {\n        // Only log periodically to avoid spam\n        if (!this.lastProcessingLog || Date.now() - this.lastProcessingLog > 5000) {\n            //console.log(`🐮 NPC ${this.id} is in processing state, waiting for collection. GrazeEnd: ${this.grazeEnd}`);\n            this.lastProcessingLog = Date.now();\n        }\n        return; // Exit early, don't process any state transitions\n    }\n\n    switch (this.state) {\n        case 'idle': {\n//            console.log(`🐮 [STATE] NPC ${this.id} entering state: ${this.state}`);\n            const idleCompleted = await this.handleIdleState(tiles, resources, npcs, 4, async () => {\n//              console.log(`🔁 Retrying stall for NPC ${this.id}`);\n              this.state = 'stall';\n              await updateThisNPC();\n            });\n          \n            if (!idleCompleted) {\n              // Don't continue state processing if we're still idling\n              return;\n            }\n          \n            // If idle completed and `onTransition` fired, the state is now \"stall\"\n            break;\n          }\n\n        case 'hungry': {\n            //console.log(`NPC ${this.id} is in HUNGRY state.`);\n            //console.log(`🐮 [STATE] NPC ${this.id} entering state: ${this.state} grazeEnd: ${this.grazeEnd}`);\n\n            const currentTime = Date.now();\n            if (this.grazeEnd && currentTime >= this.grazeEnd) {\n                console.log(`⏳ Grazing already done — NPC ${this.id} skipping hungry.`);\n                this.state = 'stall';\n                await updateThisNPC();\n                break;\n            }\n\n            //console.log(\"this.targetGrassTile = \", this.targetGrassTile);\n\n            // Find the target grass tile if not already set\n            if (!this.targetGrassTile) {\n                //console.log(`NPC ${this.id} finding nearest grass tile.`);\n                \n                // Determine which tile type to look for based on NPC type\n                const targetTileType = this.type === 'Pig' ? 'd' : 'g'; // Pigs graze on dirt, others on grass\n                \n                // Find all grass/dirt tiles within range\n                const grassTiles = await this.findTileInRange(targetTileType, tiles, resources);\n        \n                if (!Array.isArray(grassTiles) || grassTiles.length === 0) {\n                    const tileTypeName = targetTileType === 'd' ? 'dirt' : 'grass';\n                    console.warn(`No ${tileTypeName} tiles found for NPC ${this.id}. Transitioning to idle.`);\n                    this.state = 'idle'; // Fallback to idle if no valid tiles\n                    break;\n                }\n        \n                // Filter out occupied grass tiles\n                const unoccupiedGrassTiles = grassTiles.filter(\n                    (tile) => !resources.some((res) => res.x === tile.x && res.y === tile.y)\n                );\n        \n                if (unoccupiedGrassTiles.length === 0) {\n                    const tileTypeName = targetTileType === 'd' ? 'dirt' : 'grass';\n                    console.warn(`No unoccupied ${tileTypeName} tiles found for NPC ${this.id}. Transitioning to idle.`);\n                    this.state = 'idle'; // Fallback to idle if no valid tiles\n                    break;\n                }\n        \n                // Sort tiles by distance and select the closest\n                unoccupiedGrassTiles.sort(\n                    (a, b) => calculateDistance(this.position, a) - calculateDistance(this.position, b)\n                );\n                this.targetGrassTile = unoccupiedGrassTiles[0];\n                //console.log(`NPC ${this.id} selected grass tile at (${this.targetGrassTile.x}, ${this.targetGrassTile.y}).`);\n            }\n        \n            // Attempt to move toward the target grass tile\n            if (this.targetGrassTile && \n                typeof this.targetGrassTile.x === 'number' && \n                typeof this.targetGrassTile.y === 'number') \n            {\n                const dx = this.targetGrassTile.x - Math.floor(this.position.x);\n                const dy = this.targetGrassTile.y - Math.floor(this.position.y);\n                //console.log(`NPC ${this.id} movement vector: dx=${dx}, dy=${dy}, current position=(${this.position.x}, ${this.position.y}), target=(${this.targetGrassTile.x}, ${this.targetGrassTile.y})`);\n        \n                let direction = null;\n        \n                // Explicitly handle when dx and dy are both 0 (already at the target)\n                if (dx === 0 && dy === 0) {\n                   // console.log(`NPC ${this.id} is already at the target grazing tile. Transitioning to grazing.`);\n                    this.state = 'grazing'; // Transition to grazing\n                    this.targetGrassTile = null; // Clear the target\n                    await updateThisNPC(); // Save after transition\n                    break;\n                }\n        \n                // Prioritize diagonal movement if dx and dy are both non-zero\n                if (dx > 0 && dy > 0) direction = 'SE';\n                else if (dx > 0 && dy < 0) direction = 'NE';\n                else if (dx < 0 && dy > 0) direction = 'SW';\n                else if (dx < 0 && dy < 0) direction = 'NW';\n                else if (dx > 0) direction = 'E';\n                else if (dx < 0) direction = 'W';\n                else if (dy > 0) direction = 'S';\n                else if (dy < 0) direction = 'N';\n        \n                //console.log(`NPC ${this.id} determined direction: ${direction}`);\n        \n                if (!direction) {\n                    console.warn(`NPC ${this.id} could not determine direction to grass tile.`);\n                    this.state = 'idle';\n                    this.targetGrassTile = null;\n                    break;\n                }\n        \n                if (!this.isMoving) {\n                    //console.log(`NPC ${this.id} moving one tile toward grass tile at (${this.targetGrassTile.x}, ${this.targetGrassTile.y}).`);\n                    this.isMoving = true;\n                    const moved = await this.moveOneTile(direction, tiles, resources, npcs);\n        \n                    // Ensure position snaps to integers after movement\n                    this.position.x = Math.floor(this.position.x);\n                    this.position.y = Math.floor(this.position.y);\n                    this.isMoving = false;\n                    if (!moved) {\n                        console.warn(`NPC ${this.id} is stuck and cannot move toward the grass. Switching to idle.`);\n                        this.targetGrassTile = null;\n                        this.state = 'idle';\n                        await updateThisNPC(); // ✅ Save failure state\n                        break;\n                      }\n                }\n        \n                // Check if NPC has reached the grass tile\n                if (\n                    Math.floor(this.position.x) === this.targetGrassTile.x &&\n                    Math.floor(this.position.y) === this.targetGrassTile.y\n                ) {\n                    //console.log(`NPC ${this.id} has reached the grass tile at (${this.targetGrassTile.x}, ${this.targetGrassTile.y}). Transitioning to grazing.`);\n                    this.state = 'grazing'; // Transition to grazing\n                    this.targetGrassTile = null; // Clear the target\n                    await updateThisNPC(); // Save after transition\n                }\n            }\n            else {\n                    console.warn(`🐄 [Hungry] NPC ${this.id} has invalid targetGrassTile. Roaming to unstuck.`);\n                    this.targetGrassTile = null;\n                    this.state = 'roam';\n                    await updateThisNPC();\n                    break;\n            }\n            break;\n        }\n \n          \n        case 'grazing': {\n            //console.log(`🐮 [STATE] NPC ${this.id} entering state: ${this.state} grazeEnd: ${this.grazeEnd}`);\n            const currentTime = Date.now();\n        \n            //console.log(`grazeEnd: ${this.grazeEnd}, growTime: ${this.growTime}, type: ${this.type}`);\n\n            if (!this.grazeEnd) {\n                this.grazeEnd = currentTime + (this.growTime * 1000); // Calculate grazing end time\n                //console.log('in state = grazing; setting grazeEnd: ',this.grazeEnd);\n                await updateThisNPC();\n            }\n            \n            // ✅ Check if grazing is complete\n            if (currentTime >= this.grazeEnd) {\n                //console.log(`🐄 NPC ${this.id} finished grazing. Moving to stall.`);\n                // ✅ Transition to stall\n                this.state = 'stall';\n                await updateThisNPC();\n            }\n            break;\n        }\n\n\n        case 'stall': {\n            //console.log(`🐮 [STATE] NPC ${this.id} entering state: ${this.state} grazeEnd: ${this.grazeEnd}`);\n            const fullGridState = NPCsInGridManager.getNPCsInGrid(gridId);\n    \n            // Step 1: If no stall is currently assigned, find the nearest available stall\n            if (!this.targetStall) {\n                //console.log(`NPC ${this.id} finding nearest stall.`);\n                this.targetStall = this.findNearestResource('stall', tiles, resources);\n                if (!this.targetStall) {\n                    console.log('No availalbe stall, returning to idle.');\n                    this.state = 'idle';\n                    break;\n                }\n            }\n        \n            // Step 5: Confirm the stall is still valid before proceeding\n            const stallResource = resources.find(\n                (res) => res.x === this.targetStall.x && res.y === this.targetStall.y\n            );\n            if (!stallResource) {\n                console.warn(`Target stall at (${this.targetStall.x}, ${this.targetStall.y}) is no longer valid. Transitioning to idle.`);\n                this.state = 'idle';\n                this.targetStall = null;\n                break;\n            }\n        \n            // Step 6: Calculate movement direction towards the stall\n            const dx = this.targetStall.x - Math.floor(this.position.x);\n            const dy = this.targetStall.y - Math.floor(this.position.y);\n            let direction = null;\n        \n            // ✅ Prefer diagonals if both dx and dy are non-zero\n            if (dx !== 0 && dy !== 0) {\n                if (dx > 0 && dy > 0) direction = 'SE';\n                else if (dx > 0 && dy < 0) direction = 'NE';\n                else if (dx < 0 && dy > 0) direction = 'SW';\n                else if (dx < 0 && dy < 0) direction = 'NW';\n            } else if (dx !== 0) {\n                direction = dx > 0 ? 'E' : 'W';\n            } else if (dy !== 0) {\n                direction = dy > 0 ? 'S' : 'N';\n            }\n        \n            // Step 7: If a valid movement direction isn't determined, revert to idle state\n            if (!direction &&\n                (   Math.floor(this.position.x) !== this.targetStall.x &&\n                    Math.floor(this.position.y) !== this.targetStall.y )\n                ) {\n                    console.warn(`NPC ${this.id} could not determine direction to stall.`);\n                    this.state = 'idle';\n                    this.targetStall = null;\n                    break;\n                }\n        \n            // Step 8: Move the NPC one tile towards the stall\n            if (!this.isMoving) {\n                this.isMoving = true;\n                const moved = await this.moveOneTile(direction, tiles, resources, npcs);\n                this.position.x = Math.floor(this.position.x);\n                this.position.y = Math.floor(this.position.y);\n                this.isMoving = false;\n                \n                if (!moved) {\n                    console.warn(`NPC ${this.id} is stuck and cannot move toward the stall. Switching to idle.`);\n                    this.targetStall = null;\n                    this.state = 'idle';\n                    this.triedStall = true;\n                    await updateThisNPC(); // ✅ Save failure state\n                    break;\n                }\n                \n                await updateThisNPC(); // ✅ Save successful movement\n                }\n        \n            // Step 9: If NPC reaches the stall, transition to processing state\n            if (Math.floor(this.position.x) === this.targetStall.x &&\n                Math.floor(this.position.y) === this.targetStall.y) {\n            \n                // Check if another animal is already at this position\n                const otherNPCsAtStall = Object.values(fullGridState || {}).filter(otherNpc => \n                    otherNpc.id !== this.id &&\n                    Math.floor(otherNpc.position?.x) === this.targetStall.x &&\n                    Math.floor(otherNpc.position?.y) === this.targetStall.y &&\n                    otherNpc.action === 'graze'\n                );\n                \n                console.log(`🐮 NPC ${this.id} reached stall at (${this.targetStall.x}, ${this.targetStall.y}). Other animals at same position: ${otherNPCsAtStall.length}`);\n                \n                if (otherNPCsAtStall.length > 0) {\n                    console.log(`🐮 Multiple animals at stall - allowing all to process. Other animals:`, otherNPCsAtStall.map(n => ({\n                        id: n.id,\n                        type: n.type,\n                        state: n.state,\n                        grazeEnd: n.grazeEnd\n                    })));\n                }\n                \n                // ✅ Keep grazeEnd for server validation - it will be cleared after successful collection\n                // Allow multiple animals to be in processing state at the same stall\n                this.state = 'processing';\n                console.log(`🐮✅ NPC ${this.id} transitioning to processing state. GrazeEnd: ${this.grazeEnd}`);\n                \n                // Save the state change immediately and wait for confirmation\n                try {\n                    await updateThisNPC();\n                    console.log(`🐮✅ NPC ${this.id} state update to 'processing' sent to server`);\n                    \n                    // Wait longer for the update to propagate to the server\n                    await new Promise(resolve => setTimeout(resolve, 500));\n                    \n                    // Verify the update was successful\n                    const updatedNPC = NPCsInGridManager.getNPCsInGrid(gridId)?.[this.id];\n                    if (updatedNPC && updatedNPC.state !== 'processing') {\n                        console.error(`❌ State update verification failed! NPC ${this.id} state is ${updatedNPC.state} instead of 'processing'`);\n                        // Try to update again with longer wait\n                        this.state = 'processing';\n                        await updateThisNPC();\n                        console.log(`🐮🔄 Retried state update for NPC ${this.id}`);\n                        await new Promise(resolve => setTimeout(resolve, 500));\n                    } else {\n                        console.log(`🐮✅ Verified NPC ${this.id} is in processing state`);\n                    }\n                } catch (error) {\n                    console.error(`❌ Failed to update NPC ${this.id} to processing state:`, error);\n                }\n                }\n\n            break;\n        }\n \n        case 'processing': {\n            // awaiting handleNPCClick\n            // console.log(`🐮 [STATE] NPC ${this.id} entering state: ${this.state}`);\n            // console.log('Awaiting handleNPCClick');\n            // IMPORTANT: Don't transition out of processing state unless explicitly collected\n            if (this.grazeEnd && Date.now() >= this.grazeEnd) {\n                console.log(`🐮 NPC ${this.id} is in processing state and ready for collection. GrazeEnd: ${this.grazeEnd}`);\n            }\n        break;\n        }\n\n        case 'emptystall': {\n            // console.log(`🐮 [STATE] NPC ${this.id} entering state: ${this.state}`);\n            this.targetStall = null;\n            this.grazeEnd = null; // Clear grazeEnd so cow will go hungry after roaming\n            this.state = 'roam'; // Transition to roam state\n            await updateThisNPC(); // Save after transition\n            break;\n        }\n         \n        case 'roam': {\n\n            // console.log(`🐮 [STATE] NPC ${this.id} entering state: ${this.state}`);\n            await this.handleRoamState(tiles, resources, npcs, async () => {\n                // ✅ This is your onTransition logic\n                if (!this.grazeEnd) {\n                  console.log(`🌱 NPC ${this.id} has no grazeEnd, transitioning to hungry.`);\n                  this.state = 'hungry';\n                } else {\n                  console.log(`😐 NPC ${this.id} completed roam but grazing NOT done. Going idle.`);\n                  this.state = 'idle';\n                }\n                await updateThisNPC();\n              });\n\n            break;\n          }\n\n        default:\n            console.warn(`NPC ${this.id} is in an unhandled state: ${this.state}`);\n            break;\n    }\n}\n\n// Export a function to attach the behavior to the NPC class\nexport function attachGrazingBehavior(NPC) {\n    NPC.prototype.handleFarmAnimalBehavior = handleFarmAnimalBehavior;\n}","import axios from 'axios';\nimport GlobalGridStateTilesAndResources from '../../GridState/GlobalGridStateTilesAndResources';\nimport NPCsInGridManager from '../../GridState/GridStateNPCs';\nimport playersInGridManager from '../../GridState/PlayersInGrid';\nimport { calculateDistance } from '../../Utils/worldHelpers';\n\nconst updateThisNPC = async (npcInstance, gridId) => {\n  await NPCsInGridManager.updateNPC(gridId, npcInstance.id, {\n    state: npcInstance.state,\n    position: npcInstance.position,\n  });\n};\n\nasync function handleQuestGiverBehavior(gridId) {\n    const tiles = GlobalGridStateTilesAndResources.getTiles();\n    const resources = GlobalGridStateTilesAndResources.getResources();\n    const npcs = Object.values(NPCsInGridManager.getNPCsInGrid(gridId) || {});\n    //console.log('🐉 handleQuestGiver:  npcs = ', npcs);\n\n    gridId = gridId || this.gridId; // Fallback to npc.gridId if not provided\n\n    //console.log(`handleQuestGiverBehavior: gridId: ${gridId}; NPC ${this.id} is in state: ${this.state}`);\n\n    if (!tiles || !resources) {\n        console.error(`Tiles or resources are missing for NPC ${this.id}.`);\n        return;\n    }\n\n    switch (this.state) {\n        case 'idle': {\n            const pcsInRange = Object.values(playersInGridManager.getPlayersInGrid(gridId) || {}).some(pc => \n                calculateDistance(pc.position, this.position) <= this.range && pc.hp>0\n            );\n            if (pcsInRange) { break; }\n            \n            await this.handleIdleState(tiles, resources, npcs, 10, async () => {\n                this.state = 'roam';\n                await updateThisNPC(this, gridId); // Save after transition\n            });\n\n            break;\n          }\n\n          case 'roam': {\n            //console.log(`NPC ${this.id} is roaming.`);\n            const pcsInRange = Object.values(playersInGridManager.getPlayersInGrid(gridId) || {}).some(pc => \n                calculateDistance(pc.position, this.position) <= this.range\n            );\n            if (pcsInRange) { this.state = 'idle'; await updateThisNPC(); break; }\n            \n            await this.handleRoamState(tiles, resources, npcs, () => {\n                //console.log(`NPC ${this.id} transitioning back to idle.`);\n                this.state = 'idle'; // Transition to the idle state\n\n              });\n            break;\n          }\n\n        default:\n            console.warn(`NPC ${this.id} is in an unhandled state: ${this.state}`);\n            break;\n    }\n}\n\n// Attach the quest-giver behavior to the NPC class\nexport function attachQuestBehavior(NPC) {\n    NPC.prototype.handleQuestGiverBehavior = handleQuestGiverBehavior;\n}","import GlobalGridStateTilesAndResources from '../../GridState/GlobalGridStateTilesAndResources';\nimport NPCsInGridManager from '../../GridState/GridStateNPCs';\nimport playersInGridManager from '../../GridState/PlayersInGrid';\nimport FloatingTextManager from \"../../UI/FloatingText\";\n\n/** Helper to get tiles in line of sight between two points using Bresenham's algorithm **/\nfunction getLineOfSightTiles(start, end) {\n    const tiles = [];\n    let x0 = Math.floor(start.x);\n    let y0 = Math.floor(start.y);\n    const x1 = Math.floor(end.x);\n    const y1 = Math.floor(end.y);\n    \n    const dx = Math.abs(x1 - x0);\n    const dy = Math.abs(y1 - y0);\n    const sx = x0 < x1 ? 1 : -1;\n    const sy = y0 < y1 ? 1 : -1;\n    let err = dx - dy;\n    \n    while (true) {\n        // Don't include the start or end positions\n        if ((x0 !== Math.floor(start.x) || y0 !== Math.floor(start.y)) && \n            (x0 !== x1 || y0 !== y1)) {\n            tiles.push({ x: x0, y: y0 });\n        }\n        \n        if (x0 === x1 && y0 === y1) break;\n        \n        const e2 = 2 * err;\n        if (e2 > -dy) {\n            err -= dy;\n            x0 += sx;\n        }\n        if (e2 < dx) {\n            err += dx;\n            y0 += sy;\n        }\n    }\n    \n    return tiles;\n}\n\n/** Helper to check if NPC can see the target (no walls blocking) **/\nfunction canSeeTarget(npcPosition, targetPosition) {\n    const resources = GlobalGridStateTilesAndResources.getResources();\n    const lineOfSightTiles = getLineOfSightTiles(npcPosition, targetPosition);\n    \n    // Check each tile in the line of sight for walls\n    for (const tile of lineOfSightTiles) {\n        const wall = resources.find(res => \n            res.x === tile.x && \n            res.y === tile.y && \n            res.action === 'wall'\n        );\n        if (wall) {\n            return false; // Wall found blocking the view\n        }\n    }\n    \n    return true; // Clear line of sight\n}\n\nconst updateThisNPC = async function(gridId) {\n  await NPCsInGridManager.updateNPC(gridId, this.id, {\n    state: this.state,\n    position: this.position,\n  });\n};\n\nasync function handleEnemyBehavior(gridId, TILE_SIZE) {\n  //console.log(`🐺 NPC ${this.id} handling enemy behavior on grid ${gridId}.`);\n  const tiles = GlobalGridStateTilesAndResources.getTiles();\n  const resources = GlobalGridStateTilesAndResources.getResources();\n  const npcs = Object.values(NPCsInGridManager.getNPCsInGrid(gridId) || {});\n  const pcs = Object.values(playersInGridManager.getPlayersInGrid(gridId) || {}); // Get all PCs on the grid\n\n  if (!this.state) this.state = 'idle';\n \n  // Check for visible PCs at the start of any state (immediate reaction)\n  const visiblePCsInRange = pcs.filter(pc => {\n    if (pc.hp <= 0) return false;\n    const dist = getDistance(this.position, pc.position);\n    if (dist > this.range) return false;\n    return canSeeTarget(this.position, pc.position);\n  });\n  \n  // If we see a PC and we're not already pursuing/attacking, immediately react\n  if (visiblePCsInRange.length > 0 && this.state !== 'pursue' && this.state !== 'attack') {\n    const targetPC = visiblePCsInRange[Math.floor(Math.random() * visiblePCsInRange.length)];\n    console.log(`⚡ NPC ${this.id} spotted PC ${targetPC.username}! Immediately entering pursue state.`);\n    this.targetPC = targetPC;\n    this.state = 'pursue';\n    this.pursueTimerStart = null;\n    await updateThisNPC.call(this, gridId);\n    return; // Skip the rest of the state processing\n  }\n \n  switch (this.state) {\n\n    case 'idle': {\n      this.pursueTimerStart = null; // Clear pursuit timer\n      // Reduced idle duration from 5 to 2 for more responsive enemies\n      await this.handleIdleState(tiles, resources, npcs, 2, async () => {\n        const pcsInRange = pcs.filter(pc => {\n          if (pc.hp <= 0) return false;\n          const dist = getDistance(this.position, pc.position);\n          if (dist > this.range) return false;\n          // Check if NPC can see the PC (no walls blocking)\n          return canSeeTarget(this.position, pc.position);\n        });\n        const targetPC = pcsInRange[Math.floor(Math.random() * pcsInRange.length)];\n        if (targetPC) {\n          console.log(`NPC ${this.id} randomly chose PC ${targetPC.username} within range. Entering 'pursue' state.`);\n          this.targetPC = targetPC;\n          this.state = 'pursue';\n          await updateThisNPC.call(this, gridId);\n        } else {\n          console.log(`NPC ${this.id} did not detect any PCs within range. Entering 'roam' state.`);\n          this.state = 'roam';\n          await updateThisNPC.call(this, gridId);\n        }\n      });\n      break;\n    }\n\n    case 'pursue': {\n      this.targetPC = pcs.find(pc => pc.playerId === this.targetPC?.playerId); // Refresh position from latest state\n      if (!this.targetPC) {\n        //console.warn(`NPC ${this.id} lost its target. Returning to idle state.`);\n        this.state = 'idle';\n        this.pursueTimerStart = null;\n        await updateThisNPC.call(this, gridId); // Save after transition\n        break;\n      }\n      \n      // First check if we can still see the target at all\n      const canStillSeeTarget = canSeeTarget(this.position, this.targetPC.position);\n      if (!canStillSeeTarget) {\n        console.log(`👁️ NPC ${this.id} lost sight of ${this.targetPC?.username} during pursuit. Returning to idle.`);\n        this.state = 'idle';\n        this.pursueTimerStart = null;\n        this.targetPC = null;\n        await updateThisNPC.call(this, gridId);\n        break;\n      }\n      \n      // Check if already in attack range AND can see target before pursuing\n      const currentDistance = getDistance(this.position, this.targetPC.position);\n      if (currentDistance <= this.attackrange) {\n        console.log(`NPC ${this.id} is already in attack range (${currentDistance} <= ${this.attackrange}) and can see target. Switching to attack!`);\n        this.state = 'attack';\n        await updateThisNPC.call(this, gridId);\n        break;\n      }\n      if (!this.pursueTimerStart) this.pursueTimerStart = Date.now();\n      const timeSincePursueStart = Date.now() - this.pursueTimerStart;\n      const distance = getDistance(this.position, this.targetPC?.position);\n      // Check if there's a closer PC to switch to (that can be seen)\n      const closestVisiblePC = findClosestVisiblePC(this.position, pcs);\n      if (closestVisiblePC && closestVisiblePC.playerId !== this.targetPC.playerId) {\n        const distToCurrent = distance;\n        const distToClosest = getDistance(this.position, closestVisiblePC.position);\n        if (distToCurrent - distToClosest >= 2) {\n          console.log(`🔄 NPC ${this.id} switching target from ${this.targetPC.username} to much closer PC ${closestVisiblePC.username}.`);\n          this.targetPC = closestVisiblePC;\n        }\n      }\n      // Give up if: \n      // 1. Target is too far AND we've been chasing for a while, OR\n      // 2. We can't see the target anymore (behind wall)\n      const canSeeTargetNow = canSeeTarget(this.position, this.targetPC.position);\n      \n      if ((distance > this.range * 2 && timeSincePursueStart > 5000) || !canSeeTargetNow) {\n        if (!canSeeTargetNow) {\n          console.log(`👁️ NPC ${this.id} lost sight of ${this.targetPC?.username} (wall blocking). Giving up pursuit.`);\n        } else {\n          console.log(`🐺 NPC ${this.id} gave up chasing ${this.targetPC?.username} (too far).`);\n        }\n        this.state = 'idle';\n        this.pursueTimerStart = null;\n        this.targetPC = null;\n        await updateThisNPC.call(this, gridId);\n        break;\n      }\n      console.log(`NPC ${this.id} is pursuing PC ${this.targetPC.username}.`);\n      \n      // Use a custom pursue handler that checks line of sight\n      const handlePursueWithLineOfSight = async () => {\n        const dx = this.targetPC.position.x - this.position.x;\n        const dy = this.targetPC.position.y - this.position.y;\n\n        let direction = null;\n        if (Math.abs(dx) > Math.abs(dy)) {\n          direction = dx > 0 ? 'E' : 'W';\n        } else if (dy !== 0) {\n          direction = dy > 0 ? 'S' : 'N';\n        }\n        // Add diagonal movement if applicable\n        if (Math.abs(dx) === Math.abs(dy)) {\n          if (dx > 0 && dy > 0) direction = 'SE';\n          else if (dx > 0 && dy < 0) direction = 'NE';\n          else if (dx < 0 && dy > 0) direction = 'SW';\n          else if (dx < 0 && dy < 0) direction = 'NW';\n        } \n        \n        // Check if already in attack range AND can see target BEFORE attempting to move\n        const distanceToPlayer = getDistance(this.position, this.targetPC.position);\n        console.log(`🎯 NPC ${this.id} distance to player: ${distanceToPlayer} | range: ${this.attackrange}`);\n        \n        if (distanceToPlayer <= this.attackrange) {\n          if (canSeeTarget(this.position, this.targetPC.position)) {\n            console.log(`NPC ${this.id} can see and attack ${this.targetPC.username}. Transitioning to attack!`);\n            this.state = 'attack';\n            await updateThisNPC.call(this, gridId);\n            return;\n          } else {\n            console.log(`NPC ${this.id} is in range but can't see ${this.targetPC.username} due to walls. Continuing pursuit.`);\n          }\n        }\n        \n        if (!direction) return;\n\n        const moved = await this.moveOneTile(direction, tiles, resources, npcs);\n        if (!moved) {\n          console.log(`NPC ${this.id} could not move in direction ${direction}. Trying alternate route.`);\n        }\n      };\n      \n      await handlePursueWithLineOfSight();\n      break;\n    }\n\n    case 'attack': {\n      this.targetPC = pcs.find(pc => pc.playerId === this.targetPC?.playerId); // Refresh position from latest state\n      this.targetPC = pcs.find(pc => pc.playerId === this.targetPC?.playerId);\n\n      if (!this.targetPC) {\n        //console.warn(`NPC ${this.id} lost its target. Returning to idle state.`);\n        this.pursueTimerStart = null;\n        this.state = 'idle';\n        await updateThisNPC.call(gridId); // Save after transition\n        break;\n      }\n      if (this.targetPC.hp <= 0 || this.targetPC.iscamping) {\n        this.state = 'idle';\n        await updateThisNPC.call(this, gridId);\n        break; // ✅ Skip PCs that are dead or camping\n      }\n      const distanceToTarget = getDistance(this.position, this.targetPC.position);\n      if (distanceToTarget > this.attackrange) {\n        //console.log(`PC ${this.targetPC.username} moved out of attack range. Returning to 'pursue' state.`);\n        this.state = 'pursue';\n        await updateThisNPC.call(this, gridId); // Save after transition\n        break;\n      }\n      \n      // Check line of sight before attacking\n      if (!canSeeTarget(this.position, this.targetPC.position)) {\n        console.log(`NPC ${this.id} lost sight of ${this.targetPC.username} due to walls. Returning to 'pursue' state.`);\n        this.state = 'pursue';\n        await updateThisNPC.call(this, gridId);\n        break;\n      }\n \n      // Perform the attack\n      const attackRoll = Math.floor(Math.random() * 20) + 1;\n      const hitRoll = attackRoll + this.attackbonus;\n      const isAHit = hitRoll >= this.targetPC.armorclass;\n\n      // console.log('attackRoll = ', attackRoll);\n      // console.log('this.attackBonus = ', this.attackbonus)\n      // console.log('this.targetPC = ',this.targetPC);\n      // console.log('this.targetPC.armorclass = ',this.targetPC.armorclass);\n      // console.log('hitRoll = ', hitRoll);\n      // console.log('isAHit = ', isAHit);\n\n      if (!isAHit) {\n        //console.log(`NPC ${this.id} missed the attack on ${this.targetPC.username}.`);\n        FloatingTextManager.addFloatingText(503, this.targetPC.position.x, this.targetPC.position.y, TILE_SIZE);\n        setTimeout(() => {\n          this.state = 'attack'; // Retry attack after waiting\n        }, this.speed);\n      } else {\n        // apply damage\n        const damage = Math.floor(Math.random() * 6) + 1 + this.damage;\n        // Define the stat and amount to modify before calling modifyPlayerStats\n        const amountToMod = -damage;  // Damage is negative\n        \n        try {\n          const newHP = Math.max(0, this.targetPC.hp + amountToMod);\n          FloatingTextManager.addFloatingText(`- ${damage} ❤️‍🩹 HP`, this.targetPC.position.x, this.targetPC.position.y, TILE_SIZE );\n          playersInGridManager.updatePC(gridId, this.targetPC.playerId, {\n            hp: newHP,\n            lastUpdated: Date.now()\n          });\n        } catch (error) {\n          console.error(`Error applying damage to player ${this.targetPC.username}:`, error);\n        }\n      }\n      break;\n    }\n\n    case 'roam': {\n      this.pursueTimerStart = null;\n      await this.handleRoamState(tiles, resources, npcs, async () => {\n        //console.log(`NPC ${this.id} transitioning to IDLE state after roaming.`);\n        this.state = 'idle';\n        await updateThisNPC.call(this, gridId); // Save after transition\n      });\n      break;\n    }\n\n    default: {\n      console.warn(`Unhandled state: ${this.state}`);\n      break;\n    }\n  }\n}\n\n/**\n * Finds the closest PC to the given position.\n */\nfunction findClosestPC(npcPosition, pcs) {\n  let closestPC = null;\n  let minDistance = Infinity;\n\n  pcs.forEach((pc) => {\n    if (pc.hp <= 0) return; // ✅ Skip PCs that are dead\n    const distance = getDistance(npcPosition, pc.position);\n    if (distance < minDistance) {\n      minDistance = distance;\n      closestPC = pc;\n    }\n  });\n\n  return closestPC;\n}\n\n/**\n * Helper to find the closest VISIBLE PC to an NPC (no walls blocking)\n */\nfunction findClosestVisiblePC(npcPosition, pcs) {\n  let closestPC = null;\n  let minDistance = Infinity;\n\n  pcs.forEach((pc) => {\n    if (pc.hp <= 0) return; // Skip PCs that are dead\n    const distance = getDistance(npcPosition, pc.position);\n    if (distance < minDistance && canSeeTarget(npcPosition, pc.position)) {\n      minDistance = distance;\n      closestPC = pc;\n    }\n  });\n\n  return closestPC;\n}\n\n/**\n * Calculates the Euclidean distance between two points.\n */\nfunction getDistance(pos1, pos2) {\n  return Math.sqrt((pos1.x - pos2.x) ** 2 + (pos1.y - pos2.y) ** 2);\n}\n\n\nexport function attachEnemyBehavior(NPC) {\n  NPC.prototype.handleEnemyBehavior = handleEnemyBehavior;\n}","import axios from 'axios';\nimport GlobalGridStateTilesAndResources from '../../GridState/GlobalGridStateTilesAndResources';\nimport NPCsInGridManager from '../../GridState/GridStateNPCs';\nimport { calculateDistance } from '../../Utils/worldHelpers';\n\nasync function handleHealBehavior(gridId) {\n    const updateThisNPC = async () => {\n        await NPCsInGridManager.updateNPC(gridId, this.id, {\n            state: this.state,\n            position: this.position,\n        });\n    };\n\n    const tiles = GlobalGridStateTilesAndResources.getTiles();\n    const resources = GlobalGridStateTilesAndResources.getResources();\n    const npcs = Object.values(NPCsInGridManager.getNPCsInGrid(gridId) || {}); \n\n    gridId = gridId || this.gridId; // Fallback to npc.gridId if not provided\n\n    //console.log(`handleHealerBehavior: gridId: ${gridId}; NPC ${this.id} is in state: ${this.state}`);\n\n    if (!tiles || !resources) {\n        console.error(`Tiles or resources are missing for NPC ${this.id}.`);\n        return;\n    }\n\n    switch (this.state) {\n        case 'idle': {\n            \n            await this.handleIdleState(tiles, resources, npcs, 5, async () => {\n                //console.log(`NPC ${this.id} transitioning to roam state.`);\n                this.state = 'roam'; // Transition to the roam state\n                await updateThisNPC();\n            });\n\n            break;\n          }\n\n          case 'roam': {\n\n            await this.handleRoamState(tiles, resources, npcs, () => {\n                //console.log(`NPC ${this.id} transitioning back to idle.`);\n                this.state = 'idle'; // Transition to the idle state\n            });\n            break;\n          }\n\n        default:\n            console.warn(`NPC ${this.id} is in an unhandled state: ${this.state}`);\n            break;\n    }\n}\n\n// Attach the quest-giver behavior to the NPC class\nexport function attachHealBehavior(NPC) {\n    NPC.prototype.handleHealBehavior = handleHealBehavior;\n}","import { calculateDistance } from '../../Utils/worldHelpers';\nimport NPCsInGridManager from '../../GridState/GridStateNPCs';\nimport playersInGridManager from '../../GridState/PlayersInGrid';\n\nasync function handleSpawnBehavior(gridId) {\n    const NPCsInGrid = NPCsInGridManager.getNPCsInGrid(gridId);\n    if (!NPCsInGrid) {\n        console.warn(`GridState unavailable for gridId ${gridId}.`);\n        return;\n    }\n\n    const npcsObject = NPCsInGridManager.getNPCsInGrid(gridId); // this *is* the npcs object\n    const npcs = Object.values(npcsObject || {});\n    \n    const playersInGrid = playersInGridManager.getPlayersInGrid(gridId);\n    const pcs = Object.values(playersInGrid || {});\n\n    //console.log(`[Spawner] Handling spawn behavior for ${this.type} at (${this.position.x}, ${this.position.y}). State: ${this.state}`);\n\n    // 🔴 Track position changes\n    const oldPosition = { x: this.position.x, y: this.position.y };\n\n    switch (this.state) {\n        case 'idle': {\n            const pcsInRange = pcs.some(pc => calculateDistance(pc.position, this.position) < this.range);\n            if (pcsInRange) {\n                console.log(`[Spawner] ${this.type} detected PCs nearby. Transitioning to spawn state.`);\n                this.state = 'spawn';\n                await NPCsInGridManager.saveGridStateNPCs(gridId);\n            }\n            break;\n        }\n\n        case 'spawn': {\n            const existingNPCs = npcs.filter(npc => npc.type === this.requires);\n            if (existingNPCs.length >= this.qtycollected) {\n                console.log(`[Spawner] Max ${this.requires} reached (${this.qtycollected}). Returning to idle.`);\n                this.state = 'idle';\n                await NPCsInGridManager.saveGridStateNPCs(gridId);\n                return;\n            }\n\n            if (!this.nextspawn || Date.now() >= this.nextspawn) {\n                console.log(`[Spawner] Spawning new ${this.requires} at (${this.position.x}, ${this.position.y}).`);\n                // 🛑 ENSURE THE SPAWNER AND NPC HAVE SEPARATE POSITION OBJECTS 🛑\n                const npcPosition = { x: this.position.x, y: this.position.y }; // NEW OBJECT, NOT A REFERENCE\n\n                await NPCsInGridManager.spawnNPC(gridId, { type: this.requires }, npcPosition);\n\n                this.nextspawn = Date.now() + this.speed * 1000;\n                await NPCsInGridManager.saveGridStateNPCs(gridId);\n            } else {\n                console.log(`[Spawner] Waiting for next spawn cycle.`);\n            }\n\n            const pcsStillInRange = pcs.some(pc => calculateDistance(pc.position, this.position) < this.range);\n            if (!pcsStillInRange) {\n                console.log(`[Spawner] No PCs nearby. Returning to idle.`);\n                this.state = 'idle';\n                await NPCsInGridManager.saveGridStateNPCs(gridId);\n            }\n            break;\n        }\n\n        default:\n            console.warn(`Unhandled state for NPC ${this.id}: ${this.state}`);\n            break;\n    }\n\n    // 🔴 Detect movement\n    if (this.position.x !== oldPosition.x || this.position.y !== oldPosition.y) {\n        console.error(`[Spawner] ERROR: Spawner ${this.id} moved from (${oldPosition.x}, ${oldPosition.y}) to (${this.position.x}, ${this.position.y})!`);\n    }\n}\n\n// Attach behavior to the NPC class\nexport function attachSpawnBehavior(NPC) {\n    NPC.prototype.handleSpawnBehavior = handleSpawnBehavior;\n}\n\n","import axios from 'axios';\nimport GlobalGridStateTilesAndResources from '../../GridState/GlobalGridStateTilesAndResources';\nimport NPCsInGridManager from '../../GridState/GridStateNPCs';\nimport { calculateDistance } from '../../Utils/worldHelpers';\n\nasync function handleWorkerBehavior(gridId) {\n    const updateThisNPC = async () => {\n        // Check if this NPC exists in the grid before updating\n        const npcsInGrid = NPCsInGridManager.getNPCsInGrid(gridId);\n        if (!npcsInGrid || !npcsInGrid[this.id]) {\n            console.warn(`⚠️ NPC ${this.id} (${this.type}) attempting to update but not found in grid ${gridId}. This NPC may be orphaned.`);\n            // Stop this NPC from continuing to update\n            if (this.updateInterval) {\n                clearInterval(this.updateInterval);\n                this.updateInterval = null;\n            }\n            return;\n        }\n        \n        await NPCsInGridManager.updateNPC(gridId, this.id, {\n            state: this.state,\n            position: this.position,\n        });\n    };\n\n    const tiles = GlobalGridStateTilesAndResources.getTiles();\n    const resources = GlobalGridStateTilesAndResources.getResources();\n    const npcs = Object.values(NPCsInGridManager.getNPCsInGrid(gridId) || {}); \n\n    gridId = gridId || this.gridId; // Fallback to npc.gridId if not provided\n\n    //console.log(`handleHealerBehavior: gridId: ${gridId}; NPC ${this.id} is in state: ${this.state}`);\n\n    if (!tiles || !resources) {\n        console.error(`Tiles or resources are missing for NPC ${this.id}.`);\n        return;\n    }\n\n    switch (this.state) {\n        case 'idle': {\n            \n            // await this.handleIdleState(tiles, resources, npcs, 5, async () => {\n            //     //console.log(`NPC ${this.id} transitioning to roam state.`);\n            //     this.state = 'roam'; // Transition to the roam state\n            //     await updateThisNPC();\n            // });\n\n            break;\n          }\n\n          case 'roam': {\n\n            // await this.handleRoamState(tiles, resources, npcs, () => {\n            //     //console.log(`NPC ${this.id} transitioning back to idle.`);\n            //     this.state = 'idle'; // Transition to the idle state\n            // });\n            // break;\n          }\n\n        default:\n            console.warn(`NPC ${this.id} is in an unhandled state: ${this.state}`);\n            break;\n    }\n}\n\n// Attach the quest-giver behavior to the NPC class\nexport function attachFarmerBehavior(NPC) {\n    NPC.prototype.handleWorkerBehavior = handleWorkerBehavior;\n}","import axios from 'axios';\nimport GlobalGridStateTilesAndResources from '../../GridState/GlobalGridStateTilesAndResources';\nimport NPCsInGridManager from '../../GridState/GridStateNPCs';\nimport { calculateDistance } from '../../Utils/worldHelpers';\n\nasync function handleTraderBehavior(gridId) { \n    const updateThisNPC = async () => {\n        await NPCsInGridManager.updateNPC(gridId, this.id, {\n            state: this.state,\n            position: this.position,\n        });\n    };\n\n    const tiles = GlobalGridStateTilesAndResources.getTiles();\n    const resources = GlobalGridStateTilesAndResources.getResources();\n    const npcs = Object.values(NPCsInGridManager.getNPCsInGrid(gridId) || {}); \n\n    gridId = gridId || this.gridId; // Fallback to npc.gridId if not provided\n\n    //console.log(`handleTraderBehavior: gridId: ${gridId}; NPC ${this.id} is in state: ${this.state}`);\n\n    if (!tiles || !resources) {\n        console.error(`Tiles or resources are missing for NPC ${this.id}.`);\n        return;\n    }\n\n    switch (this.state) {\n        case 'idle': {\n            // Traders stay in place, they don't roam\n            // Just stay idle and wait for players to interact\n            break;\n        }\n\n        default:\n            console.warn(`NPC ${this.id} is in an unhandled state: ${this.state}`);\n            break;\n    }\n}\n\n// Attach the trader behavior to the NPC class\nexport function attachTraderBehavior(NPC) {\n    NPC.prototype.handleTraderBehavior = handleTraderBehavior;\n}","import socket from '../../socketManager'; \nimport NPCsInGridManager from '../../GridState/GridStateNPCs';\nimport { calculateDistance } from '../../Utils/worldHelpers';\nimport { attachGrazingBehavior } from './NPCGrazeBehavior';\nimport { attachQuestBehavior } from './NPCQuestBehavior';\nimport { attachEnemyBehavior } from './NPCEnemyBehavior';\nimport { attachHealBehavior } from './NPCHealBehavior';\nimport { attachSpawnBehavior } from './NPCSpawnerBehavior';\nimport { attachFarmerBehavior } from './NPCWorkerBehavior';\nimport { attachTraderBehavior } from './NPCTraderBehavior';\n \nclass NPC {\n  constructor(id, type, position, properties, gridId) {\n    console.log('NPC constructor: properties:', properties);\n    console.log('NPC constructor: gridId:', gridId);\n    console.log(`NPC constructor: ID=${id}, type=${type}, grazeEnd=`, properties.grazeEnd);\n\n    if (!properties || typeof properties !== 'object') {\n      console.error(`Invalid properties passed to NPC constructor for type ${type}:`, properties);\n      throw new Error('NPC constructor requires valid properties.');\n    }\n\n    this.updateInterval = properties.updateInterval || 1000; // Default to 1 second updates\n    this.id = id;\n    this.type = type;\n    this.position = {\n      x: Math.floor(position.x),\n      y: Math.floor(position.y),\n    };\n    this.symbol = properties.symbol;\n    this.hp = properties.hp || 0; // Use hp as hunger\n    this.output = properties.output;\n    this.maxhp = properties.maxhp || 0;\n    this.range = properties.range;\n    this.action = properties.action; // High-level behavioral category (e.g., \"graze\")\n    this.state = 'idle'; // Default state\n    this.speed = properties.speed; // Keep speed for combat stats, but do not use for movement animation\n    this.growTime = properties.growtime || 0; // Time to fully graze\n    this.processingStartTime = undefined;\n    this.nextspawn = properties.nextspawn ?? (this.action === 'spawn' ? Date.now() + 5000 : null);\n    this.grazeEnd = properties.grazeEnd || null; // this is preserved from NPCsInGrid\n    this.lastUpdated = Date.now(); // Initialize lastUpdated\n    this.gridId = properties.gridId || gridId; // Use the passed gridId or default to the one in properties\n    // Assign additional properties\n    Object.assign(this, properties);\n    console.log(`✅ NPC ${this.id} constructed at position (${this.position.x}, ${this.position.y}) with state: ${this.state}`);\n  }\n\n\n/////////////////\n// NPC CORE   ///\n/////////////////\n\nupdate(currentTime, NPCsInGrid, gridId, TILE_SIZE) {\n\n  //console.log(`⏰ update() for NPC ${this.id} | currentTime: ${currentTime} | lastUpdated: ${this.lastUpdated} | elapsed: ${currentTime - this.lastUpdated}`);\n  const timeElapsed = currentTime - this.lastUpdated;\n  if (timeElapsed < this.updateInterval) { return; }\n  \n  this.processState(NPCsInGrid, gridId, TILE_SIZE);\n  this.lastUpdated = currentTime;\n}\n\nasync processState(NPCsInGrid, gridId, TILE_SIZE) {\n  \n  //console.log(`🧪 processState | NPC ${this.id} | state=${this.state} | action=${this.action} | gridId=${gridId}`);\n  try {\n\n    switch (this.action) {\n\n      case 'graze':\n        await this.handleFarmAnimalBehavior(gridId);\n        break;\n    \n      case 'pet':\n        // Future implementation for Pets\n        // console.log('Pet behavior not implemented yet.');\n        break;\n    \n      case 'quest':\n        await this.handleQuestGiverBehavior(gridId);\n        break;\n    \n      case 'trade':\n        await this.handleTraderBehavior(gridId);\n        break;\n\n      case 'worker':\n        await this.handleWorkerBehavior(gridId);\n        break;\n    \n      case 'heal':\n        await this.handleHealBehavior(gridId);\n        break;\n    \n      case 'attack':\n        await this.handleEnemyBehavior(gridId, TILE_SIZE);\n        break;\n    \n      case 'spawn':\n        await this.handleSpawnBehavior(gridId);\n        break;\n\n      default:\n        console.warn(`Unhandled NPC action: ${this.action}`);\n        break;\n    }\n    } catch (error) {\n      console.error(`Error in NPC ${this.id} processState:`, error);\n    }\n}\n\n\n//////////////////////////////\n// NPC -- SHARED BEHAVIORS //\n/////////////////////////////\n\nasync handleIdleState(tiles, resources, npcs, idleDuration, onTransition = () => {}) {\n  if (!this.idleTimer) this.idleTimer = 0;\n  this.idleTimer++;\n\n  if (this.idleTimer >= idleDuration) {\n    this.idleTimer = 0;\n\n    const directions = ['N', 'S', 'E', 'W', 'NE', 'SE', 'SW', 'NW'];\n    const validDirections = directions.filter((dir) => {\n      const { x, y } = this.getAdjacentTile(dir);\n      return this.isValidTile(x, y, tiles, resources, npcs);\n    });\n\n    if (validDirections.length > 0) {\n      const randomDirection = validDirections[Math.floor(Math.random() * validDirections.length)];\n      const moved = await this.moveOneTile(randomDirection, tiles, resources, npcs);\n      // if (moved) console.log(`🚶 NPC ${this.id} moved in idle to (${this.position.x}, ${this.position.y})`);\n    }\n    onTransition(); // callback to re-evaluate state\n    return true; // idle completed\n  }\n  //console.log(`🐮 NPC ${this.id} is idling. Timer: ${this.idleTimer}/${idleDuration}`);\n  return false; // still idling\n}\n\n\nasync handleRoamState(tiles, resources, npcs, onTransition = () => {}) {  // Initialize roam step counter and range\n  this.roamSteps = this.roamSteps || 0;\n  const range = this.range || 4; // Default roam range\n\n  // If no initial direction is set, choose one at random\n  if (!this.currentDirection) {\n    const directions = ['N', 'S', 'E', 'W', 'NE', 'SE', 'SW', 'NW'];\n    this.currentDirection = directions[Math.floor(Math.random() * directions.length)];\n    //console.log(`NPC ${this.id} selected initial roam direction: ${this.currentDirection}`);\n  }\n  // Define preferred directions based on the initial direction\n  const preferredDirectionsMap = {\n    N: ['N', 'NE', 'NW'],\n    S: ['S', 'SE', 'SW'],\n    E: ['E', 'NE', 'SE'],\n    W: ['W', 'NW', 'SW'],\n    NE: ['NE', 'N', 'E'],\n    SE: ['SE', 'S', 'E'],\n    SW: ['SW', 'S', 'W'],\n    NW: ['NW', 'N', 'W'],\n  };\n\n  const preferredDirections = preferredDirectionsMap[this.currentDirection] || [this.currentDirection];\n  const validDirections = preferredDirections.filter((direction) => {\n    const { x, y } = this.getAdjacentTile(direction);\n    return this.isValidTile(x, y, tiles, resources, npcs);\n  })\n  if (validDirections.length > 0) {\n    const direction = validDirections[Math.floor(Math.random() * validDirections.length)];\n    await this.moveOneTile(direction, tiles, resources, npcs);\n    this.roamSteps++;\n  } else {\n    this.currentDirection = null;\n    // console.warn(`🐄 NPC ${this.id} found no valid roam directions this step.`);\n  }\n\n  // Check if the NPC has completed the roam range\n  if (this.roamSteps >= range || validDirections.length === 0) {\n    //console.log(`NPC ${this.id} completed ${range} roam steps. Transitioning to the next state.`);\n    this.roamSteps = 0; // Reset roam steps\n    this.currentDirection = null; // Reset direction for the next roam\n    onTransition();\n  }\n}\n\nasync handlePursueState(playerPosition, tiles, resources, npcs, pcs, onAttackTransition) {\n\n  const dx = playerPosition.x - this.position.x;\n  const dy = playerPosition.y - this.position.y;\n\n  let direction = null;\n  if (Math.abs(dx) > Math.abs(dy)) {\n    direction = dx > 0 ? 'E' : 'W';\n  } else if (dy !== 0) {\n    direction = dy > 0 ? 'S' : 'N';\n  }\n  // Add diagonal movement if applicable\n  if (Math.abs(dx) === Math.abs(dy)) {\n    if (dx > 0 && dy > 0) direction = 'SE';\n    else if (dx > 0 && dy < 0) direction = 'NE';\n    else if (dx < 0 && dy > 0) direction = 'SW';\n    else if (dx < 0 && dy < 0) direction = 'NW';\n  } \n  \n  // Check if already in attack range BEFORE attempting to move\n  const distanceToPlayer = calculateDistance(this.position, playerPosition);\n  console.log(`🎯 NPC ${this.id} distance to player: ${distanceToPlayer} | range: ${this.attackrange}`);\n  if (distanceToPlayer <= this.attackrange) {\n    this.state = 'attack';\n    await onAttackTransition();\n    return;\n  }\n  \n  if (!direction) return;\n\n  const moved = await this.moveOneTile(direction, tiles, resources, npcs);\n  if (!moved) {\n    // If can't move but already in attack range, attack!\n    if (distanceToPlayer <= this.attackrange) {\n      console.log(`🎯 NPC ${this.id} blocked but in attack range! Transitioning to attack.`);\n      this.state = 'attack';\n      await onAttackTransition();\n    } else {\n      console.warn(`🚫 NPC ${this.id} couldn't move toward target. Stuck? Returning to idle.`);\n      this.state = 'idle';\n      this.pursueTimerStart = null;\n      this.targetPC = null;\n    }\n    return;\n  }\n\n  // Check again after moving\n  const newDistanceToPlayer = calculateDistance(this.position, playerPosition);\n  console.log(`🎯 NPC ${this.id} NEW distance to player: ${newDistanceToPlayer} | range: ${this.attackrange}`);\n  if (newDistanceToPlayer <= this.attackrange) {\n    this.state = 'attack';\n    await onAttackTransition();\n  }\n}\n\n/////////////////\n// NPC UTILITY //\n/////////////////\n\nasync moveOneTile(direction, tiles, resources, npcs) {\n\n  if (this.action === 'spawn') {\n    console.warn(`Spawner ${this.id} cannot move!`);\n    return false; // ✅ Prevents spawners from moving at all\n  }\n  const directions = {\n      N: { x: 0, y: -1 },\n      S: { x: 0, y: 1 },\n      E: { x: 1, y: 0 },\n      W: { x: -1, y: 0 },\n      NE: { x: 1, y: -1 },\n      SE: { x: 1, y: 1 },\n      SW: { x: -1, y: 1 },\n      NW: { x: -1, y: -1 },\n  };\n\n  const delta = directions[direction];\n  if (!delta) {\n      console.error(`Invalid direction: ${direction}`);\n      return false;\n  }\n  const targetX = Math.floor(this.position.x + delta.x);\n  const targetY = Math.floor(this.position.y + delta.y);\n\n  // Validate the tile before moving\n  if (!this.isValidTile(targetX, targetY, tiles, resources, npcs)) {\n      console.warn(`NPC ${this.id} cannot move to invalid tile (${targetX}, ${targetY}).`);\n      return false;\n  }\n  //console.log('Tile was valid.');\n  const moveDuration = 1200; // Standard movement speed for all NPCs\n  const startTime = performance.now(); // Get the start time\n  const startX = this.position.x;\n  const startY = this.position.y;\n\n  return new Promise((resolve) => {\n      const step = () => {\n          const currentTime = performance.now();\n          const elapsedTime = currentTime - startTime;\n          \n          if (elapsedTime >= moveDuration) {\n              // Snap to the final position and resolve\n              this.position.x = targetX;\n              this.position.y = targetY;\n              if (socket && socket.connected) {\n                socket.emit('npc-moved', {\n                  gridId: this.gridId,\n                  npcId: this.id,\n                  newPosition: { x: targetX, y: targetY },\n                  emitterId: socket.id\n                });\n                //console.log(`📡 Emitting npc-moved for NPC ${this.id} to (${targetX}, ${targetY}) from ${socket.id}`);\n              }\n              resolve(true);\n              return;\n          }\n\n          // Calculate the fractional progress\n          const progress = elapsedTime / moveDuration;\n          this.position.x = startX + progress * (targetX - startX);\n          this.position.y = startY + progress * (targetY - startY);\n\n          // Request the next frame\n          requestAnimationFrame(step);\n      };\n\n      requestAnimationFrame(step);\n  });\n}\n\ngetAdjacentTile(direction) {\n  const directions = {\n      N: { x: 0, y: -1 },\n      S: { x: 0, y: 1 },\n      E: { x: 1, y: 0 },\n      W: { x: -1, y: 0 },\n      NE: { x: 1, y: -1 },\n      SE: { x: 1, y: 1 },\n      SW: { x: -1, y: 1 },\n      NW: { x: -1, y: -1 },\n  };\n\n  const delta = directions[direction];\n  if (!delta) {\n      console.error(`Invalid direction: ${direction}`);\n      return { x: this.position.x, y: this.position.y };\n  }\n\n  //console.log('getAdjacentTile: x = ',this.position.x + delta.x,' y = ',this.position.y + delta.y);\n  return {\n      x: this.position.x + delta.x,\n      y: this.position.y + delta.y,\n  };\n}\n\nisValidTile(x, y, tiles, resources, npcs) {\n\n    // Round x and y to ensure valid integer indices\n    x = Math.floor(x);\n    y = Math.floor(y);\n\n  // Check if tiles data is valid\n  if (!tiles || !Array.isArray(tiles)) {\n    //console.error('isValidTile; Tiles data is invalid.');\n    return false;\n  }\n  if (!resources || !Array.isArray(resources)) {\n    //console.error('isValidTile; Resources data is invalid or missing.');\n    return false;\n}\n  // Check if tile is out of bounds\n  if (x < 0 || y < 0 || y >= tiles.length || x >= tiles[0].length) {\n    //console.error(`Tile (${x}, ${y}) is out of bounds.`);\n    return false;\n  } else {\n    //console.log(`Tile (${x}, ${y}) is in bounds.`);\n  }\n\n    // **Step 1: Check if NPC is allowed to step on this tile type**\n    const tileType = tiles[y][x]; // Get the tile type at x, y\n    //console.log(`Checking tileType: ${tileType} for NPC ${this.id}`);\n  \n    // Dynamically check if NPC can walk on this tile type\n    // Property name is 'validon' + tileType (e.g., 'validong' for 'g')\n    const validPropertyName = `validon${tileType}`;\n    const canWalkOnTile = this[validPropertyName] === true;\n  \n    if (!canWalkOnTile) {\n    //   console.warn(`NPC ${this.id} cannot step on tile type \"${tileType}\".`);\n      return false;\n    }\n  \n    // **Step 2: Check if there's an impassable resource in this tile**\n    const resourceInTile = resources.find((res) => res.x === x && res.y === y);\n    if (resourceInTile) {\n  \n      if (!resourceInTile.passable) {\n        //console.warn(`Tile (${x}, ${y}) is occupied by an impassable resource.`);\n        return false;\n      }\n    }\n  \n  // Ensure npcs is an array before calling .some()\n  if (!Array.isArray(npcs)) {\n    console.warn(`NPC list is invalid or undefined. Skipping NPC collision check.`);\n    return true;\n  }\n\n  // Check if another NPC is occupying the tile\n  const npcInTile = npcs.some(npc => Math.floor(npc.position.x) === x && Math.floor(npc.position.y) === y);\n  if (npcInTile) {\n    //console.warn(`Tile (${x}, ${y}) is already occupied by another NPC.`);\n    return false;\n  }\n\n  //console.log(`Tile (${x}, ${y}) is valid for movement.`);\n  return true;\n}\n\n\n\nasync findTileInRange(tileType, tiles, resources) {\n  const range = Math.floor(this.range || 3); // Ensure integer range\n  const startX = Math.floor(this.position.x);\n  const startY = Math.floor(this.position.y);\n\n  if (!tiles || tiles.length === 0 || !Array.isArray(tiles)) {\n    // console.error('Tiles array is invalid or empty.');\n    return [];\n  }\n\n  const potentialTiles = [];\n  for (let dx = -range; dx <= range; dx++) {\n    for (let dy = -range; dy <= range; dy++) {\n      const x = startX + dx;\n      const y = startY + dy;\n\n      if (x < 0 || y < 0 || y >= tiles.length || x >= tiles[y]?.length) continue;\n\n      if (tiles[y][x] === tileType) {\n        potentialTiles.push({ x, y });\n      }\n    }\n  }\n\n  console.log(`Found ${potentialTiles.length} potential tiles for type \"${tileType}\".`);\n  return potentialTiles;\n}\n\n\nfindNearestResource(targetResource, tiles, resources) {\n  //console.log(`Finding nearest ${targetResource} for NPC ${this.id}.`);\n\n  if (!resources || !Array.isArray(resources) || resources.length === 0) {\n    //console.error(`Resources are invalid or empty for NPC ${this.id}.`);\n    return null;\n  }\n  const npcPosition = {\n    x: Math.floor(this.position.x),\n    y: Math.floor(this.position.y),\n  };\n  const availableResources = resources.filter((res) => {\n    return res.category === targetResource && typeof res.x === 'number' && typeof res.y === 'number';\n  });\n  if (availableResources.length === 0) {\n    //console.warn(`No available ${targetResource} found for NPC ${this.id}.`);\n    return null;\n  }\n  availableResources.sort((a, b) => {\n    const aPos = { x: Math.floor(a.x), y: Math.floor(a.y) };\n    const bPos = { x: Math.floor(b.x), y: Math.floor(b.y) };\n    return calculateDistance(npcPosition, aPos) - calculateDistance(npcPosition, bPos);\n  });\n  const closestResource = availableResources[0];\n  //console.log(`NPC ${this.id} selected nearest ${targetResource}:`, closestResource);\n  return closestResource;\n}\n\n\n}\n\n// Attach behaviors to the NPC prototype\nattachGrazingBehavior(NPC);\nattachQuestBehavior(NPC);\nattachEnemyBehavior(NPC);\nattachHealBehavior(NPC);\nattachSpawnBehavior(NPC);\nattachFarmerBehavior(NPC);\nattachTraderBehavior(NPC);\n\nexport default NPC;","import React, { createContext, useContext } from 'react';\nimport stringsEN from './Strings/stringsEN.json';\nimport stringsFR from './Strings/stringsFR.json';\nimport stringsES from './Strings/stringsES.json';\nimport stringsIT from './Strings/stringsIT.json';\nimport stringsDE from './Strings/stringsDE.json';\nimport stringsPT from './Strings/stringsPT.json';\nimport stringsRU from './Strings/stringsRU.json';\nimport stringsNO from './Strings/stringsNO.json';\nimport stringsSV from './Strings/stringsSV.json';\nimport stringsFI from './Strings/stringsFI.json';\n\nconst STRINGS_MAP = {\n  en: stringsEN,\n  fr: stringsFR,\n  es: stringsES,\n  de: stringsDE,\n  it: stringsIT,\n  pt: stringsPT,\n  ru: stringsRU,\n  no: stringsNO,\n  sv: stringsSV,\n  fi: stringsFI,\n  // Add more languages here as needed\n};\n\nconst StringsContext = createContext(stringsEN); // Default to English\n\nexport const StringsProvider = ({ language = 'en', children }) => {\n  const selectedStrings = STRINGS_MAP[language?.toLowerCase()] || stringsEN;\n\n  console.log('🧬 StringsProvider:', {\n    rawLanguage: language,\n    normalized: language?.toLowerCase(),\n    resolvedFile: selectedStrings,\n  });\n\n  return (\n    <StringsContext.Provider value={selectedStrings}>\n      {children}\n    </StringsContext.Provider>\n  );\n};\n\nexport const useStrings = () => {\n  const ctx = useContext(StringsContext);\n  //console.log(\"📘 useStrings hook called, returning:\", ctx);\n  return ctx;\n};","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","import axios from 'axios';\nimport { animateRemotePC } from './Render/RenderAnimatePosition';\nimport playersInGridManager from './GridState/PlayersInGrid'; // Correctly use NPCsInGridManager\nimport GlobalGridStateTilesAndResources from './GridState/GlobalGridStateTilesAndResources';\nimport FloatingTextManager from \"./UI/FloatingText\";\nimport { handleTransitSignpost } from './GameFeatures/Transit/Transit';\n// Temporary render-only animation state for interpolated player positions\nexport const renderPositions = {};\nlet currentAnimationFrame = null;\n\n// Track currently pressed keys for diagonal movement\nconst pressedKeys = new Set();\n\n// Define modifier keys that should be ignored for movement\nconst MODIFIER_KEYS = ['Shift', 'Control', 'Alt', 'Meta', 'CapsLock', 'NumLock', 'ScrollLock'];\n\n// Clear all pressed keys when window loses focus or visibility\nif (typeof window !== 'undefined') {\n  window.addEventListener('blur', () => {\n    pressedKeys.clear();\n  });\n  \n  document.addEventListener('visibilitychange', () => {\n    if (document.hidden) {\n      pressedKeys.clear();\n    }\n  });\n  \n  // Debug function to check stuck keys (accessible from console)\n  window.debugMovementKeys = () => {\n    console.log('Currently pressed keys:', Array.from(pressedKeys));\n    return Array.from(pressedKeys);\n  };\n  \n  // Emergency reset function (accessible from console)\n  window.resetMovementKeys = () => {\n    pressedKeys.clear();\n    console.log('Movement keys reset');\n  };\n}\n\n// Helper function to handle key press events\nexport function handleKeyDown(event, currentPlayer, TILE_SIZE, masterResources, \n  setCurrentPlayer, \n  setGridId, \n  setGrid, \n  setTileTypes, \n  setResources, \n  updateStatus, \n  closeAllPanels,\n  localPlayerMoveTimestampRef,\n  bulkOperationContext,\n  strings = null) \n{\n  // Ignore modifier keys\n  if (MODIFIER_KEYS.includes(event.key)) {\n    return;\n  }\n  \n  // Add the key to our set of pressed keys\n  pressedKeys.add(event.key);\n  \n  // Process movement immediately\n  processMovement(currentPlayer, TILE_SIZE, masterResources, \n    setCurrentPlayer, setGridId, setGrid, setTileTypes, setResources, \n    updateStatus, closeAllPanels, localPlayerMoveTimestampRef, bulkOperationContext, strings);\n}\n\n// Helper function to handle key release events\nexport function handleKeyUp(event) {\n  // Remove the key from our set of pressed keys\n  pressedKeys.delete(event.key);\n  \n  // Also clear all keys if a modifier is released (failsafe)\n  if (MODIFIER_KEYS.includes(event.key)) {\n    pressedKeys.clear();\n  }\n}\n\n// Main movement handler that processes diagonal movement\nexport function handleKeyMovement(event, currentPlayer, TILE_SIZE, masterResources, \n  setCurrentPlayer, \n  setGridId, \n  setGrid, \n  setTileTypes, \n  setResources, \n  updateStatus, \n  closeAllPanels,\n  localPlayerMoveTimestampRef,\n  bulkOperationContext,\n  strings = null) \n{\n  // For backward compatibility, treat this as a key press\n  handleKeyDown(event, currentPlayer, TILE_SIZE, masterResources, \n    setCurrentPlayer, setGridId, setGrid, setTileTypes, setResources, \n    updateStatus, closeAllPanels, localPlayerMoveTimestampRef, bulkOperationContext, strings);\n}\n\n// Process movement based on all currently pressed keys\nfunction processMovement(currentPlayer, TILE_SIZE, masterResources, \n  setCurrentPlayer, \n  setGridId, \n  setGrid, \n  setTileTypes, \n  setResources, \n  updateStatus, \n  closeAllPanels,\n  localPlayerMoveTimestampRef,\n  bulkOperationContext,\n  strings = null)\n{\n  const directions = {\n    ArrowUp: { dx: 0, dy: -1 },\n    w: { dx: 0, dy: -1 },\n    W: { dx: 0, dy: -1 },\n    ArrowDown: { dx: 0, dy: 1 },\n    s: { dx: 0, dy: 1 },\n    S: { dx: 0, dy: 1 },\n    ArrowLeft: { dx: -1, dy: 0 },\n    a: { dx: -1, dy: 0 },\n    A: { dx: -1, dy: 0 },\n    ArrowRight: { dx: 1, dy: 0 },\n    d: { dx: 1, dy: 0 },\n    D: { dx: 1, dy: 0 },\n  };\n\n  // Calculate combined movement vector from all pressed keys\n  let totalDx = 0;\n  let totalDy = 0;\n  \n  for (const key of pressedKeys) {\n    const movement = directions[key];\n    if (movement) {\n      totalDx += movement.dx;\n      totalDy += movement.dy;\n    }\n  }\n  \n  // If no movement, return\n  if (totalDx === 0 && totalDy === 0) return;\n  \n  // Clamp diagonal movement to -1, 0, or 1\n  totalDx = Math.max(-1, Math.min(1, totalDx));\n  totalDy = Math.max(-1, Math.min(1, totalDy));\n\n  if (currentPlayer.iscamping) {\n    FloatingTextManager.addFloatingText(32, currentPlayer.location.x, currentPlayer.location.y, TILE_SIZE);\n    return;\n  }\n\n  const playerId = currentPlayer._id.toString();\n  const gridId = currentPlayer.location.g;\n  const playersInGrid = playersInGridManager.getPlayersInGrid(gridId);\n  if (!playersInGrid || !playersInGrid[playerId]) return;\n\n  const currentPosition = playersInGrid[playerId].position;\n  const targetX = Math.round(currentPosition.x + totalDx);\n  const targetY = Math.round(currentPosition.y + totalDy);\n\n  // Normal movement validation for all players (boats use existing transit logic)\n  if (!Array.isArray(masterResources)) {\n    console.error('masterResources is not an array:', masterResources);\n    return;\n  }\n  if (!isValidMove(targetX, targetY, masterResources,\n    currentPlayer,\n    setCurrentPlayer,\n    setGridId,\n    setGrid,\n    setTileTypes,\n    setResources,\n    updateStatus,\n    TILE_SIZE,\n    closeAllPanels,\n    bulkOperationContext,\n    strings\n  )) {\n    console.warn(`⛔ Player blocked from moving to (${targetX}, ${targetY}).`);\n    return;\n  }\n\n  const finalPosition = { x: targetX, y: targetY };\n  const now = Date.now();\n  \n  // Update the local player movement timestamp to prevent our own broadcasts from overriding\n  if (localPlayerMoveTimestampRef) {\n    localPlayerMoveTimestampRef.current = now;\n  }\n\n  playersInGridManager.updatePC(gridId, playerId, {\n    position: finalPosition,\n    lastUpdated: now,\n  });\n\n  centerCameraOnPlayer(finalPosition, TILE_SIZE);\n}\n\nfunction isValidMove(targetX, targetY, masterResources,\n  currentPlayer,\n  setCurrentPlayer,\n  setGridId,\n  setGrid,\n  setTileTypes,\n  setResources,\n  updateStatus,\n  TILE_SIZE,\n  closeAllPanels,\n  bulkOperationContext,\n  strings = null\n ) {  // Function to check if movement is valid\n  const tiles = GlobalGridStateTilesAndResources.getTiles();\n  const resources = GlobalGridStateTilesAndResources.getResources();\n  \n\n  if (!Array.isArray(resources)) {\n    console.warn('⛔ Movement blocked: resources is not an array yet.', resources);\n    return false;\n  }\n\n  // 1️⃣ **Check if the target is out of bounds**\n  if (targetX < 0 || targetY < 0 || targetX > 63 || targetY > 63) {\n//  console.warn(`⛔ Movement blocked: (${targetX}, ${targetY}) is out of bounds.`);\n    const direction =\n      targetX < 0 ? \"Signpost W\" :\n      targetX > 63 ? \"Signpost E\" :\n      targetY < 0 ? \"Signpost N\" :\n      targetY > 63 ? \"Signpost S\" :\n      null;\n    if (!direction) { console.warn(`⛔ Invalid movement direction from (${targetX}, ${targetY}).`); return false; }\n\n    console.log(`📦 Attempting directional travel via: ${direction}`);\n    const skills = currentPlayer.skills;\n\n    handleTransitSignpost(\n      currentPlayer,\n      direction,\n      setCurrentPlayer,\n      setGridId,\n      setGrid,\n      setTileTypes,\n      setResources,\n      updateStatus,\n      TILE_SIZE,\n      skills,\n      closeAllPanels,\n      bulkOperationContext,\n      null, // masterResources not available\n      strings,\n      null  // masterTrophies not available in PlayerMovement\n    );\n    return false; // Prevent normal movement handling\n  };\n\n  // 2️⃣ **Check if tile is valid for movement (using existing isValidTile function)**\n  const canMove = isTileValidForPlayer(targetX, targetY, tiles, resources, masterResources, currentPlayer);\n  if (!canMove) {\n    console.warn(`⛔ Movement blocked: Tile (${targetX}, ${targetY}) is not passable.`);\n  }\n  return canMove;\n}\n\n\nexport function centerCameraOnPlayer(position, TILE_SIZE) {\n  const gameContainer = document.querySelector(\".homestead\");\n  if (!gameContainer) return;\n\n  const LEFT_PANEL_WIDTH = 300;  // Scaled with zoom level\n  const HEADER_HEIGHT = 200;     // Same\n\n  const centerX = position.x * TILE_SIZE - (window.innerWidth - LEFT_PANEL_WIDTH) / 2;\n  const centerY = position.y * TILE_SIZE - (window.innerHeight - HEADER_HEIGHT) / 2;\n\n  // Clamp scroll positions so we don't scroll beyond the container's bounds\n  const maxScrollLeft = gameContainer.scrollWidth - gameContainer.clientWidth;\n  const maxScrollTop = gameContainer.scrollHeight - gameContainer.clientHeight;\n\n  const clampedX = Math.max(0, Math.min(centerX, maxScrollLeft));\n  const clampedY = Math.max(0, Math.min(centerY, maxScrollTop));\n\n  gameContainer.scrollTo({\n    left: clampedX,\n    top: clampedY,\n    behavior: \"smooth\",\n  });\n\n  //console.log(`📷 Camera centered on player at (${position.x}, ${position.y})`);\n}\n\n\nexport function centerCameraOnPlayerFast(position, TILE_SIZE) {\n  const gameContainer = document.querySelector(\".homestead\");\n  if (!gameContainer) return;\n\n  const LEFT_PANEL_WIDTH = 300;  // Scaled with zoom level\n  const HEADER_HEIGHT = 200;     // Same\n\n  const centerX = position.x * TILE_SIZE - (window.innerWidth - LEFT_PANEL_WIDTH) / 2;\n  const centerY = position.y * TILE_SIZE - (window.innerHeight - HEADER_HEIGHT) / 2;\n\n  // Clamp scroll positions so we don't scroll beyond the container's bounds\n  const maxScrollLeft = gameContainer.scrollWidth - gameContainer.clientWidth;\n  const maxScrollTop = gameContainer.scrollHeight - gameContainer.clientHeight;\n\n  const clampedX = Math.max(0, Math.min(centerX, maxScrollLeft));\n  const clampedY = Math.max(0, Math.min(centerY, maxScrollTop));\n\n  gameContainer.scrollTo({\n    left: clampedX,\n    top: clampedY,\n  });\n\n  console.log(`📷 Camera centered on player at (${position.x}, ${position.y})`);\n}\n\nexport function isTileValidForPlayer(x, y, tiles, resources, masterResources, currentPlayer = null) {\n  x = Math.floor(x);\n  y = Math.floor(y);\n  // Check if tile is out of bounds\n  if (x < 0 || y < 0 || y >= tiles.length || x >= tiles[0].length) {\n    console.warn(`⛔ Tile (${x}, ${y}) is out of bounds.`);\n    return false;\n  }\n  // Get the tile type\n  const tileType = tiles[y][x];\n  // Ensure the tile type exists\n  if (!tileType) { console.warn(`⛔ Invalid tile at (${x}, ${y}) - No tileType found.`); return false; }\n\n  // **Special case: If player is in boat, they can only move on water tiles**\n  if (currentPlayer?.isinboat) {\n    if (tileType === 'w') {\n      console.log(`🚤 Boat player can move to water tile (${x}, ${y})`);\n      return true;\n    } else {\n      console.warn(`⛔ Boat player cannot move to non-water tile (${x}, ${y}): ${tileType}`);\n      return false;\n    }\n  }\n\n  // **Step 1: Check if tile itself is passable using masterResources (normal players)**\n  const tileResource = masterResources.find(resource => resource.type === tileType);\n\n  if (!tileResource || !tileResource.passable) {\n    console.warn(`⛔ Tile (${x}, ${y}) is not passable according to masterResources.`);\n    return false;\n  }\n  // **Step 2: Check for an impassable resource in this tile**\n  \n  const resourceInTile = resources.find(res => res.x === x && res.y === y);\n  \n  \n  if (resourceInTile) {\n    // Check if passable is explicitly false (not just falsy)\n    if (resourceInTile.passable === false) {\n      console.warn(`⛔ Tile (${x}, ${y}) contains an impassable resource (${resourceInTile.type}).`);\n      return false;\n    }\n  }\n  // ✅ If all checks pass, movement is allowed\n  return true;\n}","import API_BASE from '../config';\nimport axios from 'axios';\n\nlet masterSkills = null;\nlet masterResources = null;\nlet globalTuning = null;\nlet masterInteractions = null;\nlet masterTraders = null;\nlet masterTrophies = null;\nlet masterWarehouse = null;\n/**\n * Fetch and cache skillsTuning.json\n */\nexport async function loadMasterSkills() {\n  if (!masterSkills) {\n    try {\n      const response = await axios.get(`${API_BASE}/api/skills-tuning`);\n      masterSkills = response.data;\n      console.log('Skills tuning loaded:', masterSkills);\n    } catch (error) {\n      console.error('Error fetching master skills:', error);\n      masterSkills = {};\n    }\n  }\n  return masterSkills;\n}\n\n/**\n * Fetch and cache resources.json\n */\nexport async function loadMasterResources() {\n  if (!masterResources) {\n    try {\n      const response = await axios.get(`${API_BASE}/api/resources`);\n      masterResources = response.data;\n      console.log('Master resources loaded:', masterResources);\n    } catch (error) {\n      console.error('Error fetching master resources:', error);\n      masterResources = [];\n    }\n  }\n  return masterResources;\n}\n\n\n/**\n * Fetch and cache globalTuning.json\n */\nexport async function loadGlobalTuning() {\n  if (!globalTuning) {\n    try {\n      const response = await axios.get(`${API_BASE}/api/global-tuning`);\n      globalTuning = response.data;\n      console.log('Global tuning loaded:', globalTuning);\n    } catch (error) {\n      console.error('Error fetching global tuning:', error);\n      globalTuning = {};\n    }\n  }\n  return globalTuning;\n}\n\n/**\n * Fetch and cache interactions.json\n */\nexport async function loadMasterInteractions() {\n  if (!masterInteractions) {\n    try {\n      const response = await axios.get(`${API_BASE}/api/interactions`);\n      masterInteractions = response.data;\n      console.log('Master interactions loaded:', masterInteractions);\n    } catch (error) {\n      console.error('Error fetching master interactions:', error);\n      masterInteractions = [];\n    }\n  }\n  return masterInteractions;\n}\n\n/**\n * Fetch and cache traders.json\n */\nexport async function loadMasterTraders() {\n  if (!masterTraders) {\n    try {\n      const response = await axios.get(`${API_BASE}/api/traders`);\n      masterTraders = response.data;\n      console.log('Master traders loaded:', masterTraders);\n    } catch (error) {\n      console.error('Error fetching master traders:', error);\n      masterTraders = [];\n    }\n  }\n  return masterTraders;\n}\n\n/**\n * Fetch and cache trophies.json\n */\nexport async function loadMasterTrophies() {\n  if (!masterTrophies) {\n    try {\n      const response = await axios.get(`${API_BASE}/api/trophies`);\n      masterTrophies = response.data;\n      console.log('Master trophies loaded:', masterTrophies);\n    } catch (error) {\n      console.error('Error fetching master trophies:', error);\n      masterTrophies = [];\n    }\n  }\n  return masterTrophies;\n}\n\n/**\n * Fetch and cache warehouse.json\n */\nexport async function loadMasterWarehouse() {\n  if (!masterWarehouse) {\n    try {\n      const response = await axios.get(`${API_BASE}/api/warehouse`);\n      masterWarehouse = response.data;\n      console.log('Master warehouse loaded:', masterWarehouse);\n    } catch (error) {\n      console.error('Error fetching master warehouse:', error);\n      masterWarehouse = [];\n    }\n  }\n  return masterWarehouse;\n}\n\n/**\n * Clear cached data (optional, for debugging or forced reloads).\n */\nexport function clearTuningCache() {\n  masterSkills = null;\n  masterResources = null;\n  masterTraders = null;\n  masterTrophies = null;\n  masterWarehouse = null;\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","import API_BASE from '../config';\nimport axios from 'axios';\nimport { initializeGrid } from '../AppInit';\nimport NPCsInGridManager from '../GridState/GridStateNPCs';\nimport playersInGridManager from '../GridState/PlayersInGrid';\nimport socket from '../socketManager'; // ⚠️ At top of file if not already present\nimport GlobalGridStateTilesAndResources from '../GridState/GlobalGridStateTilesAndResources';\nimport { mergeResources, mergeTiles } from './ResourceHelpers';\nimport { centerCameraOnPlayer } from '../PlayerMovement';\nimport { closePanel } from '../UI/PanelContext';\nimport { fetchHomesteadOwner } from './worldHelpers';\nimport { earnTrophy } from '../GameFeatures/Trophies/TrophyUtils';\nimport { showNotification } from '../UI/Notifications/Notifications';\n\nexport const updateGridResource = async (\n  gridId,\n  resource,\n  broadcast = true\n) => {\n  //console.log('UPDATE GRID RESOURCE; resource = ', resource);\n\n  try {\n    const { x, y, growEnd, craftEnd, craftedItem, type } = resource;\n    \n    // ✅ 1. Flat payload — no \"newResource\" key\n    const payload = {\n      resource: {\n        type,\n        x,\n        y,\n        ...(growEnd !== undefined && { growEnd }),\n        ...(craftEnd !== undefined && { craftEnd }),\n        ...(craftedItem !== undefined && { craftedItem }),\n      },\n      broadcast, // optional - depending on your server usage\n    };\n    //console.log('UPDATE GRID RESOURCE; payload = ', payload);\n\n    // ✅ 2. Update the database\n    const response = await axios.patch(`${API_BASE}/api/update-grid/${gridId}`, payload);\n    if (!response.data.success) throw new Error('Failed DB update');\n\n    // ✅ 3. Emit to other clients\n    if (broadcast && socket && socket.emit) {\n      socket.emit('update-resource', {\n        gridId,\n        updatedResources: [resource?.type === null ? { x, y, type: null } : resource],\n      });\n    }\n\n    return { success: true };\n  } catch (error) {\n    console.error('❌ Error in updateGridResource:', error);\n    return { success: false };\n  }\n};\n\n\nexport const convertTileType = async (gridId, x, y, newType, setTileTypes = null) => {\n  try {\n    //console.log(`Converting tile at (${x}, ${y}) to type: ${newType}`);\n\n    // Update the tile in the database\n    const response = await axios.patch(`${API_BASE}/api/update-tile/${gridId}`, {\n      x,\n      y,\n      newType,\n    });\n\n    if (response.data.success) {\n      //console.log(`✅ Tile at (${x}, ${y}) successfully updated to ${newType} in the database.`);\n\n      // ✅ Immediately update local state optimistically\n      if (setTileTypes) {\n        setTileTypes((prevTiles) => {\n          const updated = mergeTiles(prevTiles, [{ x, y, type: newType }]);\n          console.log(\"🌱 Optimistically updated tileTypes (emitter):\", updated);\n          return updated;\n        });\n      }\n\n      //console.log('newType before emitter:', newType);\n      // Emit the change to all connected clients via the socket\n      socket.emit('update-tile', {\n        gridId,\n        updatedTiles: [{ x, y, type: newType }],\n      });\n    } else {\n      console.error(`❌ Failed to update tile at (${x}, ${y}):`, response.data.message);\n    }\n  } catch (error) {\n    console.error(`❌ Error converting tile at (${x}, ${y}):`, error);\n  }\n};\n\nexport const changePlayerLocation = async (\n  currentPlayer,\n  fromLocation,\n  toLocation,\n  setCurrentPlayer,\n  setGridId,\n  setGrid,\n  setTileTypes,\n  setResources,\n  TILE_SIZE,\n  closeAllPanels, // ✅ Add this prop\n  updateStatus,\n  bulkOperationContext, // ✅ Add bulk operation context\n  masterResources = null, // ✅ Add masterResources for combat stat calculations\n  strings = null, // ✅ Add strings for notifications\n  masterTrophies = null // ✅ Add masterTrophies for trophy visibility checks\n) => {\n\n  // console.log(\"🔁 changePlayerLocation invoked. closeAllPanels =\", !!closeAllPanels);\n  // console.log(\"bulkOperationContext in changePlayerLocation:\", bulkOperationContext);\n  // console.log(\"isAnyBulkOperationActive:\", bulkOperationContext?.isAnyBulkOperationActive?.());\n  \n  // Check if any bulk operation is active\n  if (bulkOperationContext?.isAnyBulkOperationActive?.()) {\n    // const activeOps = bulkOperationContext.getActiveBulkOperations();\n    // console.log('🚫 Travel blocked: Bulk operation in progress', activeOps);\n    if (updateStatus) {\n      updateStatus(470); // \"Bulk operation in progress\"\n    }\n    return false;\n  }\n  \n  // DEBUG: Log input parameters for changePlayerLocation\n  // console.log('changePlayerLocation called with:', {\n  //   currentPlayer,\n  //   fromLocation,\n  //   toLocation,\n  //   TILE_SIZE,\n  //   // ...other setters omitted for brevity...\n  // });\n\n\n  //console.log('🔄 changePlayerLocation called');\n  //console.log('FROM:', { grid: fromLocation.g, type: fromLocation.gtype });\n  //console.log('TO:', { grid: toLocation.g, type: toLocation.gtype });\n  if (!fromLocation || !toLocation) {\n    console.error('❌ Invalid fromLocation or toLocation');\n    return;\n  }\n\n  try {\n\n    // STEP 1: Close any open panels before grid transition\n    if (closeAllPanels) {\n      closeAllPanels();\n      //console.log(\"🧹 Closed all panels before location change.\");\n    }\n\n    // ✅ STEP 2: Update FROM grid's state (remove player)\n    //console.log(`1️⃣ Removing player from grid ${fromLocation.g}`);\n\n    //console.log('loading PCS gridstates from memory...');\n    const inMemoryFromPlayerState = playersInGridManager.getPlayersInGrid(fromLocation.g)?.[currentPlayer.playerId];\n    //console.log('loading NPCS and PCS gridstates from db...');\n    const fromGridResponse = await axios.get(`${API_BASE}/api/load-grid-state/${fromLocation.g}`);\n    //console.log('fromGridResponse.data: ', fromGridResponse.data);\n    const fromPCs = fromGridResponse.data?.playersInGrid?.pcs || {};\n    //console.log('Extracted fromPCs from what we just loaded; fromPCs = ', fromPCs);\n    const fromPlayerState = inMemoryFromPlayerState || fromPCs[currentPlayer.playerId] || {};\n    //console.log('fromPlayerState (prioritize what was in memory) = ', fromPlayerState);\n    //console.log('Removing player from the fromPCs.');\n    if (fromPCs[currentPlayer.playerId]) {\n      delete fromPCs[currentPlayer.playerId];\n    }\n\n    //console.log('📤 Calling /remove-single-pc route to remove player from grid...');\n    try {\n      const removeResponse = await axios.post(`${API_BASE}/api/remove-single-pc`, {\n        gridId: fromLocation.g,\n        playerId: currentPlayer.playerId,\n      });\n      \n      if (!removeResponse.data.success) {\n        console.error('❌ Remove-single-pc returned unsuccessful');\n      } else if (removeResponse.data.removed === false) {\n        console.warn('⚠️ Player was not found in the from grid - might already be removed');\n      }\n    } catch (removeError) {\n      console.error('❌ CRITICAL: Failed to remove player from previous grid:', removeError);\n      // Throw error to stop the location change\n      throw new Error('Failed to remove player from previous grid. Aborting travel to prevent ghost player.');\n    }\n\n    // ✅ STEP 3: Emit AFTER saving to DB\n    socket.emit('player-left-grid', {\n      gridId: fromLocation.g,\n      playerId: currentPlayer.playerId,\n      username: currentPlayer.username,\n    });\n    //console.log(`📢 Emitted [player-left-grid] for ${fromLocation.g}`);\n  \n    socket.emit('leave-grid', fromLocation.g);\n    //console.log(`📢 Emitted [leave-grid] for grid: ${fromLocation.g}`);\n      \n    // ✅ STEP 4: Update TO grid's state (add player)\n\n    //console.log(`2️⃣ Adding player to grid ${toLocation.g}`);\n    //console.log('loading NPCsInGrid from db...');\n    const toGridResponse = await axios.get(`${API_BASE}/api/load-grid-state/${toLocation.g}`);\n    //console.log('toGridResponse.data: ', toGridResponse.data);\n    const toPCs = toGridResponse.data?.playersInGrid?.pcs || {};\n    //console.log('Extracted toPCs from what we just loaded; toPCs = ', toPCs);\n\n    const now = Date.now();\n\n    // ✅ STEP 5: Add the player to the `pcs` object`\n    //console.log('IN CHANGE PLAYER LOCATION:  Adding player to the toPCs object')\n    // Use combat stats from the fromGrid state if available, fallback to currentPlayer\n    //console.log('🚨🚨🚨🚨fromPlayerState = ', fromPlayerState);\n    //console.log('🚨🚨🚨🚨currentPlayer = ', currentPlayer);\n\n    // REVERT: The issue is in how data is stored/loaded, not in changePlayerLocation\n    const playerData = {\n      playerId: currentPlayer.playerId,\n      type: 'pc',\n      username: currentPlayer.username,\n      position: { x: toLocation.x, y: toLocation.y },\n      icon: currentPlayer.icon || '😀',\n      hp: fromPlayerState.hp ?? currentPlayer.hp ?? 25,\n      maxhp: fromPlayerState.maxhp ?? currentPlayer.maxhp ?? 25,\n      armorclass: fromPlayerState.armorclass ?? currentPlayer.armorclass ?? 10,\n      attackbonus: fromPlayerState.attackbonus ?? currentPlayer.attackbonus ?? 0,\n      damage: fromPlayerState.damage ?? currentPlayer.damage ?? 1,\n      speed: fromPlayerState.speed ?? currentPlayer.speed ?? 1,\n      attackrange: fromPlayerState.attackrange ?? currentPlayer.attackrange ?? 1,\n      iscamping: fromPlayerState.iscamping ?? currentPlayer.iscamping ?? false,\n      isinboat: fromPlayerState.isinboat ?? currentPlayer.isinboat ?? false,\n      lastUpdated: now,\n    };\n\n    // Construct the payload\n    const toPayload = {\n      gridId: toLocation.g,\n      playerId: currentPlayer.playerId,\n      pc: playerData,\n      lastUpdated: now,\n    };\n    //console.log('📤 Constructed Payload for adding player:', toPayload);\n\n    // ✅ STEP 6: Save only this PC to DB\n    //console.log('📤 Saving single PC to grid...');\n    await axios.post(`${API_BASE}/api/save-single-pc`, toPayload);\n\n    socket.emit('player-joined-grid', {\n      gridId: toLocation.g,\n      playerId: currentPlayer.playerId,\n      username: currentPlayer.username,\n      playerData,\n    });\n    //console.log(`📢 Emitted player-joined-grid for ${toLocation.g}`);\n  \n\n    // ✅ STEP 7: Update player location in player record on the DB\n    //console.log('3️⃣ Updating player location...');\n    const locationResponse = await axios.post(`${API_BASE}/api/update-player-location`, {\n      playerId: currentPlayer.playerId,\n      location: toLocation,\n    });\n\n    if (!locationResponse.data.success) {\n      throw new Error(locationResponse.data.error);\n    }\n    //console.log('✅ Player location updated in DB');\n\n    // ✅ CHECK: First time visiting valley - award trophy and show notification\n    if (toLocation.gtype && toLocation.gtype.startsWith('valley') && strings) {\n      // Check if player has \"Explore the Valley\" trophy\n      const hasValleyTrophy = currentPlayer.trophies?.some(trophy => trophy.name === \"Explore the Valley\");\n      \n      if (!hasValleyTrophy) {\n        console.log('🏆 First time visiting valley - awarding \"Explore the Valley\" trophy');\n        \n        try {\n          // Award the trophy\n          const trophyResult = await earnTrophy(currentPlayer.playerId, \"Explore the Valley\", 1, currentPlayer, masterTrophies, setCurrentPlayer);\n          \n          if (trophyResult.success) {\n            // Show notification\n            showNotification('Message', {\n              title: strings[7002],\n              message: strings[7021]\n            });\n            \n            console.log('✅ Valley trophy awarded and notification shown');\n          } else {\n            console.warn('⚠️ Failed to award valley trophy:', trophyResult.error);\n          }\n        } catch (error) {\n          console.error('❌ Error awarding valley trophy:', error);\n        }\n      }\n    }\n\n    // ✅ STEP 8: Update local state\n    //console.log('4️⃣ Updating local Player Document...');\n    const updatedPlayer = {\n      ...currentPlayer,\n      location: toLocation,\n    };\n\n    setCurrentPlayer(updatedPlayer);\n    localStorage.setItem('player', JSON.stringify(updatedPlayer));\n\n    // 5. Change grid context & fetch new grid data\n    //console.log('5️⃣ Calling setGridId...');\n    setGridId(toLocation.g);\n    // WHAT does this ^^ do?\n\n    // ✅ STEP 8.5: Final cleanup verification - ensure dead player is removed from old grid\n    if (currentPlayer.hp <= 0) {\n      console.log('⚰️ Player was dead - verifying cleanup from old grid');\n      try {\n        // Double-check removal with another API call to ensure cleanup\n        await axios.post(`${API_BASE}/api/remove-single-pc`, {\n          gridId: fromLocation.g,\n          playerId: currentPlayer.playerId,\n        });\n        console.log('✅ Dead player cleanup verified');\n      } catch (cleanupError) {\n        console.warn('⚠️ Cleanup verification failed, but continuing:', cleanupError);\n      }\n    }\n\n    // ✅ STEP 9: Initialize the new grid, PCs and NPCs\n    //console.log('!! Running initializeGridState and setGridState');\n    await Promise.all([\n      initializeGrid(TILE_SIZE, toLocation.g, setGrid, setResources, setTileTypes, updateStatus, currentPlayer),\n      (async () => {\n        try {\n          await NPCsInGridManager.initializeGridState(toLocation.g);\n          await playersInGridManager.initializePlayersInGrid(toLocation.g);  \n          const freshGridState = NPCsInGridManager.getNPCsInGrid(toLocation.g);\n          const freshPCState = playersInGridManager.getPlayersInGrid(toLocation.g);\n\n          NPCsInGridManager.setGridStateReact({ [toLocation.g]: {\n            npcs: freshGridState,\n            NPCsInGridLastUpdated: Date.now(),\n          }});\n          playersInGridManager.setPlayersInGridReact({ [toLocation.g]: {\n            pcs: freshPCState,\n            playersInGridLastUpdated: Date.now(),\n          }});     \n\n        } catch (err) {\n          console.error('❌ Error initializing playersInGrid:', err);\n        }\n      })(),\n    ]);\n    //console.log('✅ New grid fully initialized');\n\n    // ✅ STEP 10: Ensure the client joins the new grid room\n    socket.emit('join-grid', { gridId: toLocation.g, playerId: currentPlayer.playerId });\n    //console.log(`📡 Emitted join-grid for grid: ${toLocation.g}`);\n    socket.emit('set-username', { username: currentPlayer.username });\n    \n    // Request current NPCController status to clear any stale controller data\n    //console.log(`🎮 Requesting current NPCController for grid: ${toLocation.g}`);\n    socket.emit('request-npc-controller', { gridId: toLocation.g });\n    \n    // ✅ STEP 11: Check if we need to find a signpost location\n    let finalX = toLocation.x;\n    let finalY = toLocation.y;\n    \n    if (toLocation.findSignpost) {\n      console.log(`🔍 Looking for ${toLocation.findSignpost} on the destination grid...`);\n      \n      // Get the resources that were just loaded\n      const currentResources = GlobalGridStateTilesAndResources.getResources();\n      //console.log(`📦 Total resources loaded: ${currentResources.length}`);\n      //console.log(`📦 Resources types: ${currentResources.map(r => r.type).join(', ')}`);\n      \n      const signpost = currentResources.find(res => res.type === toLocation.findSignpost);\n      \n      if (signpost) {\n        //console.log(`✅ Found ${toLocation.findSignpost} at (${signpost.x}, ${signpost.y})`);\n        finalX = signpost.x;\n        finalY = signpost.y;\n        \n        // Update the player's position to the signpost location\n        const updatedPlayerData = {\n          ...playerData,\n          position: { x: finalX, y: finalY }\n        };\n        \n        // Update local state\n        playersInGridManager.updatePC(toLocation.g, currentPlayer.playerId, updatedPlayerData);\n        \n        // Update database\n        await axios.post(`${API_BASE}/api/save-single-pc`, {\n          gridId: toLocation.g,\n          playerId: currentPlayer.playerId,\n          pc: updatedPlayerData,\n          lastUpdated: Date.now(),\n        });\n        \n        // Emit updated position\n        socket.emit('player-moved', {\n          gridId: toLocation.g,\n          playerId: currentPlayer.playerId,\n          position: { x: finalX, y: finalY },\n          username: currentPlayer.username,\n        });\n      } else {\n        console.log(`⚠️ ${toLocation.findSignpost} not found on destination grid, using default position (0, 0)`);\n      }\n    }\n    \n    // ✅ STEP 12: Center view on player\n\n    centerCameraOnPlayer({ x: finalX, y: finalY }, TILE_SIZE);\n\n    // ✅ STEP 13: Update status bar with new grid info\n    if (updateStatus && toLocation.gtype) {\n      await updateGridStatus(toLocation.gtype, null, updateStatus, currentPlayer, toLocation.g);\n    }\n\n    console.log('✅ Location change complete');\n  } catch (error) {\n    console.error('❌ Location change error:', error);\n    throw error;\n  } \n};\n\n\n\n\nexport async function fetchGridData(gridId, updateStatus, DBPlayerData) {\n  try {\n    //console.log(`Fetching grid data for gridId: ${gridId}`);\n\n    // 1) Fetch the grid data (which now has separate playersInGrid and NPCsInGrid)\n    const gridResponse = await axios.get(`${API_BASE}/api/load-grid/${gridId}`);\n    const gridData = gridResponse.data || {};\n    const { gridType, _id: fetchedGridId, ownerId, playersInGrid, NPCsInGrid } = gridData;\n\n    console.log('Fetched grid data:', gridData);\n\n    // 2) Combine playersInGrid and NPCsInGrid into a single NPCsInGrid\n    const combinedGridState = {\n      pcs: playersInGrid?.pcs || {},\n      npcs: NPCsInGrid?.npcs || {},\n    };\n\n    return { ...gridData, NPCsInGrid: combinedGridState }; // Return the full grid data with combined NPCsInGrid\n  } catch (error) {\n    console.error('Error fetching grid data:', error);\n    if (updateStatus) updateStatus('Failed to load grid data');\n    return {};\n  }\n}\n\n\n\n\n// Separate function for status updates\nexport async function updateGridStatus(gridType, ownerUsername, updateStatus, currentPlayer = null, gridId = null) {\n  if (!updateStatus) return;\n\n  console.log(\"😀😀 UPDATING GRID STATUS message\");\n  switch (gridType) {\n    case 'homestead':\n      // If we have currentPlayer and gridId, check if it's their homestead\n      if (currentPlayer && gridId) {\n        const { username } = await fetchHomesteadOwner(gridId);\n        if (username === currentPlayer.username) {\n          updateStatus(112); // \"You're home.\"\n          return;\n        }\n        ownerUsername = username;\n      }\n      updateStatus(`Welcome to ${ownerUsername || 'Unknown'}'s homestead.`);\n      break;\n    case 'town':\n      updateStatus(14); // Town view\n      break;\n    case 'valley0':\n    case 'valley1':\n    case 'valley2':\n    case 'valley3':\n      updateStatus(16); // Valley view\n      break;\n    case 'settlement':\n      updateStatus(12); // Settlement view\n      break;\n    case 'frontier':\n      updateStatus(13); // Frontier view\n      break;\n    default:\n      //updateStatus(0); // Default status\n      break;\n  }\n}\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};function X(){throw Error(\"act(...) is not supported in production builds of React.\");}\nexports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;exports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;exports.act=X;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=X;exports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};\nexports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};exports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};\nexports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};exports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.3.1\";\n","'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\nconst [isReadableStream, isRequest, isResponse, isHeaders] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest);\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  return value != null && Number.isFinite(value = +value) ? value : defaultValue;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\n// original code\n// https://github.com/DigitalBrainJS/AxiosPromise/blob/16deab13710ec09779922131f3fa5954320f83ab/lib/utils.js#L11-L34\n\nconst _setImmediate = ((setImmediateSupported, postMessageSupported) => {\n  if (setImmediateSupported) {\n    return setImmediate;\n  }\n\n  return postMessageSupported ? ((token, callbacks) => {\n    _global.addEventListener(\"message\", ({source, data}) => {\n      if (source === _global && data === token) {\n        callbacks.length && callbacks.shift()();\n      }\n    }, false);\n\n    return (cb) => {\n      callbacks.push(cb);\n      _global.postMessage(token, \"*\");\n    }\n  })(`axios@${Math.random()}`, []) : (cb) => setTimeout(cb);\n})(\n  typeof setImmediate === 'function',\n  isFunction(_global.postMessage)\n);\n\nconst asap = typeof queueMicrotask !== 'undefined' ?\n  queueMicrotask.bind(_global) : ( typeof process !== 'undefined' && process.nextTick || _setImmediate);\n\n// *********************\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isReadableStream,\n  isRequest,\n  isResponse,\n  isHeaders,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable,\n  setImmediate: _setImmediate,\n  asap\n};\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  if (response) {\n    this.response = response;\n    this.status = response.status ? response.status : null;\n  }\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.status\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?(object|Function)} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  if (utils.isFunction(options)) {\n    options = {\n      serialize: options\n    };\n  } \n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n","'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n","const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nconst _navigator = typeof navigator === 'object' && navigator || undefined;\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = hasBrowserEnv &&\n  (!_navigator || ['ReactNative', 'NativeScript', 'NS'].indexOf(_navigator.product) < 0);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nconst origin = hasBrowserEnv && window.location.href || 'http://localhost';\n\nexport {\n  hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv,\n  _navigator as navigator,\n  origin\n}\n","import platform from './node/index.js';\nimport * as utils from './common/utils.js';\n\nexport default {\n  ...utils,\n  ...platform\n}\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http', 'fetch'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data) ||\n      utils.isReadableStream(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (utils.isResponse(data) || utils.isReadableStream(data)) {\n      return data;\n    }\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else if (utils.isHeaders(header)) {\n      for (const [key, value] of header.entries()) {\n        setHeader(value, key, rewrite);\n      }\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","/**\n * Throttle decorator\n * @param {Function} fn\n * @param {Number} freq\n * @return {Function}\n */\nfunction throttle(fn, freq) {\n  let timestamp = 0;\n  let threshold = 1000 / freq;\n  let lastArgs;\n  let timer;\n\n  const invoke = (args, now = Date.now()) => {\n    timestamp = now;\n    lastArgs = null;\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n    fn.apply(null, args);\n  }\n\n  const throttled = (...args) => {\n    const now = Date.now();\n    const passed = now - timestamp;\n    if ( passed >= threshold) {\n      invoke(args, now);\n    } else {\n      lastArgs = args;\n      if (!timer) {\n        timer = setTimeout(() => {\n          timer = null;\n          invoke(lastArgs)\n        }, threshold - passed);\n      }\n    }\n  }\n\n  const flush = () => lastArgs && invoke(lastArgs);\n\n  return [throttled, flush];\n}\n\nexport default throttle;\n","import speedometer from \"./speedometer.js\";\nimport throttle from \"./throttle.js\";\nimport utils from \"../utils.js\";\n\nexport const progressEventReducer = (listener, isDownloadStream, freq = 3) => {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return throttle(e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e,\n      lengthComputable: total != null,\n      [isDownloadStream ? 'download' : 'upload']: true\n    };\n\n    listener(data);\n  }, freq);\n}\n\nexport const progressEventDecorator = (total, throttled) => {\n  const lengthComputable = total != null;\n\n  return [(loaded) => throttled[0]({\n    lengthComputable,\n    total,\n    loaded\n  }), throttled[1]];\n}\n\nexport const asyncDecorator = (fn) => (...args) => utils.asap(() => fn(...args));\n","import platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ? ((origin, isMSIE) => (url) => {\n  url = new URL(url, platform.origin);\n\n  return (\n    origin.protocol === url.protocol &&\n    origin.host === url.host &&\n    (isMSIE || origin.port === url.port)\n  );\n})(\n  new URL(platform.origin),\n  platform.navigator && /(msie|trident)/i.test(platform.navigator.userAgent)\n) : () => true;\n","import utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils.isString(path) && cookie.push('path=' + path);\n\n      utils.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL, allowAbsoluteUrls) {\n  let isRelativeUrl = !isAbsoluteURL(requestedURL);\n  if (baseURL && (isRelativeUrl || allowAbsoluteUrls == false)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? { ...thing } : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, prop, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, prop , caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, prop , caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, prop , caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b , prop) => mergeDeepProperties(headersToObject(a), headersToObject(b),prop, true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport isURLSameOrigin from \"./isURLSameOrigin.js\";\nimport cookies from \"./cookies.js\";\nimport buildFullPath from \"../core/buildFullPath.js\";\nimport mergeConfig from \"../core/mergeConfig.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport buildURL from \"./buildURL.js\";\n\nexport default (config) => {\n  const newConfig = mergeConfig({}, config);\n\n  let {data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth} = newConfig;\n\n  newConfig.headers = headers = AxiosHeaders.from(headers);\n\n  newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url, newConfig.allowAbsoluteUrls), config.params, config.paramsSerializer);\n\n  // HTTP basic authentication\n  if (auth) {\n    headers.set('Authorization', 'Basic ' +\n      btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : ''))\n    );\n  }\n\n  let contentType;\n\n  if (utils.isFormData(data)) {\n    if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n      headers.setContentType(undefined); // Let the browser set it\n    } else if ((contentType = headers.getContentType()) !== false) {\n      // fix semicolon duplication issue for ReactNative FormData implementation\n      const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n      headers.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n    }\n  }\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n\n  if (platform.hasStandardBrowserEnv) {\n    withXSRFToken && utils.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));\n\n    if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(newConfig.url))) {\n      // Add xsrf header\n      const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies.read(xsrfCookieName);\n\n      if (xsrfValue) {\n        headers.set(xsrfHeaderName, xsrfValue);\n      }\n    }\n  }\n\n  return newConfig;\n}\n\n","import utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport {progressEventReducer} from '../helpers/progressEventReducer.js';\nimport resolveConfig from \"../helpers/resolveConfig.js\";\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    const _config = resolveConfig(config);\n    let requestData = _config.data;\n    const requestHeaders = AxiosHeaders.from(_config.headers).normalize();\n    let {responseType, onUploadProgress, onDownloadProgress} = _config;\n    let onCanceled;\n    let uploadThrottled, downloadThrottled;\n    let flushUpload, flushDownload;\n\n    function done() {\n      flushUpload && flushUpload(); // flush events\n      flushDownload && flushDownload(); // flush events\n\n      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);\n\n      _config.signal && _config.signal.removeEventListener('abort', onCanceled);\n    }\n\n    let request = new XMLHttpRequest();\n\n    request.open(_config.method.toUpperCase(), _config.url, true);\n\n    // Set the request timeout in MS\n    request.timeout = _config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = _config.transitional || transitionalDefaults;\n      if (_config.timeoutErrorMessage) {\n        timeoutErrorMessage = _config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(_config.withCredentials)) {\n      request.withCredentials = !!_config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = _config.responseType;\n    }\n\n    // Handle progress if needed\n    if (onDownloadProgress) {\n      ([downloadThrottled, flushDownload] = progressEventReducer(onDownloadProgress, true));\n      request.addEventListener('progress', downloadThrottled);\n    }\n\n    // Not all browsers support upload events\n    if (onUploadProgress && request.upload) {\n      ([uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress));\n\n      request.upload.addEventListener('progress', uploadThrottled);\n\n      request.upload.addEventListener('loadend', flushUpload);\n    }\n\n    if (_config.cancelToken || _config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);\n      if (_config.signal) {\n        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(_config.url);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","import CanceledError from \"../cancel/CanceledError.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport utils from '../utils.js';\n\nconst composeSignals = (signals, timeout) => {\n  const {length} = (signals = signals ? signals.filter(Boolean) : []);\n\n  if (timeout || length) {\n    let controller = new AbortController();\n\n    let aborted;\n\n    const onabort = function (reason) {\n      if (!aborted) {\n        aborted = true;\n        unsubscribe();\n        const err = reason instanceof Error ? reason : this.reason;\n        controller.abort(err instanceof AxiosError ? err : new CanceledError(err instanceof Error ? err.message : err));\n      }\n    }\n\n    let timer = timeout && setTimeout(() => {\n      timer = null;\n      onabort(new AxiosError(`timeout ${timeout} of ms exceeded`, AxiosError.ETIMEDOUT))\n    }, timeout)\n\n    const unsubscribe = () => {\n      if (signals) {\n        timer && clearTimeout(timer);\n        timer = null;\n        signals.forEach(signal => {\n          signal.unsubscribe ? signal.unsubscribe(onabort) : signal.removeEventListener('abort', onabort);\n        });\n        signals = null;\n      }\n    }\n\n    signals.forEach((signal) => signal.addEventListener('abort', onabort));\n\n    const {signal} = controller;\n\n    signal.unsubscribe = () => utils.asap(unsubscribe);\n\n    return signal;\n  }\n}\n\nexport default composeSignals;\n","\nexport const streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n}\n\nexport const readBytes = async function* (iterable, chunkSize) {\n  for await (const chunk of readStream(iterable)) {\n    yield* streamChunk(chunk, chunkSize);\n  }\n}\n\nconst readStream = async function* (stream) {\n  if (stream[Symbol.asyncIterator]) {\n    yield* stream;\n    return;\n  }\n\n  const reader = stream.getReader();\n  try {\n    for (;;) {\n      const {done, value} = await reader.read();\n      if (done) {\n        break;\n      }\n      yield value;\n    }\n  } finally {\n    await reader.cancel();\n  }\n}\n\nexport const trackStream = (stream, chunkSize, onProgress, onFinish) => {\n  const iterator = readBytes(stream, chunkSize);\n\n  let bytes = 0;\n  let done;\n  let _onFinish = (e) => {\n    if (!done) {\n      done = true;\n      onFinish && onFinish(e);\n    }\n  }\n\n  return new ReadableStream({\n    async pull(controller) {\n      try {\n        const {done, value} = await iterator.next();\n\n        if (done) {\n         _onFinish();\n          controller.close();\n          return;\n        }\n\n        let len = value.byteLength;\n        if (onProgress) {\n          let loadedBytes = bytes += len;\n          onProgress(loadedBytes);\n        }\n        controller.enqueue(new Uint8Array(value));\n      } catch (err) {\n        _onFinish(err);\n        throw err;\n      }\n    },\n    cancel(reason) {\n      _onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport composeSignals from \"../helpers/composeSignals.js\";\nimport {trackStream} from \"../helpers/trackStream.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport {progressEventReducer, progressEventDecorator, asyncDecorator} from \"../helpers/progressEventReducer.js\";\nimport resolveConfig from \"../helpers/resolveConfig.js\";\nimport settle from \"../core/settle.js\";\n\nconst isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';\nconst isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function';\n\n// used only inside the fetch adapter\nconst encodeText = isFetchSupported && (typeof TextEncoder === 'function' ?\n    ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) :\n    async (str) => new Uint8Array(await new Response(str).arrayBuffer())\n);\n\nconst test = (fn, ...args) => {\n  try {\n    return !!fn(...args);\n  } catch (e) {\n    return false\n  }\n}\n\nconst supportsRequestStream = isReadableStreamSupported && test(() => {\n  let duplexAccessed = false;\n\n  const hasContentType = new Request(platform.origin, {\n    body: new ReadableStream(),\n    method: 'POST',\n    get duplex() {\n      duplexAccessed = true;\n      return 'half';\n    },\n  }).headers.has('Content-Type');\n\n  return duplexAccessed && !hasContentType;\n});\n\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst supportsResponseStream = isReadableStreamSupported &&\n  test(() => utils.isReadableStream(new Response('').body));\n\n\nconst resolvers = {\n  stream: supportsResponseStream && ((res) => res.body)\n};\n\nisFetchSupported && (((res) => {\n  ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(type => {\n    !resolvers[type] && (resolvers[type] = utils.isFunction(res[type]) ? (res) => res[type]() :\n      (_, config) => {\n        throw new AxiosError(`Response type '${type}' is not supported`, AxiosError.ERR_NOT_SUPPORT, config);\n      })\n  });\n})(new Response));\n\nconst getBodyLength = async (body) => {\n  if (body == null) {\n    return 0;\n  }\n\n  if(utils.isBlob(body)) {\n    return body.size;\n  }\n\n  if(utils.isSpecCompliantForm(body)) {\n    const _request = new Request(platform.origin, {\n      method: 'POST',\n      body,\n    });\n    return (await _request.arrayBuffer()).byteLength;\n  }\n\n  if(utils.isArrayBufferView(body) || utils.isArrayBuffer(body)) {\n    return body.byteLength;\n  }\n\n  if(utils.isURLSearchParams(body)) {\n    body = body + '';\n  }\n\n  if(utils.isString(body)) {\n    return (await encodeText(body)).byteLength;\n  }\n}\n\nconst resolveBodyLength = async (headers, body) => {\n  const length = utils.toFiniteNumber(headers.getContentLength());\n\n  return length == null ? getBodyLength(body) : length;\n}\n\nexport default isFetchSupported && (async (config) => {\n  let {\n    url,\n    method,\n    data,\n    signal,\n    cancelToken,\n    timeout,\n    onDownloadProgress,\n    onUploadProgress,\n    responseType,\n    headers,\n    withCredentials = 'same-origin',\n    fetchOptions\n  } = resolveConfig(config);\n\n  responseType = responseType ? (responseType + '').toLowerCase() : 'text';\n\n  let composedSignal = composeSignals([signal, cancelToken && cancelToken.toAbortSignal()], timeout);\n\n  let request;\n\n  const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {\n      composedSignal.unsubscribe();\n  });\n\n  let requestContentLength;\n\n  try {\n    if (\n      onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' &&\n      (requestContentLength = await resolveBodyLength(headers, data)) !== 0\n    ) {\n      let _request = new Request(url, {\n        method: 'POST',\n        body: data,\n        duplex: \"half\"\n      });\n\n      let contentTypeHeader;\n\n      if (utils.isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\n        headers.setContentType(contentTypeHeader)\n      }\n\n      if (_request.body) {\n        const [onProgress, flush] = progressEventDecorator(\n          requestContentLength,\n          progressEventReducer(asyncDecorator(onUploadProgress))\n        );\n\n        data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);\n      }\n    }\n\n    if (!utils.isString(withCredentials)) {\n      withCredentials = withCredentials ? 'include' : 'omit';\n    }\n\n    // Cloudflare Workers throws when credentials are defined\n    // see https://github.com/cloudflare/workerd/issues/902\n    const isCredentialsSupported = \"credentials\" in Request.prototype;\n    request = new Request(url, {\n      ...fetchOptions,\n      signal: composedSignal,\n      method: method.toUpperCase(),\n      headers: headers.normalize().toJSON(),\n      body: data,\n      duplex: \"half\",\n      credentials: isCredentialsSupported ? withCredentials : undefined\n    });\n\n    let response = await fetch(request);\n\n    const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\n\n    if (supportsResponseStream && (onDownloadProgress || (isStreamResponse && unsubscribe))) {\n      const options = {};\n\n      ['status', 'statusText', 'headers'].forEach(prop => {\n        options[prop] = response[prop];\n      });\n\n      const responseContentLength = utils.toFiniteNumber(response.headers.get('content-length'));\n\n      const [onProgress, flush] = onDownloadProgress && progressEventDecorator(\n        responseContentLength,\n        progressEventReducer(asyncDecorator(onDownloadProgress), true)\n      ) || [];\n\n      response = new Response(\n        trackStream(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {\n          flush && flush();\n          unsubscribe && unsubscribe();\n        }),\n        options\n      );\n    }\n\n    responseType = responseType || 'text';\n\n    let responseData = await resolvers[utils.findKey(resolvers, responseType) || 'text'](response, config);\n\n    !isStreamResponse && unsubscribe && unsubscribe();\n\n    return await new Promise((resolve, reject) => {\n      settle(resolve, reject, {\n        data: responseData,\n        headers: AxiosHeaders.from(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        config,\n        request\n      })\n    })\n  } catch (err) {\n    unsubscribe && unsubscribe();\n\n    if (err && err.name === 'TypeError' && /fetch/i.test(err.message)) {\n      throw Object.assign(\n        new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request),\n        {\n          cause: err.cause || err\n        }\n      )\n    }\n\n    throw AxiosError.from(err, err && err.code, config, request);\n  }\n});\n\n\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport fetchAdapter from './fetch.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter,\n  fetch: fetchAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","// eslint-disable-next-line strict\nexport default null;\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","export const VERSION = \"1.8.4\";","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\nvalidators.spelling = function spelling(correctSpelling) {\n  return (value, opt) => {\n    // eslint-disable-next-line no-console\n    console.warn(`${opt} is likely a misspelling of ${correctSpelling}`);\n    return true;\n  }\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy = {};\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n        try {\n          if (!err.stack) {\n            err.stack = stack;\n            // match without the 2 top stack lines\n          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n            err.stack += '\\n' + stack\n          }\n        } catch (e) {\n          // ignore the case where \"stack\" is an un-writable property\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.allowAbsoluteUrls\n    if (config.allowAbsoluteUrls !== undefined) {\n      // do nothing\n    } else if (this.defaults.allowAbsoluteUrls !== undefined) {\n      config.allowAbsoluteUrls = this.defaults.allowAbsoluteUrls;\n    } else {\n      config.allowAbsoluteUrls = true;\n    }\n\n    validator.assertOptions(config, {\n      baseUrl: validators.spelling('baseURL'),\n      withXsrfToken: validators.spelling('withXSRFToken')\n    }, true);\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url, config.allowAbsoluteUrls);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  toAbortSignal() {\n    const controller = new AbortController();\n\n    const abort = (err) => {\n      controller.abort(err);\n    };\n\n    this.subscribe(abort);\n\n    controller.signal.unsubscribe = () => this.unsubscribe(abort);\n\n    return controller.signal;\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","// Configure animation durations (in milliseconds)\nconst VFX_TIMING = {\n    COLLECT_DURATION: 500,      // Doober collection poof animation\n    SWIPE_DURATION: 1000,        // Source conversion swipe animation (was 400)\n    FADE_DURATION: 400,         // How long fade-out takes\n};\n\n// Track recent effects to prevent duplicates\nconst recentEffects = new Map();\n\nconst createParticleElement = (char, x, y) => {\n    const particle = document.createElement('div');\n    particle.innerText = char;\n    particle.style.position = 'absolute';\n    particle.style.left = `${x}px`;\n    particle.style.top = `${y}px`;\n    particle.style.pointerEvents = 'none';\n    particle.style.zIndex = '1000';\n    particle.style.fontSize = '12px';\n    return particle;\n};\n\n// Add this utility function\nexport const calculateTileCenter = (x, y, TILE_SIZE) => {\n    const centerX = (x * TILE_SIZE) + (TILE_SIZE / 2) - 6;\n    const centerY = (y * TILE_SIZE) + (TILE_SIZE / 2) - 6;\n    return { centerX, centerY };\n};\n\nexport const createCollectEffect = (x, y, TILE_SIZE) => {\n    const gameContainer = document.querySelector('.homestead');\n    if (!gameContainer) return;\n    \n    // Debounce duplicate effects at the same location\n    const effectKey = `collect-${x}-${y}`;\n    const now = Date.now();\n    const lastEffectTime = recentEffects.get(effectKey);\n    \n    if (lastEffectTime && (now - lastEffectTime) < 100) {\n        console.log('Skipping duplicate collect effect at', x, y);\n        return;\n    }\n    \n    recentEffects.set(effectKey, now);\n    \n    // Clean up old entries after 1 second\n    setTimeout(() => {\n        recentEffects.delete(effectKey);\n    }, 1000);\n    \n    // Try to find the actual tile element to get its real position\n    const tiles = gameContainer.querySelectorAll('.tile');\n    let tileElement = null;\n    \n    // Find the tile at position (x, y) by checking computed positions\n    tiles.forEach(tile => {\n        const tileTop = parseInt(tile.style.top) / TILE_SIZE;\n        const tileLeft = parseInt(tile.style.left) / TILE_SIZE;\n        if (Math.round(tileLeft) === x && Math.round(tileTop) === y) {\n            tileElement = tile;\n        }\n    });\n    \n    let centerX, centerY;\n    \n    if (tileElement) {\n        // Use the actual tile's position for accurate placement\n        const rect = tileElement.getBoundingClientRect();\n        const containerRect = gameContainer.getBoundingClientRect();\n        centerX = rect.left - containerRect.left + (rect.width / 2) - 6;\n        centerY = rect.top - containerRect.top + (rect.height / 2) - 6;\n    } else {\n        // Fallback to calculated position\n        const { centerX: calcX, centerY: calcY } = calculateTileCenter(x, y, TILE_SIZE);\n        centerX = calcX;\n        centerY = calcY;\n    }\n    \n    console.log('createCollectEffect at grid(', x, ',', y, ') -> screen(', centerX, ',', centerY, ')');\n\n    const directions = [\n        { dx: -1, dy: -1, startX: -2, startY: -2 }, \n        { dx: 1, dy: -1, startX: 2, startY: -2 },  \n        { dx: -1, dy: 1, startX: -2, startY: 2 },   \n        { dx: 1, dy: 1, startX: 2, startY: 2 }     \n    ];\n\n    directions.forEach(dir => {\n        // Position particle at tile center + small initial offset\n        const particle = createParticleElement('💨', \n            centerX + dir.startX, \n            centerY + dir.startY\n        );\n        gameContainer.appendChild(particle);\n\n        // Animate outward from center\n        particle.style.transition = 'all 0.5s ease-out';\n        requestAnimationFrame(() => {\n            particle.style.transform = `translate(${dir.dx * 20}px, ${dir.dy * 20}px)`;\n            particle.style.opacity = '0';\n        });\n\n        setTimeout(() => {\n            gameContainer.removeChild(particle);\n        }, VFX_TIMING.COLLECT_DURATION);\n    });\n};\n \nexport const createSourceConversionEffect = (x, y, TILE_SIZE, requiredSkill) => {\n    const gameContainer = document.querySelector('.homestead');\n    if (!gameContainer) return;\n    console.log('createSourceConversionEffect called with x:', x, 'y:', y, 'requiredSkill:', requiredSkill);\n    // Determine emoji based on required skill\n    const emoji = requiredSkill?.includes('Axe') ? '🪓' : \n                 requiredSkill?.includes('Pickaxe') ? '⛏️' : \n                 requiredSkill?.includes('Golden Key') ? '🔑' : \n                  requiredSkill?.includes('Skeleton Key') ? '🗝️' : \n                '💫';\n\n    const { centerX, centerY } = calculateTileCenter(x, y, TILE_SIZE);\n    \n    const particle = document.createElement('div');\n    particle.innerText = emoji;\n    particle.style.position = 'absolute';\n    particle.style.left = `${centerX - TILE_SIZE/2 + 5}px`; // Added OFFSET\n    particle.style.top = `${centerY - TILE_SIZE/2 - 4}px`;\n    particle.style.pointerEvents = 'none';\n    particle.style.zIndex = '1000';\n    particle.style.fontSize = '28px';\n    gameContainer.appendChild(particle);\n\n    particle.style.transition = `all ${VFX_TIMING.SWIPE_DURATION}ms cubic-bezier(0.2, 0, 0, 1)`; // More forceful start, gentle end\n    requestAnimationFrame(() => {\n        particle.style.transform = `translate(-${TILE_SIZE}px, ${TILE_SIZE}px)`;\n        particle.style.opacity = '0';\n    });\n\n    setTimeout(() => {\n        gameContainer.removeChild(particle);\n    }, VFX_TIMING.SWIPE_DURATION); // Match the new animation duration\n};\n","import axios from 'axios';\nimport API_BASE from '../../config';\nimport { showNotification } from '../../UI/Notifications/Notifications';\n\n/**\n * Earns a trophy for the player\n * @param {string} playerId - The player's ID\n * @param {string} trophyName - The name of the trophy to earn (must match trophies.json)\n * @param {number} progressIncrement - For Progress trophies, the amount to increment (default 1)\n * @param {Object} currentPlayer - The current player object (optional, for Event trophy checking)\n * @param {Array} masterTrophies - The master trophies list (optional, for Event trophy checking)\n * @param {Function} setCurrentPlayer - Function to update local player state (optional)\n * @returns {Promise<Object>} The result of the API call\n */\nexport async function earnTrophy(playerId, trophyName, progressIncrement = 1, currentPlayer = null, masterTrophies = null, setCurrentPlayer = null) {\n    try {\n        // If we have currentPlayer and masterTrophies, check if this is an Event trophy that's already earned\n        if (currentPlayer && masterTrophies) {\n            const trophyDef = masterTrophies.find(t => t.name === trophyName);\n            if (trophyDef && trophyDef.type === 'Event') {\n                // Check if player already has this Event trophy\n                const hasEventTrophy = currentPlayer.trophies?.some(t => t.name === trophyName);\n                if (hasEventTrophy) {\n                    console.log(`⚠️ Player already has Event trophy: ${trophyName}`);\n                    return { success: false, message: 'Trophy already earned' };\n                }\n            }\n        }\n        \n        const response = await axios.post(`${API_BASE}/api/earn-trophy`, {\n            playerId,\n            trophyName,\n            progressIncrement\n        });\n        \n        if (response.data.success) {\n            const { trophy, isNewMilestone } = response.data;\n            \n            // Update local player state with the new trophy\n            if (setCurrentPlayer && currentPlayer && isNewMilestone) {\n                setCurrentPlayer(prevPlayer => {\n                    const updatedTrophies = [...(prevPlayer.trophies || [])];\n                    \n                    // Check if trophy already exists (for Progress trophies)\n                    const existingTrophyIndex = updatedTrophies.findIndex(t => t.name === trophyName);\n                    \n                    if (existingTrophyIndex !== -1) {\n                        // Update existing trophy\n                        updatedTrophies[existingTrophyIndex] = {\n                            ...updatedTrophies[existingTrophyIndex],\n                            progress: trophy.progress,\n                            qty: trophy.qty,\n                            collected: false, // Reset collected status for new milestone\n                            timestamp: new Date()\n                        };\n                    } else {\n                        // Add new trophy\n                        updatedTrophies.push({\n                            name: trophyName,\n                            progress: trophy.progress,\n                            qty: trophy.qty,\n                            collected: false,\n                            timestamp: new Date()\n                        });\n                    }\n                    \n                    console.log(`🔄 Local player state updated with trophy: ${trophyName}`);\n                    return {\n                        ...prevPlayer,\n                        trophies: updatedTrophies\n                    };\n                });\n            }\n            \n            if (isNewMilestone) {\n                console.log(`🏆 Trophy milestone earned: ${trophyName}`, trophy);\n                \n                // Check if trophy is visible before showing notification\n                let shouldShowNotification = true;\n                if (masterTrophies) {\n                    const trophyDef = masterTrophies.find(t => t.name === trophyName);\n                    if (trophyDef && trophyDef.visible === false) {\n                        shouldShowNotification = false;\n                        console.log(`🔇 Trophy notification suppressed for hidden trophy: ${trophyName}`);\n                    }\n                }\n                \n                // Show trophy notification only for new milestones and visible trophies\n                if (shouldShowNotification) {\n                    showNotification('Trophy', trophy);\n                }\n            } else {\n                console.log(`📈 Trophy progress: ${trophyName} - ${trophy.progress}/${trophy.nextMilestone}`);\n            }\n            \n            return response.data;\n        }\n        \n        return response.data;\n    } catch (error) {\n        console.error('Error earning trophy:', error);\n        return { success: false, error: error.message };\n    }\n}","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import API_BASE from '../config';\nimport socket from '../socketManager';\nimport axios from 'axios';\nimport { animateRemotePC } from '../Render/RenderAnimatePosition';\nimport { loadMasterResources } from '../Utils/TuningManager';\n\nclass GridStatePCManager {\n    constructor() {\n      this.playersInGrid = {}; // Store PC states in memory\n      this.pendingUpdates = {}; // Track pending position updates\n      this.batchInterval = null; // Interval for batch saving\n      this.BATCH_SAVE_INTERVAL = 500; // Save positions every 500ms\n    }\n \n    registerSetPlayersInGrid(setter) {\n      this.setPlayersInGridReact = setter;\n    }\n    registerTileSize(tileSize) {\n      this.tileSize = tileSize;\n    }\n    \n    // Start the batch save interval\n    startBatchSaving() {\n      if (this.batchInterval) return; // Already running\n      \n      this.batchInterval = setInterval(() => {\n        this.processPendingUpdates();\n      }, this.BATCH_SAVE_INTERVAL);\n      console.log('🔄 Started batch saving interval');\n    }\n    \n    // Stop the batch save interval\n    stopBatchSaving() {\n      if (this.batchInterval) {\n        clearInterval(this.batchInterval);\n        this.batchInterval = null;\n      }\n      // Save any remaining updates\n      this.processPendingUpdates();\n    }\n    \n    // Process all pending position updates\n    async processPendingUpdates() {\n      const updates = Object.entries(this.pendingUpdates);\n      if (updates.length === 0) return;\n      \n      console.log(`📦 Processing ${updates.length} pending position updates`);\n      \n      // Clear pending updates first\n      this.pendingUpdates = {};\n      \n      // For now, use individual saves until batch endpoint exists\n      for (const [key, data] of updates) {\n        try {\n          await axios.post(`${API_BASE}/api/save-single-pc`, {\n            gridId: data.gridId,\n            playerId: data.playerId,\n            pc: data.pc,\n            lastUpdated: data.lastUpdated,\n          });\n        } catch (error) {\n          console.error(`❌ Failed to save position for ${data.playerId}:`, error);\n          // Re-add failed update back to pending\n          this.pendingUpdates[key] = data;\n        }\n      }\n      \n      if (Object.keys(this.pendingUpdates).length === 0) {\n        console.log(`✅ All position updates saved successfully`);\n      }\n    }\n    \n    // Force save all pending updates immediately\n    async forceSavePendingUpdates() {\n      await this.processPendingUpdates();\n    }\n    /**\n     * Initialize the playersInGrid for a specific gridId.\n     */\n    async initializePlayersInGrid(gridId) {\n\n      console.log('🧠 Fetching playersInGrid for gridId:', gridId);\n      if (!gridId) {\n        console.error('initializePlayersInGrid: gridId is undefined.');\n        return;\n      }\n    \n      try {\n        const response = await axios.get(`${API_BASE}/api/load-grid-state/${gridId}`);\n        const {\n          playersInGrid = { pcs: {}, lastUpdated: 0 },\n        } = response.data;\n    \n        // Build a consolidated local state with independent timestamps\n        const state = {\n          pcs: playersInGrid.pcs || {},\n          playersInGridLastUpdated: new Date(playersInGrid.lastUpdated || 0).getTime(),\n        };\n        const pcs = state.pcs || {};\n        console.log('Fetched PC NPCsInGrid:', state);\n    \n        // Normalize PC format\n        Object.keys(pcs).forEach((playerId) => {\n          const pcData = pcs[playerId];\n          pcs[playerId] = {\n            ...pcData,\n            position: pcData.position || { x: 0, y: 0 },\n          };\n        });\n    \n        this.playersInGrid[gridId] = state;\n    \n        this.setPlayersInGridReact((prev) => ({\n          ...prev,\n          [gridId]: {\n            pcs: pcs,\n            playersInGridLastUpdated: Date.now(),\n          },\n        }));\n\n        console.log(`✅ Initialized playersInGrid for gridId ${gridId}:`, pcs);\n        \n        // Start batch saving for position updates\n        this.startBatchSaving();\n        \n        // Save positions before page unload\n        if (!this.unloadListenerAdded) {\n          window.addEventListener('beforeunload', () => {\n            console.log('🔄 Page unloading, saving pending positions...');\n            // Use synchronous XMLHttpRequest for beforeunload\n            const updates = Object.entries(this.pendingUpdates);\n            if (updates.length > 0) {\n              for (const [key, data] of updates) {\n                const xhr = new XMLHttpRequest();\n                xhr.open('POST', `${API_BASE}/api/save-single-pc`, false); // false = synchronous\n                xhr.setRequestHeader('Content-Type', 'application/json');\n                xhr.send(JSON.stringify({\n                  gridId: data.gridId,\n                  playerId: data.playerId,\n                  pc: data.pc,\n                  lastUpdated: data.lastUpdated,\n                }));\n              }\n            }\n          });\n          this.unloadListenerAdded = true;\n        }\n        \n        // Request fresh player list from server after loading DB state\n        // This will override any stale data with current server state\n        console.log('🔄 Requesting current players from server for grid:', gridId);\n        if (socket && socket.emit) {\n          socket.emit('request-current-grid-players', { gridId });\n        }\n      } catch (error) {\n        console.error('❌ Error fetching playersInGrid:', error);\n      }\n    }\n    \n    getPlayersInGrid(gridId) {\n      const playersInGrid = this.playersInGrid[gridId];\n      if (!playersInGrid) {\n        console.warn(`⚠️ No PC state found for gridId: ${gridId}`);\n        return {};\n      }\n      return playersInGrid.pcs;\n    }\n\n    getAllPCs(gridId) {\n      return this.playersInGrid?.[gridId]?.pcs || {};\n    }\n    getPlayerPosition(gridId, playerId) {\n      return this.playersInGrid?.[gridId]?.pcs?.[playerId]?.position || null;\n    }\n\n    setAllPCs(gridId, pcsObject) {\n      this.playersInGrid[gridId] = {\n        pcs: pcsObject || {},\n        playersInGridLastUpdated: Date.now(),\n      };\n    \n      if (this.setPlayersInGridReact) {\n        this.setPlayersInGridReact(prev => ({\n          ...prev,\n          [gridId]: this.playersInGrid[gridId],\n        }));\n      }\n    }\n    \n    async addPlayer(gridId, playerId, pcData) {\n    // Add a new PC to the playersInGrid for a given gridId and playerId.\n    // This is only run on app initialization, IF the saved currentPlayer cannot be found in the playersInGrid.\n      if (!this.playersInGrid[gridId]) {\n        this.playersInGrid[gridId] = {\n          pcs: {},\n          playersInGridLastUpdated: Date.now(),\n        };\n      }\n\n      const now = Date.now();\n      const masterResources = await loadMasterResources();\n\n      // Compute modifiers from powers - support multiple attributes per power\n      // Only count equipped weapons/armor + all magic enhancements\n      const modifiers = {};\n      const equippedWeapon = pcData.settings?.equippedWeapon || null;\n      const equippedArmor = pcData.settings?.equippedArmor || null;\n      \n      // Helper functions to categorize powers\n      const isWeapon = (resource) => resource.passable === true && typeof resource.damage === 'number' && resource.damage > 0;\n      const isArmor = (resource) => resource.passable === true && typeof resource.armorclass === 'number' && resource.armorclass > 0;\n      const isMagicEnhancement = (resource) => !isWeapon(resource) && !isArmor(resource);\n      \n      (pcData.powers || []).forEach(power => {\n        const resource = masterResources.find(r => r.type === power.type);\n        if (resource && resource.category === 'power') {\n          const powerQty = power.quantity || 0;\n          \n          // Only count equipped weapons and armor, or all magic enhancements\n          const shouldCount = isMagicEnhancement(resource) || \n                             (isWeapon(resource) && power.type === equippedWeapon) ||\n                             (isArmor(resource) && power.type === equippedArmor);\n          \n          if (shouldCount) {\n            // Combat stat attributes to check for\n            const combatAttributes = ['hp', 'maxhp', 'damage', 'armorclass', 'attackbonus', 'attackrange', 'speed'];\n            \n            combatAttributes.forEach(attr => {\n              if (typeof resource[attr] === 'number') {\n                const value = powerQty * resource[attr];\n                modifiers[attr] = (modifiers[attr] || 0) + value;\n              }\n            });\n            \n          }\n        }\n      });\n\n      const getStat = (baseKey, modKey) => (pcData[baseKey] || 0) + (modifiers[modKey] || 0);\n\n      const newPC = {\n        playerId,\n        username: pcData.username,\n        type: 'pc',\n        icon: pcData.icon,\n        position: pcData.position || { x: 0, y: 0 },\n        hp: getStat('baseHp', 'hp'),\n        maxhp: getStat('baseMaxhp', 'maxhp'),\n        armorclass: getStat('baseArmorclass', 'armorclass'),\n        attackbonus: getStat('baseAttackbonus', 'attackbonus'),\n        damage: getStat('baseDamage', 'damage'),\n        attackrange: getStat('baseAttackrange', 'attackrange'),\n        speed: getStat('baseSpeed', 'speed'),\n        iscamping: pcData.iscamping || false,\n        isinboat: pcData.isinboat || false,\n        lastUpdated: now,\n      };\n\n      this.playersInGrid[gridId].pcs[playerId] = newPC;\n\n      // Save to server\n      try {\n        await axios.post(`${API_BASE}/api/save-single-pc`, {\n          gridId,\n          playerId,\n          pc: newPC,\n          lastUpdated: now,\n        });\n        console.log(`✅ Added and saved new PC ${playerId} to server.`);\n      } catch (error) {\n        console.error(`❌ Failed to add PC ${playerId}:`, error);\n      }\n\n      // Emit to other clients\n      if (socket && socket.emit) {\n        socket.emit('update-NPCsInGrid-PCs', {\n          gridId,\n          pcs: { [playerId]: newPC },\n          playersInGridLastUpdated: now,\n        });\n      }\n\n      // Note: Caller should update React context using setPlayersInGrid if needed\n    }\n\n\n    // Add a new lightweight PC (from grid.playersInGrid schema) to the local in-memory playersInGrid\n    addPC(gridId, playerId, pcData) {\n      if (!this.playersInGrid[gridId]) {\n        this.playersInGrid[gridId] = {\n          pcs: {},\n          playersInGridLastUpdated: Date.now(),\n        };\n      }\n\n      const now = Date.now();\n      const newPC = {\n        playerId: pcData.playerId,\n        username: pcData.username,\n        type: pcData.type,\n        icon: pcData.icon,\n        position: pcData.position || { x: 0, y: 0 },\n        hp: pcData.hp,\n        maxhp: pcData.maxhp,\n        armorclass: pcData.armorclass,\n        attackbonus: pcData.attackbonus,\n        damage: pcData.damage,\n        attackrange: pcData.attackrange,\n        speed: pcData.speed,\n        iscamping: pcData.iscamping || false,\n        isinboat: pcData.isinboat || false,\n        lastUpdated: now,\n      };\n\n      this.playersInGrid[gridId].pcs[playerId] = newPC;\n\n      // Also update React state if setter is registered\n      if (this.setPlayersInGridReact) {\n        this.setPlayersInGridReact(prev => ({\n          ...prev,\n          [gridId]: {\n            ...(prev[gridId] || {}),\n            pcs: {\n              ...(prev[gridId]?.pcs || {}),\n              [playerId]: newPC,\n            },\n          },\n        }));\n      }\n    }\n\n\n    // Update an existing PC in the playersInGrid for a given gridId and playerId.\n    async updatePC(gridId, playerId, newProperties) {\n      const gridPCs = this.playersInGrid[gridId]?.pcs;\n      if (!gridPCs || !gridPCs[playerId]) {\n        console.error(`Cannot update PC ${playerId}. No NPCsInGrid or PC found for gridId: ${gridId}`);\n        return;\n      }\n    \n      const currentData = gridPCs[playerId];\n      \n      const keysToCompare = Object.keys(newProperties).filter(key => key !== 'lastUpdated');\n      const isSame = keysToCompare.every(key => {\n        const a = currentData[key];\n        const b = newProperties[key];\n        return JSON.stringify(a) === JSON.stringify(b);\n      });\n\n      if (isSame) {\n        return; // Skip update if no changes\n      }\n    \n      const oldPosition = gridPCs[playerId]?.position;\n      const now = Date.now();\n      const updatedPC = {\n        ...gridPCs[playerId],\n        ...newProperties,\n        lastUpdated: now,\n      };\n      const newPosition = updatedPC.position; // 👈 and derive newPosition from updatedPC\n\n      this.playersInGrid[gridId].pcs[playerId] = updatedPC;\n    \n      // Emit to other clients\n      if (socket && socket.emit) {\n        const payload = {\n          [gridId]: {\n            pcs: { [playerId]: updatedPC },\n            playersInGridLastUpdated: now,\n          },\n          emitterId: socket.id,\n        };\n    \n        socket.emit('update-NPCsInGrid-PCs', payload);\n      }\n    \n      if (\n        this.tileSize &&\n        oldPosition &&\n        newPosition &&\n        (oldPosition.x !== newPosition.x || oldPosition.y !== newPosition.y)\n      ) {\n        animateRemotePC(playerId, oldPosition, newPosition, this.tileSize);\n      }\n\n      // ✅ Also update React state if setter is registered\n      if (this.setPlayersInGridReact) {\n        this.setPlayersInGridReact(prev => ({\n          ...prev,\n          [gridId]: {\n            ...(prev[gridId] || {}),\n            pcs: {\n              ...(prev[gridId]?.pcs || {}),\n              [playerId]: updatedPC,\n            },\n          },\n        }));\n      }\n\n        // Add to pending updates for batch saving instead of immediate save\n        const updateKey = `${gridId}-${playerId}`;\n        this.pendingUpdates[updateKey] = {\n          gridId,\n          playerId,\n          pc: updatedPC,\n          lastUpdated: now\n        };\n        \n        // Start batch saving if not already running\n        if (!this.batchInterval) {\n          this.startBatchSaving();\n        }\n    }\n\n\n  // Remove a PC from the playersInGrid for a given gridId and playerId.\n  removePC(gridId, playerId) {\n    if (!this.playersInGrid[gridId]?.pcs?.[playerId]) {\n      console.warn(`⚠️ Cannot remove PC ${playerId}; not found in grid ${gridId}.`);\n      return;\n    }\n\n    delete this.playersInGrid[gridId].pcs[playerId];\n\n    // Also update React state if setter is registered\n    if (this.setPlayersInGridReact) {\n      this.setPlayersInGridReact(prev => {\n        const updatedGrid = { ...(prev[gridId]?.pcs || {}) };\n        delete updatedGrid[playerId];\n\n        return {\n          ...prev,\n          [gridId]: {\n            ...(prev[gridId] || {}),\n            pcs: updatedGrid,\n          },\n        };\n      });\n    }\n\n    console.log(`🗑️ Removed PC ${playerId} from grid ${gridId}`);\n  }\n\n  }\n    \n\n    const playersInGridManager = new GridStatePCManager();\n    export default playersInGridManager;\n    export const { initializePlayersInGrid } = playersInGridManager;","const API_BASE = process.env.REACT_APP_SERVER_URL || 'http://localhost:3001';\n\nexport default API_BASE;","import { renderPositions } from '../PlayerMovement';\n\nexport function animateRemotePC(playerId, from, to, TILE_SIZE, stepCount = 10) {\n  let step = 0;\n\n  console.log('animateRemotePC', playerId, from, to, 'steps:', stepCount);\n  \n  const currentX = from.x * TILE_SIZE;\n  const currentY = from.y * TILE_SIZE;\n  const targetX = to.x * TILE_SIZE;\n  const targetY = to.y * TILE_SIZE;\n\n  function animate() {\n    if (step >= stepCount) {\n      delete renderPositions[playerId];\n      return;\n    }\n\n    const interpolatedX = currentX + ((targetX - currentX) / stepCount) * step;\n    const interpolatedY = currentY + ((targetY - currentY) / stepCount) * step;\n\n    renderPositions[playerId] = {\n      x: interpolatedX / TILE_SIZE,\n      y: interpolatedY / TILE_SIZE,\n    };\n\n    step++;\n    requestAnimationFrame(animate);\n  }\n\n  animate();\n}","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","import API_BASE from '../config';\nimport axios from 'axios';\nimport { loadMasterResources } from './TuningManager';\n\n/**\n * Fetches the Signpost Town position from a homestead grid\n * @param {string} gridId - The homestead grid ID\n * @returns {Promise<{x: number, y: number}>} The x,y coordinates of Signpost Town, or default {x: 1, y: 1}\n */\nexport const fetchHomesteadSignpostPosition = async (gridId) => {\n  try {\n    const gridResponse = await axios.get(`${API_BASE}/api/load-grid/${gridId}`);\n    const gridData = gridResponse.data;\n    \n    if (gridData.resources && Array.isArray(gridData.resources)) {\n      const signpostTown = gridData.resources.find(res => res.type === \"Signpost Town\");\n      if (signpostTown) {\n        console.log(`✅ Found Signpost Town at (${signpostTown.x}, ${signpostTown.y}) on homestead grid ${gridId}`);\n        return { x: signpostTown.x, y: signpostTown.y };\n      } else {\n        console.log(`⚠️ Signpost Town not found on homestead grid ${gridId}, using default (1, 1)`);\n      }\n    }\n  } catch (error) {\n    console.error(`❌ Error fetching homestead grid data for grid ${gridId}:`, error);\n  }\n  \n  // Return default position if not found or error\n  return { x: 1, y: 1 };\n};\n\n/**\n * Fetches the Train position from a town grid (for arrival via signpost)\n * @param {string} gridId - The town grid ID\n * @returns {Promise<{x: number, y: number}>} The x,y coordinates of Train, or default {x: 0, y: 0}\n */\nexport const fetchTownSignpostPosition = async (gridId) => {\n  try {\n    const gridResponse = await axios.get(`${API_BASE}/api/load-grid/${gridId}`);\n    const gridData = gridResponse.data;\n    \n    if (gridData.resources && Array.isArray(gridData.resources)) {\n      const train = gridData.resources.find(res => res.type === \"Train\");\n      if (train) {\n        console.log(`✅ Found Train at (${train.x}, ${train.y}) on town grid ${gridId}`);\n        return { x: train.x, y: train.y };\n      } else {\n        console.log(`⚠️ Train not found on town grid ${gridId}, using default (0, 0)`);\n      }\n    }\n  } catch (error) {\n    console.error(`❌ Error fetching town grid data for grid ${gridId}:`, error);\n  }\n  \n  // Return default position if not found or error\n  return { x: 0, y: 0 };\n};\n \nexport const fetchHomesteadOwner = async (gridId) => {\n  try {\n    console.log(`Fetching homestead owner for gridId: ${gridId}`);\n\n    // 🔹 Step 1: Fetch grid details (to get `ownerId`)\n    const gridResponse = await axios.get(`${API_BASE}/api/load-grid/${gridId}`);\n    const { ownerId = null, gridType = null } = gridResponse.data;\n\n    console.log(\"ownerId =\",ownerId);\n\n    if (!ownerId) {\n      console.log(\"🏡 This homestead is unoccupied.\");\n      return { username: null, gridType };\n    }\n\n    // 🔹 Step 2: Fetch player document using `ownerId`\n    const playerResponse = await axios.get(`${API_BASE}/api/player/${ownerId._id}`);\n    const { username = null } = playerResponse.data;\n \n    if (username) {\n      console.log(`🏡 Homestead belongs to: ${username}`);\n      return { username, gridType };\n    } else {\n      console.warn(\"🚨 Owner's player document not found!\");\n      return { username: null, gridType };\n    }\n\n  } catch (error) {\n    console.error('❌ Error fetching homestead owner:', error);\n    return { username: null, gridType: null }; // Return defaults in case of an error\n  }\n};\n\n \nexport const addResourceToGrid = async (resources, newResource) => {\n  try {\n    const masterResources = await loadMasterResources();\n    console.log('masterResources:', masterResources);\n    console.log('current resources:', resources);\n    console.log('newResource:', newResource);\n\n    if (!Array.isArray(masterResources)) {\n      console.error('Failed to load masterResources or incorrect format:', masterResources);\n      return resources;\n    }\n\n    // Extract `type` from `newResource` payload\n    const resourceType = newResource?.type || newResource?.newResource;\n    if (!resourceType) {\n      console.error('[addResourceToGrid] Invalid resource payload:', newResource);\n      return resources;\n    }\n\n    // Find the resource template to get the symbol\n    const resourceTemplate = masterResources.find((template) => template.type === resourceType);\n\n    // Enrich only with the basics\n    const enrichedResource = {\n      ...resourceTemplate, // Use the full template from masterResources\n      type: resourceType, // Keep type\n      x: newResource.x,   // Keep x\n      y: newResource.y,   // Keep y\n      growEnd: newResource.growEnd, // Keep growEnd\n    };\n\n    console.log('Enriched resource:', enrichedResource);\n\n    // Ensure no duplicates exist at the same x, y position\n    return [\n      ...resources.filter((res) => !(res.x === newResource.x && res.y === newResource.y)),\n      enrichedResource, // Add the enriched resource\n    ];\n  } catch (error) {\n    console.error('Error enriching resource:', error);\n    return resources; // Return unmodified resources on error\n  }\n};\n\n\n// Inline function to calculate Euclidean distance safely\nexport const calculateDistance = (pos1, pos2) => {\n  if (!pos1 || !pos2 || typeof pos1.x === 'undefined' || typeof pos1.y === 'undefined' || typeof pos2.x === 'undefined' || typeof pos2.y === 'undefined') {\n    console.warn(\"Skipping distance calculation due to invalid position:\", { pos1, pos2 });\n    return Infinity;\n  }\n  return Math.sqrt(Math.pow(pos1.x - pos2.x, 2) + Math.pow(pos1.y - pos2.y, 2));\n};\n\n\n// Calculates the derived range based on base range + bonus from skill metadata\nexport const getDerivedRange = (currentPlayer, masterResources) => {\n  if (!currentPlayer || !Array.isArray(masterResources)) return 1;\n\n  const baseRange = currentPlayer.range || 1;\n\n  const bonusRangeFromSkills = currentPlayer.skills?.reduce((sum, skill) => {\n    const master = masterResources.find(r => r.type === skill.type);\n    if (master?.output === 'range' && typeof master.qtycollected === 'number') {\n      return sum + master.qtycollected;\n    }\n    return sum;\n  }, 0) || 0;\n\n  const gridType = currentPlayer?.location?.gtype;\n  const totalRange = gridType === 'homestead'\n    ? baseRange + bonusRangeFromSkills + 5\n    : baseRange + bonusRangeFromSkills;\n\n  return totalRange;\n};","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE, } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type],\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET, } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* State.READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* State.READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* State.READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* State.READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* State.READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* State.READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else if (state === 2 /* State.READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* State.READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload, };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\nexport const defaultBinaryType = \"arraybuffer\";\nexport function createCookieJar() { }\n","import { globalThisShim as globalThis } from \"./globals.node.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n/**\n * Generates a random 8-characters string.\n */\nexport function randomString() {\n    return (Date.now().toString(36).substring(3) +\n        Math.random().toString(36).substring(2, 5));\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { Transport } from \"../transport.js\";\nimport { randomString } from \"../util.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this._polling = false;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this._poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this._polling || !this.writable) {\n            let total = 0;\n            if (this._polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    _poll() {\n        this._polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this._polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this._poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","import { Polling } from \"./polling.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globals.node.js\";\nimport { hasCORS } from \"../contrib/has-cors.js\";\nfunction empty() { }\nexport class BaseXHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(createRequest, uri, opts) {\n        super();\n        this.createRequest = createRequest;\n        installTimerFunctions(this, opts);\n        this._opts = opts;\n        this._method = opts.method || \"GET\";\n        this._uri = uri;\n        this._data = undefined !== opts.data ? opts.data : null;\n        this._create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    _create() {\n        var _a;\n        const opts = pick(this._opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this._opts.xd;\n        const xhr = (this._xhr = this.createRequest(opts));\n        try {\n            xhr.open(this._method, this._uri, true);\n            try {\n                if (this._opts.extraHeaders) {\n                    // @ts-ignore\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this._opts.extraHeaders) {\n                        if (this._opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this._opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this._method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this._opts.withCredentials;\n            }\n            if (this._opts.requestTimeout) {\n                xhr.timeout = this._opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(\n                    // @ts-ignore\n                    xhr.getResponseHeader(\"set-cookie\"));\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this._onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this._onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this._data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this._onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this._index = Request.requestsCount++;\n            Request.requests[this._index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    _onError(err) {\n        this.emitReserved(\"error\", err, this._xhr);\n        this._cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    _cleanup(fromError) {\n        if (\"undefined\" === typeof this._xhr || null === this._xhr) {\n            return;\n        }\n        this._xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this._xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this._index];\n        }\n        this._xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    _onLoad() {\n        const data = this._xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this._cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this._cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\nconst hasXHR2 = (function () {\n    const xhr = newRequest({\n        xdomain: false,\n    });\n    return xhr && xhr.responseType !== null;\n})();\n/**\n * HTTP long-polling based on the built-in `XMLHttpRequest` object.\n *\n * Usage: browser\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n */\nexport class XHR extends BaseXHR {\n    constructor(opts) {\n        super(opts);\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd }, this.opts);\n        return new Request(newRequest, this.uri(), opts);\n    }\n}\nfunction newRequest(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { pick, randomString } from \"../util.js\";\nimport { encodePacket } from \"engine.io-parser\";\nimport { globalThisShim as globalThis, nextTick } from \"../globals.node.js\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class BaseWS extends Transport {\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws = this.createSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    this.doWrite(packet, data);\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.onerror = () => { };\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\nconst WebSocketCtor = globalThis.WebSocket || globalThis.MozWebSocket;\n/**\n * WebSocket transport based on the built-in `WebSocket` object.\n *\n * Usage: browser, Node.js (since v21), Deno, Bun\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n * @see https://caniuse.com/mdn-api_websocket\n * @see https://nodejs.org/api/globals.html#websocket\n */\nexport class WS extends BaseWS {\n    createSocket(uri, protocols, opts) {\n        return !isReactNative\n            ? protocols\n                ? new WebSocketCtor(uri, protocols)\n                : new WebSocketCtor(uri)\n            : new WebSocketCtor(uri, protocols, opts);\n    }\n    doWrite(_packet, data) {\n        this.ws.send(data);\n    }\n}\n","import { XHR } from \"./polling-xhr.node.js\";\nimport { WS } from \"./websocket.node.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: XHR,\n};\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"../globals.node.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\n/**\n * WebTransport transport based on the built-in `WebTransport` object.\n *\n * Usage: browser, Node.js (with the `@fails-components/webtransport` package)\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebTransport\n * @see https://caniuse.com/webtransport\n */\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        try {\n            // @ts-ignore\n            this._transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this._transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this._transport.ready.then(() => {\n            this._transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this._writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this._writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this._writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this._transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 8000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports as DEFAULT_TRANSPORTS } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { createCookieJar, defaultBinaryType, nextTick, } from \"./globals.node.js\";\nconst withEventListeners = typeof addEventListener === \"function\" &&\n    typeof removeEventListener === \"function\";\nconst OFFLINE_EVENT_LISTENERS = [];\nif (withEventListeners) {\n    // within a ServiceWorker, any event handler for the 'offline' event must be added on the initial evaluation of the\n    // script, so we create one single event listener here which will forward the event to the socket instances\n    addEventListener(\"offline\", () => {\n        OFFLINE_EVENT_LISTENERS.forEach((listener) => listener());\n    }, false);\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes without upgrade mechanism, which means that it will keep the first low-level transport that\n * successfully establishes the connection.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithoutUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithoutUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithUpgrade\n * @see Socket\n */\nexport class SocketWithoutUpgrade extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        this._prevBufferLen = 0;\n        this._pingInterval = -1;\n        this._pingTimeout = -1;\n        this._maxPayload = -1;\n        /**\n         * The expiration timestamp of the {@link _pingTimeoutTimer} object is tracked, in case the timer is throttled and the\n         * callback is not fired on time. This can happen for example when a laptop is suspended or when a phone is locked.\n         */\n        this._pingTimeoutTime = Infinity;\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            const parsedUri = parse(uri);\n            opts.hostname = parsedUri.host;\n            opts.secure =\n                parsedUri.protocol === \"https\" || parsedUri.protocol === \"wss\";\n            opts.port = parsedUri.port;\n            if (parsedUri.query)\n                opts.query = parsedUri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = [];\n        this._transportsByName = {};\n        opts.transports.forEach((t) => {\n            const transportName = t.prototype.name;\n            this.transports.push(transportName);\n            this._transportsByName[transportName] = t;\n        });\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        if (withEventListeners) {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this._beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this._offlineEventListener = () => {\n                    this._onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                OFFLINE_EVENT_LISTENERS.push(this._offlineEventListener);\n            }\n        }\n        if (this.opts.withCredentials) {\n            this._cookieJar = createCookieJar();\n        }\n        this._open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new this._transportsByName[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    _open() {\n        if (this.transports.length === 0) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        const transportName = this.opts.rememberUpgrade &&\n            SocketWithoutUpgrade.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1\n            ? \"websocket\"\n            : this.transports[0];\n        this.readyState = \"opening\";\n        const transport = this.createTransport(transportName);\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this._onDrain.bind(this))\n            .on(\"packet\", this._onPacket.bind(this))\n            .on(\"error\", this._onError.bind(this))\n            .on(\"close\", (reason) => this._onClose(\"transport close\", reason));\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        SocketWithoutUpgrade.priorWebsocketSuccess =\n            \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    _onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this._sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    this._resetPingTimeout();\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this._onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this._pingInterval = data.pingInterval;\n        this._pingTimeout = data.pingTimeout;\n        this._maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this._resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    _resetPingTimeout() {\n        this.clearTimeoutFn(this._pingTimeoutTimer);\n        const delay = this._pingInterval + this._pingTimeout;\n        this._pingTimeoutTime = Date.now() + delay;\n        this._pingTimeoutTimer = this.setTimeoutFn(() => {\n            this._onClose(\"ping timeout\");\n        }, delay);\n        if (this.opts.autoUnref) {\n            this._pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    _onDrain() {\n        this.writeBuffer.splice(0, this._prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this._prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this._getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this._prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    _getWritablePackets() {\n        const shouldCheckPayloadSize = this._maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this._maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Checks whether the heartbeat timer has expired but the socket has not yet been notified.\n     *\n     * Note: this method is private for now because it does not really fit the WebSocket API, but if we put it in the\n     * `write()` method then the message would not be buffered by the Socket.IO client.\n     *\n     * @return {boolean}\n     * @private\n     */\n    /* private */ _hasPingExpired() {\n        if (!this._pingTimeoutTime)\n            return true;\n        const hasExpired = Date.now() > this._pingTimeoutTime;\n        if (hasExpired) {\n            this._pingTimeoutTime = 0;\n            nextTick(() => {\n                this._onClose(\"ping timeout\");\n            }, this.setTimeoutFn);\n        }\n        return hasExpired;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a message. Alias of {@link Socket#write}.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    send(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    _sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this._onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    _onError(err) {\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        if (this.opts.tryAllTransports &&\n            this.transports.length > 1 &&\n            this.readyState === \"opening\") {\n            this.transports.shift();\n            return this._open();\n        }\n        this.emitReserved(\"error\", err);\n        this._onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    _onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this._pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (withEventListeners) {\n                if (this._beforeunloadEventListener) {\n                    removeEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n                }\n                if (this._offlineEventListener) {\n                    const i = OFFLINE_EVENT_LISTENERS.indexOf(this._offlineEventListener);\n                    if (i !== -1) {\n                        OFFLINE_EVENT_LISTENERS.splice(i, 1);\n                    }\n                }\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this._prevBufferLen = 0;\n        }\n    }\n}\nSocketWithoutUpgrade.protocol = protocol;\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see Socket\n */\nexport class SocketWithUpgrade extends SocketWithoutUpgrade {\n    constructor() {\n        super(...arguments);\n        this._upgrades = [];\n    }\n    onOpen() {\n        super.onOpen();\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            for (let i = 0; i < this._upgrades.length; i++) {\n                this._probe(this._upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    _probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    SocketWithoutUpgrade.priorWebsocketSuccess =\n                        \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this._upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    onHandshake(data) {\n        this._upgrades = this._filterUpgrades(data.upgrades);\n        super.onHandshake(data);\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    _filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        for (let i = 0; i < upgrades.length; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * @example\n * import { Socket } from \"engine.io-client\";\n *\n * const socket = new Socket();\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see SocketWithUpgrade\n */\nexport class Socket extends SocketWithUpgrade {\n    constructor(uri, opts = {}) {\n        const o = typeof uri === \"object\" ? uri : opts;\n        if (!o.transports ||\n            (o.transports && typeof o.transports[0] === \"string\")) {\n            o.transports = (o.transports || [\"polling\", \"websocket\", \"webtransport\"])\n                .map((transportName) => DEFAULT_TRANSPORTS[transportName])\n                .filter((t) => !!t);\n        }\n        super(uri, o);\n    }\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        var _a, _b, _c;\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = (_b = (_a = this.io.engine) === null || _a === void 0 ? void 0 : _a.transport) === null || _b === void 0 ? void 0 : _b.writable;\n        const isConnected = this.connected && !((_c = this.io.engine) === null || _c === void 0 ? void 0 : _c._hasPingExpired());\n        const discardPacket = this.flags.volatile && !isTransportWritable;\n        if (discardPacket) {\n        }\n        else if (isConnected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            const fn = (arg1, arg2) => {\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */\n    _clearAcks() {\n        Object.keys(this.acks).forEach((id) => {\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) {\n                    ack.call(this, new Error(\"socket has been disconnected\"));\n                }\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") {\n            return;\n        }\n        delete this.acks[packet.id];\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) {\n            packet.data.unshift(null);\n        }\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        if (!v) {\n            this.skipReconnect = true;\n        }\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), \n        // @ts-ignore\n        on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called when:\n     *\n     * - the low-level engine is closed\n     * - the parser encountered a badly formatted packet\n     * - all sockets are disconnected\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        var _a;\n        this.cleanup();\n        (_a = this.engine) === null || _a === void 0 ? void 0 : _a.close();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\nexport { Fetch, NodeXHR, XHR, NodeWebSocket, WebSocket, WebTransport, } from \"engine.io-client\";\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","import NPC from './GameFeatures/NPCs/AllNPCsShared';\nimport FloatingTextManager from './UI/FloatingText';\nimport NPCsInGridManager from './GridState/GridStateNPCs';\nimport playersInGridManager from './GridState/PlayersInGrid';\nimport { io } from 'socket.io-client';\nimport { animateRemotePC } from './Render/RenderAnimatePosition';\nimport { createCollectEffect } from './VFX/VFX';\n\nconst socket = io('https://vvgame-server.onrender.com', {\n  transports: ['websocket'],\n  autoConnect: false, // Don't connect until explicitly told to\n});\n\nexport function socketListenForPCJoinAndLeave(gridId, currentPlayer, isMasterResourcesReady, setPlayersInGrid, controllerUsername, setControllerUsername) {\n\n  console.log(\"🌐 useEffect for PC join & leave running. gridId:\", gridId, \"socket:\", !!socket);\n  console.log(\"  🌐 isMasterResourcesReady = \", isMasterResourcesReady);\n\n  if (!gridId || !currentPlayer || !isMasterResourcesReady) return;\n\nconst handlePlayerJoinedGrid = ({ playerId, username, playerData, emitterId }) => {\n  if (emitterId === socket.id) {\n    console.log('😀 Ignoring player-joined event from self.');\n    return; // Ignore updates emitted by this client\n  }\n  console.log(`👋 Player ${username} joined grid with data:`, playerData);\n  setPlayersInGrid(prevState => {\n    const existing = prevState[gridId]?.pcs?.[playerId];\n    const incomingTime = new Date(playerData?.lastUpdated).getTime() || 0;\n    const localTime = new Date(existing?.lastUpdated).getTime() || 0;\n\n    if (!existing || incomingTime > localTime) {\n      console.log(`⏩ Inserting or updating PC ${playerId} from player-joined-sync.`);\n\n      // ✅ Update memory manager too\n      if (playersInGridManager.addPC) {\n        playersInGridManager.addPC(gridId, playerId, playerData);\n      } else {\n        console.warn('🛑 playersInGridManager.addPC is not defined.');\n      }\n\n      return {\n        ...prevState,\n        [gridId]: {\n          ...prevState[gridId],\n          pcs: {\n            ...(prevState[gridId]?.pcs || {}),\n            [playerId]: playerData,\n          },\n        },\n      };\n    }\n\n    console.log(`⏳ Skipping player-joined-sync for ${playerId}; local is newer.`);\n    return prevState;\n  });\n};\n\n  const handlePlayerLeftGrid = ({ playerId, username, emitterId }) => {\n    if (emitterId === socket.id) {\n      console.log('😀 Ignoring player-left event from self.');\n      return; // Ignore updates emitted by this client\n    }\n    console.log(`👋 Player ${username} left grid`);\n    // ✅ Remove from memory manager\n    if (playersInGridManager.removePC) {\n      playersInGridManager.removePC(gridId, playerId);\n    } else {\n      console.warn('🛑 playersInGridManager.removePC is not defined.');\n    }\n\n    setPlayersInGrid(prevState => {\n      if (!prevState[gridId]?.pcs) return prevState;\n      const updatedGrid = { ...prevState[gridId]?.pcs };\n      delete updatedGrid[playerId];\n      \n      // Check if removed player was the controller\n      if (controllerUsername === username && setControllerUsername) {\n        console.log(`🎮 Removed player ${username} was the NPCController, clearing controller`);\n        setControllerUsername(null);\n      }\n      \n      return {\n        ...prevState,\n        [gridId]: {\n          ...prevState[gridId],\n          pcs: updatedGrid,\n        },\n      };\n    });\n  };\n\n  const handleCurrentGridPlayers = ({ gridId: receivedGridId, pcs }) => {\n    console.log(`📦 Received current PCs for grid ${receivedGridId}:`, pcs);\n    \n    // Only update if this is for our current grid\n    if (receivedGridId !== gridId) {\n      console.log(`🔄 Ignoring PC list for different grid ${receivedGridId} (current: ${gridId})`);\n      return;\n    }\n    \n    // Replace the entire pcs object with server's authoritative list\n    setPlayersInGrid(prev => ({\n      ...prev,\n      [gridId]: {\n        ...prev[gridId],\n        pcs: pcs || {}, // Complete replacement, not a merge\n      },\n    }));\n    \n    // Also update the memory manager with the complete list\n    if (playersInGridManager.setAllPCs) {\n      playersInGridManager.setAllPCs(gridId, pcs || {});\n    }\n    \n    // Check if the current controller is in the player list\n    if (controllerUsername && setControllerUsername) {\n      const controllerStillInGrid = Object.values(pcs || {}).some(pc => pc.username === controllerUsername);\n      if (!controllerStillInGrid) {\n        console.log(`🎮 NPCController ${controllerUsername} is not in the current player list, clearing controller`);\n        setControllerUsername(null);\n      }\n    }\n  };\n\n  console.log(\"🧲 [NPCsInGrid join/leave] Subscribing to PC and NPC join/leave sync events for grid:\", gridId);\n  socket.on('player-joined-sync', handlePlayerJoinedGrid);\n  socket.on('player-left-sync', handlePlayerLeftGrid);\n  socket.on('current-grid-players', handleCurrentGridPlayers);\n\n  return () => {\n    socket.off('player-joined-sync', handlePlayerJoinedGrid);\n    socket.off('player-left-sync', handlePlayerLeftGrid);\n    socket.off('current-grid-players', handleCurrentGridPlayers);\n  };\n\n};\n\n// 🔄 SOCKET LISTENER: PCs: Real-time updates for GridState (PC sync)\nexport function socketListenForPCstateChanges(TILE_SIZE, gridId, currentPlayer, setPlayersInGrid, localPlayerMoveTimestampRef) {\n\n  console.log(\"🌐🌐🌐🌐🌐🌐 useEffect for PC & NPC grid-state-sync running. gridId:\", gridId, \"socket:\", !!socket);\n\n  if (!gridId) return;\n\n  // Updated handlePCSync to fully overwrite local PC with incoming PC if newer\n  const handlePCSync = (payload) => {\n    //console.log(\"📥 Received sync-PCs payload:\", JSON.stringify(payload, null, 2));\n  \n    // Extract gridId and gridData first to check player ID\n    const gridEntries = Object.entries(payload).filter(([key]) => key !== 'emitterId');\n    if (gridEntries.length === 0) {\n      console.warn(\"❌ No grid data found in sync-PCs payload:\", payload);\n      return;\n    }\n  \n    const [gridId, gridData] = gridEntries[0];\n    const { pcs, playersInGridLastUpdated } = gridData || {};\n    if (!pcs || typeof pcs !== 'object') {\n      console.warn(\"📤 Invalid sync-PCs payload (missing pcs):\", payload);\n      return;\n    }\n  \n    const [playerId, incomingPC] = Object.entries(pcs)[0];\n    \n    // CRITICAL: Check if this is the local player FIRST, before any other checks\n    const currentPlayerId = currentPlayer?._id || currentPlayer?.playerId;\n    if (currentPlayer && playerId === String(currentPlayerId)) {\n      console.log(`🛡️ Blocking socket sync for own player (${playerId}) - should never update local player from socket`);\n      return;\n    }\n    \n    // Then check emitterId to avoid processing our own emissions\n    const { emitterId } = payload;\n    const mySocketId = socket.id;\n    if (emitterId === mySocketId) {\n      console.log(`📤 Skipping sync-PCs from self (emitterId = socket.id)`);\n      return;\n    }\n    const incomingTime = new Date(incomingPC?.lastUpdated).getTime();\n  \n    setPlayersInGrid((prevState) => {\n      const localPC = prevState[gridId]?.pcs?.[playerId];\n      const localTime = new Date(localPC?.lastUpdated).getTime() || 0;\n\n      // --- Begin changed fields logging and floating text (like NPCs) ---\n      const changedFields = Object.keys(incomingPC).filter(key => {\n        if (key === 'lastUpdated') return false;\n        return JSON.stringify(incomingPC[key]) !== JSON.stringify(localPC?.[key]);\n      });\n\n      if (changedFields.length > 0) {\n        console.log(`🔄 PC ${playerId} changed fields: ${changedFields.join(', ')}`);\n        // Show floating damage text if HP was reduced\n        if (changedFields.includes('hp') && localPC?.hp && incomingPC?.hp < localPC.hp) {\n          const damageTaken = localPC.hp - incomingPC.hp;\n          FloatingTextManager.addFloatingText(`- ${damageTaken} ❤️‍🩹 HP`, incomingPC.position.x, incomingPC.position.y, TILE_SIZE);\n        }\n      }\n      // --- End changed fields logging and floating text ---\n\n      if (incomingTime <= localTime) {\n        console.log(`⏳ Skipping stale update for PC ${playerId}.`);\n        return prevState;\n      }\n\n      console.log(`⏩ Updating PC ${playerId} from socket event.`);\n      playersInGridManager.updatePC(gridId, playerId, incomingPC);\n\n      const prevPosition = localPC?.position;\n      const newPosition = incomingPC?.position;\n      if (\n        prevPosition &&\n        newPosition &&\n        (prevPosition.x !== newPosition.x || prevPosition.y !== newPosition.y)\n      ) {\n        animateRemotePC(playerId, prevPosition, newPosition, TILE_SIZE);\n      }\n\n      const prevGridState = prevState[gridId] || {};\n      const prevPCs = prevGridState.pcs || {};\n\n      const setPayload = {\n        ...prevState,\n        [gridId]: {\n          ...prevGridState,\n          pcs: {\n            ...prevPCs,\n            [playerId]: incomingPC,\n          },\n          playersInGridLastUpdated: playersInGridLastUpdated || prevGridState.playersInGridLastUpdated,\n        },\n      };\n\n      // console.log(\"🧠 Pre-state before merge:\", JSON.stringify(prevState, null, 2));\n      // console.log(\"📥 Incoming update for:\", playerId, \"with data:\", incomingPC);\n      // console.log(\"📦 setPlayersInGrid payload:\", JSON.stringify(setPayload, null, 2));\n\n      return setPayload;\n    });\n  };\n\n  console.log(\"🧲 Subscribing to PC sync events for grid:\", gridId);\n  socket.on(\"sync-PCs\", handlePCSync);\n\n  return () => {\n    console.log(\"🧹 Unsubscribing from PC sync events for grid:\", gridId);\n    socket.off(\"sync-PCs\", handlePCSync);\n  };\n};\n\n\n// 🔄 SOCKET LISTENER: NPCs:  Real-time updates for GridStateNPC snc\nexport function socketListenForNPCStateChanges(TILE_SIZE, gridId, setGridState, npcController) {\n  //console.log(\"🌐 useEffect for NPC grid-state-sync running. gridId:\", gridId, \"socket:\", !!socket);\n  if (!gridId) return;\n\n  const handleNPCSync = (payload) => {\n    //console.log('📥 Received sync-NPCs payload:');\n  \n    const { emitterId } = payload;\n    const mySocketId = socket.id;\n    if (emitterId === mySocketId) {\n      console.log(`📤 Skipping sync-NPCs from self (emitterId = socket.id)`);\n      return;\n    }\n  \n    // Extract gridId and gridData (we only expect one grid per payload)\n    const gridEntries = Object.entries(payload).filter(([key]) => key !== 'emitterId');\n    if (gridEntries.length === 0) {\n      console.warn(\"❌ No grid data found in sync-NPCs payload:\", payload);\n      return;\n    }\n  \n    const [gridId, gridData] = gridEntries[0];\n    const { npcs, NPCsInGridLastUpdated } = gridData || {};\n    if (!npcs || typeof npcs !== 'object') {\n      console.warn(\"📤 Invalid sync-NPCs payload (missing npcs):\", payload);\n      return;\n    }\n  \n    const isController = npcController.isControllingGrid(gridId);\n    console.log('IsNPCController:', isController);\n  \n    setGridState(prevState => {\n      const updatedNPCs = { ...prevState.npcs };\n      const liveGrid = NPCsInGridManager.NPCsInGrid?.[gridId];\n  \n      Object.entries(npcs).forEach(([npcId, incomingNPC]) => {\n        if (!incomingNPC) {\n          //console.log(`  🧹 Received null NPC ${npcId}; removing from local state.`);\n          delete updatedNPCs[npcId];\n          if (liveGrid?.npcs) {\n            delete liveGrid.npcs[npcId];\n            //console.log(`🧠 Removed NPC ${npcId} from live NPCsInGrid`);\n          } else {\n            console.warn(`⚠️ liveGrid.npcs missing for gridId ${gridId}`);\n          }\n          return;\n        }\n\n        const localNPC = updatedNPCs[npcId];\n        const incomingTime = new Date(incomingNPC.lastUpdated).getTime();\n        const localTime = localNPC?.lastUpdated ? new Date(localNPC.lastUpdated).getTime() : 0;\n\n        if (incomingTime > localTime) {\n          // Broadly log which attributes changed\n          const changedFields = Object.keys(incomingNPC).filter(key => {\n            if (key === 'lastUpdated') return false;\n            return JSON.stringify(incomingNPC[key]) !== JSON.stringify(localNPC?.[key]);\n          });\n          if (changedFields.length > 0) {\n            console.log(`🔄 NPC ${npcId} changed fields: ${changedFields.join(', ')}`);\n            // Show floating damage text if HP was reduced\n            if (changedFields.includes('hp') && localNPC?.hp && incomingNPC?.hp < localNPC.hp) {\n              const damageTaken = localNPC.hp - incomingNPC.hp;\n              FloatingTextManager.addFloatingText(`- ${damageTaken} ❤️‍🩹 HP`, incomingNPC.position.x, incomingNPC.position.y, TILE_SIZE);\n            }\n          }\n\n          //console.log(`  🐮📡 Updating NPC ${npcId} from emitter ${emitterId}: ${incomingNPC.state}`);\n\n          const rehydrated = new NPC(\n            incomingNPC.id,\n            incomingNPC.type,\n            incomingNPC.position,\n            incomingNPC,\n            incomingNPC.gridId || gridId\n          );\n\n          updatedNPCs[npcId] = rehydrated;\n\n          if (liveGrid?.npcs) {\n            liveGrid.npcs[npcId] = rehydrated;\n            //console.log(`🧠 Rehydrated NPC ${npcId} into live NPCsInGrid`);\n          } else {\n            console.warn(`⚠️ liveGrid.npcs missing for gridId ${gridId}`);\n          }\n        } else {\n          console.log(`  ⏳ Skipped NPC ${npcId}, newer or same version already present.`);\n        }\n      });\n  \n      return {\n        ...prevState,\n        npcs: updatedNPCs,\n      };\n    });\n  };\n\n  // Add handler for npc-moved-sync\n  const handleNPCMoveSync = ({ npcId, newPosition, emitterId }) => {\n    //console.log('📡 handleNPCMoveSync invoked.');\n    //console.log('📥 Received npc-moved-sync event:', { npcId, newPosition, emitterId });\n\n    if (!npcId || !newPosition) return;\n    \n    // Skip if this is the controller receiving their own broadcast\n    if (emitterId && emitterId === socket.id) {\n      console.log(`📤 Skipping NPC animation for own broadcast (NPC ${npcId})`);\n      return;\n    }\n\n    setGridState(prevState => {\n      const updatedNPCs = { ...prevState.npcs };\n      const existing = updatedNPCs[npcId];\n      //console.log('📦 SETTING GridState for existing:', existing);\n      if (existing) {\n        // Cache previous position BEFORE rehydration\n        const prevPosition = existing?.position;\n        // ✅ Rehydrate if needed\n        const rehydrated = existing instanceof NPC\n          ? existing\n          : new NPC(\n              existing.id,\n              existing.type,\n              existing.position,\n              existing,\n              existing.gridId || gridId\n            );\n        //console.log('📦 Rehydrated NPC:', rehydrated);\n        // Animate movement if position changed\n        if (\n          prevPosition &&\n          newPosition &&\n          (prevPosition.x !== newPosition.x || prevPosition.y !== newPosition.y)\n        ) {\n          console.log('Calling animateRemotePC for NPC', npcId, prevPosition, newPosition);\n          animateRemotePC(npcId, prevPosition, newPosition, TILE_SIZE, 30); // More steps for smoother NPC movement\n        }\n        // Assign new position AFTER animation call\n        rehydrated.position = newPosition;\n        updatedNPCs[npcId] = rehydrated;\n        // ✅ Also patch live memory state for controller\n        if (rehydrated instanceof NPC) {\n          NPCsInGridManager.NPCsInGrid[gridId].npcs[npcId] = rehydrated;\n        } else {\n          console.warn(`🛑 Tried to inject non-NPC instance into live NPCsInGrid for ${npcId}`);\n        }\n      }\n      return {\n        ...prevState,\n        npcs: updatedNPCs,\n      };\n    });\n  };\n\n    // Add handler for npc-removal-sync\n  const handleNPCRemoval = ({ gridId, npcId }) => {\n    //console.log(`🧹 Received remove-NPC for ${npcId} in grid ${gridId}`);\n    setGridState(prevState => {\n      const updatedNPCs = { ...prevState.npcs };\n      delete updatedNPCs[npcId];\n      const liveGrid = NPCsInGridManager.NPCsInGrid?.[gridId];\n      if (liveGrid?.npcs) {\n        delete liveGrid.npcs[npcId];\n        console.log(`🧠 Removed NPC ${npcId} from live NPCsInGrid (remove-NPC event)`);\n      }\n      return {\n        ...prevState,\n        npcs: updatedNPCs,\n      };\n    });\n  };\n\n  //console.log(\"🧲 Subscribing to NPC sync events for grid:\", gridId);\n  socket.on(\"sync-NPCs\", handleNPCSync);\n  socket.on(\"npc-moved-sync\", handleNPCMoveSync); // main handler\n  socket.on(\"remove-NPC\", handleNPCRemoval);\n\n  return () => {\n    //console.log(\"🧹 Unsubscribing from NPC sync events for grid:\", gridId);\n    socket.off(\"sync-NPCs\", handleNPCSync);\n    socket.off(\"npc-moved-sync\", handleNPCMoveSync);\n    socket.off(\"remove-NPC\", handleNPCRemoval);\n  };\n}\n\n\n// 🔄 SOCKET LISTENER: Real-time updates for resources\nexport function socketListenForResourceChanges(TILE_SIZE, gridId, isMasterResourcesReady, setResources, masterResources, enrichResourceFromMaster) {\n\n  //console.log(\"🌐 useEffect for resource-sync running. gridId:\", gridId, \"socket:\", !!socket);\n  \n  // Wait until masterResources is ready\n  if (!gridId || !socket || !isMasterResourcesReady) {\n    console.warn('Master Resources not ready or missing gridId/socket.');\n    return; // 🛑 Don't process until ready\n  }\n  const handleResourceSync = ({ updatedResources }) => {\n    //console.log(\"🌐 Real-time tile/resource update received!\", updatedResources);\n\n    if (updatedResources?.length) {\n      setResources((prevResources) => {\n        if (!masterResources?.length) {\n          console.warn(`⏳ Skipping resource enrichment; masterResources not yet ready`);\n          return prevResources; // Do nothing until master data is populated\n        }\n        const updated = [...prevResources];\n        updatedResources.forEach((newRes) => {\n          if (!newRes || typeof newRes.x !== 'number' || typeof newRes.y !== 'number') {\n            console.warn(\"⚠️ Skipping invalid socket resource:\", newRes);\n            return;\n          }\n\n          // ✅ HANDLE RESOURCE REMOVAL\n          if (newRes.type === null) {\n            //console.log(`🧹 Removing resource at (${newRes.x}, ${newRes.y})`);\n            const indexToRemove = updated.findIndex(\n              (res) => res.x === newRes.x && res.y === newRes.y\n            );\n            //console.log('TILE_SIZE:', TILE_SIZE);\n            createCollectEffect(newRes.x, newRes.y, TILE_SIZE);\n\n            if (indexToRemove !== -1) {\n              updated.splice(indexToRemove, 1);\n            }\n            return; // Skip enrichment\n          }\n  \n          // ✅ NORMAL ENRICHMENT PATH\n          const resourceTemplate = masterResources.find(r => r.type === newRes.type);\n          if (!resourceTemplate) {\n            console.warn(`⚠️ No matching resource template found for ${newRes.type}`);\n          }\n          const enriched = enrichResourceFromMaster(newRes, masterResources);\n          //console.log('🌐🌐 LISTENER: enriched resource = ', enriched);\n          const filtered = updated.filter(r => !(r.x === newRes.x && r.y === newRes.y));\n          filtered.push(enriched);\n          updated.splice(0, updated.length, ...filtered);\n        });\n\n        // Now recreate shadow tiles for all multi-tile resources\n        // This also handles removal - any old shadow tiles not recreated will be gone\n        const finalResources = [...updated];\n        updated.forEach((resource) => {\n          if (resource.range && resource.range > 1) {\n            const anchorKey = resource.anchorKey || `${resource.type}-${resource.x}-${resource.y}`;\n            for (let dx = 0; dx < resource.range; dx++) {\n              for (let dy = 0; dy < resource.range; dy++) {\n                if (dx === 0 && dy === 0) continue; // Skip anchor\n                \n                const shadowX = resource.x + dx;\n                const shadowY = resource.y - dy;\n                const shadowResource = {\n                  type: 'shadow',\n                  x: shadowX,\n                  y: shadowY,\n                  parentAnchorKey: anchorKey,\n                  passable: resource.passable // Inherit from anchor\n                };\n                finalResources.push(shadowResource);\n              }\n            }\n          }\n        });\n        \n        return finalResources;\n      });\n    }\n  };\n\n  console.log(\"🧲 [resources] Subscribing to real-time updates for grid:\", gridId);\n  socket.on(\"resource-sync\", handleResourceSync);\n\n  return () => {\n    socket.off(\"resource-sync\", handleResourceSync);\n  };\n};\n\n// 🔄 SOCKET LISTENER: Real-time updates for tiles\nexport function socketListenForTileChanges(gridId, setTileTypes, mergeTiles) {\n\n  //console.log(\"🌐 useEffect for tile-sync running. gridId:\", gridId, \"socket:\", !!socket);\n\n  if (!gridId || !socket) {\n    console.warn('Missing gridId or socket.');\n    return;\n  }\n\n  const handleTileSync = ({ updatedTiles }) => {\n    //console.log(\"🌐 Real-time tile update received!\", updatedTiles);\n\n    updatedTiles.forEach(tile => {\n      //console.log(\"📦 Tile type in update:\", tile.type); // Add this\n    });\n\n    if (updatedTiles?.length) {\n      setTileTypes((prev) => {\n        const merged = mergeTiles(prev, updatedTiles); // Merge updated tiles into the current state\n        return merged;\n      });\n    }\n  };\n\n  console.log(\"🧲 [tiles] Subscribing to real-time tile updates for grid:\", gridId);\n  socket.on(\"tile-sync\", handleTileSync);\n\n  return () => {\n    console.log(\"🧹 Unsubscribing from tile-sync for grid:\", gridId);\n    socket.off(\"tile-sync\", handleTileSync);\n  };\n};\n\n// Add socket event listeners for NPC controller status\nexport function socketListenForNPCControllerStatus(gridId, currentPlayer, setControllerUsername) {\n\n  console.log(\"🌐 useEffect for npc-controller running. gridId:\", gridId, \"socket:\", !!socket);\n\n  if (!socket || !currentPlayer) return;\n\n  // Send username to server when joining grid\n  if (gridId) {\n    socket.emit('set-username', { username: currentPlayer.username });\n  }\n\n  socket.on('npc-controller-update', ({ controllerUsername }) => {\n    setControllerUsername(controllerUsername);\n  });\n\n  socket.on('npc-controller-assigned', ({ gridId: controlledGridId }) => {\n    console.log(`🎮 Assigned as NPC controller for grid ${controlledGridId}`);\n  });\n\n  socket.on('npc-controller-revoked', ({ gridId: revokedGridId }) => {\n    console.log(`🎮 Revoked as NPC controller for grid ${revokedGridId}`);\n  });\n\n  return () => {\n    socket.off('npc-controller-update');\n    socket.off('npc-controller-assigned');\n    socket.off('npc-controller-revoked');\n  };\n\n};\n\n\n// 🔄 SOCKET LISTENER: Force refresh on season reset\nexport function socketListenForSeasonReset() {\n\n  if (!socket) return;\n\n  socket.on(\"force-refresh\", ({ reason }) => {\n    console.warn(`🔁 Server requested refresh: ${reason}`);\n    window.location.reload();\n  });\n\n  return () => {\n    socket.off(\"force-refresh\");\n  };\n};\n\n// 🔄 SOCKET LISTENER: Player Connect and Disconnect\nexport function socketListenForConnectAndDisconnect(gridId, currentPlayer, setIsSocketConnected) {\n  const handleConnect = () => {\n    console.log('📡 Socket connected!');\n    setIsSocketConnected(true);\n    // Emit presence info\n    socket.emit('player-connected', { playerId: currentPlayer._id, gridId });\n  };\n\n  const handleDisconnect = () => {\n    console.warn('📴 Socket disconnected.');\n    setIsSocketConnected(false);\n    // Notify others of disconnect\n    socket.emit('player-disconnected', { playerId: currentPlayer._id, gridId });\n  };\n\n  socket.on('connect', handleConnect);\n  socket.on('disconnect', handleDisconnect);\n\n  return () => {\n    socket.off('connect', handleConnect);\n    socket.off('disconnect', handleDisconnect);\n  };\n};\n\n// 🔄 SOCKET LISTENER: Listen for announcement that a player is connected/disconnected (I THINK ??)\nexport function socketListenForPlayerConnectedAndDisconnected(gridId, setConnectedPlayers) {\n  if (!socket || !gridId) return;\n\n  console.log(\"🌐 useEffect for player-connected/disconnected running. gridId:\", gridId);\n\n  // 🔄 Request current connection state on init\n  console.log(\"🔄 Requesting connected players list on startup.\");\n  socket.emit('request-connected-players', { gridId });\n\n  const handlePlayerConnected = ({ playerId }) => {\n    console.log(`📡 Player connected: ${playerId}`);\n    setConnectedPlayers(prev => new Set(prev).add(playerId));\n  };\n\n  const handlePlayerDisconnected = ({ playerId }) => {\n    console.log(`📴 Player disconnected: ${playerId}`);\n    setConnectedPlayers(prev => {\n      const newSet = new Set(prev);\n      newSet.delete(playerId);\n      return newSet;\n    });\n  };\n\n  const handleCurrentConnectedPlayers = ({ connectedPlayerIds }) => {\n    console.log(\"📦 Received full list of currently connected players:\", connectedPlayerIds);\n    setConnectedPlayers(new Set(connectedPlayerIds));\n  };\n\n  socket.on('player-connected', handlePlayerConnected);\n  socket.on('player-disconnected', handlePlayerDisconnected);\n  // Listen for the correct event name as emitted by the server\n  socket.on('connected-players', handleCurrentConnectedPlayers);\n\n  return () => {\n    socket.off('player-connected', handlePlayerConnected);\n    socket.off('player-disconnected', handlePlayerDisconnected);\n    socket.off('connected-players', handleCurrentConnectedPlayers);\n  };\n}\n\n\nexport function socketListenForChatMessages(setMessagesByScope) {\n  if (!socket) return;\n\n  const handleIncomingChatMessage = (msg) => {\n    console.log(\"💬 Incoming chat message:\", msg);\n    const { scope, scopeId } = msg;\n    setMessagesByScope(prev => {\n      const prevMessages = prev[scopeId] || [];\n      return {\n        ...prev,\n        [scopeId]: [...prevMessages, msg],\n      };\n    });\n    // 🔔 Emit badge update for chat to all players in this scope\n    const badgePayload = {\n      playerId: null, // null means broadcast to all clients\n      username: null,\n      hasUpdate: true,\n    };\n    socket.emit('chat-badge-update', badgePayload);\n  };\n  socket.on('receive-chat-message', handleIncomingChatMessage);\n  return () => {\n    socket.off('receive-chat-message', handleIncomingChatMessage);\n  };\n}\n\nexport function emitChatMessage({ playerId, username, message, scope, scopeId }) {\n  if (!socket) return;\n  socket.emit('send-chat-message', {\n    playerId,\n    username,\n    message,\n    scope,\n    scopeId,\n    emitterId: socket.id // ✅ Add this\n  });\n}\n\n\n\n// 🔄 SOCKET LISTENER: Consolidated badge updates (mailbox, store, chat, etc)\nexport function socketListenForBadgeUpdates(currentPlayer, setBadgeState, updateBadge) {\n  console.log(\"📡 socketListenForBadgeUpdates called with player:\", currentPlayer?.username);\n\n  if (!socket || !currentPlayer) return;\n\n  const handleBadge = ({ type, playerId, username, hasUpdate }) => {\n    console.log(\"🧪 handleBadge invoked with:\", { type, playerId, username, hasUpdate });\n    console.log(\"🔔 SOCKET LISTENER: Received badge update:\", { type, playerId, username, hasUpdate });\n    console.log(\"📛 Comparing currentPlayer._id:\", currentPlayer._id, \"to incoming:\", playerId);\n    \n    const isMatch =\n      type === 'chat' ? true :\n      (playerId && String(currentPlayer._id) === String(playerId)) ||\n      (username && currentPlayer.username === username);\n\n    console.log(\"🔔 isMatch:\", isMatch, \"for currentPlayer:\", currentPlayer.username);\n    if (!isMatch) return;\n\n    console.log(`📛 Badge update received for ${type}.`);\n    updateBadge(currentPlayer, setBadgeState, type, hasUpdate);\n  };\n\n  socket.on('mailbox-badge-update', (data) => handleBadge({ ...data, type: 'mailbox' }));\n  socket.on('store-badge-update', (data) => handleBadge({ ...data, type: 'store' }));\n  socket.on('chat-badge-update', (data) => handleBadge({ ...data, type: 'chat' }));\n\n  return () => {\n    socket.off('mailbox-badge-update');\n    socket.off('store-badge-update');\n    socket.off('chat-badge-update');\n  };\n}\n\n// Utility to clear the chat badge for the current player\nexport function clearChatBadge(currentPlayer, setBadgeState, updateBadge) {\n  if (!currentPlayer) return;\n  updateBadge(currentPlayer, setBadgeState, 'chat', false);\n}\n\nexport default socket;\n","import API_BASE from '../config';\nimport socket from '../socketManager'; \nimport axios from 'axios';\nimport NPC from '../GameFeatures/NPCs/AllNPCsShared';\nimport { loadMasterResources } from '../Utils/TuningManager';\n\nlet gridTimer = null; // For periodic grid updates\nlet externalSetGridState = null;\n\nlet lastGridStateTimestamp = 0;\nexport const updateLastGridStateTimestamp = (timestamp) => {\n  if (timestamp > lastGridStateTimestamp) {\n    lastGridStateTimestamp = timestamp;\n  }\n};\nexport const getLastGridStateTimestamp = () => lastGridStateTimestamp;\n\nclass GridStateManager {\n  constructor() {\n    this.NPCsInGrid = {}; // Store grid states in memory\n    console.log('GridStateManager instance created.');\n  }\n\n  registerSetGridState(setterFunction) {\n    externalSetGridState = setterFunction;\n  }\n\n  /**\n   * Initialize the NPCsInGrid for a specific gridId.\n   */\n  async initializeGridState(gridId) {\n\n    console.log('👍 Initialize NPCsInGrid for gridId:', gridId);\n    if (!gridId) {\n      console.error('initializeGridState: gridId is undefined.');\n      return;\n    }\n\n    try {\n      const response = await axios.get(`${API_BASE}/api/load-grid-state/${gridId}`);\n      const {\n        NPCsInGrid = { npcs: {}, lastUpdated: 0 },\n      } = response.data;\n\n      // Build a consolidated local state with independent timestamps\n      const hydratedState = {\n        npcs: NPCsInGrid.npcs || {},\n        NPCsInGridLastUpdated: new Date(NPCsInGrid.lastUpdated || 0).getTime(),\n      };\n      const npcs = hydratedState.npcs || {};\n      console.log('Fetched NPCsInGrid:', hydratedState);\n\n      // Load master resources\n      const masterResources = await loadMasterResources();\n\n      // Rehydrate NPCs\n      if (npcs) {\n        Object.keys(npcs).forEach((npcId) => {\n          const lightweightNPC = npcs[npcId];\n          const npcTemplate = masterResources.find((res) => res.type === lightweightNPC.type);\n          if (!npcTemplate) {\n            console.warn(`⚠️ Missing template for NPC type: ${lightweightNPC.type}`);\n            console.log('Master resources:', masterResources.map(res => res.type));\n          }\n          const hydrated = new NPC(\n            npcId,\n            lightweightNPC.type,\n            lightweightNPC.position,\n            { ...npcTemplate, ...lightweightNPC },\n            gridId\n          );\n\n          console.log('  ✅ Hydrated NPC instance:', hydrated);\n\n          NPCsInGrid.npcs[npcId] = hydrated;\n        });\n      }\n\n      this.NPCsInGrid[gridId] = NPCsInGrid;\n\n      if (this.setGridStateReact) {\n        console.log('📡 Syncing initialized NPCs to React state for gridId:', gridId);\n        this.setGridStateReact(prev => ({\n          ...prev,\n          [gridId]: {\n            ...(prev[gridId] || {}),\n            ...NPCsInGrid,\n          },\n        }));\n      }\n\n      console.log(`✅ Initialized and enriched NPCsInGrid for gridId ${gridId}:`, NPCsInGrid);\n    } catch (error) {\n      console.error('Error fetching NPCsInGrid:', error);\n    }\n  }\n\n  /**\n   * Get the NPCsInGrid for a specific gridId.\n   */\n  getNPCsInGrid(gridId) {\n    const NPCsInGrid = this.NPCsInGrid[gridId];\n    if (!NPCsInGrid) {\n      console.warn(`⚠️ No NPCsInGrid found for gridId: ${gridId}`);\n      return { npcs: {} }; // Only return NPCs\n    }\n    return NPCsInGrid.npcs;\n  }\n\n  /**\n   * Spawn a new NPC and immediately save the updated NPCsInGrid to the DB.\n   */\n  async spawnNPC(gridId, npcType, position) {\n    // DEBUG: Log input parameters for spawnNPC\n    console.log('spawnNPC called with:', { gridId, npcType, position });\n    if (typeof npcType === 'object' && npcType?.type) {\n      npcType = npcType.type; // Extract the type string\n    }\n    if (typeof npcType !== 'string') {\n      console.error('Invalid npcType. Expected a string but got:', npcType);\n      return;\n    }\n    const masterResources = await axios.get(`${API_BASE}/api/resources`);\n    const npcTemplate = masterResources.data.find((res) => res.type === npcType && res.category === 'npc');\n    if (!npcTemplate) {\n      console.error(`NPC template not found for type: ${npcType}`);\n      return;\n    }\n\n    const npcId = `${Date.now()}`;\n\n    let lightweightNPC;\n\n    if (npcTemplate.action === 'graze') {\n      lightweightNPC = {\n        id: npcId,\n        type: npcType,\n        action: npcTemplate.action,\n        state: 'idle',\n        position,\n        hp: 0,\n        maxhp: npcTemplate.maxhp,\n        lastUpdated: Date.now(),\n      };\n    } else if (npcTemplate.action === 'spawn') {  // Ensure spawners track nextspawn\n      lightweightNPC = {\n        id: npcId,\n        type: npcType,\n        action: npcTemplate.action,\n        state: 'hungry',\n        position,\n        hp: npcTemplate.maxhp,\n        maxhp: npcTemplate.maxhp,\n        lastUpdated: Date.now(),\n        nextspawn: Date.now() + npcTemplate.speed * 1000, // Ensure nextspawn is explicitly set\n      };\n    } else {\n      lightweightNPC = {\n        id: npcId,\n        type: npcType,\n        action: npcTemplate.action,\n        state: 'idle',\n        position,\n        hp: npcTemplate.maxhp,\n        maxhp: npcTemplate.maxhp,\n        lastUpdated: Date.now(),\n      };\n    }\n    console.log('Creating lightweightNPC:', lightweightNPC);\n\n    // Ensure NPC is properly instantiated as an `NPC` class object before adding\n    const npc = new NPC(\n      npcId,\n      npcType,\n      position,\n      { ...npcTemplate, ...lightweightNPC },\n      gridId // Include gridId\n    );\n    this.addNPC(gridId, npc);\n\n    console.log(`Successfully added NPC to NPCsInGrid. NPC ID: ${npcId}`);\n\n    const updatedGridState = this.getNPCsInGrid(gridId);\n    this.setAllNPCs(gridId, updatedGridState);\n  }\n\n  /**\n   * Add an NPC to the NPCsInGrid using per-NPC save model.\n   */\n  async addNPC(gridId, npc) {\n    console.log(`Adding NPC to NPCsInGrid for gridId: ${gridId}. NPC:`, npc);\n    let NPCsInGrid = this.NPCsInGrid[gridId];\n    if (!NPCsInGrid) {\n      console.warn(`⚠️ No NPCsInGrid found for gridId: ${gridId}. Initializing new entry.`);\n      NPCsInGrid = { npcs: {}, NPCsInGridLastUpdated: Date.now() };\n      this.NPCsInGrid[gridId] = NPCsInGrid;\n    }\n    if (!NPCsInGrid.npcs) NPCsInGrid.npcs = {};\n\n    const now = Date.now();\n    npc.lastUpdated = now;\n\n    NPCsInGrid.npcs[npc.id] = npc;\n\n    try {\n      await axios.post(`${API_BASE}/api/save-single-npc`, {\n        gridId,\n        npcId: npc.id,\n        npc,\n        lastUpdated: now,\n      });\n      console.log(`✅ Saved single NPC ${npc.id} to server.`);\n    } catch (error) {\n      console.error(`❌ Failed to save single NPC ${npc.id}:`, error);\n    }\n\n    if (socket && socket.emit) {\n      const payload = {\n        [gridId]: {\n          npcs: { [npc.id]: npc }, // or [npc.id]: npc in addNPC\n          NPCsInGridLastUpdated: now,\n        },\n        emitterId: socket.id,\n      };\n      console.log(\"📡 Emitting update-NPCsInGrid-NPCs with payload:\", JSON.stringify(payload, null, 2));\n      socket.emit('update-NPCsInGrid-NPCs', payload);\n    }\n  }\n\n  /**\n   * Update an NPC in the NPCsInGrid using the per-NPC save model.\n   */\n  async updateNPC(gridId, npcId, newProperties) {\n    //console.log(`🐮++ Updating NPC ${npcId} for gridId: ${gridId}`);\n    const NPCsInGrid = this.NPCsInGrid[gridId];\n    const existing = NPCsInGrid?.npcs?.[npcId];\n\n    if (!NPCsInGrid || !NPCsInGrid.npcs?.[npcId]) {\n      console.error(`Cannot update NPC ${npcId}. No NPCsInGrid or NPC found for gridId: ${gridId}`);\n      return;\n    }\n\n    if (!(existing instanceof NPC)) {\n      console.error(`🛑 Skipping updateNPC for ${npcId} — not an instance of NPC:`, existing);\n      return;\n    }\n  \n    const now = Date.now();\n    const npc = NPCsInGrid.npcs[npcId]; // already an instance of NPC\n    Object.assign(npc, newProperties);\n    npc.lastUpdated = now;\n\n    //console.log(`[🐮 NPCsInGridManager.updateNPC] NPC ${npcId} updated with:`, newProperties);\n\n    try {\n      // Send only the essential properties to the server\n      const npcData = {\n        id: npc.id,\n        type: npc.type,\n        position: npc.position,\n        state: npc.state,\n        hp: npc.hp,\n        maxhp: npc.maxhp,\n        grazeEnd: npc.grazeEnd,\n        lastUpdated: npc.lastUpdated,\n        action: npc.action,\n        gridId: npc.gridId\n      };\n      \n      //console.log(`🐮 Saving NPC ${npcId} to server with state: ${npcData.state}`);\n      \n      await axios.post(`${API_BASE}/api/save-single-npc`, {\n        gridId,\n        npcId,\n        npc: npcData,\n        lastUpdated: now,\n      });\n      //console.log(`🐮✅ Saved single NPC ${npcId} to server with state: ${npcData.state}`);\n    } catch (error) {\n      console.error(`❌ Failed to save single NPC ${npcId}:`, error);\n    }\n\n    if (socket && socket.emit) {\n      const payload = {\n        [gridId]: {\n          npcs: { [npcId]: npc }, // or [npc.id]: npc in addNPC\n          NPCsInGridLastUpdated: now,\n        },\n        emitterId: socket.id,\n      };\n      //console.log(\"📡 Emitting update-NPCsInGrid-NPCs with payload:\", JSON.stringify(payload, null, 2));\n      socket.emit('update-NPCsInGrid-NPCs', payload);\n    }\n\n    const updatedGridState = this.getNPCsInGrid(gridId);\n    this.setAllNPCs(gridId, updatedGridState);\n  }\n\n  /**\n   * Remove an NPC from the NPCsInGrid using the per-NPC save model.\n   */\n  async removeNPC(gridId, npcId) {\n    console.log(`Removing NPC ${npcId} from gridId: ${gridId}`);\n    const NPCsInGrid = this.NPCsInGrid[gridId];\n    if (!NPCsInGrid || !NPCsInGrid.npcs) {\n      console.error(`Cannot remove NPC. No NPCsInGrid or NPCs found for gridId: ${gridId}`);\n      return;\n    }\n\n    delete NPCsInGrid.npcs[npcId];\n    this.setAllNPCs(gridId, NPCsInGrid.npcs); // 🧠 Update React state after deletion\n\n    try {\n      await axios.post(`${API_BASE}/api/remove-single-npc`, {\n        gridId,\n        npcId,\n      });\n      console.log(`✅ Removed single NPC ${npcId} from server.`);\n    } catch (error) {\n      console.error(`❌ Failed to remove single NPC ${npcId}:`, error);\n    }\n\n    if (socket && socket.emit) {\n      socket.emit('remove-NPC', {\n        gridId,\n        npcId,\n        emitterId: socket.id,\n      });\n      console.log(`📡 Emitted NPC removal for ${npcId}`);\n    }\n  }\n\n  /**\n   * Save only NPCs in the NPCsInGrid to the database.\n   * This version dehydrates live NPC instances into plain objects and matches the PC saving structure.\n   */\n  async saveGridStateNPCs(gridId) {\n    //console.log('💾 saveGridStateNPCs called with gridId:', gridId);\n    try {\n      const NPCsInGrid = this.NPCsInGrid[gridId];\n      if (!NPCsInGrid || !NPCsInGrid.npcs) {\n        console.warn(`⚠️ No NPCs to save for grid ${gridId}`);\n        return;\n      }\n\n      // Update local NPC timestamp\n      const now = Date.now();\n      NPCsInGrid.NPCsInGridLastUpdated = now;\n\n      // Dehydrate the NPCs to simple objects\n      const dehydratedNPCs = {};\n      Object.entries(NPCsInGrid.npcs).forEach(([id, npc]) => {\n        dehydratedNPCs[id] = {\n          id: npc.id,\n          type: npc.type,\n          position: npc.position,\n          state: npc.state,\n          hp: npc.hp,\n          maxhp: npc.maxhp,\n          grazeEnd: npc.grazeEnd,\n          lastUpdated: npc.lastUpdated,\n        };\n      });\n\n      const payload = {\n        gridId,\n        npcs: dehydratedNPCs,\n        NPCsInGridLastUpdated: now,\n      };\n\n      //console.log('💾 Payload for saving NPCs:', payload);\n\n      // Save to server\n      await axios.post(`${API_BASE}/api/save-grid-state-npcs`, payload);\n      //console.log(`✅ 💾 Saved NPCs for grid ${gridId}`);\n\n      // Emit updated NPCs to other clients\n      if (socket && socket.emit) {\n        console.log(`📡 Emitting NPC grid-state for grid ${gridId}`);\n        socket.emit('update-NPCsInGrid-NPCs', {\n          gridId,\n          npcs: dehydratedNPCs,\n          NPCsInGridLastUpdated: now,\n        });\n      }\n    } catch (error) {\n      console.error(`❌ Error saving NPCs for grid ${gridId}:`, error);\n    }\n  }\n\n  /**\n   * Start periodic updates for NPCs in the NPCsInGrid.\n   */\n  startGridTimer(gridId) {\n    if (gridTimer) clearInterval(gridTimer);\n\n    gridTimer = setInterval(() => {\n      const NPCsInGrid = this.NPCsInGrid[gridId];\n      if (!NPCsInGrid) return;\n\n      const { npcs } = NPCsInGrid;\n      const now = Date.now();\n\n      Object.values(npcs || {}).forEach((npc) => {\n        if (npc instanceof NPC && typeof npc.update === 'function') {\n          //console.log(`Calling update() for NPC ID: ${npc.id}`);\n          npc.update(now, NPCsInGrid); // Let each NPC handle its own updates\n        } else {\n          console.error(`NPC ID: ${npc.id} is not a valid NPC instance or missing update method. NPC:`, npc);\n        }\n      });\n\n      console.log(`Processed NPC updates for gridId ${gridId}.`);\n    }, 1000);\n  }\n\n  /**\n   * Stop periodic updates for NPCs.\n   */\n  stopGridTimer() {\n    if (gridTimer) clearInterval(gridTimer);\n    gridTimer = null;\n  }\n\n  // Stop updates or clear grid state\n  stopGridStateUpdates() {\n    if (this.updateInterval) {\n      clearInterval(this.updateInterval); // Clear periodic updates\n      this.updateInterval = null;\n      //console.log('Grid state updates stopped.');\n    }\n    this.NPCsInGrid = {}; // Clear in-memory grid states\n  }\n\n  registerSetGridState(setter) {\n    this.setGridStateReact = setter;\n  }\n\n  setAllNPCs(gridId, npcsObject) {\n    //console.log('Setting all NPCs for gridId:', gridId, '; NPCs object:', npcsObject);\n  \n    // Safely get or create the current state\n    const existingState = this.NPCsInGrid[gridId] || {};\n    const lastUpdated = existingState.NPCsInGridLastUpdated || Date.now();\n  \n    this.NPCsInGrid[gridId] = {\n      ...existingState,\n      npcs: npcsObject || {},\n      NPCsInGridLastUpdated: lastUpdated,\n    };\n  \n    if (this.setGridStateReact) {\n      this.setGridStateReact(prev => ({\n        ...prev,\n        [gridId]: {\n          ...(prev[gridId] || {}),\n          npcs: npcsObject || {},\n          NPCsInGridLastUpdated: lastUpdated,\n        },\n      }));\n    }\n  }\n\n}\n\nconst NPCsInGridManager = new GridStateManager();\n\n// Export individual methods for direct use\nexport const {\n  initializeGridState,\n  getNPCsInGrid,\n  addNPC,\n  updateNPC,\n  removeNPC, \n  saveGridStateNPCs,\n  registerSetGridState,\n  setAllNPCs,\n} = NPCsInGridManager;\n\n// Default export for the entire manager\nexport default NPCsInGridManager;","// Mapping of signpost directions to entrance positions on the destination grid\nconst TRANSIT_POSITIONS = {\n  N: { x: 31, y: 63 },   // Enter from south edge, middle\n  NE: { x: 0, y: 63 },   // Enter from southwest corner\n  E: { x: 0, y: 31 },    // Enter from west edge, middle\n  SE: { x: 0, y: 0 },    // Enter from northwest corner\n  S: { x: 31, y: 0 },    // Enter from north edge, middle\n  SW: { x: 63, y: 0 },   // Enter from northeast corner\n  W: { x: 63, y: 30 },   // Enter from east edge, middle\n  NW: { x: 63, y: 63 },  // Enter from southeast corner\n};\n\n// Get the opposite direction for entrance position\nconst OPPOSITE_DIRECTION = {\n  N: \"S\",\n  NE: \"SW\",\n  E: \"W\",\n  SE: \"NW\",\n  S: \"N\",\n  SW: \"NE\",\n  W: \"E\",\n  NW: \"SE\"\n};\n\nexport function getEntryPosition(direction) {\n  return TRANSIT_POSITIONS[direction] || { x: 0, y: 0 }; // Default to center if unknown\n}\n\nexport function getOppositeEntryPosition(direction) {\n  const oppositeDir = OPPOSITE_DIRECTION[direction];\n  return TRANSIT_POSITIONS[oppositeDir] || { x: 0, y: 0 };\n}\n","import API_BASE from \"../../config\";\nimport axios from \"axios\";\nimport { changePlayerLocation } from \"../../Utils/GridManagement\";\nimport { getEntryPosition } from './transitConfig';\nimport playersInGridManager from \"../../GridState/PlayersInGrid\";\nimport { fetchHomesteadOwner, fetchHomesteadSignpostPosition, fetchTownSignpostPosition } from \"../../Utils/worldHelpers\";\nimport { updateGridStatus } from \"../../Utils/GridManagement\";\nimport { incrementFTUEStep } from \"../FTUE/FTUE\";\nimport FloatingTextManager from \"../../UI/FloatingText\";\n\nexport async function handleTransitSignpost(\n  currentPlayer,\n  resourceType,\n  setCurrentPlayer,\n  setGridId,\n  setGrid,\n  setTileTypes,\n  setResources,\n  updateStatus,\n  TILE_SIZE,\n  skills,\n  closeAllPanels,\n  bulkOperationContext,\n  masterResources,\n  strings = null,\n  masterTrophies = null\n) {\n  try {\n    if (typeof updateStatus !== \"function\") {\n      console.warn(\"⚠️ updateStatus is not a function:\", updateStatus);\n    }\n    console.log(\"Handling transit for resource:\", resourceType);\n    console.log(\"🔍 currentPlayer before checking skills:\", currentPlayer);\n    console.log(\"📜 currentPlayer.skills:\", currentPlayer.skills);\n\n    // 1) Handle special signposts (no Horse skill required for Town/Home)\n    const { g: currentGridId, s: settlementId, f: frontierId } = currentPlayer.location;\n    \n    // Check if this is Signpost Town or Signpost Home (no Horse required)\n    const isSpecialSignpost = resourceType === \"Signpost Town\" || resourceType === \"Signpost Home\";\n    \n    // 2) For non-special signposts, ensure the player has the Horse skill\n    if (!isSpecialSignpost) {\n        skills = currentPlayer.skills.length ? currentPlayer.skills : await axios.get(`${API_BASE}/api/inventory/${currentPlayer.playerId}`).then(res => res.data.skills || []);\n\n        console.log('skillResponse.data: ', skills);\n        console.log('currentPlayer = ',currentPlayer.username);\n        \n        const hasHorse = skills.some((item) => item.type === \"Horse\" && item.quantity > 0);\n        console.log('hasHorse: ', hasHorse);\n        if (!hasHorse) { \n            updateStatus(15);\n            // Add floating text at player's current position using PlayersInGrid\n            const playersInGrid = playersInGridManager.getPlayersInGrid(currentGridId);\n            if (playersInGrid && playersInGrid[currentPlayer.playerId]) {\n                const position = playersInGrid[currentPlayer.playerId].position;\n                FloatingTextManager.addFloatingText(91, position.x, position.y, TILE_SIZE);\n            }\n            return; \n        }\n    }\n\n    // Signpost Home\n    if (resourceType === \"Signpost Home\") {\n      console.log(\"🏠 Traveling to homestead:\", {\n        gridId: currentPlayer.gridId,\n        settlementId: currentPlayer.settlementId,\n        gridCoord: currentPlayer.gridCoord,\n      });\n      \n      // Fetch the homestead grid data to find Signpost Town location\n      try {\n        const signpostPosition = await fetchHomesteadSignpostPosition(currentPlayer.gridId);\n        \n        const newPlayerPosition = {\n          x: signpostPosition.x,\n          y: signpostPosition.y,\n          g: currentPlayer.gridId,      // The player's homestead grid\n          s: currentPlayer.settlementId,\n          f: currentPlayer.location.f,\n          gtype: \"homestead\",\n          gridCoord: currentPlayer.location?.gridCoord || currentPlayer.gridCoord || 0,\n        };\n        \n        updateStatus(101);\n        await changePlayerLocation(\n          currentPlayer,\n          currentPlayer.location,   // fromLocation\n          newPlayerPosition,        // toLocation\n          setCurrentPlayer,\n          setGridId,\n          setGrid,\n          setTileTypes,\n          setResources,\n          TILE_SIZE,\n          closeAllPanels,\n          updateStatus,\n          bulkOperationContext,\n          masterResources,\n          strings,\n          masterTrophies\n        );\n        \n      } catch (error) {\n        console.error(\"❌ Error traveling home:\", error);\n        if (error.message && error.message.includes('Failed to remove player from previous grid')) {\n          updateStatus(\"Failed to leave current location. Please try again.\");\n        } else {\n          updateStatus(\"Error traveling home\");\n        }\n      }\n      \n      return;\n    }\n\n    // Signpost Town\n    if (resourceType === \"Signpost Town\") {\n      console.log(\"Signpost Town clicked. Finding the first town grid in the settlement.\");\n\n      const settlementResponse = await axios.get(`${API_BASE}/api/get-settlement/${settlementId}`);\n      const settlement = settlementResponse.data;\n      if (!settlement || !settlement.grids) { updateStatus(104); return; }\n\n      // Find any sub-grid with gridType = town\n      const townGrid = settlement.grids.flat().find((grid) => grid.gridType === \"town\" && grid.gridId);\n      if (!townGrid) { updateStatus(104); return; }\n\n      console.log(\"Found town grid:\", townGrid);\n      \n      // Fetch the town grid data to find Train location\n      try {\n        const signpostPosition = await fetchTownSignpostPosition(townGrid.gridId);\n        \n        const newPlayerPosition = {\n          x: signpostPosition.x,\n          y: signpostPosition.y,\n          g: townGrid.gridId,\n          s: settlementId,\n          f: frontierId,\n          gtype: \"town\",\n          gridCoord: townGrid.gridCoord,\n        };\n        \n        updateStatus(102);\n        \n        // Check if first-time user is using Signpost Town\n        if (currentPlayer.firsttimeuser === true) {\n          console.log('🎓 First-time user used Signpost Town, incrementing FTUE step');\n          \n          // Increment the FTUE step and wait for it to fully complete\n          const newFtueStep = await incrementFTUEStep(currentPlayer.playerId, currentPlayer, setCurrentPlayer);\n          \n          // Add a small delay to ensure the server has processed the update\n          await new Promise(resolve => setTimeout(resolve, 500));\n          \n          // Update the currentPlayer object with the new ftuestep to pass through location change\n          currentPlayer = { ...currentPlayer, ftuestep: newFtueStep };\n        }\n        \n        await changePlayerLocation(\n          currentPlayer,\n          currentPlayer.location,   // fromLocation\n          newPlayerPosition,        // toLocation\n          setCurrentPlayer,\n          setGridId,\n          setGrid,\n          setTileTypes,\n          setResources,\n          TILE_SIZE,\n          closeAllPanels,\n          updateStatus,\n          bulkOperationContext,\n          masterResources,\n          strings,\n          masterTrophies\n        );\n        \n      } catch (error) {\n        console.error(\"❌ Error traveling to town:\", error);\n        if (error.message && error.message.includes('Failed to remove player from previous grid')) {\n          updateStatus(\"Failed to leave current location. Please try again.\");\n        } else {\n          updateStatus(\"Error traveling to town\");\n        }\n      }\n      \n      return;\n    }\n\n    // 3) Regular signpost => Move directionally\n    console.log(\"Regular Signpost clicked. Calculating transit options dynamically.\");\n    const direction = resourceType.replace(\"Signpost \", \"\");\n    const offsets = {\n      N:  [-1,  0],\n      S:  [ 1,  0],\n      E:  [ 0,  1],\n      W:  [ 0, -1],\n      NE: [-1,  1],\n      SE: [ 1,  1],\n      SW: [ 1, -1],\n      NW: [-1, -1],\n    };\n\n    // 4) Fetch the current Settlement\n    const settlementResponse = await axios.get(`${API_BASE}/api/get-settlement/${settlementId}`);\n    const settlement = settlementResponse.data;\n    if (!settlement || !settlement.grids) {\n      console.error(\"Settlement data is invalid or missing grids.\"); updateStatus(105); return; }\n\n      // Find the sub-grid doc matching currentGridId\n    const currentGrid = settlement.grids.flat().find((grid) => grid.gridId === currentGridId);\n    if (!currentGrid) {\n      console.error(\"Current grid not found in settlement.\"); updateStatus(105); return; }\n\n      // 5) Decode the current gridCoord to get gRow/gCol\n    if (!currentGrid.gridCoord) {\n      console.error(\"No gridCoord found on current grid.\"); updateStatus(105); return; }\n\n    updateStatus(103); // \"Travelling ...\"\n\n    const { \n      frontierTier, frontierIndex, \n      setRow, setCol, gRow, gCol\n    } = decodeCoord(currentGrid.gridCoord); // Implement decodeCoord to match your system\n\n    // 6) Apply signpost offsets to sub-grid row/col\n    const [rowOffset, colOffset] = offsets[direction] || [0, 0];\n\n    let newGRow = gRow + rowOffset;\n    let newGCol = gCol + colOffset;\n    let newSetRow = setRow;\n    let newSetCol = setCol;\n\n    // 7) Check if crossing the local 8x8 sub-grid boundary\n    if (newGRow < 0) {\n      newGRow = 7;\n      newSetRow -= 1;\n    } else if (newGRow > 7) {\n      newGRow = 0;\n      newSetRow += 1;\n    }\n\n    if (newGCol < 0) {\n      newGCol = 7;\n      newSetCol -= 1;\n    } else if (newGCol > 7) {\n      newGCol = 0;\n      newSetCol += 1;\n    }\n\n    // 8) Verify we can still stay in bounds of the settlement array (0..7 for setRow/setCol)\n    if (newSetRow < 0 || newSetRow > 7 || newSetCol < 0 || newSetCol > 7) {\n      updateStatus(106); // \"Can't travel beyond frontier\"\n      return;\n    }\n\n    // 9) Fetch the new settlement if setRow/setCol changed\n    //    If your server has an endpoint like get-settlement-by-coords/:row/:col, do that:\n    const targetSettlementResponse = await axios.get(\n      `${API_BASE}/api/get-settlement-by-coords/${newSetRow}/${newSetCol}`\n    );\n    const targetSettlement = targetSettlementResponse.data;\n    if (!targetSettlement || !targetSettlement.grids) {\n      console.warn(\"Target settlement not found or invalid.\");\n      updateStatus(105);\n      return;\n    }\n \n    // 10) Find the sub-grid at newGRow/newGCol\n    const targetGrid = targetSettlement.grids[newGRow][newGCol];\n    console.log('targetGrid = ',targetGrid);\n    if (!targetGrid?.gridId) {\n      updateStatus(18);\n      return;\n    }\n\n    // 11) Get the entry position based on the direction traveled\n    let entryPosition;\n    const playerId = currentPlayer._id?.toString();\n    const gridId = currentPlayer.location?.g;\n    const playerData = playersInGridManager.getPlayersInGrid(gridId)?.[playerId];\n    const fromX = playerData?.position?.x ?? 0;\n    const fromY = playerData?.position?.y ?? 0;\n    console.log(\"Current player position:\", { x: fromX, y: fromY });\n    console.log(\"Direction:\", direction);\n\n    if ([\"E\", \"W\"].includes(direction)) {\n      // Preserve row (Y) when moving left/right\n      entryPosition = {\n        x: direction === \"E\" ? 0 : 63,\n        y: fromY\n      };\n      console.log(\"Preserving row (Y) for E/W direction:\", entryPosition);\n    } else if ([\"N\", \"S\"].includes(direction)) {\n      // Preserve column (X) when moving up/down\n      entryPosition = {\n        x: fromX,\n        y: direction === \"N\" ? 63 : 0\n      };\n      console.log(\"Preserving column (X) for N/S direction:\", entryPosition);\n    } else {\n      // Fallback to existing logic for diagonals and non-cardinal directions\n      entryPosition = getEntryPosition(direction);\n    }\n\n    // 12) Finally, update the player location\n    const newPlayerPosition = {\n      x: entryPosition.x,\n      y: entryPosition.y,\n      g: targetGrid.gridId,\n      s: targetSettlement._id,\n      f: frontierId,\n      gtype: targetGrid.gridType,\n      gridCoord: targetGrid.gridCoord,\n    };\n \n    await changePlayerLocation(\n      currentPlayer,\n      currentPlayer.location,   // fromLocation\n      newPlayerPosition,        // toLocation\n      setCurrentPlayer,\n      setGridId,\n      setGrid,\n      setTileTypes,\n      setResources,\n      TILE_SIZE,\n      closeAllPanels,\n      updateStatus,\n      bulkOperationContext,\n      masterResources,\n      strings,\n      masterTrophies\n    );\n\n    console.log(`Player moved to grid ID: ${targetGrid.gridId}`);\n  } catch (error) {\n    console.error(\"Error handling transit:\", error.message || error);\n    updateStatus(\"Error during travel.\");\n  }\n}\n\n// Example decode function (adjust to match your chosen gridCoord structure)\nfunction decodeCoord(coord) {\n  const str = coord.toString().padStart(8, '0');\n  return {\n    frontierTier:  parseInt(str.slice(0, 2), 10), // first 2 digits\n    frontierIndex: parseInt(str.slice(2, 4), 10), // next 2 digits\n    setRow:        parseInt(str.slice(4, 5), 10), // next 1 digit\n    setCol:        parseInt(str.slice(5, 6), 10), // next 1 digit\n    gRow:          parseInt(str.slice(6, 7), 10), // next 1 digit\n    gCol:          parseInt(str.slice(7, 8), 10), // last 1 digit\n  };\n}\n","/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),ca=require(\"scheduler\");function p(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\"Capture\",b)}\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\nvar ia=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qa(a,b,c,d){if(null===b||\"undefined\"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(ra,\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\nz.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for(\"react.element\"),wa=Symbol.for(\"react.portal\"),ya=Symbol.for(\"react.fragment\"),za=Symbol.for(\"react.strict_mode\"),Aa=Symbol.for(\"react.profiler\"),Ba=Symbol.for(\"react.provider\"),Ca=Symbol.for(\"react.context\"),Da=Symbol.for(\"react.forward_ref\"),Ea=Symbol.for(\"react.suspense\"),Fa=Symbol.for(\"react.suspense_list\"),Ga=Symbol.for(\"react.memo\"),Ha=Symbol.for(\"react.lazy\");Symbol.for(\"react.scope\");Symbol.for(\"react.debug_trace_mode\");\nvar Ia=Symbol.for(\"react.offscreen\");Symbol.for(\"react.legacy_hidden\");Symbol.for(\"react.cache\");Symbol.for(\"react.tracing_marker\");var Ja=Symbol.iterator;function Ka(a){if(null===a||\"object\"!==typeof a)return null;a=Ja&&a[Ja]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||\"\"}return\"\\n\"+La+a}var Na=!1;\nfunction Oa(a,b){if(!a||Na)return\"\";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\"string\"===typeof l.stack){for(var e=l.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\"\\n\"+e[g].replace(\" at new \",\" at \");a.displayName&&k.includes(\"<anonymous>\")&&(k=k.replace(\"<anonymous>\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Ma(a):\"\"}\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma(\"Lazy\");case 13:return Ma(\"Suspense\");case 19:return Ma(\"SuspenseList\");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return\"\"}}\nfunction Qa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ya:return\"Fragment\";case wa:return\"Portal\";case Aa:return\"Profiler\";case za:return\"StrictMode\";case Ea:return\"Suspense\";case Fa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||\"Context\")+\".Consumer\";case Ba:return(a._context.displayName||\"Context\")+\".Provider\";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\nb.name||\"\",a=\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||\"Memo\";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return\"Cache\";case 9:return(b.displayName||\"Context\")+\".Consumer\";case 10:return(b._context.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return a=b.render,a=a.displayName||a.name||\"\",b.displayName||(\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 5:return b;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return Qa(b);case 8:return b===za?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";\ncase 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 17:case 2:case 14:case 15:if(\"function\"===typeof b)return b.displayName||b.name||null;if(\"string\"===typeof b)return b}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"string\":case \"undefined\":return a;case \"object\":return a;default:return\"\"}}\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,\"checked\",b,!1)}\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?cb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction db(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction cb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var eb=Array.isArray;\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nfunction lb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?kb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar mb,nb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\"http://www.w3.org/2000/svg\"!==a.namespaceURI||\"innerHTML\"in a)a.innerHTML=b;else{mb=mb||document.createElement(\"div\");mb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(\"\"+b).trim():b+\"px\"}\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=rb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\"object\"!==typeof b.dangerouslySetInnerHTML||!(\"__html\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(p(62));}}\nfunction vb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,\"passive\",{get:function(){Lb=!0}});window.addEventListener(\"test\",Mb,Mb);window.removeEventListener(\"test\",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&\"function\"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction Sc(a,b){switch(a){case \"focusin\":case \"focusout\":Lc=null;break;case \"dragenter\":case \"dragleave\":Mc=null;break;case \"mouseover\":case \"mouseout\":Nc=null;break;case \"pointerover\":case \"pointerout\":Oc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Pc.delete(b.pointerId)}}\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction Uc(a,b,c,d,e){switch(b){case \"focusin\":return Lc=Tc(Lc,a,b,c,d,e),!0;case \"dragenter\":return Mc=Tc(Mc,a,b,c,d,e),!0;case \"mouseover\":return Nc=Tc(Nc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\nfunction jd(a){switch(a){case \"cancel\":case \"click\":case \"close\":case \"contextmenu\":case \"copy\":case \"cut\":case \"auxclick\":case \"dblclick\":case \"dragend\":case \"dragstart\":case \"drop\":case \"focusin\":case \"focusout\":case \"input\":case \"invalid\":case \"keydown\":case \"keypress\":case \"keyup\":case \"mousedown\":case \"mouseup\":case \"paste\":case \"pause\":case \"play\":case \"pointercancel\":case \"pointerdown\":case \"pointerup\":case \"ratechange\":case \"reset\":case \"resize\":case \"seeked\":case \"submit\":case \"touchcancel\":case \"touchend\":case \"touchstart\":case \"volumechange\":case \"change\":case \"selectionchange\":case \"textInput\":case \"compositionstart\":case \"compositionend\":case \"compositionupdate\":case \"beforeblur\":case \"afterblur\":case \"beforeinput\":case \"blur\":case \"fullscreenchange\":case \"focus\":case \"hashchange\":case \"popstate\":case \"select\":case \"selectstart\":return 1;case \"drag\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"mousemove\":case \"mouseout\":case \"mouseover\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"scroll\":case \"toggle\":case \"touchmove\":case \"wheel\":case \"mouseenter\":case \"mouseleave\":case \"pointerenter\":case \"pointerleave\":return 4;\ncase \"message\":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\nfunction od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&\"CompositionEvent\"in window,be=null;ia&&\"documentMode\"in document&&(be=document.documentMode);var ce=ia&&\"TextEvent\"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge;\nfunction Ie(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Pe=ia&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var We={animationend:Ve(\"Animation\",\"AnimationEnd\"),animationiteration:Ve(\"Animation\",\"AnimationIteration\"),animationstart:Ve(\"Animation\",\"AnimationStart\"),transitionend:Ve(\"Transition\",\"TransitionEnd\")},Xe={},Ye={};\nia&&(Ye=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),\"TransitionEvent\"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze(\"animationend\"),af=Ze(\"animationiteration\"),bf=Ze(\"animationstart\"),cf=Ze(\"transitionend\"),df=new Map,ef=\"abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,\"on\"+kf)}ff($e,\"onAnimationEnd\");ff(af,\"onAnimationIteration\");ff(bf,\"onAnimationStart\");ff(\"dblclick\",\"onDoubleClick\");ff(\"focusin\",\"onFocus\");ff(\"focusout\",\"onBlur\");ff(cf,\"onTransitionEnd\");ha(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);ha(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ha(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);\nha(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);fa(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));fa(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));fa(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);fa(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));fa(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));\nfa(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var lf=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),mf=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(lf));\nfunction nf(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+\"__bubble\";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf=\"_reactListening\"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){\"selectionchange\"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf(\"selectionchange\",!1,b))}}\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":n=\"focus\";k=Fd;break;case \"focusout\":n=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var t=0!==(b&4),J=!t&&\"scroll\"===a,x=t?null!==h?h+\"Capture\":null:h;t=[];for(var w=d,u;null!==\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F=\"onMouseLeave\";x=\"onMouseEnter\";w=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)t=Td,F=\"onPointerLeave\",x=\"onPointerEnter\",w=\"pointer\";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+\"leave\",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+\"enter\",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);\"focusout\"===a&&(xa=h._wrapperState)&&\nxa.controlled&&\"number\"===h.type&&cb(h,\"number\",h.value)}xa=d?ue(d):window;switch(a){case \"focusin\":if(me(xa)||\"true\"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case \"compositionstart\":var ba=\"onCompositionStart\";break b;case \"compositionend\":ba=\"onCompositionEnd\";\nbreak b;case \"compositionupdate\":ba=\"onCompositionUpdate\";break b}ba=void 0}else ie?ge(a,c)&&(ba=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(ba=\"onCompositionStart\");ba&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==ba?\"onCompositionEnd\"===ba&&ie&&($a=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),\n0<d.length&&(e=new Ld(\"onBeforeInput\",\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return(\"string\"===typeof a?a:\"\"+a).replace(xf,\"\\n\").replace(yf,\"\")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\nvar Cf=null,Df=null;function Ef(a,b){return\"textarea\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar Ff=\"function\"===typeof setTimeout?setTimeout:void 0,Gf=\"function\"===typeof clearTimeout?clearTimeout:void 0,Hf=\"function\"===typeof Promise?Promise:void 0,Jf=\"function\"===typeof queueMicrotask?queueMicrotask:\"undefined\"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,\"/$\"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else\"$\"!==c&&\"$?\"!==c&&\"$!\"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if(\"$\"===b||\"$!\"===b||\"$?\"===b)break;if(\"/$\"===b)return null}}return a}\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of=\"__reactFiber$\"+Nf,Pf=\"__reactProps$\"+Nf,uf=\"__reactContainer$\"+Nf,of=\"__reactEvents$\"+Nf,Qf=\"__reactListeners$\"+Nf,Rf=\"__reactHandles$\"+Nf;\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||\"Unknown\",e));return A({},c,d)}\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg=\"\";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType=\"DELETED\";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b=\"head\"!==b&&\"body\"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}yg=\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;\nfunction Lg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if(\"string\"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\nfunction Mg(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,\"[object Object]\"===a?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":a));}function Ng(a){var b=a._init;return b(a._payload)}\nfunction Og(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Pg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Qg(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||\"object\"===typeof f&&null!==f&&f.$$typeof===Ha&&Ng(f)===b.type))return d=e(b,c.props),d.ref=Lg(a,b,c),d.return=a,d;d=Rg(c.type,c.key,c.props,null,a.mode,d);d.ref=Lg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=Sg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Tg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if(\"string\"===typeof b&&\"\"!==b||\"number\"===typeof b)return b=Qg(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=Rg(b.type,b.key,b.props,null,a.mode,c),\nc.ref=Lg(a,null,b),c.return=a,c;case wa:return b=Sg(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Tg(b,a.mode,c,null),b.return=a,b;Mg(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c&&\"\"!==c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);Mg(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d&&\"\"!==d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);Mg(b,d)}return null}\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if(\"function\"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||\"object\"===typeof k&&null!==k&&k.$$typeof===Ha&&Ng(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=Lg(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Tg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Rg(f.type,f.key,f.props,null,a.mode,h),h.ref=Lg(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=Sg(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);Mg(a,f)}return\"string\"===typeof f&&\"\"!==f||\"number\"===typeof f?(f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\n(c(a,d),d=Qg(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Ug=Og(!0),Vg=Og(!1),Wg=Uf(null),Xg=null,Yg=null,Zg=null;function $g(){Zg=Yg=Xg=null}function ah(a){var b=Wg.current;E(Wg);a._currentValue=b}function bh(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}\nfunction ch(a,b){Xg=a;Zg=Yg=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(dh=!0),a.firstContext=null)}function eh(a){var b=a._currentValue;if(Zg!==a)if(a={context:a,memoizedValue:b,next:null},null===Yg){if(null===Xg)throw Error(p(308));Yg=a;Xg.dependencies={lanes:0,firstContext:a}}else Yg=Yg.next=a;return b}var fh=null;function gh(a){null===fh?fh=[a]:fh.push(a)}\nfunction hh(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,gh(b)):(c.next=e.next,e.next=c);b.interleaved=c;return ih(a,d)}function ih(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var jh=!1;function kh(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\nfunction lh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function mh(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction nh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return ih(a,c)}e=d.interleaved;null===e?(b.next=b,gh(d)):(b.next=e.next,e.next=b);d.interleaved=b;return ih(a,c)}function oh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nfunction ph(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction qh(a,b,c,d){var e=a.updateQueue;jh=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if(\"function\"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r=\"function\"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:jh=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);rh|=g;a.lanes=g;a.memoizedState=q}}\nfunction sh(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(p(191,e));e.call(d)}}}var th={},uh=Uf(th),vh=Uf(th),wh=Uf(th);function xh(a){if(a===th)throw Error(p(174));return a}\nfunction yh(a,b){G(wh,b);G(vh,a);G(uh,th);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(uh);G(uh,b)}function zh(){E(uh);E(vh);E(wh)}function Ah(a){xh(wh.current);var b=xh(uh.current);var c=lb(b,a.type);b!==c&&(G(vh,a),G(uh,c))}function Bh(a){vh.current===a&&(E(uh),E(vh))}var L=Uf(0);\nfunction Ch(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Dh=[];\nfunction Eh(){for(var a=0;a<Dh.length;a++)Dh[a]._workInProgressVersionPrimary=null;Dh.length=0}var Fh=ua.ReactCurrentDispatcher,Gh=ua.ReactCurrentBatchConfig,Hh=0,M=null,N=null,O=null,Ih=!1,Jh=!1,Kh=0,Lh=0;function P(){throw Error(p(321));}function Mh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Nh(a,b,c,d,e,f){Hh=f;M=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Fh.current=null===a||null===a.memoizedState?Oh:Ph;a=c(d,e);if(Jh){f=0;do{Jh=!1;Kh=0;if(25<=f)throw Error(p(301));f+=1;O=N=null;b.updateQueue=null;Fh.current=Qh;a=c(d,e)}while(Jh)}Fh.current=Rh;b=null!==N&&null!==N.next;Hh=0;O=N=M=null;Ih=!1;if(b)throw Error(p(300));return a}function Sh(){var a=0!==Kh;Kh=0;return a}\nfunction Th(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===O?M.memoizedState=O=a:O=O.next=a;return O}function Uh(){if(null===N){var a=M.alternate;a=null!==a?a.memoizedState:null}else a=N.next;var b=null===O?M.memoizedState:O.next;if(null!==b)O=b,N=a;else{if(null===a)throw Error(p(310));N=a;a={memoizedState:N.memoizedState,baseState:N.baseState,baseQueue:N.baseQueue,queue:N.queue,next:null};null===O?M.memoizedState=O=a:O=O.next=a}return O}\nfunction Vh(a,b){return\"function\"===typeof b?b(a):b}\nfunction Wh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=N,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Hh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;M.lanes|=m;rh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(dh=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,M.lanes|=f,rh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\nfunction Xh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(dh=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function Yh(){}\nfunction Zh(a,b){var c=M,d=Uh(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,dh=!0);d=d.queue;$h(ai.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==O&&O.memoizedState.tag&1){c.flags|=2048;bi(9,ci.bind(null,c,d,e,b),void 0,null);if(null===Q)throw Error(p(349));0!==(Hh&30)||di(c,b,e)}return e}function di(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\nfunction ci(a,b,c,d){b.value=c;b.getSnapshot=d;ei(b)&&fi(a)}function ai(a,b,c){return c(function(){ei(b)&&fi(a)})}function ei(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function fi(a){var b=ih(a,1);null!==b&&gi(b,a,1,-1)}\nfunction hi(a){var b=Th();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Vh,lastRenderedState:a};b.queue=a;a=a.dispatch=ii.bind(null,M,a);return[b.memoizedState,a]}\nfunction bi(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function ji(){return Uh().memoizedState}function ki(a,b,c,d){var e=Th();M.flags|=a;e.memoizedState=bi(1|b,c,void 0,void 0===d?null:d)}\nfunction li(a,b,c,d){var e=Uh();d=void 0===d?null:d;var f=void 0;if(null!==N){var g=N.memoizedState;f=g.destroy;if(null!==d&&Mh(d,g.deps)){e.memoizedState=bi(b,c,f,d);return}}M.flags|=a;e.memoizedState=bi(1|b,c,f,d)}function mi(a,b){return ki(8390656,8,a,b)}function $h(a,b){return li(2048,8,a,b)}function ni(a,b){return li(4,2,a,b)}function oi(a,b){return li(4,4,a,b)}\nfunction pi(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function qi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return li(4,4,pi.bind(null,b,a),c)}function ri(){}function si(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction ti(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function ui(a,b,c){if(0===(Hh&21))return a.baseState&&(a.baseState=!1,dh=!0),a.memoizedState=c;He(c,b)||(c=yc(),M.lanes|=c,rh|=c,a.baseState=!0);return b}function vi(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Gh.transition;Gh.transition={};try{a(!1),b()}finally{C=c,Gh.transition=d}}function wi(){return Uh().memoizedState}\nfunction xi(a,b,c){var d=yi(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,c);else if(c=hh(a,b,c,d),null!==c){var e=R();gi(c,a,d,e);Bi(c,b,d)}}\nfunction ii(a,b,c){var d=yi(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,gh(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=hh(a,b,e,d);null!==c&&(e=R(),gi(c,a,d,e),Bi(c,b,d))}}\nfunction zi(a){var b=a.alternate;return a===M||null!==b&&b===M}function Ai(a,b){Jh=Ih=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Bi(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nvar Rh={readContext:eh,useCallback:P,useContext:P,useEffect:P,useImperativeHandle:P,useInsertionEffect:P,useLayoutEffect:P,useMemo:P,useReducer:P,useRef:P,useState:P,useDebugValue:P,useDeferredValue:P,useTransition:P,useMutableSource:P,useSyncExternalStore:P,useId:P,unstable_isNewReconciler:!1},Oh={readContext:eh,useCallback:function(a,b){Th().memoizedState=[a,void 0===b?null:b];return a},useContext:eh,useEffect:mi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ki(4194308,\n4,pi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ki(4194308,4,a,b)},useInsertionEffect:function(a,b){return ki(4,2,a,b)},useMemo:function(a,b){var c=Th();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Th();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=xi.bind(null,M,a);return[d.memoizedState,a]},useRef:function(a){var b=\nTh();a={current:a};return b.memoizedState=a},useState:hi,useDebugValue:ri,useDeferredValue:function(a){return Th().memoizedState=a},useTransition:function(){var a=hi(!1),b=a[0];a=vi.bind(null,a[1]);Th().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=M,e=Th();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===Q)throw Error(p(349));0!==(Hh&30)||di(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;mi(ai.bind(null,d,\nf,a),[a]);d.flags|=2048;bi(9,ci.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=Th(),b=Q.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=\":\"+b+\"R\"+c;c=Kh++;0<c&&(b+=\"H\"+c.toString(32));b+=\":\"}else c=Lh++,b=\":\"+b+\"r\"+c.toString(32)+\":\";return a.memoizedState=b},unstable_isNewReconciler:!1},Ph={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Wh,useRef:ji,useState:function(){return Wh(Vh)},\nuseDebugValue:ri,useDeferredValue:function(a){var b=Uh();return ui(b,N.memoizedState,a)},useTransition:function(){var a=Wh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1},Qh={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Xh,useRef:ji,useState:function(){return Xh(Vh)},useDebugValue:ri,useDeferredValue:function(a){var b=Uh();return null===\nN?b.memoizedState=a:ui(b,N.memoizedState,a)},useTransition:function(){var a=Xh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1};function Ci(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}function Di(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar Ei={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=R(),d=\nyi(a),e=mh(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=nh(a,e,d);null!==b&&(gi(b,a,d,c),oh(b,a,d))}};function Fi(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\nfunction Gi(a,b,c){var d=!1,e=Vf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=eh(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Ei;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Hi(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Ei.enqueueReplaceState(b,b.state,null)}\nfunction Ii(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs={};kh(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=eh(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Di(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\n\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Ei.enqueueReplaceState(e,e.state,null),qh(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4194308)}function Ji(a,b){try{var c=\"\",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e,digest:null}}\nfunction Ki(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}function Li(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Mi=\"function\"===typeof WeakMap?WeakMap:Map;function Ni(a,b,c){c=mh(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Oi||(Oi=!0,Pi=d);Li(a,b)};return c}\nfunction Qi(a,b,c){c=mh(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Li(a,b)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){Li(a,b);\"function\"!==typeof d&&(null===Ri?Ri=new Set([this]):Ri.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nfunction Si(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Mi;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ti.bind(null,a,b,c),b.then(a,a))}function Ui(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\nfunction Vi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=mh(-1,1),b.tag=2,nh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Wi=ua.ReactCurrentOwner,dh=!1;function Xi(a,b,c,d){b.child=null===a?Vg(b,null,c,d):Ug(b,a.child,c,d)}\nfunction Yi(a,b,c,d,e){c=c.render;var f=b.ref;ch(b,e);d=Nh(a,b,c,d,f,e);c=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&c&&vg(b);b.flags|=1;Xi(a,b,d,e);return b.child}\nfunction $i(a,b,c,d,e){if(null===a){var f=c.type;if(\"function\"===typeof f&&!aj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,bj(a,b,f,d,e);a=Rg(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return Zi(a,b,e)}b.flags|=1;a=Pg(f,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction bj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(dh=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(dh=!0);else return b.lanes=a.lanes,Zi(a,b,e)}return cj(a,b,c,d,e)}\nfunction dj(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(ej,fj),fj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(ej,fj),fj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(ej,fj);fj|=d}else null!==\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(ej,fj),fj|=d;Xi(a,b,e,c);return b.child}function gj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function cj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);ch(b,e);c=Nh(a,b,c,d,f,e);d=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&d&&vg(b);b.flags|=1;Xi(a,b,c,e);return b.child}\nfunction hj(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;ch(b,e);if(null===b.stateNode)ij(a,b),Gi(b,c,d),Ii(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=eh(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;q||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||\n(h!==d||k!==l)&&Hi(b,g,d,l);jh=!1;var r=b.memoizedState;g.state=r;qh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||jh?(\"function\"===typeof m&&(Di(b,c,m,d),k=b.memoizedState),(h=jh||Fi(b,c,h,d,r,k,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.flags|=4194308)):\n(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;lh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Ci(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=eh(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m=\"function\"===typeof y||\"function\"===typeof g.getSnapshotBeforeUpdate)||\n\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&Hi(b,g,d,k);jh=!1;r=b.memoizedState;g.state=r;qh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||jh?(\"function\"===typeof y&&(Di(b,c,y,d),n=b.memoizedState),(l=jh||Fi(b,c,l,d,r,n,k)||!1)?(m||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&\ng.UNSAFE_componentWillUpdate(d,n,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\na.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return jj(a,b,c,d,f,e)}\nfunction jj(a,b,c,d,e,f){gj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),Zi(a,b,f);d=b.stateNode;Wi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Ug(b,a.child,null,f),b.child=Ug(b,null,h,f)):Xi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function kj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);yh(a,b.containerInfo)}\nfunction lj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Xi(a,b,c,d);return b.child}var mj={dehydrated:null,treeContext:null,retryLane:0};function nj(a){return{baseLanes:a,cachePool:null,transitions:null}}\nfunction oj(a,b,c){var d=b.pendingProps,e=L.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(L,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:\"$!\"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:\"hidden\",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\ng):f=pj(g,d,0,null),a=Tg(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=nj(c),b.memoizedState=mj,a):qj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return rj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:\"hidden\",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=Pg(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=Pg(h,f):(f=Tg(f,g,c,null),f.flags|=2);f.return=\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?nj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=mj;return d}f=a.child;a=f.sibling;d=Pg(f,{mode:\"visible\",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\nfunction qj(a,b){b=pj({mode:\"visible\",children:b},a.mode,0,null);b.return=a;return a.child=b}function sj(a,b,c,d){null!==d&&Jg(d);Ug(b,a.child,null,c);a=qj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\nfunction rj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Ki(Error(p(422))),sj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=pj({mode:\"visible\",children:d.children},e,0,null);f=Tg(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Ug(b,a.child,null,g);b.child.memoizedState=nj(g);b.memoizedState=mj;return f}if(0===(b.mode&1))return sj(a,b,g,null);if(\"$!\"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Ki(f,d,void 0);return sj(a,b,g,d)}h=0!==(g&a.childLanes);if(dh||h){d=Q;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\n0!==e&&e!==f.retryLane&&(f.retryLane=e,ih(a,e),gi(d,a,e,-1))}tj();d=Ki(Error(p(421)));return sj(a,b,g,d)}if(\"$?\"===e.data)return b.flags|=128,b.child=a.child,b=uj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=qj(b,d.children);b.flags|=4096;return b}function vj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);bh(a.return,b,c)}\nfunction wj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\nfunction xj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Xi(a,b,d.children,c);d=L.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&vj(a,c,b);else if(19===a.tag)vj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(L,d);if(0===(b.mode&1))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Ch(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);wj(b,!1,e,c,f);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Ch(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}wj(b,!0,c,null,f);break;case \"together\":wj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\nfunction ij(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function Zi(a,b,c){null!==a&&(b.dependencies=a.dependencies);rh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=Pg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Pg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\nfunction yj(a,b,c){switch(b.tag){case 3:kj(b);Ig();break;case 5:Ah(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:yh(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Wg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(L,L.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return oj(a,b,c);G(L,L.current&1);a=Zi(a,b,c);return null!==a?a.sibling:null}G(L,L.current&1);break;case 19:d=0!==(c&\nb.childLanes);if(0!==(a.flags&128)){if(d)return xj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(L,L.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,dj(a,b,c)}return Zi(a,b,c)}var zj,Aj,Bj,Cj;\nzj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Aj=function(){};\nBj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;xh(uh.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"select\":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\n(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\nc)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ea.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&D(\"scroll\",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Cj=function(a,b,c,d){c!==d&&(b.flags|=4)};\nfunction Dj(a,b){if(!I)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\nfunction Ej(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;zh();E(Wf);E(H);Eh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Fj(zg),zg=null));Aj(a,b);S(b);return null;case 5:Bh(b);var e=xh(wh.current);\nc=b.type;if(null!==a&&null!=b.stateNode)Bj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case \"dialog\":D(\"cancel\",d);D(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",d);break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],d);break;case \"source\":D(\"error\",d);break;case \"img\":case \"image\":case \"link\":D(\"error\",\nd);D(\"load\",d);break;case \"details\":D(\"toggle\",d);break;case \"input\":Za(d,f);D(\"invalid\",d);break;case \"select\":d._wrapperState={wasMultiple:!!f.multiple};D(\"invalid\",d);break;case \"textarea\":hb(d,f),D(\"invalid\",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\nh,a),e=[\"children\",\"\"+h]):ea.hasOwnProperty(g)&&null!=h&&\"onScroll\"===g&&D(\"scroll\",d)}switch(c){case \"input\":Va(d);db(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;\"http://www.w3.org/1999/xhtml\"===a&&(a=kb(c));\"http://www.w3.org/1999/xhtml\"===a?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\n\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;zj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case \"dialog\":D(\"cancel\",a);D(\"close\",a);e=d;break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case \"source\":D(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":D(\"error\",\na);D(\"load\",a);e=d;break;case \"details\":D(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);D(\"invalid\",a);break;case \"option\":e=d;break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D(\"invalid\",a);break;case \"textarea\":hb(a,d);e=gb(a,d);D(\"invalid\",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?sb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==\nc||\"\"!==k)&&ob(a,k):\"number\"===typeof k&&ob(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ea.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&D(\"scroll\",a):null!=k&&ta(a,f,k,g))}switch(c){case \"input\":Va(a);db(a,d,!1);break;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\n!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case \"button\":case \"input\":case \"select\":case \"textarea\":d=!!d.autoFocus;break a;case \"img\":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Cj(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(p(166));c=xh(wh.current);xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(L);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Fj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(L.current&1)?0===T&&(T=3):tj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return zh(),\nAj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return ah(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(L);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Dj(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Ch(a);if(null!==g){b.flags|=128;Dj(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(L,L.current&1|2);return b.child}a=\na.sibling}null!==f.tail&&B()>Gj&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304)}else{if(!d)if(a=Ch(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Dj(f,!0),null===f.tail&&\"hidden\"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Gj&&1073741824!==c&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=L.current,G(L,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Hj(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(fj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\nfunction Ij(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return zh(),E(Wf),E(H),Eh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Bh(b),null;case 13:E(L);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(L),null;case 4:return zh(),null;case 10:return ah(b.type._context),null;case 22:case 23:return Hj(),\nnull;case 24:return null;default:return null}}var Jj=!1,U=!1,Kj=\"function\"===typeof WeakSet?WeakSet:Set,V=null;function Lj(a,b){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Mj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Nj=!1;\nfunction Oj(a,b){Cf=dd;a=Me();if(Ne(a)){if(\"selectionStart\"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Ci(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent=\"\":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Nj;Nj=!1;return n}\nfunction Pj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Mj(b,c,f)}e=e.next}while(e!==d)}}function Qj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Rj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}\"function\"===typeof b?b(a):b.current=a}}\nfunction Sj(a){var b=a.alternate;null!==b&&(a.alternate=null,Sj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Tj(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Uj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Tj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\nfunction Vj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Vj(a,b,c),a=a.sibling;null!==a;)Vj(a,b,c),a=a.sibling}\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}var X=null,Xj=!1;function Yj(a,b,c){for(c=c.child;null!==c;)Zj(a,b,c),c=c.sibling}\nfunction Zj(a,b,c){if(lc&&\"function\"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Lj(c,b);case 6:var d=X,e=Xj;X=null;Yj(a,b,c);X=d;Xj=e;null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Xj;X=c.stateNode.containerInfo;Xj=!0;\nYj(a,b,c);X=d;Xj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Mj(c,b,g):0!==(f&4)&&Mj(c,b,g));e=e.next}while(e!==d)}Yj(a,b,c);break;case 1:if(!U&&(Lj(c,b),d=c.stateNode,\"function\"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Yj(a,b,c);break;case 21:Yj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\nc.memoizedState,Yj(a,b,c),U=d):Yj(a,b,c);break;default:Yj(a,b,c)}}function ak(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Kj);b.forEach(function(b){var d=bk.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction ck(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Xj=!1;break a;case 3:X=h.stateNode.containerInfo;Xj=!0;break a;case 4:X=h.stateNode.containerInfo;Xj=!0;break a}h=h.return}if(null===X)throw Error(p(160));Zj(f,g,e);X=null;Xj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)dk(b,a),b=b.sibling}\nfunction dk(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:ck(b,a);ek(a);if(d&4){try{Pj(3,a,a.return),Qj(3,a)}catch(t){W(a,a.return,t)}try{Pj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);break;case 5:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,\"\")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\na.updateQueue=null;if(null!==k)try{\"input\"===h&&\"radio\"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];\"style\"===m?sb(e,q):\"dangerouslySetInnerHTML\"===m?nb(e,q):\"children\"===m?ob(e,q):ta(e,m,q,l)}switch(h){case \"input\":bb(e,f);break;case \"textarea\":ib(e,f);break;case \"select\":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:\"\",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:ck(b,a);ek(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:ck(b,a);ek(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:ck(b,a);ek(a);break;case 13:ck(b,a);ek(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\nnull!==e.alternate&&null!==e.alternate.memoizedState||(fk=B()));d&4&&ak(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,ck(b,a),U=l):ck(b,a);ek(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Pj(4,r,r.return);break;case 1:Lj(r,r.return);var n=r.stateNode;if(\"function\"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Lj(r,r.return);break;case 22:if(null!==r.memoizedState){gk(q);continue}}null!==y?(y.return=r,V=y):gk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty(\"display\")?k.display:null,h.style.display=\nrb(\"display\",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?\"\":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:ck(b,a);ek(a);d&4&&ak(a);break;case 21:break;default:ck(b,\na),ek(a)}}function ek(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Tj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,\"\"),d.flags&=-33);var f=Uj(a);Wj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Uj(a);Vj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function hk(a,b,c){V=a;ik(a,b,c)}\nfunction ik(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Jj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Jj;var l=U;Jj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?jk(e):null!==k?(k.return=g,V=k):jk(e);for(;null!==f;)V=f,ik(f,b,c),f=f.sibling;V=e;Jj=h;U=l}kk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):kk(a,b,c)}}\nfunction kk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Qj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Ci(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&sh(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\nb.child.stateNode;break;case 1:c=b.child.stateNode}sh(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case \"button\":case \"input\":case \"select\":case \"textarea\":k.autoFocus&&c.focus();break;case \"img\":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\ndefault:throw Error(p(163));}U||b.flags&512&&Rj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function gk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\nfunction jk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Qj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if(\"function\"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Rj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Rj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\nvar lk=Math.ceil,mk=ua.ReactCurrentDispatcher,nk=ua.ReactCurrentOwner,ok=ua.ReactCurrentBatchConfig,K=0,Q=null,Y=null,Z=0,fj=0,ej=Uf(0),T=0,pk=null,rh=0,qk=0,rk=0,sk=null,tk=null,fk=0,Gj=Infinity,uk=null,Oi=!1,Pi=null,Ri=null,vk=!1,wk=null,xk=0,yk=0,zk=null,Ak=-1,Bk=0;function R(){return 0!==(K&6)?B():-1!==Ak?Ak:Ak=B()}\nfunction yi(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Bk&&(Bk=yc()),Bk;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function gi(a,b,c,d){if(50<yk)throw yk=0,zk=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==Q)a===Q&&(0===(K&2)&&(qk|=c),4===T&&Ck(a,Z)),Dk(a,d),1===c&&0===K&&0===(b.mode&1)&&(Gj=B()+500,fg&&jg())}\nfunction Dk(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===Q?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Ek.bind(null,a)):hg(Ek.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Fk(c,Gk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\nfunction Gk(a,b){Ak=-1;Bk=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Hk()&&a.callbackNode!==c)return null;var d=uc(a,a===Q?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Ik(a,d);else{b=d;var e=K;K|=2;var f=Jk();if(Q!==a||Z!==b)uk=null,Gj=B()+500,Kk(a,b);do try{Lk();break}catch(h){Mk(a,h)}while(1);$g();mk.current=f;K=e;null!==Y?b=0:(Q=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Nk(a,e)));if(1===b)throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;if(6===b)Ck(a,d);\nelse{e=a.current.alternate;if(0===(d&30)&&!Ok(e)&&(b=Ik(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Nk(a,f))),1===b))throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Pk(a,tk,uk);break;case 3:Ck(a,d);if((d&130023424)===d&&(b=fk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){R();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),b);break}Pk(a,tk,uk);break;case 4:Ck(a,d);if((d&4194240)===\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*lk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),d);break}Pk(a,tk,uk);break;case 5:Pk(a,tk,uk);break;default:throw Error(p(329));}}}Dk(a,B());return a.callbackNode===c?Gk.bind(null,a):null}\nfunction Nk(a,b){var c=sk;a.current.memoizedState.isDehydrated&&(Kk(a,b).flags|=256);a=Ik(a,b);2!==a&&(b=tk,tk=c,null!==b&&Fj(b));return a}function Fj(a){null===tk?tk=a:tk.push.apply(tk,a)}\nfunction Ok(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\nfunction Ck(a,b){b&=~rk;b&=~qk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Ek(a){if(0!==(K&6))throw Error(p(327));Hk();var b=uc(a,0);if(0===(b&1))return Dk(a,B()),null;var c=Ik(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Nk(a,d))}if(1===c)throw c=pk,Kk(a,0),Ck(a,b),Dk(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Pk(a,tk,uk);Dk(a,B());return null}\nfunction Qk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Gj=B()+500,fg&&jg())}}function Rk(a){null!==wk&&0===wk.tag&&0===(K&6)&&Hk();var b=K;K|=1;var c=ok.transition,d=C;try{if(ok.transition=null,C=1,a)return a()}finally{C=d,ok.transition=c,K=b,0===(K&6)&&jg()}}function Hj(){fj=ej.current;E(ej)}\nfunction Kk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:zh();E(Wf);E(H);Eh();break;case 5:Bh(d);break;case 4:zh();break;case 13:E(L);break;case 19:E(L);break;case 10:ah(d.type._context);break;case 22:case 23:Hj()}c=c.return}Q=a;Y=a=Pg(a.current,null);Z=fj=b;T=0;pk=null;rk=qk=rh=0;tk=sk=null;if(null!==fh){for(b=\n0;b<fh.length;b++)if(c=fh[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}fh=null}return a}\nfunction Mk(a,b){do{var c=Y;try{$g();Fh.current=Rh;if(Ih){for(var d=M.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Ih=!1}Hh=0;O=N=M=null;Jh=!1;Kh=0;nk.current=null;if(null===c||null===c.return){T=1;pk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Ui(g);if(null!==y){y.flags&=-257;Vi(y,g,h,f,b);y.mode&1&&Si(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Si(f,l,b);tj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Ui(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Vi(J,g,h,f,b);Jg(Ji(k,h));break a}}f=k=Ji(k,h);4!==T&&(T=2);null===sk?sk=[f]:sk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\nb&=-b;f.lanes|=b;var x=Ni(f,k,b);ph(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&(\"function\"===typeof w.getDerivedStateFromError||null!==u&&\"function\"===typeof u.componentDidCatch&&(null===Ri||!Ri.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Qi(f,h,b);ph(f,F);break a}}f=f.return}while(null!==f)}Sk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Jk(){var a=mk.current;mk.current=Rh;return null===a?Rh:a}\nfunction tj(){if(0===T||3===T||2===T)T=4;null===Q||0===(rh&268435455)&&0===(qk&268435455)||Ck(Q,Z)}function Ik(a,b){var c=K;K|=2;var d=Jk();if(Q!==a||Z!==b)uk=null,Kk(a,b);do try{Tk();break}catch(e){Mk(a,e)}while(1);$g();K=c;mk.current=d;if(null!==Y)throw Error(p(261));Q=null;Z=0;return T}function Tk(){for(;null!==Y;)Uk(Y)}function Lk(){for(;null!==Y&&!cc();)Uk(Y)}function Uk(a){var b=Vk(a.alternate,a,fj);a.memoizedProps=a.pendingProps;null===b?Sk(a):Y=b;nk.current=null}\nfunction Sk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Ej(c,b,fj),null!==c){Y=c;return}}else{c=Ij(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Pk(a,b,c){var d=C,e=ok.transition;try{ok.transition=null,C=1,Wk(a,b,c,d)}finally{ok.transition=e,C=d}return null}\nfunction Wk(a,b,c,d){do Hk();while(null!==wk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===Q&&(Y=Q=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||vk||(vk=!0,Fk(hc,function(){Hk();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=ok.transition;ok.transition=null;\nvar g=C;C=1;var h=K;K|=4;nk.current=null;Oj(a,c);dk(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;hk(c,a,e);dc();K=h;C=g;ok.transition=f}else a.current=c;vk&&(vk=!1,wk=a,xk=e);f=a.pendingLanes;0===f&&(Ri=null);mc(c.stateNode,d);Dk(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Oi)throw Oi=!1,a=Pi,Pi=null,a;0!==(xk&1)&&0!==a.tag&&Hk();f=a.pendingLanes;0!==(f&1)?a===zk?yk++:(yk=0,zk=a):yk=0;jg();return null}\nfunction Hk(){if(null!==wk){var a=Dc(xk),b=ok.transition,c=C;try{ok.transition=null;C=16>a?16:a;if(null===wk)var d=!1;else{a=wk;wk=null;xk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Pj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Sj(m);if(m===\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Pj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Qj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&\"function\"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,ok.transition=b}}return!1}function Xk(a,b,c){b=Ji(c,b);b=Ni(a,b,1);a=nh(a,b,1);b=R();null!==a&&(Ac(a,1,b),Dk(a,b))}\nfunction W(a,b,c){if(3===a.tag)Xk(a,a,c);else for(;null!==b;){if(3===b.tag){Xk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if(\"function\"===typeof b.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Ri||!Ri.has(d))){a=Ji(c,a);a=Qi(b,a,1);b=nh(b,a,1);a=R();null!==b&&(Ac(b,1,a),Dk(b,a));break}}b=b.return}}\nfunction Ti(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=R();a.pingedLanes|=a.suspendedLanes&c;Q===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-fk?Kk(a,0):rk|=c);Dk(a,b)}function Yk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=R();a=ih(a,b);null!==a&&(Ac(a,b,c),Dk(a,c))}function uj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Yk(a,c)}\nfunction bk(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Yk(a,c)}var Vk;\nVk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)dh=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return dh=!1,yj(a,b,c);dh=0!==(a.flags&131072)?!0:!1}else dh=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;ij(a,b);a=b.pendingProps;var e=Yf(b,H.current);ch(b,c);e=Nh(null,b,d,a,e,c);var f=Sh();b.flags|=1;\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,kh(b),e.updater=Ei,b.stateNode=e,e._reactInternals=b,Ii(b,d,a,c),b=jj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Xi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{ij(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=Zk(d);a=Ci(d,a);switch(e){case 0:b=cj(null,b,d,a,c);break a;case 1:b=hj(null,b,d,a,c);break a;case 11:b=Yi(null,b,d,a,c);break a;case 14:b=$i(null,b,d,Ci(d.type,a),c);break a}throw Error(p(306,\nd,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),cj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),hj(a,b,d,e,c);case 3:a:{kj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;lh(a,b);qh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\nf,b.memoizedState=f,b.flags&256){e=Ji(Error(p(423)),b);b=lj(a,b,d,c,e);break a}else if(d!==e){e=Ji(Error(p(424)),b);b=lj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Vg(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=Zi(a,b,c);break a}Xi(a,b,d,c)}b=b.child}return b;case 5:return Ah(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\ngj(a,b),Xi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return oj(a,b,c);case 4:return yh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Ug(b,null,d,c):Xi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),Yi(a,b,d,e,c);case 7:return Xi(a,b,b.pendingProps,c),b.child;case 8:return Xi(a,b,b.pendingProps.children,c),b.child;case 12:return Xi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\ng=e.value;G(Wg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=Zi(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=mh(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);bh(f.return,\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);bh(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Xi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,ch(b,c),e=eh(e),d=d(e),b.flags|=1,Xi(a,b,d,c),\nb.child;case 14:return d=b.type,e=Ci(d,b.pendingProps),e=Ci(d.type,e),$i(a,b,d,e,c);case 15:return bj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),ij(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,ch(b,c),Gi(b,d,e),Ii(b,d,e,c),jj(null,b,d,!0,a,c);case 19:return xj(a,b,c);case 22:return dj(a,b,c)}throw Error(p(156,b.tag));};function Fk(a,b){return ac(a,b)}\nfunction $k(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new $k(a,b,c,d)}function aj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction Zk(a){if(\"function\"===typeof a)return aj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\nfunction Pg(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Rg(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)aj(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ya:return Tg(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return pj(c,e,f,b);default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,\"\"));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Tg(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function pj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function Qg(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\nfunction Sg(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction al(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\nnull}function bl(a,b,c,d,e,f,g,h,k){a=new al(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};kh(f);return a}function cl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction dl(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\nfunction el(a,b,c,d,e,f,g,h,k){a=bl(c,d,!0,a,e,f,g,h,k);a.context=dl(null);c=a.current;d=R();e=yi(c);f=mh(d,e);f.callback=void 0!==b&&null!==b?b:null;nh(c,f,e);a.current.lanes=e;Ac(a,e,d);Dk(a,d);return a}function fl(a,b,c,d){var e=b.current,f=R(),g=yi(e);c=dl(c);null===b.context?b.context=c:b.pendingContext=c;b=mh(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=nh(e,b,g);null!==a&&(gi(a,e,g,f),oh(a,e,g));return g}\nfunction gl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function hl(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function il(a,b){hl(a,b);(a=a.alternate)&&hl(a,b)}function jl(){return null}var kl=\"function\"===typeof reportError?reportError:function(a){console.error(a)};function ll(a){this._internalRoot=a}\nml.prototype.render=ll.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));fl(a,b,null,null)};ml.prototype.unmount=ll.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Rk(function(){fl(null,a,null,null)});b[uf]=null}};function ml(a){this._internalRoot=a}\nml.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function nl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function pl(){}\nfunction ql(a,b,c,d,e){if(e){if(\"function\"===typeof d){var f=d;d=function(){var a=gl(g);f.call(a)}}var g=el(b,d,a,0,null,!1,!1,\"\",pl);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Rk();return g}for(;e=a.lastChild;)a.removeChild(e);if(\"function\"===typeof d){var h=d;d=function(){var a=gl(k);h.call(a)}}var k=bl(a,0,!1,null,null,!1,!1,\"\",pl);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Rk(function(){fl(b,k,c,d)});return k}\nfunction rl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if(\"function\"===typeof e){var h=e;e=function(){var a=gl(g);h.call(a)}}fl(b,g,a,e)}else g=ql(c,b,a,e,d);return gl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Dk(b,B()),0===(K&6)&&(Gj=B()+500,jg()))}break;case 13:Rk(function(){var b=ih(a,1);if(null!==b){var c=R();gi(b,a,1,c)}}),il(a,1)}};\nFc=function(a){if(13===a.tag){var b=ih(a,134217728);if(null!==b){var c=R();gi(b,a,134217728,c)}il(a,134217728)}};Gc=function(a){if(13===a.tag){var b=yi(a),c=ih(a,b);if(null!==c){var d=R();gi(c,a,b,d)}il(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\nyb=function(a,b,c){switch(b){case \"input\":bb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Qk;Hb=Rk;\nvar sl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Qk]},tl={findFiberByHostInstance:Wc,bundleType:0,version:\"18.3.1\",rendererPackageName:\"react-dom\"};\nvar ul={bundleType:tl.bundleType,version:tl.version,rendererPackageName:tl.rendererPackageName,rendererConfig:tl.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:tl.findFiberByHostInstance||\njl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.3.1-next-f1338f8080-20240426\"};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var vl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!vl.isDisabled&&vl.supportsFiber)try{kc=vl.inject(ul),lc=vl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=sl;\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!nl(b))throw Error(p(200));return cl(a,b,null,c)};exports.createRoot=function(a,b){if(!nl(a))throw Error(p(299));var c=!1,d=\"\",e=kl;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=bl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ll(b)};\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(\",\");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Rk(a)};exports.hydrate=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!0,c)};\nexports.hydrateRoot=function(a,b,c){if(!nl(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f=\"\",g=kl;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=el(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\ne);return new ml(b)};exports.render=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!ol(a))throw Error(p(40));return a._reactRootContainer?(Rk(function(){rl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Qk;\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!ol(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return rl(a,b,c,!1,d)};exports.version=\"18.3.1-next-f1338f8080-20240426\";\n","import playersInGridManager from \"../GridState/PlayersInGrid\";\nimport axios from \"axios\";\nimport API_BASE from \"../config\";\n  \nexport const getIngredientDetails = (recipe, allResources) => {\n  \n    const ingredients = [];\n    for (let i = 1; i <= 4; i++) {\n      const ingredientType = recipe[`ingredient${i}`];\n      const ingredientQty = recipe[`ingredient${i}qty`];\n      if (ingredientType && ingredientQty) {\n        const ingredientResource = allResources.find((res) => res.type === ingredientType);\n        const symbol = ingredientResource?.symbol || '';\n        ingredients.push(`${symbol} ${ingredientType} x${ingredientQty}`);\n      }\n    }\n    return ingredients;\n  };\n  \n\n// Utility Function for Socket Listener\nexport function mergeResources(existingResources, updatedResources) {\n  console.log(\"🧪 mergeResources called\");\n  console.log(\"📥 Existing Resources:\", existingResources.length);\n  console.log(\"📥 Updated Resources:\", updatedResources);\n\n  const map = new Map();\n\n  // Add all existing resources to map\n  for (const res of existingResources) {\n    const key = `${res.x},${res.y}`;\n    map.set(key, res);\n  }\n\n  // Track whether any actual changes were made\n  let changed = false;\n\n  // Overwrite with updated ones\n  for (const updated of updatedResources) {\n    const key = `${updated.x},${updated.y}`;\n    const existing = map.get(key);\n    const merged = { ...existing, ...updated };\n\n    // Deep compare for debugging\n    const changedFields = Object.entries(updated).filter(\n      ([k, v]) => existing?.[k] !== v\n    );\n    if (changedFields.length > 0) {\n      console.log(`🔄 Resource at (${key}) changed fields:`, changedFields);\n      changed = true;\n    } else {\n      console.log(`✅ Resource at (${key}) unchanged`);\n    }\n\n    map.set(key, merged);\n  }\n\n  const result = Array.from(map.values());\n\n  console.log(\"✅ mergeResources returning new array of length:\", result.length);\n  console.log(\"🔁 Resources actually changed?\", changed);\n  return result;\n}\n\n\nexport function mergeTiles(existingTiles, updatedTiles) {\n  console.log(\"🧪 mergeTiles called\");\n  console.log(\"📥 Existing Tiles:\", existingTiles.length, \"rows\");\n  console.log(\"📥 Updated Tiles:\", updatedTiles);\n\n  const newTiles = existingTiles.map(row => [...row]); // Create deep copy\n  let changed = false;\n\n  updatedTiles.forEach(({ x, y, type: tileType }) => {\n    if (newTiles[y] && typeof newTiles[y][x] !== 'undefined') {\n      const oldTile = newTiles[y][x];\n      if (oldTile !== tileType) {\n        console.log(`🔄 Tile at (${x},${y}) changed from \"${oldTile}\" to \"${tileType}\"`);\n        newTiles[y][x] = tileType;\n        changed = true;\n      } else {\n        console.log(`✅ Tile at (${x},${y}) is already \"${tileType}\" — no change`);\n      }\n    } else {\n      console.warn(`⚠️ Attempted to update invalid tile at (${x},${y})`);\n    }\n  });\n\n  console.log(\"✅ mergeTiles returning new tile array\");\n  console.log(\"🔁 Any tiles changed?\", changed);\n  return newTiles;\n}\n\n\nexport function enrichResourceFromMaster(raw, masterResources) {\n// Used by socket listeners to enrich raw resource data with template details\n  const template = masterResources.find(r => r.type === raw.type);  \n  if (!template) {\n    console.warn(`⚠️ No matching resource template found for ${raw.type}`);\n    return raw;\n  }\n  return {\n    ...template,\n    ...raw, // Allow raw to override specific fields like growEnd, x, y\n  };\n}\n\nexport function getCurrentTileCoordinates(gridId, currentPlayer) {\n  const playersInGrid = playersInGridManager.getPlayersInGrid(gridId);\n  if (!playersInGrid || !currentPlayer?.playerId) {\n    console.warn('⚠️ playersInGrid or playerId missing.');\n    return null;\n  }\n  const playerData = playersInGrid[currentPlayer.playerId];\n  if (!playerData) {\n    console.warn('⚠️ Player not found in playersInGrid.');\n    return null;\n  }\n  const { x, y } = playerData.position;\n  if (x == null || y == null) {\n    console.warn('⚠️ Invalid player position.');\n    return null;\n  }\n  const tileX = Math.floor(x);\n  const tileY = Math.floor(y);\n  return { tileX, tileY };\n}\n\n// export async function getTileResource(gridId, x, y) {\n//   try {\n//     console.log(`Fetching resource at (${x}, ${y}) in grid ${gridId}`);\n//     const response = await axios.get(`${API_BASE}/api/get-resource/${gridId}/${x}/${y}`);\n//     console.log(`Resource at (${x}, ${y}):`, response.data);\n//     return response.data;\n//   } catch (error) {\n//     console.error(`Error fetching resource at (${x}, ${y}) in grid ${gridId}:`, error);\n//     throw error;\n//   }\n// }\n\nexport async function validateTileType(gridId, x, y) {\n  try {\n    console.log(`Validating tile type at (${x}, ${y}) in grid ${gridId}`);\n    const response = await axios.get(`${API_BASE}/api/get-tile/${gridId}/${x}/${y}`);\n    console.log(`Tile type at (${x}, ${y}):`, response.data.tileType);\n    return response.data.tileType;\n  } catch (error) {\n    console.error(`Error fetching tile type at (${x}, ${y}) in grid ${gridId}:`, error);\n    throw error;\n  }\n}\n\n/**\n * Generate a consistent hash from player ID to determine their \"rarity group\"\n * This ensures each player always gets the same rarity mapping\n * @param {string} playerId - The player's unique ID\n * @returns {number} 0, 1, or 2 (splits players into thirds)\n */\nexport function getPlayerRarityGroup(playerId) {\n  // Simple hash: sum all character codes\n  let hash = 0;\n  for (let i = 0; i < playerId.length; i++) {\n    hash += playerId.charCodeAt(i);\n  }\n  // Return 0, 1, or 2 (splits players into thirds)\n  return hash % 3;\n}\n\n/**\n * Map warehouse ingredient rarity based on player's deterministic group\n * Each third of players gets a different rarity distribution\n * @param {string} itemType - The warehouse ingredient type (Saw, Shovel, Screwdriver)\n * @param {string} playerId - The player's unique ID\n * @returns {string} 'common', 'uncommon', or 'rare'\n */\nexport function getPersonalizedWarehouseRarity(itemType, playerId) {\n  const rarityGroup = getPlayerRarityGroup(playerId);\n  \n  // Define rotation pattern for the three warehouse ingredients\n  // Each row represents what a player group experiences\n  const rarityRotation = {\n    'Saw': ['common', 'uncommon', 'rare'],        // Group 0: common, Group 1: uncommon, Group 2: rare\n    'Shovel': ['uncommon', 'rare', 'common'],      // Group 0: uncommon, Group 1: rare, Group 2: common\n    'Screwdriver': ['rare', 'common', 'uncommon']  // Group 0: rare, Group 1: common, Group 2: uncommon\n  };\n  \n  // Return the rarity for this item based on player's group\n  return rarityRotation[itemType]?.[rarityGroup] || 'common';\n}\n\nexport function isACrop(itemType, masterResources) {\n  // Exclude trees from being considered crops\n  if (itemType === 'Oak Tree' || itemType === 'Pine Tree') {\n    return false;\n  }\n  \n  // Check if this item is the output of any farmplot resource\n  return masterResources.some(resource => \n    resource.category === 'farmplot' && resource.output === itemType\n  );\n}\n\n/**\n * Checks for and processes warehouse ingredient drops when collecting crops\n * Uses globalTuning.harvestDropRate to determine if a drop occurs (e.g., 0.1 = 10% chance)\n * Then uses resource.scrollchance to determine which warehouse ingredient to drop\n * @param {string} collectedItemType - The type of item that was collected\n * @param {number} col - Column position for floating text\n * @param {number} row - Row position for floating text\n * @param {number} TILE_SIZE - Tile size for positioning\n * @param {Object} params - Object containing required parameters\n * @param {Object} params.currentPlayer - Current player object\n * @param {Array} params.inventory - Current inventory\n * @param {Array} params.backpack - Current backpack\n * @param {Function} params.setInventory - Inventory setter\n * @param {Function} params.setBackpack - Backpack setter\n * @param {Function} params.setCurrentPlayer - Player setter\n * @param {Function} params.updateStatus - Status update function\n * @param {Array} params.masterResources - Master resources array with warehouse ingredients (requires: \"Warehouse\")\n * @param {Object} params.globalTuning - Global tuning configuration with harvestDropRate\n * @param {Object} params.strings - Localized strings\n * @param {Function} params.FloatingTextManager - Floating text manager\n * @param {Function} params.gainIngredients - Gain ingredients function\n * @param {Function} params.trackQuestProgress - Quest progress tracking function\n * @param {Function} params.getLocalizedString - String localization function\n * @param {Function} params.selectWeightedRandomItem - Weighted random selection function\n * @param {Function} params.getDropQuantity - Drop quantity calculation function\n * @returns {Promise<{dropped: boolean, item?: string, quantity?: number}>} Result of the drop attempt\n */\nexport async function checkAndDropWarehouseIngredient(\n  collectedItemType,\n  col,\n  row,\n  TILE_SIZE,\n  {\n    currentPlayer,\n    inventory,\n    backpack,\n    setInventory,\n    setBackpack,\n    setCurrentPlayer,\n    updateStatus,\n    masterResources,\n    globalTuning,\n    strings,\n    FloatingTextManager,\n    gainIngredients,\n    trackQuestProgress,\n    getLocalizedString,\n    selectWeightedRandomItem,\n  }\n) {\n  // Check if this is a crop\n  if (!isACrop(collectedItemType, masterResources)) {\n    return { dropped: false };\n  }\n  \n  console.log(`🌾 Collected crop: ${collectedItemType}, checking for warehouse ingredient drops...`);\n  \n  // Check if we should drop based on harvestDropRate from globalTuning\n  const dropRate = globalTuning?.harvestDropRate || 0.1; // Default to 10% if not configured\n  const roll = Math.random();\n  \n  if (roll > dropRate) {\n    console.log(`🎲 Drop roll failed: ${roll.toFixed(3)} > ${dropRate} (${(dropRate * 100).toFixed(0)}% chance)`);\n    return { dropped: false };\n  }\n  \n  console.log(`🎲 Drop roll succeeded: ${roll.toFixed(3)} <= ${dropRate} (${(dropRate * 100).toFixed(0)}% chance)`);\n  \n  // Get all warehouse ingredients from masterResources\n  const warehouseIngredients = masterResources.filter(res => res.requires === 'Warehouse' && res.scrollchance);\n  \n  if (warehouseIngredients.length === 0) {\n    console.warn('⚠️ No warehouse ingredients found in masterResources');\n    return { dropped: false };\n  }\n  \n  // Apply personalized rarity to warehouse ingredients\n  const personalizedIngredients = warehouseIngredients.map(ingredient => ({\n    ...ingredient,\n    scrollchance: getPersonalizedWarehouseRarity(ingredient.type, currentPlayer.playerId)\n  }));\n  \n  // Use weighted random selection based on personalized rarity\n  const selectedIngredient = selectWeightedRandomItem(personalizedIngredients, 1);\n  \n  if (!selectedIngredient) {\n    return { dropped: false };\n  }\n  \n  // Warehouse ingredients always drop exactly 1, regardless of rarity\n  const dropQty = 1;\n  \n  console.log(`🎁 Warehouse ingredient drop: ${selectedIngredient.type} x${dropQty} (${selectedIngredient.scrollchance})`);\n  \n  // Show bonus floating text with offset to avoid overlap with main doober text\n  const symbol = selectedIngredient.symbol || '';\n  FloatingTextManager.addFloatingText(\n    `${symbol} +${dropQty} ${getLocalizedString(selectedIngredient.type, strings)}`, \n    col, \n    row - (30 / TILE_SIZE), // Offset up (converted to tile units)\n    TILE_SIZE\n  );\n  \n  // Add the warehouse ingredient to inventory\n  const bonusGained = await gainIngredients({\n    playerId: currentPlayer.playerId,\n    currentPlayer,\n    resource: selectedIngredient.type,\n    quantity: dropQty,\n    inventory,\n    backpack,\n    setInventory,\n    setBackpack,\n    setCurrentPlayer,\n    updateStatus,\n    masterResources,\n    globalTuning,\n  });\n  \n  if (!bonusGained) {\n    console.warn('❌ Failed to add bonus warehouse ingredient to inventory - may be full');\n    // Don't show error to user - this is a bonus drop\n    return { dropped: true, item: selectedIngredient.type, quantity: dropQty, added: false };\n  }\n  \n  // Track quest progress for the bonus item\n  await trackQuestProgress(currentPlayer, 'Collect', selectedIngredient.type, dropQty, setCurrentPlayer);\n  \n  return { dropped: true, item: selectedIngredient.type, quantity: dropQty, added: true };\n}\n\n/**\n * Calculate warehouse ingredient drops for bulk harvest operations\n * Calculates drops per farm plot harvested, ignoring skill multipliers\n * @param {number} numPlotsHarvested - Number of farm plots that were harvested\n * @param {Object} params - Object containing required parameters\n * @param {Array} params.masterResources - Master resources array with warehouse ingredients\n * @param {Object} params.globalTuning - Global tuning configuration with harvestDropRate\n * @param {Function} params.selectWeightedRandomItem - Weighted random selection function\n * @param {string} params.playerId - Player ID for personalized rarity calculation\n * @returns {Array} Array of warehouse ingredient drops: [{type, quantity, symbol}]\n */\nexport function calculateBulkWarehouseDrops(numPlotsHarvested, {\n  masterResources,\n  globalTuning,\n  selectWeightedRandomItem,\n  playerId\n}) {\n  const warehouseDrops = [];\n  \n  // Get all warehouse ingredients from masterResources\n  const warehouseIngredients = masterResources.filter(res => res.requires === 'Warehouse' && res.scrollchance);\n  \n  if (warehouseIngredients.length === 0) {\n    console.warn('⚠️ No warehouse ingredients found in masterResources');\n    return warehouseDrops;\n  }\n  \n  // Apply personalized rarity to warehouse ingredients\n  const personalizedIngredients = warehouseIngredients.map(ingredient => ({\n    ...ingredient,\n    scrollchance: getPersonalizedWarehouseRarity(ingredient.type, playerId)\n  }));\n  \n  // Get drop rate from globalTuning\n  const dropRate = globalTuning?.harvestDropRate || 0.1; // Default to 10%\n  \n  // Roll for drops once per farm plot harvested (ignoring skill multipliers)\n  for (let i = 0; i < numPlotsHarvested; i++) {\n    const roll = Math.random();\n    \n    if (roll <= dropRate) {\n      // Select a warehouse ingredient using weighted random with personalized rarity\n      const selectedIngredient = selectWeightedRandomItem(personalizedIngredients, 1);\n      \n      if (selectedIngredient) {\n        // Always drop quantity 1 for warehouse ingredients\n        warehouseDrops.push({\n          type: selectedIngredient.type,\n          quantity: 1,\n          symbol: selectedIngredient.symbol || '',\n          rarity: selectedIngredient.scrollchance || 'common'\n        });\n      }\n    }\n  }\n  \n  console.log(`🎁 Bulk warehouse drops calculated: ${warehouseDrops.length} total drops from ${numPlotsHarvested} plots`);\n  return warehouseDrops;\n}\n\n/**\n * Aggregate warehouse drops by type for display\n * @param {Array} warehouseDrops - Array of individual drops\n * @returns {Object} Aggregated drops: {type: {quantity, symbol, rarity}}\n */\nexport function aggregateWarehouseDrops(warehouseDrops) {\n  const aggregated = {};\n  \n  warehouseDrops.forEach(drop => {\n    if (!aggregated[drop.type]) {\n      aggregated[drop.type] = {\n        quantity: 0,\n        symbol: drop.symbol,\n        rarity: drop.rarity\n      };\n    }\n    aggregated[drop.type].quantity += drop.quantity;\n  });\n  \n  return aggregated;\n}\n\n/**\n * Calculate gem cost for speeding up crafting based on remaining time\n * @param {number} remainingTimeMs - Remaining time in milliseconds\n * @returns {number} - Number of gems required\n */\nexport function calculateGemSpeedupCost(remainingTimeMs) {\n  if (remainingTimeMs <= 0) return 0;\n  \n  const remainingMinutes = remainingTimeMs / (1000 * 60);\n  \n  if (remainingMinutes <= 2) return 1;\n  if (remainingMinutes <= 10) return 5;\n  if (remainingMinutes <= 30) return 8;\n  if (remainingMinutes <= 60) return 10;\n  if (remainingMinutes <= 360) return 15; // 6 hours\n  if (remainingMinutes <= 1440) return 20; // 24 hours\n  if (remainingMinutes <= 2880) return 30; // 48 hours\n  \n  return 40; // Max cost for anything over 2 days \n}\n\n/**\n * Get personalized pet rewards by applying asymmetric rarity to warehouse ingredients\n * For pets, we still use pet level as a multiplier, but warehouse ingredients get personalized rarity\n * @param {Array} petRewards - Array of resources with source === 'pets'\n * @param {string} playerId - Player ID for personalized rarity\n * @returns {Array} Array of pet rewards with personalized rarity for warehouse ingredients\n */\nexport function getPersonalizedPetRewards(petRewards, playerId) {\n  return petRewards.map(reward => {\n    // Only apply personalized rarity to warehouse ingredients\n    if (reward.requires === 'Warehouse') {\n      return {\n        ...reward,\n        scrollchance: getPersonalizedWarehouseRarity(reward.type, playerId)\n      };\n    }\n    // Non-warehouse items keep their original rarity\n    return reward;\n  });\n}\n","// GlobalGridStateTilesAndResources.js\nconst GlobalGridStateTilesAndResources = {\n    tiles: [],\n    resources: [],\n  \n    // Setter for tiles\n    setTiles(newTiles) {\n      this.tiles = newTiles;\n      //console.log('Global tiles updated:', this.tiles);\n    },\n  \n    // Setter for resources\n    setResources(newResources) {\n      this.resources = newResources;\n      //console.log('Global resources updated:', this.resources);\n    },\n  \n    // Getter for tiles\n    getTiles() {\n      return this.tiles;\n    },\n  \n    // Getter for resources\n    getResources() {\n      return this.resources;\n    },\n  };\n  \n  export default GlobalGridStateTilesAndResources;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport API_BASE from '../../config';\nimport { useStrings } from '../../UI/StringsContext';\nimport './FTUE.css';\nimport FTUEstepsData from './FTUEsteps.json';\nimport NPCsInGridManager from '../../GridState/GridStateNPCs';\nimport { showNotification } from '../../UI/Notifications/Notifications';\n\n\nconst FTUE = ({ currentPlayer, setCurrentPlayer, onClose, openPanel, setActiveQuestGiver, gridId, setActiveStation, masterResources, setResources, TILE_SIZE }) => {\n  const strings = useStrings();\n  const [currentStepData, setCurrentStepData] = useState(null);\n  const [imageLoaded, setImageLoaded] = useState(false);\n  const [showFeedbackModal, setShowFeedbackModal] = useState(false);\n  const [positiveReasons, setPositiveReasons] = useState([]);\n  const [negativeReasons, setNegativeReasons] = useState([]);\n  \n  // Load the current step data based on player's ftuestep\n  useEffect(() => {\n    // Only show FTUE if player is explicitly a first-time user\n    if (currentPlayer?.firsttimeuser !== true) {\n      console.log('Player is not a first-time user, closing FTUE');\n      onClose();\n      return;\n    }\n    \n    // Handle step 0 by showing step 1 content without advancing yet\n    if (currentPlayer?.ftuestep === 0) {\n      console.log('🎓 Player at FTUE step 0, showing step 1 content');\n      const step1Data = FTUEstepsData.find(step => step.step === 1);\n      if (step1Data) {\n        setCurrentStepData(step1Data);\n      }\n      return;\n    }\n    \n    // Check if we're at step 5 and need to show feedback modal\n    // Only show if no feedback has been collected yet (either positive OR negative feedback exists)\n    const hasFeedback = currentPlayer?.ftueFeedback && \n      (currentPlayer.ftueFeedback.positive?.length > 0 || currentPlayer.ftueFeedback.negative?.length > 0);\n    \n    if (currentPlayer?.ftuestep === 5) {\n      if (!hasFeedback) {\n        setShowFeedbackModal(true);\n        return;\n      } else {\n        // User already has feedback but is stuck at step 5 - advance them to step 6\n        console.log('🎓 User at step 5 already has feedback, advancing to step 6');\n        const advanceToStep6 = async () => {\n          try {\n            const response = await axios.post(`${API_BASE}/api/update-profile`, {\n              playerId: currentPlayer.playerId,\n              updates: { ftuestep: 6 }\n            });\n            if (response.data.success) {\n              setCurrentPlayer(prev => ({\n                ...prev,\n                ftuestep: 6\n              }));\n            }\n          } catch (error) {\n            console.error('Error advancing step 5 user to step 6:', error);\n          }\n        };\n        advanceToStep6();\n        return;\n      }\n    }\n    \n    if (currentPlayer?.ftuestep) {\n      const stepData = FTUEstepsData.find(step => step.step === currentPlayer.ftuestep);\n      if (stepData) {\n        setCurrentStepData(stepData);\n      } else {\n        // If no valid step found, close the FTUE\n        console.log('No valid FTUE step found for step:', currentPlayer.ftuestep);\n        onClose();\n      }\n    }\n  }, [currentPlayer?.ftuestep, currentPlayer?.firsttimeuser, onClose]);\n\n  // Preload image when step data changes\n  useEffect(() => {\n    if (currentStepData?.image) {\n      setImageLoaded(false);\n      const img = new Image();\n      img.src = `/assets/${currentStepData.image}`;\n      img.onload = () => {\n        setImageLoaded(true);\n      };\n      img.onerror = () => {\n        console.error('Failed to load FTUE image:', currentStepData.image);\n        setImageLoaded(true); // Still show modal even if image fails\n      };\n    }\n  }, [currentStepData]);\n\n  // Handle feedback submission\n  const handleFeedbackSubmit = async (isPositive) => {\n    try {\n      // Detect browser type\n      const getBrowserType = () => {\n        const userAgent = navigator.userAgent;\n        if (userAgent.includes('Chrome') && !userAgent.includes('Edg')) return 'Chrome';\n        if (userAgent.includes('Firefox')) return 'Firefox';\n        if (userAgent.includes('Safari') && !userAgent.includes('Chrome')) return 'Safari';\n        if (userAgent.includes('Edg')) return 'Edge';\n        if (userAgent.includes('Opera') || userAgent.includes('OPR')) return 'Opera';\n        return 'Unknown';\n      };\n\n      const browserType = getBrowserType();\n\n      // Save feedback to database and advance to step 5\n      const response = await axios.post(`${API_BASE}/api/update-profile`, {\n        playerId: currentPlayer.playerId,\n        updates: { \n          ftueFeedback: {\n            positive: isPositive ? positiveReasons : [],\n            negative: !isPositive ? negativeReasons : [],\n            browser: browserType\n          },\n          ftuestep: 6 // Advance to step 6 after feedback\n        }\n      });\n      \n      if (response.data.success) {\n        // Update local state\n        setCurrentPlayer(prev => ({\n          ...prev,\n          ftueFeedback: {\n            positive: isPositive ? positiveReasons : [],\n            negative: !isPositive ? negativeReasons : [],\n            browser: browserType\n          },\n          ftuestep: 6 // Update local state to step 6\n        }));\n        \n        // Hide feedback modal and close FTUE (player is now at step 6)\n        setShowFeedbackModal(false);\n        onClose(); // Close the entire FTUE modal since player advanced to step 6\n      }\n    } catch (error) {\n      console.error('Error saving FTUE feedback:', error);\n      // Continue anyway to not block the user\n      setShowFeedbackModal(false);\n      onClose(); // Close the entire FTUE modal\n    }\n  };\n\n  const handleOK = async () => {\n    try {\n      // If we're showing step 1 content but player is still at step 0, advance to step 1\n      const currentStep = currentPlayer.ftuestep === 0 ? 1 : currentPlayer.ftuestep;\n      const actualCurrentStep = currentPlayer.ftuestep;\n      const nextStep = currentStep + 1;      \n      // Check if there's a next step in the data\n      const hasNextStep = FTUEstepsData.some(step => step.step === nextStep);\n      \n      // Get current step data to check for notification\n      const stepData = FTUEstepsData.find(step => step.step === currentStep);\n      if (stepData?.notificationKey) {\n        showNotification('To Do', {\n          title: strings[7001],\n          message: strings[stepData.notificationKey]\n        });\n      }\n      \n//////////// FTUE STEP 3 /////////////\n\n      if (currentStep === 3 && openPanel) {\n        console.log(`🎓 Step 3: Auto-accepting quests and opening QuestPanel`);\n        \n        \n        // Auto-accept quest 5 (Harvest Wheat) and quest 6 (Learn to Sell)\n        const playerAfterQuest5 = await addAcceptedQuest(currentPlayer.playerId, currentPlayer, setCurrentPlayer, 5);\n        await addAcceptedQuest(currentPlayer.playerId, playerAfterQuest5, setCurrentPlayer, 6);\n        \n        console.log(`🎓 Added quests 5 and 6, opening QuestPanel`);\n        \n        onClose(); // Close FTUE modal first\n        openPanel('QuestPanel'); // Open the quest panel\n\n//////////// FTUE STEP 4 /////////////\n\n      } else if (currentStep === 4) {\n        console.log(`🎓 Processing FTUE step 4 - Grower skill`);\n        \n        // Add the Grower quest (quest 7)\n        await addAcceptedQuest(currentPlayer.playerId, currentPlayer, setCurrentPlayer, 7);\n        \n        onClose(); // Close FTUE modal\n        \n        // Auto-open the Skills panel\n        if (openPanel) {\n          console.log(`🎓 Step 4: Opening Skills panel`);\n          setActiveStation(null); // Clear active station to prevent Trading Post from re-opening\n          openPanel('SkillsPanel');\n        }\n\n//////////// FTUE STEP 5 /////////////\n\n      } else if (currentStep === 5) {\n        console.log(`🎓 Processing FTUE step 5 - Feedback modal`);\n        \n        // Step 5 is now handled by the feedback modal logic\n        // This shouldn't be reached if feedback modal is working correctly\n        onClose();\n\n//////////// FTUE STEP 6 /////////////\n\n      } else if (currentStep === 6) {\n        console.log(`🎓 Processing FTUE step 6 - Plant quest`);\n        \n        // Add the Plant quest (quest 4)\n        await addAcceptedQuest(currentPlayer.playerId, currentPlayer, setCurrentPlayer, 4);\n        \n        onClose(); // Close FTUE modal\n        \n        // Auto-open the Farming panel\n        if (openPanel) {\n          console.log(`🎓 Step 6: Auto-opening Farming panel`);\n          openPanel('FarmingPanel');\n        }\n\n//////////// FTUE STEP 7 /////////////\n\n      } else if (currentStep === 7 && openPanel) {\n        console.log(`🎓 Processing FTUE step 7 - Adding quests 18 and 19`);\n        \n        // Auto-accept quests 18 and 19\n        const playerAfterQuest18 = await addAcceptedQuest(currentPlayer.playerId, currentPlayer, setCurrentPlayer, 18);\n        await addAcceptedQuest(currentPlayer.playerId, playerAfterQuest18, setCurrentPlayer, 19);\n        \n        onClose(); // Close FTUE modal first\n        \n        // Auto-open the Skills panel\n        if (openPanel) {\n          console.log(`🎓 Step 7: Opening Skills panel`);\n          setActiveStation(null); // Clear active station to prevent other panels from re-opening\n          openPanel('SkillsPanel');\n        }\n\n//////////// FTUE STEP 8 /////////////\n\n      } else if (currentStep === 8 && openPanel) {\n        console.log(`🎓 Processing FTUE step 8 - Adding shepherd and axe quests`);\n        \n        // Add the shepherd quest (quest 8) and Get Axe quest (quest 10)\n        await addAcceptedQuest(currentPlayer.playerId, currentPlayer, setCurrentPlayer, 8);\n        await addAcceptedQuest(currentPlayer.playerId, currentPlayer, setCurrentPlayer, 10);\n         \n        onClose(); // Close FTUE modal first\n        openPanel('QuestPanel');\n\n//////////// FTUE STEP 9 /////////////\n\n      } else if (currentStep === 9) {\n        console.log(`🎓 Processing FTUE step 9 - axe acquired`);\n        \n        // No quest to add here since Get Axe quest was already added at step 8\n        \n        onClose(); // Close FTUE modal\n\n//////////// FTUE STEP 10 /////////////\n\n      } else if (currentStep === 10) {\n        console.log(`🎓 Adding Wizard quest after FTUE step ${currentStep}`);\n        \n        // Add the Axe quest\n        await addAcceptedQuest(currentPlayer.playerId, currentPlayer, setCurrentPlayer, 1);\n        await completeTutorial();\n\n        onClose(); // Close FTUE modal\n        return; // Don't continue with normal step advancement\n      }\n\n      if (!hasNextStep) {\n        completeTutorial();\n\n      } else {\n        const stepData = FTUEstepsData.find(step => step.step === currentStep);\n        if (stepData?.continue) {\n          // If the current step has a continue action, advance the FTUE step\n          // Use actualCurrentStep to handle step 0 -> 1 transition properly\n          const response = await axios.post(`${API_BASE}/api/update-profile`, {\n            playerId: currentPlayer.playerId,\n            updates: { ftuestep: actualCurrentStep + 1 }\n          });\n          if (response.data.success) {\n            setCurrentPlayer(prev => ({\n              ...prev,\n              ftuestep: actualCurrentStep + 1\n            }));\n            onClose();\n          }\n        } else {  \n          onClose();\n          return;\n        } \n      }\n\n    } catch (error) {\n      console.error('Error advancing FTUE step:', error);\n    }\n  };\n\n  const completeTutorial = async () => {\n    try {\n      // First check if the Wizard quest (index=1) has already been added\n      const currentActiveQuests = currentPlayer?.activeQuests || [];\n      const wizardQuestExists = currentActiveQuests.some(q => q.questId === \"Find the Wizard in the Valley\");\n      \n      let finalActiveQuests = currentActiveQuests;\n      \n      if (!wizardQuestExists) {\n        console.log('🎓 Adding completed Wizard quest before completing tutorial');\n        \n        // Add the quest with index=1\n        const updatedPlayer = await addAcceptedQuest(currentPlayer.playerId, currentPlayer, setCurrentPlayer, 1);\n        \n        // Mark it as completed\n        if (updatedPlayer.activeQuests && updatedPlayer.activeQuests.length > 0) {\n          const questIndex = updatedPlayer.activeQuests.findIndex(q => q.questId === \"Find the Wizard in the Valley\");\n          if (questIndex !== -1) {\n            updatedPlayer.activeQuests[questIndex].completed = true;\n            finalActiveQuests = updatedPlayer.activeQuests;\n            \n            // Save the completed quest\n            await axios.post(`${API_BASE}/api/update-profile`, {\n              playerId: currentPlayer.playerId,\n              updates: { activeQuests: finalActiveQuests }\n            });\n          }\n        }\n      } else {\n        console.log('🎓 Wizard quest already exists, skipping addition');\n      }\n      \n      \n      // Update the player's firsttimeuser flag to false and remove ftuestep\n      const response = await axios.post(`${API_BASE}/api/update-profile`, {\n        playerId: currentPlayer.playerId,\n        updates: { \n          firsttimeuser: false,\n          ftuestep: null  // This will remove the field from the document\n        }\n      });\n      \n      if (response.data.success) {\n        // Update local player state\n        setCurrentPlayer(prev => {\n          const updated = {\n            ...prev,\n            firsttimeuser: false,\n            activeQuests: finalActiveQuests\n          };\n          delete updated.ftuestep;  // Remove ftuestep from local state\n          return updated;\n        });\n        \n        // Close the tutorial\n        onClose();\n      }\n    } catch (error) {\n      console.error('Error completing tutorial:', error);\n      // Close anyway to not block the user\n      onClose();\n    }\n  };\n\n\n\n  // Handle aspiration choice for step 2\n  const handleAspirationChoice = async (aspiration) => {\n    try {\n      // Update player's aspiration in the database\n      const response = await axios.post(`${API_BASE}/api/update-profile`, {\n        playerId: currentPlayer.playerId,\n        updates: { \n          aspiration: aspiration,\n          ftuestep: 3 // Advance to next step after choosing\n        }\n      });\n      \n      if (response.data.success) {\n        setCurrentPlayer(prev => ({\n          ...prev,\n          aspiration: aspiration,\n          ftuestep: 3\n        }));\n        onClose();\n      }\n    } catch (error) {\n      console.error('Error setting aspiration:', error);\n    }\n  };\n\n  // Handle checkbox toggle\n  const toggleReason = (reasonIndex, isPositive) => {\n    if (isPositive) {\n      setPositiveReasons(prev => \n        prev.includes(reasonIndex) \n          ? prev.filter(r => r !== reasonIndex)\n          : [...prev, reasonIndex]\n      );\n    } else {\n      setNegativeReasons(prev => \n        prev.includes(reasonIndex) \n          ? prev.filter(r => r !== reasonIndex)\n          : [...prev, reasonIndex]\n      );\n    }\n  };\n\n  // Don't render if no step data or (image not loaded for non-step-2)\n  if (!currentStepData || (currentPlayer?.ftuestep !== 2 && !imageLoaded)) {\n    // But DO render if we're showing the feedback modal\n    if (!showFeedbackModal) {\n      return null;\n    }\n  }\n\n  // Render feedback modal if showing\n  if (showFeedbackModal) {\n    return (\n      <div className=\"ftue-overlay\">\n        <div className=\"ftue-modal\">\n          <div className=\"ftue-header\">\n            <h2>{strings[780]}</h2>\n          </div>\n          \n          <div className=\"ftue-feedback-content\">\n            {/* Positive feedback section */}\n            <div className=\"ftue-feedback-section\">\n              <h3>{strings[781]}</h3>\n              <div className=\"ftue-feedback-options\">\n                <label className=\"ftue-checkbox-label\">\n                  <input \n                    type=\"checkbox\" \n                    checked={positiveReasons.includes(784)}\n                    onChange={() => toggleReason(784, true)}\n                  />\n                  {strings[784]}\n                </label>\n                <label className=\"ftue-checkbox-label\">\n                  <input \n                    type=\"checkbox\" \n                    checked={positiveReasons.includes(785)}\n                    onChange={() => toggleReason(785, true)}\n                  />\n                  {strings[785]}\n                </label>\n                <label className=\"ftue-checkbox-label\">\n                  <input \n                    type=\"checkbox\" \n                    checked={positiveReasons.includes(786)}\n                    onChange={() => toggleReason(786, true)}\n                  />\n                  {strings[786]}\n                </label>\n                <label className=\"ftue-checkbox-label\">\n                  <input \n                    type=\"checkbox\" \n                    checked={positiveReasons.includes(787)}\n                    onChange={() => toggleReason(787, true)}\n                  />\n                  {strings[787]}\n                </label>\n              </div>\n              <button \n                className=\"ftue-button ftue-button-primary\" \n                onClick={() => handleFeedbackSubmit(true)}\n              >\n                {strings[783]}\n              </button>\n            </div>\n            \n            {/* Negative feedback section */}\n            <div className=\"ftue-feedback-section\">\n              <h3>{strings[782]}</h3>\n              <div className=\"ftue-feedback-options\">\n                <label className=\"ftue-checkbox-label\">\n                  <input \n                    type=\"checkbox\" \n                    checked={negativeReasons.includes(790)}\n                    onChange={() => toggleReason(790, false)}\n                  />\n                  {strings[790]}\n                </label>\n                <label className=\"ftue-checkbox-label\">\n                  <input \n                    type=\"checkbox\" \n                    checked={negativeReasons.includes(791)}\n                    onChange={() => toggleReason(791, false)}\n                  />\n                  {strings[791]}\n                </label>\n                <label className=\"ftue-checkbox-label\">\n                  <input \n                    type=\"checkbox\" \n                    checked={negativeReasons.includes(792)}\n                    onChange={() => toggleReason(792, false)}\n                  />\n                  {strings[792]}\n                </label>\n                <label className=\"ftue-checkbox-label\">\n                  <input \n                    type=\"checkbox\" \n                    checked={negativeReasons.includes(793)}\n                    onChange={() => toggleReason(793, false)}\n                  />\n                  {strings[793]}\n                </label>\n              </div>\n              <button \n                className=\"ftue-button ftue-button-primary\" \n                onClick={() => handleFeedbackSubmit(false)}\n              >\n                {strings[794]}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Custom render for step 2 - Aspiration choice\n  if (currentPlayer?.ftuestep === 2) {\n    return (\n      <div className=\"ftue-overlay\">\n        <div className=\"ftue-modal\">\n          <div className=\"ftue-header\">\n            <h2>{strings[currentStepData.titleKey]}</h2>\n          </div>\n          \n          <div className=\"ftue-text\">\n            <p>{strings[currentStepData.bodyKey]}</p>\n          </div>\n          \n          <div className=\"ftue-aspiration-content\">\n            <div className=\"ftue-aspiration-panels\">\n              {/* Panel 1 */}\n              <div \n                className=\"ftue-aspiration-panel\" \n                onClick={() => handleAspirationChoice(1)}\n              >\n                <h3>{strings[750]}</h3>\n                <p>{strings[751]}</p>\n              </div>\n              \n              {/* Panel 2 */}\n              <div \n                className=\"ftue-aspiration-panel\" \n                onClick={() => handleAspirationChoice(2)}\n              >\n                <h3>{strings[752]}</h3>\n                <p>{strings[753]}</p>\n              </div>\n              \n              {/* Panel 3 */}\n              <div \n                className=\"ftue-aspiration-panel\" \n                onClick={() => handleAspirationChoice(3)}\n              >\n                <h3>{strings[754]}</h3>\n                <p>{strings[755]}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Standard render for other steps\n  return (\n    <div className=\"ftue-overlay\">\n      <div className=\"ftue-modal\">\n        <div className=\"ftue-header\">\n          <h2>{strings[currentStepData.titleKey]}</h2>\n        </div>\n        \n        <div className=\"ftue-text\">\n          <p>{strings[currentStepData.bodyKey]}</p>\n        </div>\n\n        <div className=\"ftue-content\">\n          <div className=\"ftue-image-container\">\n            <img \n              src={`/assets/${currentStepData.image}`} \n              alt={strings[currentStepData.titleKey]}\n              className=\"ftue-image\"\n            />\n          </div>\n          \n          <div className=\"ftue-buttons\">\n            <button className=\"ftue-button ftue-button-primary\" onClick={handleOK}>{strings[796]}</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Export function to get current FTUE step from DB and sync with local state\nexport const getFTUEStep = async (playerId, currentPlayer, setCurrentPlayer) => {\n  try {\n    // Fetch player data from DB\n    const response = await axios.get(`${API_BASE}/api/player/${playerId}`);\n    const dbFtueStep = response.data.ftuestep;\n    \n    // Update local state if different from DB\n    if (currentPlayer && currentPlayer.ftuestep !== dbFtueStep) {\n      console.log('🔄 Syncing FTUE step from DB:', dbFtueStep);\n      setCurrentPlayer(prev => ({\n        ...prev,\n        ftuestep: dbFtueStep\n      }));\n    }\n    \n    return dbFtueStep || 0;\n  } catch (error) {\n    console.error('Error fetching FTUE step:', error);\n    return currentPlayer?.ftuestep || 0;\n  }\n};\n\n// Export function to increment FTUE step in both DB and local state\nexport const incrementFTUEStep = async (playerId, currentPlayer, setCurrentPlayer) => {\n  try {\n    const currentStep = currentPlayer?.ftuestep || 0;\n    const nextStep = currentStep + 1;\n    \n    // Check if the next step exists in the data\n    const nextStepExists = FTUEstepsData.some(step => step.step === nextStep);\n    \n    if (!nextStepExists) {\n      console.log('📚 No more FTUE steps available after step', currentStep);\n      return currentStep;\n    }\n    \n    // Update DB\n    const response = await axios.post(`${API_BASE}/api/update-profile`, {\n      playerId,\n      updates: { ftuestep: nextStep }\n    });\n    \n    if (response.data.success) {\n      // Update local state - this will trigger the modal via the useEffect in App.js\n      setCurrentPlayer(prev => ({\n        ...prev,\n        ftuestep: nextStep\n      }));\n      \n      console.log('✅ FTUE step incremented to:', nextStep);\n      return nextStep;\n    }\n    \n    return currentStep;\n  } catch (error) {\n    console.error('Error incrementing FTUE step:', error);\n    return currentPlayer?.ftuestep || 0;\n  }\n};\n\n// Export function to add an accepted quest to player data\nexport const addAcceptedQuest = async (playerId, currentPlayer, setCurrentPlayer, questIndex) => {\n  try {\n    // Fetch quest template from API\n    const response = await axios.get(`${API_BASE}/api/quests`);\n    const questTemplates = response.data || [];\n    \n    // Find the specific quest template by index\n    const questTemplate = questTemplates.find(q => q.index === questIndex);\n    if (!questTemplate) {\n      console.error(`❌ Quest template not found for index: ${questIndex}`);\n      return currentPlayer;\n    }\n    \n    // Create the quest object following the activeQuests format\n    const newQuest = {\n      questId: questTemplate.title, // Use title from template\n      startTime: Date.now(),\n      symbol: questTemplate.symbol || '❓',\n      progress: {\n        goal1: 0,\n        goal2: 0,\n        goal3: 0\n      },\n      completed: false,\n      rewardCollected: false,\n      // Add goal fields from template\n      goal1action: questTemplate.goal1action || null,\n      goal1item: questTemplate.goal1item || null,\n      goal1qty: questTemplate.goal1qty || null,\n      goal2action: questTemplate.goal2action || null,\n      goal2item: questTemplate.goal2item || null,\n      goal2qty: questTemplate.goal2qty || null,\n      goal3action: questTemplate.goal3action || null,\n      goal3item: questTemplate.goal3item || null,\n      goal3qty: questTemplate.goal3qty || null\n    };\n    \n    // Get current active quests\n    const currentActiveQuests = currentPlayer?.activeQuests || [];\n    \n    // Check if quest already exists\n    const questExists = currentActiveQuests.some(q => q.questId === questTemplate.title);\n    if (questExists) {\n      console.log(`📚 Quest \"${questTemplate.title}\" already exists in active quests`);\n      return currentPlayer;\n    }\n    \n    // Add new quest to active quests\n    const updatedActiveQuests = [...currentActiveQuests, newQuest];\n    \n    // Update database\n    const updateResponse = await axios.post(`${API_BASE}/api/update-profile`, {\n      playerId,\n      updates: { activeQuests: updatedActiveQuests }\n    });\n    \n    if (updateResponse.data.success) {\n      // Update local state\n      const updatedPlayer = {\n        ...currentPlayer,\n        activeQuests: updatedActiveQuests\n      };\n      setCurrentPlayer(updatedPlayer);\n      \n      console.log(`✅ Quest \"${questTemplate.title}\" added to active quests`);\n      return updatedPlayer;\n    }\n    \n    return currentPlayer;\n  } catch (error) {\n    console.error('Error adding accepted quest:', error);\n    return currentPlayer;\n  }\n};\n\nexport default FTUE;","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","import axios from 'axios';\nimport { updateGridResource } from './Utils/GridManagement';\n\nlet farmTimer = null;\n\nclass FarmState {\n    constructor() {\n      this.farmState = [];\n    }\n  \n    initializeFarmState(resources = []) {\n      this.farmState = resources.filter((res) => res.category === 'farmplot' && res.growEnd);\n      \n      \n    }\n  \n    addSeed(seed) {\n      if (!seed.output) {\n        console.warn('⚠️ Trying to add a seed without an output! This will break later.', seed);\n      }\n      this.farmState.push(seed);\n    }\n\n  /**\n   * Process seeds periodically to check for growth completion.\n   */\n  startSeedTimer({ gridId, setResources, masterResources }) {\n    if (farmTimer) clearInterval(farmTimer);\n    \n    // Store the current gridId to check if we're still on the same grid\n    const currentGridId = gridId;\n    \n  \n    farmTimer = setInterval(async () => {\n      //console.log('FarmState timer ticking.');\n      //console.log('Current farmState:', this.farmState);\n  \n      const now = Date.now();\n      const completedSeeds = this.farmState.filter((seed) => seed.growEnd <= now);\n      //console.log('Completed seeds:', completedSeeds);\n  \n      if (completedSeeds.length > 0) {\n\n        // Process seeds sequentially to match server processing speed\n        let successfulCount = 0;\n        \n        for (const seed of completedSeeds) {\n          // First check if this seed still exists in current farmState\n          // (it might have been removed by bulk harvest)\n          const stillExists = this.farmState.some(s => \n            s.x === seed.x && s.y === seed.y && s.type === seed.type\n          );\n          \n          if (!stillExists) {\n            console.log(`Seed at (${seed.x}, ${seed.y}) no longer exists in farmState, skipping conversion.`);\n            continue;\n          }\n          \n          const newCrop = masterResources.find((res) => res.type === seed.output);\n          \n          if (!newCrop) {\n            console.warn(`No target resource found for seed output: ${seed.output}`);\n            continue;\n          }\n\n          try {\n            const response = await updateGridResource(\n              currentGridId, \n              { \n                type: newCrop.type,\n                x: seed.x,\n                y: seed.y,\n              },\n              true\n            );\n\n            if (response?.success) {\n              \n              const enriched = {\n                ...newCrop,\n                x: seed.x,\n                y: seed.y\n              };\n\n              // Update UI only after server confirms the update\n              setResources(prev => {\n                const filtered = prev.filter(r => !(r.x === seed.x && r.y === seed.y));\n                return [...filtered, enriched];\n              });\n              \n              // Remove from farmState after successful conversion\n              this.farmState = this.farmState.filter(s => !(s.x === seed.x && s.y === seed.y && s.type === seed.type));\n              \n              successfulCount++;\n              \n              // Add a small delay between conversions to make them visually distinct\n              // This also helps prevent overwhelming the server and keeps us in sync\n              // Using 120ms to match observed server processing time\n              await new Promise(resolve => setTimeout(resolve, 120));\n            } else {\n              console.warn(`Failed to update grid resource for seed at (${seed.x}, ${seed.y}).`);\n            }\n          } catch (error) {\n            console.error(`Error updating grid resource for seed at (${seed.x}, ${seed.y}):`, error);\n          }\n        }\n        \n      }\n    }, 1000);\n  }\n\n  \n  /**\n   * Force process any seeds that are ready to convert\n   * This ensures client/server sync before operations like bulk harvest\n   */\n  async forceProcessPendingSeeds({ gridId, setResources, masterResources }) {\n    const now = Date.now();\n    const completedSeeds = this.farmState.filter((seed) => seed.growEnd <= now);\n    \n    if (completedSeeds.length === 0) {\n      return true;\n    }\n    \n    try {\n      // Process all completed seeds\n      const updatePromises = completedSeeds.map(async (seed) => {\n        const newCrop = masterResources.find((res) => res.type === seed.output);\n        \n        if (!newCrop) {\n          console.warn(`No target resource found for seed output: ${seed.output}`);\n          return null;\n        }\n\n        try {\n          const response = await updateGridResource(\n            gridId, \n            { \n              type: newCrop.type,\n              x: seed.x,\n              y: seed.y,\n            },\n            true\n          );\n\n          if (response?.success) {\n            return { seed, enriched: { ...newCrop, x: seed.x, y: seed.y } };\n          }\n          return null;\n        } catch (error) {\n          console.error(`Error syncing seed at (${seed.x}, ${seed.y}):`, error);\n          return null;\n        }\n      });\n\n      // Wait for all updates\n      const results = await Promise.all(updatePromises);\n      const successfulUpdates = results.filter(result => result !== null);\n      \n      // Update local state\n      if (successfulUpdates.length > 0) {\n        setResources(prev => {\n          const seedPositions = successfulUpdates.map(({ seed }) => `${seed.x},${seed.y}`);\n          const filtered = prev.filter(r => !seedPositions.includes(`${r.x},${r.y}`));\n          const newCrops = successfulUpdates.map(({ enriched }) => enriched);\n          return [...filtered, ...newCrops];\n        });\n        \n        // Remove from farmState\n        const processedSeeds = successfulUpdates.map(({ seed }) => seed);\n        this.farmState = this.farmState.filter(s => !processedSeeds.includes(s));\n      }\n      \n      return true;\n    } catch (error) {\n      console.error('❌ Error during force sync:', error);\n      return false;\n    }\n  }\n  \n  /**\n   * Stop the seed timer.\n   */\n  stopSeedTimer() {\n    if (farmTimer) clearInterval(farmTimer);\n    farmTimer = null;\n    // Clear farmState when stopping to prevent stale data\n    this.farmState = [];\n  }\n}\n\nconst farmStateInstance = new FarmState();\nexport default farmStateInstance;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './Notifications.css';\nimport { useStrings } from '../StringsContext';\n\n// Global notification manager\nlet notificationRoot = null;\nlet notificationTimer = null;\nlet globalClickHandlers = {};\n\n/**\n * Generic notification component\n */\nfunction Notification({ type, data, onDismiss, onClick }) {\n    const strings = useStrings();\n    \n    // Add unmount detection\n    React.useEffect(() => {\n        return () => {\n        };\n    }, []);\n    \n    React.useEffect(() => {\n        // Auto-dismiss after 5 seconds (except for 'To Do' and 'Message' notifications)\n        if (type !== 'To Do' && type !== 'Message') {\n            const timer = setTimeout(() => {\n                onDismiss();\n            }, 5000);\n            \n            return () => {\n                clearTimeout(timer);\n            };\n        } else {\n        }\n        // Remove onDismiss from dependencies to prevent re-running effect\n    }, [type]);\n    \n    // Render different content based on notification type\n    const renderContent = () => {\n        switch (type) {\n            case 'Trophy':\n                return (\n                    <>\n                        <div className=\"notification-icon-wrapper\">\n                            <div className=\"notification-icon\">🏆</div>\n                            {data.type === 'Progress' && data.progress && (\n                                <div className=\"notification-milestone\">{data.progress}</div>\n                            )}\n                            {data.type === 'Count' && data.qty && (\n                                <div className=\"notification-milestone\">{data.qty}x</div>\n                            )}\n                        </div>\n                        <div className=\"notification-text\">\n                            <div className=\"notification-title\">{strings[6003]}</div>\n                            <div className=\"notification-name\">{data.name}</div>\n                        </div>\n                    </>\n                );\n            \n            case 'Phase Change':\n                return (\n                    <>\n                        <div className=\"notification-icon-wrapper\">\n                            <div className=\"notification-icon\">🌙</div>\n                        </div>\n                        <div className=\"notification-text\">\n                            <div className=\"notification-title\">Phase Change</div>\n                            <div className=\"notification-name\">{data.message || 'Day has turned to night'}</div>\n                        </div>\n                    </>\n                );\n            \n            case 'Message':\n                return (\n                    <>\n                        <div className=\"notification-icon-wrapper\">\n                            <div className=\"notification-icon\">📨</div>\n                        </div>\n                        <div className=\"notification-text\">\n                            <div className=\"notification-title\">{data.title || 'New Message'}</div>\n                            <div className=\"notification-name\">{data.message}</div>\n                        </div>\n                    </>\n                );\n\n            case 'To Do':\n                return (\n                    <>\n                        <div className=\"notification-icon-wrapper\">\n                            <div className=\"notification-icon\">✅</div>\n                        </div>\n                        <div className=\"notification-text\">\n                            <div className=\"notification-title\">{data.title || strings[204]}</div>\n                            <div className=\"notification-name\">{data.message}</div>\n                        </div>\n                    </>\n                );\n\n            case 'Tip':\n                return (\n                    <>\n                        <div className=\"notification-icon-wrapper\">\n                            <div className=\"notification-icon\">ℹ️</div>\n                        </div>\n                        <div className=\"notification-text\">\n                            <div className=\"notification-title\">{data.title || strings[7001]}</div>\n                            <div className=\"notification-name\">{data.message}</div>\n                        </div>\n                    </>\n                );\n\n            default:\n                return (\n                    <>\n                        <div className=\"notification-icon-wrapper\">\n                            <div className=\"notification-icon\">ℹ️</div>\n                        </div>\n                        <div className=\"notification-text\">\n                            <div className=\"notification-title\">Notification</div>\n                            <div className=\"notification-name\">{data.message || 'Something happened!'}</div>\n                        </div>\n                    </>\n                );\n        }\n    };\n    \n    // Add persistent class for notifications that shouldn't auto-dismiss\n    const isPersistent = type === 'To Do' || type === 'Message';\n    const className = `notification ${isPersistent ? 'notification-persistent' : ''}`;\n    \n    return (\n        <div className={className} onClick={onClick} style={{ cursor: onClick ? 'pointer' : 'default' }}>\n            <button className=\"notification-dismiss\" onClick={(e) => {\n                e.stopPropagation();\n                onDismiss();\n            }}>×</button>\n            <div className=\"notification-content\">\n                {renderContent()}\n            </div>\n        </div>\n    );\n}\n\n/**\n * Shows a notification\n * @param {string} type - The type of notification ('Trophy', 'Phase Change', 'Message', etc.)\n * @param {Object} data - The data to display in the notification\n * @param {Function} onClick - Optional click handler for the notification\n */\n/**\n * Register a global click handler for a notification type\n * @param {string} type - The notification type\n * @param {Function} handler - The click handler\n */\nexport function registerNotificationClickHandler(type, handler) {\n    globalClickHandlers[type] = handler;\n}\n\nexport function showNotification(type, data, onClick = null) {\n    console.log(`[showNotification] Called with type: ${type}`, data);\n    // Clear any existing notification\n    if (notificationTimer) {\n        clearTimeout(notificationTimer);\n    }\n    \n    // Create or reuse the notification container\n    let container = document.getElementById('notification-container');\n    if (!container) {\n        container = document.createElement('div');\n        container.id = 'notification-container';\n        // Append to game container instead of body\n        const gameContainer = document.querySelector('.game-container') || document.querySelector('.App') || document.body;\n        gameContainer.appendChild(container);\n    }\n    \n    if (!notificationRoot) {\n        notificationRoot = ReactDOM.createRoot(container);\n    }\n    \n    const handleDismiss = () => {\n        console.log(`[handleDismiss] Dismissing notification of type: ${type}`);\n        if (notificationRoot) {\n            notificationRoot.render(null);\n        }\n    };\n    \n    // Use passed onClick or fall back to global handler for this type\n    const clickHandler = onClick || (globalClickHandlers[type] ? () => globalClickHandlers[type](data) : null);\n    \n    // Use a unique key to force React to remount the component and trigger animation\n    const notificationKey = `${type}-${Date.now()}`;\n    \n    notificationRoot.render(\n        <Notification \n            key={notificationKey}\n            type={type}\n            data={data}\n            onDismiss={handleDismiss}\n            onClick={clickHandler}\n        />\n    );\n}","import React, { useState, useRef, useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport './FloatingText.css';\nimport { calculateTileCenter } from '../VFX/VFX.js';\nimport { useStrings } from '../UI/StringsContext';\n\n// Global array to store floating texts - shared across all instances\nlet globalFloatingTexts = [];\nlet globalForceUpdate = null;\n\nconst FloatingTextManager = () => {\n    const [tick, setTick] = useState(0);\n    const strings = useStrings();\n    const instanceIdRef = useRef(Math.floor(Math.random() * 10000));\n\n    const forceUpdate = () => setTick((prev) => prev + 1);\n\n    // Set this instance as the active one for force updates\n    useEffect(() => {\n        globalForceUpdate = forceUpdate;\n        \n        FloatingTextManager.addFloatingText = (message, x, y, TILE_SIZE, options = {}) => {\n            const displayText = typeof message === 'number'\n                ? (strings[message] || `Missing string for code: ${message}`)\n                : message;\n\n            const container = document.querySelector('.homestead');\n            if (!container) return;\n\n            if (isNaN(x) || isNaN(y)) {\n                console.warn('Invalid coordinates in addFloatingText:', { x, y });\n                return;\n            }\n\n            const { centerX, centerY } = calculateTileCenter(x, y, TILE_SIZE);\n            const newId = `${Date.now()}-${Math.floor(Math.random() * 10000)}`;\n            \n            // Edge detection and offset calculation\n            const EDGE_THRESHOLD = 100; // Distance from edge to trigger offset\n            const OFFSET_AMOUNT = 40; // How much to offset when near edge\n            \n            let finalX = centerX;\n            let finalY = centerY;\n            \n            // Get container dimensions (64x64 grid)\n            const gridSize = 64 * TILE_SIZE;\n            \n            // Check left edge\n            if (centerX < EDGE_THRESHOLD) {\n                finalX = centerX + OFFSET_AMOUNT;\n            }\n            // Check right edge\n            else if (centerX > gridSize - EDGE_THRESHOLD) {\n                finalX = centerX - OFFSET_AMOUNT;\n            }\n            \n            // Check top edge\n            if (centerY < EDGE_THRESHOLD) {\n                finalY = centerY + OFFSET_AMOUNT;\n            }\n            // Check bottom edge  \n            else if (centerY > gridSize - EDGE_THRESHOLD) {\n                finalY = centerY - OFFSET_AMOUNT;\n            }\n\n            globalFloatingTexts.push({\n                id: newId,\n                text: displayText,\n                x: finalX,\n                y: finalY,\n                timestamp: Date.now(),\n                color: options.color,\n                size: options.size\n            });\n\n            if (globalForceUpdate) globalForceUpdate();\n        };\n    }, [strings]);\n\n    const container = document.querySelector('.homestead');\n    if (!container) return null;\n    \n    return createPortal(\n        <div className=\"floating-text-container\">\n            {globalFloatingTexts.map(({ id, text, x, y, color, size }) => (\n                <div\n                    key={id}\n                    className=\"floating-text\"\n                    style={{\n                        position: 'absolute',\n                        left: x,\n                        top: y - 30,\n                        transform: 'translate(-50%, -50%)',\n                        color: color || undefined,\n                        fontSize: size || undefined\n                    }}\n                    onAnimationEnd={(e) => {\n                        // Immediately hide the element to prevent visual artifacts\n                        e.target.style.display = 'none';\n                        \n                        globalFloatingTexts = globalFloatingTexts.filter(t => t.id !== id);\n                        if (globalForceUpdate) globalForceUpdate();\n                    }}\n                >\n                    {text}\n                </div>\n            ))}\n        </div>,\n        container\n    );\n};\n\n// Will be assigned inside useEffect\nFloatingTextManager.addFloatingText = (...args) => {\n    console.warn('FloatingTextManager not ready yet', ...args);\n};\n\nexport default FloatingTextManager;","import React, { createContext, useContext, useState } from 'react';\n\nconst PanelContext = createContext();\n\nexport const PanelProvider = ({ children }) => {\n  const [activePanel, setActivePanel] = useState(null);\n\n  const openPanel = (panelName) => {\n    setActivePanel(panelName);\n  };\n  const closePanel = () => {\n    setActivePanel(null);\n  };\n  return (\n    <PanelContext.Provider value={{ activePanel, openPanel, closePanel, closeAllPanels: closePanel }}>\n      {children}\n    </PanelContext.Provider>\n  );\n};\nexport const usePanelContext = () => {\n  return useContext(PanelContext);\n};\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","import API_BASE from './config';\nimport axios from 'axios';\nimport { fetchGridData } from './Utils/GridManagement'; // Utility for fetching grid data\nimport GlobalGridStateTilesAndResources from './GridState/GlobalGridStateTilesAndResources';\n\n/**\n * Grid Initialization (Runs on Refresh or Login)\n * This is for TILES and RESOURCES (not players)\n */\nexport const initializeGrid = async (\n  TILE_SIZE,\n  gridId,\n  setGrid,\n  setResources,\n  setTileTypes,\n  updateStatus,\n  DBPlayerData,\n  masterResources\n) => {\n  try {\n    if (!gridId) {\n      console.error('GridId is missing. Cannot initialize grid.');\n      return;\n    }\n\n    console.log('Initializing grid for gridId:', gridId);\n\n    const gridData = await fetchGridData(gridId, updateStatus, DBPlayerData);\n    const { tiles, resources } = gridData;\n    \n\n    // Process resources to add shadow tiles for multi-tile buildings\n    const processedResources = [];\n    const loadedResources = resources || [];\n    \n    for (const rawResource of loadedResources) {\n      // Enrich resource with master data to get properties like range, passable, etc\n      let resource = rawResource;\n      if (masterResources && masterResources.length > 0) {\n        const template = masterResources.find(r => r.type === rawResource.type);\n        if (template) {\n          resource = {\n            ...template,\n            ...rawResource // Raw data overrides template (for x, y, growEnd, etc)\n          };\n        }\n      }\n      \n      processedResources.push(resource);\n      \n      \n      // If this is a multi-tile resource (has range > 1), create shadow tiles\n      // Note: Resources from server might not have anchorKey, so we generate one if needed\n      if (resource.range && resource.range > 1) {\n        const anchorKey = resource.anchorKey || `${resource.type}-${resource.x}-${resource.y}`;\n        \n        for (let dx = 0; dx < resource.range; dx++) {\n          for (let dy = 0; dy < resource.range; dy++) {\n            // Skip the anchor tile (0,0)\n            if (dx === 0 && dy === 0) continue;\n            \n            const shadowX = resource.x + dx;\n            const shadowY = resource.y - dy;\n            const shadowResource = {\n              type: 'shadow',\n              x: shadowX,\n              y: shadowY,\n              parentAnchorKey: anchorKey,\n              passable: resource.passable\n            };\n            \n            processedResources.push(shadowResource);\n          }\n        }\n      }\n    }\n\n    setGrid(tiles || []);\n    setResources(processedResources);\n    setTileTypes(tiles || []);\n    \n    // Also update the global grid state\n    GlobalGridStateTilesAndResources.setResources(processedResources);\n    \n\n    console.log('Grid, tiles, and resources initialized for gridId:', gridId);\n  } catch (error) {\n    console.error('Error initializing grid:', error);\n  }\n};\n\n\n\n/**\n * Logout Player\n */\nexport const logoutPlayer = (setPlayerData, setisLoginPanelOpen, setGrid, setResources, setTileTypes) => {\n  localStorage.removeItem('player');\n  setPlayerData(null);\n  setGrid([]); // Clear the grid state\n  setResources([]); // Clear resources\n  setTileTypes([]); // Clear tile types\n  setisLoginPanelOpen(true); // Open login modal\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"e009a26f\" + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"game-client:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkgame_client\"] = self[\"webpackChunkgame_client\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","import axios from 'axios';\nimport API_BASE from '../config';\n\n// Utility: detect mobile browser\nexport function isMobile() {\n  return /Mobi|Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n}\n\n// Utility function: return boolean indicating developer status\nexport const checkDeveloperStatus = async (username) => {\n  try {\n    const response = await axios.get(`${API_BASE}/api/check-developer-status/${username}`);\n    return !!response.data?.isDeveloper;\n  } catch (err) {\n    console.warn('⚠️ Failed to check developer status:', err);\n    return false;\n  }\n};\n\n// Badge update helper\nexport function updateBadge(currentPlayer, setBadgeState, category, value = true) {\n  const key = `badges_${currentPlayer.username}`;\n  const current = JSON.parse(localStorage.getItem(key)) || {};\n  const updated = { ...current, [category]: value };\n  localStorage.setItem(key, JSON.stringify(updated));\n  setBadgeState(updated);\n}\n\n// Badge read helper\nexport function getBadgeState(currentPlayer) {\n  if (!currentPlayer?.username) {\n    console.warn(\"⚠️ getBadgeState called without valid currentPlayer\");\n    return {};\n  }\n  const key = `badges_${currentPlayer.username}`;\n  const stored = localStorage.getItem(key);\n  return stored ? JSON.parse(stored) : {};\n}","import React, { useState, useEffect, useRef } from 'react';\nimport socket from '../../socketManager';\nimport { emitChatMessage } from '../../socketManager';\nimport { updateBadge } from '../../Utils/appUtils';\nimport './Chat.css';\nimport API_BASE from '../../config';\n\nconst Chat = ({ currentGridId, currentSettlementId, currentFrontierId, currentPlayer, onClose }) => {\n\n  const [messages, setMessages] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const endRef = useRef(null);\n  const playerId = currentPlayer?._id || 'unknown'; // Fallback if currentPlayer is not available\n\n  useEffect(() => {\n    console.log(\"🟨 Chat component mounted with frontierId:\", currentFrontierId);\n\n    // ✅ Join only frontier chat room\n    if (socket && socket.connected && currentFrontierId) {\n      console.log(\"📡 Joining frontier chat room from Chat.js\");\n      socket.emit('join-chat-rooms', {\n        gridId: null,\n        settlementId: null,\n        frontierId: currentFrontierId,\n      });\n    } else {\n      console.warn(\"⚠️ Socket not connected or no frontierId when Chat mounted.\");\n    }\n\n    // ✅ Clear chat badge on open\n    if (currentPlayer) {\n      updateBadge(currentPlayer, () => {}, 'chat', false ?? true);\n    }\n  }, [currentFrontierId]);\n\n  useEffect(() => {\n    if (!socket) return;\n\n    socket.on('receive-chat-message', (msg) => {\n      // Only show frontier messages\n      if (msg.scope !== 'frontier') return;\n      \n      if (!msg.username && currentPlayer?.username) {\n        msg.username = currentPlayer.username;\n      }\n      console.log(\"📨 Received chat message via socket:\", msg);\n      setMessages(prev => [...prev, msg]);\n    });\n\n    return () => {\n        socket.off('receive-chat-message');\n    };\n    }, [socket]);\n\n\nuseEffect(() => {\n  const fetchMessages = async () => {\n    if (!currentFrontierId) return;\n    \n    try {\n      const res = await fetch(`${API_BASE}/api/chat/frontier/${currentFrontierId}`);\n      const data = await res.json();\n      setMessages(data);\n    } catch (err) {\n      console.error(\"Failed to fetch chat history:\", err);\n    }\n  };\n\n  fetchMessages();\n}, [currentFrontierId]);\n\n\n  useEffect(() => {\n    endRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n\n  const handleSend = (e) => {\n    e.preventDefault();\n    const trimmed = inputText.trim();\n    if (!trimmed || !currentFrontierId) return;\n\n    console.log(\"📨 Sending chat message:\", trimmed);\n\n    emitChatMessage({\n      playerId,\n      username: currentPlayer?.username || 'unknown',\n      message: trimmed,\n      scope: 'frontier',\n      scopeId: currentFrontierId\n    });\n\n    setInputText(''); // ✅ clear input after emitting\n  };\n\n  const handleKeyPress = (e) => {\n    console.log(\"📨 Key pressed:\", e.key);\n    if (e.key === 'Enter') {\n      e.preventDefault(); // Prevents default Enter behavior in input\n      handleSend(e); // Pass the actual event to handleSend\n    }\n  };\n\nreturn (\n    <div className=\"chat-container\">\n\n    <div className=\"chat-panel-header\">\n      <h3>💬 Chat</h3>\n      <button className=\"chat-close-button\" onClick={onClose}>✖</button>\n    </div>\n\n    <div className=\"chat-panel\">\n        <div className=\"chat-messages\">\n        {messages.map((msg, i) => (\n            <div key={msg.id || i} className=\"chat-message\">\n              <strong>{msg.username || '???'}</strong>: {msg.message || '[empty]'}\n            </div>\n        ))}\n        <div ref={endRef} />\n        </div>\n\n        <div className=\"chat-input\">\n        <input\n            type=\"text\"\n            value={inputText}\n            onChange={e => setInputText(e.target.value)}\n            onKeyDown={handleKeyPress}\n            placeholder=\"Message everyone...\"\n        />\n        <button type=\"button\" onClick={handleSend}>Send</button>\n        </div>\n\n    </div>\n    </div>\n  );\n};\n\nexport default Chat;","import React, { createContext, useContext, useState } from 'react';\n\nconst GridStateContext = createContext();\nconst GridStateUpdateContext = createContext();\n\nexport const useGridState = () => useContext(GridStateContext);\nexport const useGridStateUpdate = () => useContext(GridStateUpdateContext);\n\nlet externalSetGridState = null;\nexport const setGridStateExternally = (state) => {\n  if (externalSetGridState) {\n    externalSetGridState(state);\n  }\n};\n\nexport function GridStateProvider({ children }) {\n  const [NPCsInGrid, setGridState] = useState({}); // instead of null  externalSetGridState = setGridState;\n\n  return (\n    <GridStateContext.Provider value={NPCsInGrid}>\n      <GridStateUpdateContext.Provider value={setGridState}>\n        {children}\n      </GridStateUpdateContext.Provider>\n    </GridStateContext.Provider>\n  );\n}","import React, { createContext, useContext, useState } from 'react';\n\nconst GridStatePCContext = createContext();\nconst GridStatePCUpdateContext = createContext();\n\nexport const usePlayersInGrid = () => useContext(GridStatePCContext);\nexport const useGridStatePCUpdate = () => useContext(GridStatePCUpdateContext);\n\nexport function GridStatePCProvider({ children }) {\n  const [playersInGrid, setPlayersInGrid] = useState({});\n\n  return (\n    <GridStatePCContext.Provider value={playersInGrid}>\n      <GridStatePCUpdateContext.Provider value={setPlayersInGrid}>\n        {children}\n      </GridStatePCUpdateContext.Provider>\n    </GridStatePCContext.Provider>\n  );\n}\n","import API_BASE from '../../config';\nimport axios from 'axios';\n\n/**\n * Updates quest progress for a given player.\n * @param {Object} player - Current player object.\n * @param {String} action - Action performed (e.g., \"Skill\", \"Craft\").\n * @param {String} item - Item associated with the action (e.g., \"Horse\", \"Axe\").\n * @param {Number} quantity - Quantity of the item affected.\n * @param {Function} setCurrentPlayer - State updater for the current player.\n */\nexport async function trackQuestProgress(player, action, item, quantity, setCurrentPlayer) {\n  if (!player?.activeQuests?.length) return;\n\n  console.log(\"At trackQuestProgress; action = \",action);\n\n  let questUpdated = false;\n\n  const updatedQuests = player.activeQuests.map((quest) => {\n    if (quest.completed || quest.rewardCollected) return quest; // Skip completed or rewarded quests\n\n    const progress = { ...quest.progress };\n    let goalsCompleted = 0; // Tracks how many goals are completed\n    let totalGoals = 0;     // Tracks total defined goals\n\n    for (let i = 1; i <= 3; i++) {\n      const goalAction = quest[`goal${i}action`];\n      const goalItem = quest[`goal${i}item`];\n      const goalQty = quest[`goal${i}qty`];\n\n      if (!goalAction || !goalItem || !goalQty) continue; // Skip undefined goals\n      totalGoals++; // Count this as a valid goal\n\n      if (goalAction === action && goalItem === item) {\n        progress[`goal${i}`] = Math.min((progress[`goal${i}`] || 0) + quantity, goalQty); // Increment progress\n      }\n\n      // Check if the goal is completed\n      if (progress[`goal${i}`] >= goalQty) goalsCompleted++;\n    }\n\n    // Mark quest as completed if all goals are done\n    if (goalsCompleted === totalGoals && totalGoals > 0) {\n      quest.completed = true;\n    }\n\n    quest.progress = progress;\n    questUpdated = true;\n\n    return quest;\n  });\n\n  if (questUpdated) {\n    try {\n      console.log(\"Saving updated player quests; updatedQuests = \", updatedQuests);\n      const response = await axios.post(`${API_BASE}/api/update-player-quests`, {\n        playerId: player.playerId,\n        activeQuests: updatedQuests,\n      });\n      if (typeof setCurrentPlayer === 'function') {\n        // Only update quest-related fields to avoid overwriting inventory changes\n        setCurrentPlayer(prev => ({\n          ...prev,\n          activeQuests: response.data.player.activeQuests || updatedQuests\n        }));\n      }    \n      } catch (error) {\n      console.error('Error updating quest progress:', error);\n    }\n  }\n}","import API_BASE from '../../config';\nimport axios from 'axios';\nimport FloatingTextManager from \"../../UI/FloatingText\";\nimport NPCsInGridManager from \"../../GridState/GridStateNPCs\";\nimport playersInGridManager from \"../../GridState/PlayersInGrid\";\nimport { calculateDistance } from \"../../Utils/worldHelpers\";\nimport { extractXY } from \"../NPCs/NPCUtils\";\nimport { updateGridResource } from \"../../Utils/GridManagement\";\nimport GlobalGridStateTilesAndResources from '../../GridState/GlobalGridStateTilesAndResources';\nimport { trackQuestProgress } from '../Quests/QuestGoalTracker';\nimport { createCollectEffect } from \"../../VFX/VFX\";\nimport { earnTrophy } from '../Trophies/TrophyUtils';\n\n/** Helper to get tiles in line of sight between two points using Bresenham's algorithm **/\nfunction getLineOfSightTiles(start, end) {\n    const tiles = [];\n    let x0 = Math.floor(start.x);\n    let y0 = Math.floor(start.y);\n    const x1 = Math.floor(end.x);\n    const y1 = Math.floor(end.y);\n    \n    const dx = Math.abs(x1 - x0);\n    const dy = Math.abs(y1 - y0);\n    const sx = x0 < x1 ? 1 : -1;\n    const sy = y0 < y1 ? 1 : -1;\n    let err = dx - dy;\n    \n    while (true) {\n        // Don't include the start or end positions\n        if ((x0 !== Math.floor(start.x) || y0 !== Math.floor(start.y)) && \n            (x0 !== x1 || y0 !== y1)) {\n            tiles.push({ x: x0, y: y0 });\n        }\n        \n        if (x0 === x1 && y0 === y1) break;\n        \n        const e2 = 2 * err;\n        if (e2 > -dy) {\n            err -= dy;\n            x0 += sx;\n        }\n        if (e2 < dx) {\n            err += dx;\n            y0 += sy;\n        }\n    }\n    \n    return tiles;\n}\n\n/** Helper to check if there's a wall blocking line of sight **/\nfunction isWallBlocking(start, end) {\n    const resources = GlobalGridStateTilesAndResources.getResources();\n    const lineOfSightTiles = getLineOfSightTiles(start, end);\n    \n    // Check each tile in the line of sight for walls\n    for (const tile of lineOfSightTiles) {\n        const wall = resources.find(res => \n            res.x === tile.x && \n            res.y === tile.y && \n            res.action === 'wall'\n        );\n        if (wall) {\n            return true; // Wall found blocking the path\n        }\n    }\n    \n    return false; // No walls blocking\n}\n\n/** Helper to check if target is in range and validate positions **/\nfunction checkRange(player, target, TILE_SIZE) {\n\n    const playerPos = player.position;\n    const targetPos = extractXY(target.position);\n    \n    console.log('Fetched positions: playerPos =', playerPos, '; targetPos =', targetPos);\n    if (!targetPos) {\n        console.error(\"Invalid target position\", { targetPos });\n        FloatingTextManager.addFloatingText(505, 0, 0, TILE_SIZE);\n        return false;\n    }\n\n    const distance = calculateDistance(playerPos, targetPos);\n    const playerRange = player.attackrange || 1;\n    console.log('playerRange = ',playerRange);\n    console.log('playerPos = ',playerPos);\n\n    if (distance > playerRange) {\n        FloatingTextManager.addFloatingText(501, targetPos.x, targetPos.y, TILE_SIZE);\n        console.log('target out of range: targetPos.x = ',targetPos.x,' targetPos.y= ',targetPos.y);\n        return false;\n    }\n    \n    // Check for walls blocking line of sight\n    if (isWallBlocking(playerPos, targetPos)) {\n        FloatingTextManager.addFloatingText(40, targetPos.x, targetPos.y, TILE_SIZE); // string[40] for wall blocking\n        console.log('Wall blocking attack from player to target');\n        return false;\n    }\n    \n    return true;  // Target is in range and no walls blocking\n}\n\n/** Helper to determine if the attack hits **/\nfunction isAHit(player, target, TILE_SIZE) {\n\n    const attackRoll = Math.floor(Math.random() * 20) + 1;\n    const hitRoll = attackRoll + (player.attackbonus || 0);\n\n    console.log(`Attack roll: ${attackRoll}, Attack bonus: ${player.attackbonus}`);\n    console.log(`Total hit roll: ${hitRoll}, Target armor class: ${target.armorclass}`);\n\n    if (hitRoll >= target.armorclass) {\n        FloatingTextManager.addFloatingText(502, target.position.x, target.position.y-1, TILE_SIZE);\n        return true;\n    } else {\n        FloatingTextManager.addFloatingText(503, target.position.x, target.position.y, TILE_SIZE);\n        return false;\n    }\n}\n\n/** Helper to calculate damage **/\nfunction calculateDamage(player) {\n    const randomDamageModifier = Math.floor(Math.random() * 6) + 1;\n    const damage = (player.damage || 0) + randomDamageModifier;\n    console.log(`Damage roll: ${randomDamageModifier}, player damage: ${player.damage}, Damage dealt: ${damage}`);\n    return damage;\n}\n\n/** handle attack on NPC **/\nexport async function handleAttackOnNPC(npc, currentPlayer, setCurrentPlayer, TILE_SIZE, setResources, masterResources, masterTrophies = null) {\n    console.log(`Handling attack on NPC ${npc.id}.`);\n\n    // Translate currentPlayer to pc from playersInGridManager\n    const gridId = currentPlayer.location.g;\n    const playerId = currentPlayer._id.toString();  // Convert ObjectId to string for matching\n    console.log('playerId = ', playerId);\n    const player = playersInGridManager.getPlayersInGrid(gridId)?.[playerId];\n    console.log('player = ', player);\n    if (!player) {\n        console.error(`Player not found in playersInGrid for playerId: ${playerId}.`);\n        return;\n    }\n\n    const freshNPC = NPCsInGridManager.getNPCsInGrid(gridId)?.[npc.id] || npc;\n\n    if (player.iscamping) {\n        FloatingTextManager.addFloatingText(31, freshNPC.position.x, freshNPC.position.y, TILE_SIZE);\n        return;\n    }\n    if (!checkRange(player, freshNPC, TILE_SIZE)) return;\n    if (!isAHit(player, freshNPC, TILE_SIZE)) return;\n \n    const damage = calculateDamage(player);\n    FloatingTextManager.addFloatingText(`- ${damage} ❤️‍🩹 HP`, freshNPC.position.x, freshNPC.position.y, TILE_SIZE);\n    createCollectEffect(freshNPC.position.x, freshNPC.position.y, TILE_SIZE);\n\n    freshNPC.hp -= damage;\n    await NPCsInGridManager.updateNPC(gridId, freshNPC.id, {\n      hp: freshNPC.hp,\n      position: freshNPC.position,\n      state: freshNPC.state,\n    });\n\n    if (freshNPC.hp <= 0) {\n        console.log(`NPC ${freshNPC.id} killed.`);\n        FloatingTextManager.addFloatingText(504, freshNPC.position.x, freshNPC.position.y-1, TILE_SIZE);\n\n        try {\n            await NPCsInGridManager.removeNPC(gridId, freshNPC.id);\n            console.log(`NPC ${freshNPC.id} successfully removed from grid.`);\n\n            // Add the Dead NPC \"output\" to the grid:\n            if (freshNPC.output) {\n                console.log(`Spawning resource: ${freshNPC.output} at NPC's death position.`);\n                const resourceDetails = masterResources.find((res) => res.type === freshNPC.output);\n\n                const enrichedResource = {\n                    ...resourceDetails,\n                    type: freshNPC.output,\n                    x: Math.floor(freshNPC.position.x),\n                    y: Math.floor(freshNPC.position.y),\n                    category: resourceDetails.category || 'doober',\n                    symbol: resourceDetails.symbol || '❓',\n                    qtycollected: resourceDetails.qtycollected || 1,\n                };\n\n                const updatedResources = [\n                    ...GlobalGridStateTilesAndResources.getResources(),\n                    enrichedResource\n                ];\n                GlobalGridStateTilesAndResources.setResources(updatedResources);\n                setResources((prevResources) => [...prevResources, enrichedResource]);\n\n                await updateGridResource(\n                    gridId, \n                    { \n                      type: freshNPC.output,\n                      x: Math.floor(freshNPC.position.x),\n                      y: Math.floor(freshNPC.position.y),\n                    },\n                    setResources,\n                    true\n                  );\n            } else {\n                console.warn(`NPC ${freshNPC.id} has no output resource defined.`);\n            }\n        } catch (error) {\n            console.error('Error removing NPC or spawning resource:', error);\n        }\n        \n        // Special case for Duke Angelo - auto-accept quest if not active\n        if (freshNPC.type === 'Duke Angelo') {\n            // Award \"Kill the Duke\" trophy when Duke Angelo is defeated\n            if (masterTrophies && currentPlayer?.playerId) {\n                try {\n                    console.log('🏆 Awarding Kill the Duke trophy for defeating Duke Angelo');\n                    await earnTrophy(currentPlayer.playerId, \"Kill the Duke\", 1, currentPlayer, masterTrophies, setCurrentPlayer);\n                    console.log('✅ Successfully awarded Kill the Duke trophy');\n                } catch (error) {\n                    console.error('❌ Error awarding Kill the Duke trophy:', error);\n                }\n            }\n            \n            const bloodForJulietQuest = currentPlayer.activeQuests?.find(q => q.questId === 'Blood for Juliet');\n            \n            if (!bloodForJulietQuest) {\n                // Quest not active - auto-accept it with completed status\n                try {\n                    const response = await axios.post(`${API_BASE}/api/add-player-quest`, {\n                        playerId: currentPlayer.playerId,\n                        questId: 'Blood for Juliet',\n                        startTime: Date.now(),\n                        progress: { goal1: 1 }, // Mark as already completed\n                        completed: true, // Mark quest as completed\n                    });\n                    \n                    if (response.data.success) {\n                        setCurrentPlayer(response.data.player);\n                        FloatingTextManager.addFloatingText('Quest: Blood for Juliet completed!', freshNPC.position.x, freshNPC.position.y-2, TILE_SIZE);\n                        console.log('Auto-accepted and completed Blood for Juliet quest');\n                    }\n                } catch (error) {\n                    console.error('Error auto-accepting Blood for Juliet quest:', error);\n                }\n            } else {\n                // Quest is active - track progress normally\n                await trackQuestProgress(currentPlayer, 'Kill', freshNPC.type, 1, setCurrentPlayer);\n            }\n        } else {\n            // Normal quest progress tracking for other NPCs\n            await trackQuestProgress(currentPlayer, 'Kill', freshNPC.type, 1, setCurrentPlayer);\n        }\n    }\n}\n\n\nexport async function handleAttackOnPC(pc, currentPlayer, gridId, TILE_SIZE) {\n  const playerId = currentPlayer._id.toString();  // Convert ObjectId to string for matching\n  const player = playersInGridManager.getPlayersInGrid(gridId)?.[playerId];\n  if (!player) {\n    console.error('Player not found in playersInGrid.');\n    return;\n  }\n\n  // Refresh the target PC from memory\n  pc = playersInGridManager.getPlayersInGrid(gridId)?.[pc.playerId] || pc;\n\n  if (!checkRange(player, pc, TILE_SIZE)) return;\n  if (!isAHit(player, pc, TILE_SIZE)) return;\n\n  const damage = calculateDamage(player, gridId);\n  FloatingTextManager.addFloatingText(`- ${damage} HP`, pc.position.x, pc.position.y, TILE_SIZE);\n  createCollectEffect(pc.position.x, pc.position.y, TILE_SIZE);\n\n  const newHP = Math.max(0, pc.hp - damage);\n  console.log('📢 Calling updatePC after reducing HP; current HP:', newHP);\n  await playersInGridManager.updatePC(gridId, pc.playerId, { hp: newHP });\n\n  if (newHP <= 0) {\n    console.log(`PC ${pc.playerId} defeated.`);\n    FloatingTextManager.addFloatingText(504, pc.position.x, pc.position.y+1, TILE_SIZE);\n  }\n}","import API_BASE from \"../../config.js\";\nimport axios from \"axios\";    \nimport FloatingTextManager from \"../../UI/FloatingText.js\";\nimport NPCsInGridManager from \"../../GridState/GridStateNPCs.js\";\nimport { handleAttackOnNPC } from \"../Combat/Combat.js\";\nimport { gainIngredients } from \"../../Utils/InventoryManagement.js\";\nimport { trackQuestProgress } from '../Quests/QuestGoalTracker.js';\nimport AnimalPanel from '../FarmAnimals/FarmAnimals.js';\nimport { calculateDistance } from '../../Utils/worldHelpers.js';\nimport { getLocalizedString } from '../../Utils/stringLookup.js';\nimport { formatSingleCollection } from '../../UI/StatusBar/CollectionFormatters.js';\nimport { calculateSkillMultiplier } from '../../Utils/InventoryManagement.js';\n\n// Generate unique transaction ID\nfunction generateTransactionId() {\n  return `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n}\n\n// Protected farm animal collection function\nasync function handleProtectedFarmAnimalCollection(\n  npc,\n  row,\n  col,\n  setInventory,\n  setBackpack,\n  setResources,\n  currentPlayer,\n  setCurrentPlayer,\n  TILE_SIZE,\n  masterResources,\n  masterSkills,\n  currentGridId,\n  updateStatus,\n  strings = {},\n  globalTuning = null\n) {\n  console.log(`🔒 [PROTECTED FARM ANIMAL] Starting protected collection for NPC ${npc.id}`);\n  \n  // Generate transaction ID and key\n  const transactionId = generateTransactionId();\n  const transactionKey = `farm-animal-collect-${npc.id}-${currentGridId}`;\n  \n  try {\n    console.log(`🐮 Attempting to collect animal - ID: ${npc.id}, State: ${npc.state}, GrazeEnd: ${npc.grazeEnd}, Current Time: ${Date.now()}`);\n    \n    // Double-check the NPC state from the grid manager before making the request\n    const currentNPCState = NPCsInGridManager.getNPCsInGrid(currentGridId)?.[npc.id];\n    if (currentNPCState && currentNPCState.state !== 'processing') {\n      console.warn(`⚠️ NPC ${npc.id} state changed to ${currentNPCState.state} before collection attempt`);\n      updateStatus(`❌ Animal not ready - state: ${currentNPCState.state}`);\n      return { type: 'error', message: `Animal not in processing state (${currentNPCState.state})` };\n    }\n    \n    const response = await axios.post(`${API_BASE}/api/farm-animal/collect`, {\n      playerId: currentPlayer.playerId,\n      gridId: currentGridId,\n      npcId: npc.id,\n      npcPosition: { x: col, y: row },\n      transactionId,\n      transactionKey\n    });\n\n    if (response.data.success) {\n      const { collectedQuantity, collectedItem, skillsApplied, updatedNPC } = response.data;\n      \n      // Don't use server inventory - use gainIngredients to properly handle capacity\n      // This ensures Gold Pass warehouse bonus is respected\n      \n      // Add to inventory using gainIngredients (respects Gold Pass capacity)\n      const gained = await gainIngredients({\n        playerId: currentPlayer.playerId,\n        currentPlayer,\n        resource: collectedItem,\n        quantity: collectedQuantity,\n        inventory: currentPlayer.inventory,\n        backpack: currentPlayer.backpack,\n        setInventory,\n        setBackpack,\n        setCurrentPlayer,\n        updateStatus,\n        masterResources,\n        globalTuning,\n      });\n      \n      if (!gained) {\n        console.error('❌ Failed to add animal product to inventory - warehouse may be full');\n        // Note: gainIngredients will have already shown the appropriate status message\n        return { type: 'error', message: 'Warehouse full' };\n      }\n\n      // Update NPC state\n      if (updatedNPC) {\n        await NPCsInGridManager.updateNPC(currentGridId, npc.id, updatedNPC);\n        \n        // Check if there are other animals at the same position that might need state updates\n        const npcsInGrid = NPCsInGridManager.getNPCsInGrid(currentGridId);\n        const animalsAtSamePosition = Object.values(npcsInGrid || {}).filter(otherNpc => \n          otherNpc.id !== npc.id &&\n          Math.floor(otherNpc.position?.x) === col &&\n          Math.floor(otherNpc.position?.y) === row &&\n          otherNpc.action === 'graze'\n        );\n        \n        if (animalsAtSamePosition.length > 0) {\n          console.log(`🐮 Found ${animalsAtSamePosition.length} other animals at same stall position after collection`);\n          console.log(`🐮 Other animals at position:`, animalsAtSamePosition.map(a => ({\n            id: a.id,\n            state: a.state,\n            grazeEnd: a.grazeEnd,\n            targetStall: a.targetStall\n          })));\n          \n          // For animals in processing state at the same stall, they can remain in processing\n          // The server should handle their collection independently\n          // Only log the situation for debugging\n          for (const otherAnimal of animalsAtSamePosition) {\n            if (otherAnimal.state === 'processing') {\n              console.log(`🐮 Animal ${otherAnimal.id} remains in processing state at same stall - ready for collection`);\n            } else if (otherAnimal.state === 'stall') {\n              console.log(`🐮 Animal ${otherAnimal.id} is still moving to stall`);\n            } else {\n              console.log(`🐮⚠️ Animal ${otherAnimal.id} in unexpected state '${otherAnimal.state}' at stall position`);\n            }\n          }\n        }\n      }\n\n      // Visual feedback\n      FloatingTextManager.addFloatingText(`+${collectedQuantity} ${getLocalizedString(collectedItem, strings)}`, col, row, TILE_SIZE);\n      \n      // Calculate skill info for formatting\n      const skillInfo = calculateSkillMultiplier(collectedItem, currentPlayer.skills || [], masterSkills);\n      \n      // Format status message using shared formatter\n      const statusMessage = formatSingleCollection('animal', collectedItem, collectedQuantity, \n        skillInfo.hasSkills ? skillInfo : null, strings, getLocalizedString);\n      \n      // Update status with the formatted message\n      updateStatus(statusMessage);\n\n      // ✅ Track quest progress for NPC graze collection\n      await trackQuestProgress(currentPlayer, 'Collect', collectedItem, collectedQuantity, setCurrentPlayer);\n\n      console.log(`Farm animal collection completed: ${collectedQuantity} ${collectedItem}`);\n      return { \n        type: 'success', \n        message: `Collected ${collectedQuantity} ${collectedItem}.`,\n        collectedItem,\n        collectedQuantity,\n        skillsApplied\n      };\n    }\n  } catch (error) {\n    console.error('Error in protected farm animal collection:', error);\n    \n    if (error.response?.status === 429) {\n      updateStatus(471);\n      return { type: 'error', message: 'Collection already in progress' };\n    } else if (error.response?.status === 400) {\n      const errorMessage = error.response?.data?.error || 'Animal not ready for collection';\n      const errorDetails = error.response?.data;\n      console.error(`❌ 400 Error details:`, errorDetails);\n      \n      // Handle warehouse full error\n      if (errorMessage === 'Warehouse full') {\n        console.error(`❌ Cannot collect: Warehouse is full (${errorDetails.currentUsage}/${errorDetails.capacity})`);\n        updateStatus(20); // Warehouse full status message\n        return { type: 'error', message: 'Warehouse is full' };\n      }\n      \n      console.error(`❌ Animal state mismatch - Client state: ${npc.state}, Server error: ${errorMessage}`);\n      console.error(`❌ Animal details - ID: ${npc.id}, GrazeEnd: ${npc.grazeEnd}, Current Time: ${Date.now()}`);\n      \n      // If server says NPC is in different state, sync with server state\n      if (errorMessage.includes('state:')) {\n        const serverStateMatch = errorMessage.match(/\\(state:\\s*(\\w+)\\)/);\n        if (serverStateMatch) {\n          const serverState = serverStateMatch[1];\n          console.error(`❌ Server reports NPC ${npc.id} in state '${serverState}' but client has '${npc.state}'`);\n          \n          // Force refresh the NPC from server\n          console.log(`🔄 Attempting to resync NPC ${npc.id} state with server...`);\n          \n          // Update local state to match server\n          await NPCsInGridManager.updateNPC(currentGridId, npc.id, {\n            state: serverState\n          });\n          \n          // Check if there's another animal at this position that might be in processing state\n          const npcsInGrid = NPCsInGridManager.getNPCsInGrid(currentGridId);\n          const otherProcessingAnimal = Object.values(npcsInGrid || {}).find(otherNpc => \n            otherNpc.id !== npc.id &&\n            Math.floor(otherNpc.position?.x) === col &&\n            Math.floor(otherNpc.position?.y) === row &&\n            otherNpc.action === 'graze' &&\n            otherNpc.state === 'processing'\n          );\n          \n          if (otherProcessingAnimal) {\n            console.log(`🐮 Found another processing animal at same position after sync. Trying to collect from NPC ${otherProcessingAnimal.id}`);\n            updateStatus(`Trying another animal at this stall...`);\n            \n            // Try to collect from the other animal\n            return await handleProtectedFarmAnimalCollection(\n              otherProcessingAnimal,\n              row,\n              col,\n              setInventory,\n              setBackpack,\n              setResources,\n              currentPlayer,\n              setCurrentPlayer,\n              TILE_SIZE,\n              masterResources,\n              masterSkills,\n              currentGridId,\n              updateStatus,\n              strings,\n              globalTuning\n            );\n          }\n          \n          updateStatus(`❌ Animal not ready - server state: ${serverState}`);\n        }\n      } else {\n        updateStatus(`❌ ${errorMessage}`);\n      }\n      return { type: 'error', message: errorMessage };\n    } else {\n      updateStatus('❌ Failed to collect from animal');\n      return { type: 'error', message: 'Failed to collect from animal' };\n    }\n  }\n}\n\nexport function loadNPCDefinitions(resources) {\n    const npcDefinitions = {};\n    resources.forEach((resource) => {\n      if (resource.category === 'npc') {\n        npcDefinitions[resource.type] = resource;\n      }\n    });\n    return npcDefinitions;\n}\n  \nexport function extractXY(location) {\n  if (!location || location.x === undefined || location.y === undefined) {\n    console.error(\"Invalid location object\", location);\n    return null;\n  }\n  return { x: location.x, y: location.y };\n}\n\n// Re-export calculateDistance from worldHelpers to maintain backward compatibility\nexport { calculateDistance } from '../../Utils/worldHelpers.js';\n  \nexport async function handleNPCClick(\n  npc,\n  row,\n  col,\n  setInventory,\n  setBackpack,\n  setResources,\n  currentPlayer,\n  setCurrentPlayer,\n  TILE_SIZE,\n  masterResources,\n  masterSkills,\n  currentGridId,\n  setModalContent,\n  setIsModalOpen,\n  updateStatus,\n  openPanel,\n  setActiveStation,\n  strings = {},\n  masterTrophies = null,\n  globalTuning = null\n) {\n  if (!npc) {\n    console.warn(\"handleNPCClick was called with an undefined NPC.\");\n    return;\n  }\n  console.log(`[🐮↖️ handleNPCClick] NPC ${npc.id} clicked with state=${npc.state}`);\n\n  switch (npc.action) {\n\n    case 'quest': \n    case 'heal':\n    case 'worker':\n      {\n        //handled directly in RenderDynamic  \n        break;\n      }\n \n    case 'graze': {\n\n      console.log(`Handling grazing logic for NPC ${npc.id}.`);\n\n      if (npc.state !== 'processing') {\n        console.log(`🐮 NPC ${npc.id} clicked but not in processing state: ${npc.state}`);\n        \n        // Get fresh state data to check for other animals\n        const npcsInGrid = NPCsInGridManager.getNPCsInGrid(currentGridId);\n        \n        // Log all animals at this position for debugging\n        const allAnimalsAtPosition = Object.values(npcsInGrid || {}).filter(otherNpc =>\n          Math.floor(otherNpc.position?.x) === col &&\n          Math.floor(otherNpc.position?.y) === row &&\n          otherNpc.action === 'graze'\n        );\n        \n        if (allAnimalsAtPosition.length > 1) {\n          console.log(`🐮 Found ${allAnimalsAtPosition.length} animals at position (${col}, ${row}):`, \n            allAnimalsAtPosition.map(a => ({\n              id: a.id,\n              state: a.state,\n              grazeEnd: a.grazeEnd\n            }))\n          );\n        }\n        \n        // Find an animal in processing state at this position\n        const processingAnimalAtSamePosition = allAnimalsAtPosition.find(otherNpc => \n          otherNpc.id !== npc.id &&\n          otherNpc.state === 'processing'\n        );\n        \n        if (processingAnimalAtSamePosition) {\n          console.log(`🐮 Found another animal in processing state at same position. Switching to collect from NPC ${processingAnimalAtSamePosition.id} (state: ${processingAnimalAtSamePosition.state}) instead of ${npc.id} (state: ${npc.state})`);\n          // Recursively call handleNPCClick with the processing animal\n          return await handleNPCClick(\n            processingAnimalAtSamePosition,\n            row,\n            col,\n            setInventory,\n            setResources,\n            currentPlayer,\n            setCurrentPlayer,\n            TILE_SIZE,\n            masterResources,\n            masterSkills,\n            currentGridId,\n            setModalContent,\n            setIsModalOpen,\n            updateStatus,\n            openPanel,\n            setActiveStation,\n            strings\n          );\n        }\n\n        // Set the active station before opening the panel\n        setActiveStation({\n          type: npc.type,\n          position: { x: col, y: row },\n          gridId: currentGridId,\n          npcId: npc.id, // Include the NPC ID for reliable identification\n        });\n        openPanel('AnimalPanel');\n\n        return { type: 'info', message: 'NPC is not ready for collection.' };\n      }\n\n      // ✅ Otherwise, handle Animals in stalls in \"procesing\" state\n\n      // ✅ Use protected transaction system instead of UI lock hack\n      return await handleProtectedFarmAnimalCollection(\n        npc,\n        row,\n        col,\n        setInventory,\n        setBackpack,\n        setResources,\n        currentPlayer,\n        setCurrentPlayer,\n        TILE_SIZE,\n        masterResources,\n        masterSkills,\n        currentGridId,\n        updateStatus,\n        strings,\n        globalTuning\n      );\n    }\n\n    case 'attack': \n    case 'spawn':\n      handleAttackOnNPC(npc,currentPlayer,setCurrentPlayer,TILE_SIZE,setResources,masterResources,masterTrophies);\n      \n    break;\n  \n\n    default:\n      console.log(`Unhandled NPC action: ${npc.action}`);\n      break;\n  }\n}\n","import API_BASE from '../config';\nimport axios from 'axios';\nimport playersInGridManager from '../GridState/PlayersInGrid';\n\n// Helper function to check if an item is a currency (doesn't count against inventory)\nexport const isCurrency = (resourceType) => {\n  return resourceType === 'Money' || \n         resourceType === 'Gem' || \n         resourceType === 'Yellow Heart' ||\n         resourceType === 'Green Heart' ||\n         resourceType === 'Purple Heart';\n};\n\n/**\n * Calculate skill multiplier for a specific resource type\n * @param {String} resourceType - The resource type to check skills for\n * @param {Array} playerSkills - Player's skills array\n * @param {Object} masterSkills - Master skills definitions\n * @returns {Object} Object containing multiplier, applicable skills, and whether skills apply\n */\nexport function calculateSkillMultiplier(resourceType, playerSkills, masterSkills) {\n  const applicableSkills = [];\n  let multiplier = 1;\n  \n  // Find all skills that buff this resource type\n  playerSkills.forEach(skill => {\n    const buffValue = masterSkills?.[skill.type]?.[resourceType];\n    if (buffValue && buffValue > 1) {\n      applicableSkills.push(skill.type);\n      multiplier *= buffValue;\n    }\n  });\n  \n  return {\n    multiplier,\n    skills: applicableSkills,\n    hasSkills: applicableSkills.length > 0\n  };\n}\n\n/**\n * Apply skill multiplier to a base quantity\n * @param {Number} baseQuantity - Base quantity before skills\n * @param {Number} multiplier - Skill multiplier\n * @returns {Number} Final quantity after applying skills\n */\nexport function applySkillMultiplier(baseQuantity, multiplier) {\n  return Math.floor(baseQuantity * multiplier);\n}\n\n/**\n * Derives the total warehouse and backpack capacity based on player skills and master resources.\n * @param {object} currentPlayer - The player object including skills and base capacities.\n * @param {Array} masterResources - Array of all master resource definitions.\n * @param {object} globalTuning - Global tuning configuration object.\n * @returns {object} - { warehouse: number, backpack: number }\n */\n\nexport function deriveWarehouseAndBackpackCapacity(currentPlayer, masterResources, globalTuning) {\n  const baseWarehouse = currentPlayer?.warehouseCapacity || 0;\n  const baseBackpack = currentPlayer?.backpackCapacity || 0;\n  const isGold = currentPlayer?.accountStatus === \"Gold\";\n  \n  // Get Gold bonuses from globalTuning parameter\n  const warehouseBonus = isGold ? (globalTuning?.warehouseCapacityGold || 100000) : 0;\n  const backpackBonus = isGold ? (globalTuning?.backpackCapacityGold || 5000) : 0;\n\n  return (currentPlayer?.skills || []).reduce(\n    (acc, skill) => {\n      const skillDetails = masterResources?.find(res => res.type === skill.type);\n      if (skillDetails) {\n        const bonus = skillDetails.qtycollected || 0;\n        if (skillDetails.output === 'warehouseCapacity') {\n          acc.warehouse += bonus;\n        } else if (skillDetails.output === 'backpackCapacity') {\n          acc.backpack += bonus;\n        }\n      }\n      return acc;\n    },\n    { warehouse: baseWarehouse + warehouseBonus, backpack: baseBackpack + backpackBonus }\n  );\n}\n\n\n\nexport const canAfford = (recipe, inventory = [], backpack = [], amount = 1) => {\n  if (!recipe) return false;\n  const inv = Array.isArray(inventory) ? inventory : [];\n  const bp = Array.isArray(backpack) ? backpack : [];\n  // Check up to 10 ingredients to support all recipes\n  for (let i = 1; i <= 10; i++) {\n    const ingredientType = recipe[`ingredient${i}`];\n    const ingredientQty = recipe[`ingredient${i}qty`] * amount;\n    if (ingredientType && ingredientQty >= 0) {\n      const backpackItem = bp.find((item) => item.type === ingredientType);\n      const inventoryItem = inv.find((item) => item.type === ingredientType);\n      const totalQty = (backpackItem?.quantity || 0) + (inventoryItem?.quantity || 0);\n      if (totalQty < ingredientQty) { return false; }\n    }\n  }\n  return true;\n};\n\n/**\n * Checks if there's room to store a resource without actually adding it\n * @param {object} params - Parameters for checking capacity\n * @returns {boolean} - True if there's room, false otherwise\n */\nexport const hasRoomFor = ({\n  resource,\n  quantity,\n  currentPlayer,\n  inventory,\n  backpack,\n  masterResources,\n  globalTuning\n}) => {\n  const isCurrencyItem = isCurrency(resource);\n  const isHomestead = currentPlayer?.location?.gtype === 'homestead';\n  const storingInBackpack = !isCurrencyItem && !isHomestead;\n  \n  \n  // Currencies always have room\n  if (isCurrencyItem) return true;\n  \n  // Check backpack skill if storing in backpack\n  if (storingInBackpack) {\n    const hasBackpackSkill = currentPlayer?.skills?.some((item) => item.type === 'Backpack' && item.quantity > 0);\n    if (!hasBackpackSkill) {\n      return false;\n    }\n  }\n  \n  // Check capacity\n  const target = isHomestead ? inventory : backpack;\n  \n  const { warehouse, backpack: maxBackpack } = deriveWarehouseAndBackpackCapacity(currentPlayer, masterResources || [], globalTuning);\n  const capacity = isHomestead ? warehouse : maxBackpack;\n  \n  const totalItems = target\n    .filter(item => item && !isCurrency(item.type) && typeof item.quantity === 'number')\n    .reduce((acc, item) => acc + item.quantity, 0);\n    \n  return totalItems + quantity <= capacity;\n};\n\n\nexport async function fetchInventoryAndBackpack(playerId) {\n  if (!playerId) {\n    console.error('No playerId provided for fetching inventory and backpack');\n    return { inventory: [], backpack: [] };\n  }\n  try {\n    const response = await axios.get(`${API_BASE}/api/inventory/${playerId}`);\n    return {\n      inventory: response.data?.inventory || [],\n      backpack: response.data?.backpack || [],\n      warehouseCapacity: response.data?.warehouseCapacity || 0,\n      backpackCapacity: response.data?.backpackCapacity || 0,\n    };\n  } catch (error) {\n    console.error('Error fetching inventory and backpack:', error);\n    return { inventory: [], backpack: [] };\n  }\n}\n\nexport async function fetchInventory(playerId) {\n  if (!playerId) {\n    console.error('No playerId provided for fetching inventory');\n    return [];\n  }\n  try {\n    const response = await axios.get(`${API_BASE}/api/inventory/${playerId}`);\n    return response.data?.inventory || [];\n  } catch (error) {\n    console.error('Error fetching inventory:', error);\n    return [];\n  }\n}\n\n \n/**\n * Refreshes the player's state after an inventory update.\n * Ensures that the latest inventory and other properties are reflected in the UI.\n * @param {string} playerId - The player's ID.\n * @param {Function} setCurrentPlayer - Function to update the currentPlayer state.\n * @param {boolean} preserveInventory - If true, preserves local inventory/backpack state\n */\nexport async function refreshPlayerAfterInventoryUpdate(playerId, setCurrentPlayer, preserveInventory = true) {\n  try {\n    const response = await axios.get(`${API_BASE}/api/player/${playerId}`);\n    const updatedPlayerData = response.data;\n    \n    // If preserveInventory is true, keep the current inventory and backpack\n    if (preserveInventory) {\n      setCurrentPlayer(currentPlayer => {\n        const merged = {\n          ...updatedPlayerData,\n          inventory: currentPlayer.inventory,\n          backpack: currentPlayer.backpack\n        };\n        \n        // Pull latest location from playersInGridManager if available\n        const gridPlayer = playersInGridManager.getPlayersInGrid(merged.location?.g)?.[playerId];\n        if (gridPlayer) {\n          merged.location = {\n            ...merged.location,\n            x: gridPlayer.position.x,\n            y: gridPlayer.position.y,\n          };\n        }\n        \n        return merged;\n      });\n    } else {\n      // Original behavior - full replacement\n      // Pull latest location from playersInGridManager if available\n      const gridPlayer = playersInGridManager.getPlayersInGrid(updatedPlayerData.location?.g)?.[playerId];\n      if (gridPlayer) {\n        updatedPlayerData.location = {\n          ...updatedPlayerData.location,\n          x: gridPlayer.position.x,\n          y: gridPlayer.position.y,\n        };\n      }\n      setCurrentPlayer(updatedPlayerData);\n    }\n  } catch (error) {\n    console.error('Error refreshing player:', error);\n  }\n}\n\n\n\n////////////////////////////////////////\nexport async function gainIngredients({\n  playerId,\n  currentPlayer,\n  resource,\n  quantity,\n  inventory,\n  backpack,\n  setInventory,\n  setBackpack,\n  setCurrentPlayer,\n  updateStatus,\n  masterResources,\n  globalTuning,\n}) {\n  const isCurrencyItem = isCurrency(resource);\n  const isHomestead = currentPlayer?.location?.gtype === 'homestead';\n  const storingInBackpack = !isCurrencyItem && !isHomestead;\n\n  const target = isCurrencyItem || isHomestead ? [...inventory] : [...backpack];\n\n  // ✅ Backpack skill check if storing in backpack\n  if (storingInBackpack) {\n    const hasBackpackSkill = currentPlayer?.skills?.some((item) => item.type === 'Backpack' && item.quantity > 0);\n    if (!hasBackpackSkill) {\n      if (updateStatus) updateStatus(19); // Missing backpack\n      return {\n        success: false,\n        isCapacityError: true, // Treat missing backpack as a capacity issue\n        isNetworkError: false,\n        error: new Error('Missing backpack skill')\n      };\n    }\n  }\n    \n  // ✅ Capacity check\n  if (!isCurrencyItem) {\n    const { warehouse, backpack: maxBackpack } = deriveWarehouseAndBackpackCapacity(currentPlayer, masterResources || [], globalTuning);\n    const capacity = isHomestead ? warehouse : maxBackpack;\n    const totalItems = target\n      .filter(item => item && item.type !== 'Money' && item.type !== 'Gem' && typeof item.quantity === 'number')\n      .reduce((acc, item) => acc + item.quantity, 0);\n    if (totalItems + quantity > capacity) {\n      if (updateStatus) updateStatus(isHomestead ? 20 : 21); // 20 = warehouse full, 21 = backpack full\n      return {\n        success: false,\n        isCapacityError: true,\n        isNetworkError: false,\n        error: new Error(isHomestead ? 'Warehouse full' : 'Backpack full')\n      };\n    }\n  }\n\n  // ✅ Apply gain\n  const index = target.findIndex((item) => item.type === resource);\n  if (index >= 0) {\n    target[index].quantity += quantity;\n  } else {\n    target.push({ type: resource, quantity });\n  }\n\n  // Prepare delta payload for update-inventory-delta endpoint, including explicit target\n  const deltaPayload = {\n    playerId,\n    delta: [{\n      type: resource,\n      quantity: quantity,\n      target: storingInBackpack ? 'backpack' : 'inventory'\n    }]\n  };\n\n  try {\n    await axios.post(`${API_BASE}/api/update-inventory-delta`, deltaPayload);\n    \n    setInventory(isCurrencyItem || isHomestead ? target : inventory);\n    setBackpack(!isCurrencyItem && !isHomestead ? target : backpack);\n    \n    // Update currentPlayer with new inventory to ensure UI updates properly\n    setCurrentPlayer(prev => ({\n      ...prev,\n      inventory: isCurrencyItem || isHomestead ? target : inventory,\n      backpack: !isCurrencyItem && !isHomestead ? target : backpack\n    }));\n    await refreshPlayerAfterInventoryUpdate(playerId, setCurrentPlayer);\n    return true;\n  } catch (err) {\n    console.error(\"❌ Error gaining ingredient:\", err);\n    console.error(\"Error details:\", {\n      status: err.response?.status,\n      data: err.response?.data,\n      message: err.message,\n      resource,\n      quantity,\n      target: storingInBackpack ? 'backpack' : 'inventory'\n    });\n    \n    // Check if this is a real conflict vs a temporary error\n    const isCapacityError = err.response?.status === 400 && \n      (err.response?.data?.error?.includes('capacity') || \n       err.response?.data?.error?.includes('full'));\n    \n    const isNetworkError = !err.response || err.response?.status >= 500;\n    \n    // Return error details so caller can decide whether to rollback\n    return {\n      success: false,\n      isCapacityError,\n      isNetworkError,\n      error: err\n    };\n  }\n}\n\n\n////////////////////////////////////////\nexport async function spendIngredients({\n  playerId,\n  recipe,\n  inventory,\n  backpack,\n  setInventory,\n  setBackpack,\n  setCurrentPlayer,\n  updateStatus,\n}) {\n  let updatedInventory = [...inventory];\n  let updatedBackpack = [...backpack];\n\n  if (!canAfford(recipe, inventory, backpack, 1)) { updateStatus(4); return false; }\n\n  // Build delta changes array\n  const deltaChanges = [];\n  \n  // Deduct ingredients with new logic (support up to 10 ingredients)\n  for (let i = 1; i <= 10; i++) {\n    const type = recipe?.[`ingredient${i}`];\n    const qty = recipe?.[`ingredient${i}qty`];\n    if (type && qty) {\n      let remaining = qty;\n      \n      // First deduct from backpack\n      const backpackItem = updatedBackpack.find((item) => item.type === type);\n      if (backpackItem) {\n        const used = Math.min(remaining, backpackItem.quantity);\n        backpackItem.quantity -= used;\n        remaining -= used;\n        deltaChanges.push({ type, quantity: -used, target: 'backpack' });\n        if (backpackItem.quantity <= 0) {\n          updatedBackpack.splice(updatedBackpack.indexOf(backpackItem), 1);\n        }\n      }\n      \n      // Then deduct from inventory if needed\n      if (remaining > 0) {\n        const inventoryItem = updatedInventory.find((item) => item.type === type);\n        if (inventoryItem) {\n          const used = Math.min(remaining, inventoryItem.quantity);\n          inventoryItem.quantity -= used;\n          deltaChanges.push({ type, quantity: -used, target: 'inventory' });\n          if (inventoryItem.quantity <= 0) {\n            updatedInventory.splice(updatedInventory.indexOf(inventoryItem), 1);\n          }\n        }\n      }\n      \n    }\n  }\n\n  try {\n    // Use delta update endpoint to avoid race conditions\n    await axios.post(`${API_BASE}/api/update-inventory-delta`, {\n      playerId,\n      delta: deltaChanges\n    });\n    \n    setInventory(updatedInventory);\n    setBackpack(updatedBackpack);\n    \n    // Update currentPlayer with new inventory to ensure UI updates properly\n    setCurrentPlayer(prev => ({\n      ...prev,\n      inventory: updatedInventory,\n      backpack: updatedBackpack\n    }));\n    \n    await refreshPlayerAfterInventoryUpdate(playerId, setCurrentPlayer);\n    \n    // Return object that's backward compatible (truthy) but also includes updated arrays\n    const result = { success: true, updatedInventory, updatedBackpack };\n    // Make the object truthy for backward compatibility\n    result.valueOf = () => true;\n    return result;\n\n  } catch (err) {\n    console.error(\"❌ Error spending ingredients:\", err);\n    return false;\n  }\n}","import React, { useEffect } from 'react';\nimport { usePanelContext } from './PanelContext'; // Import the context\nimport './Panel.css';\nimport { useStrings } from './StringsContext';\n\nconst Panel = ({ onClose, children, descriptionKey, panelName, titleKey, title }) => {\n  const strings = useStrings();\n  const { activePanel, openPanel, closePanel } = usePanelContext();\n\n  useEffect(() => {\n    if (activePanel === panelName) {\n      openPanel(panelName); // Set this panel as active\n    }\n  }, [activePanel, panelName, openPanel]);\n\n  if (activePanel !== panelName) {\n    return null; // Ensure only the active panel is displayed\n  }\n\n  return (\n    <div className=\"panel-container\">\n      {/* Fixed Header with Title and Close Button */}\n      <div className=\"panel-header\">\n        <h2 className=\"panel-title\">{title || strings[titleKey] || \"Panel\"}</h2>\n        <button\n          className=\"panel-close-btn\"\n          onClick={() => {\n            closePanel();\n            onClose();\n          }}\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            width=\"24\"\n            height=\"24\"\n          >\n            <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\" />\n            <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\" />\n          </svg>\n        </button>\n      </div>\n\n      {/* Scrollable Content Area */}\n      <div className=\"panel-content\">{children}</div>\n\n      {/* Panel Description */}\n      {descriptionKey && (\n        <div className=\"panel-description\">\n          <p>{strings[descriptionKey]}</p>\n        </div>\n      )}\n      \n      {/* Buffer space for Ko-fi widget */}\n      <div className=\"panel-buffer-space\"></div>\n    </div>\n  );\n};\n\nexport default Panel;","import stringsEN from '../UI/Strings/stringsEN.json';\n\n// Create a reverse lookup map: value -> key\nconst createReverseLookupMap = () => {\n  const reverseMap = {};\n  Object.entries(stringsEN).forEach(([key, value]) => {\n    reverseMap[value] = key;\n  });\n  return reverseMap;\n};\n\n// Cached reverse lookup map\nlet reverseLookupMap = null;\n\n/**\n * Looks up a string value in stringsEN.json and returns its key (ID)\n * This allows server-side strings to be mapped to localized client strings\n * @param {string} value - The string value to look up\n * @returns {string|null} - The string ID/key if found, null otherwise\n */\nexport const getStringIdByValue = (value) => {\n  if (!reverseLookupMap) {\n    reverseLookupMap = createReverseLookupMap();\n  }\n  \n  return reverseLookupMap[value] || null;\n};\n\n/**\n * Helper function for use in React components\n * Returns the localized string from the provided strings object\n * @param {string} value - The string value to look up\n * @param {object} strings - The localized strings object from useStrings()\n * @returns {string} - The localized string if found, original value otherwise\n */\nexport const getLocalizedString = (value, strings) => {\n  // Handle undefined strings object\n  if (!strings) {\n    console.warn('getLocalizedString: strings object is undefined, returning original value');\n    return value;\n  }\n  \n  const stringId = getStringIdByValue(value);\n  if (stringId && strings[stringId]) {\n    return strings[stringId];\n  }\n  // Fallback to original value if not found\n  return value;\n};","import React, { useState } from 'react';\n\n/**\n * A button component that prevents transaction spamming by managing its own state\n * and ensuring only one transaction can be active at a time.\n */\nconst TransactionButton = ({ \n  onAction, \n  children, \n  disabled = false,\n  transactionKey, // unique key for this action type\n  className = '',\n  style = {},\n  ...props \n}) => {\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [transactionId] = useState(() => `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`);\n\n  const handleClick = async (e) => {\n    if (isProcessing || disabled) return;\n    \n    e.preventDefault();\n    e.stopPropagation();\n    \n    setIsProcessing(true);\n    try {\n      await onAction(transactionId, transactionKey);\n    } catch (error) {\n      console.error('Transaction failed:', error);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  return (\n    <button \n      {...props}\n      onClick={handleClick}\n      disabled={disabled || isProcessing}\n      className={`${className} ${isProcessing ? 'processing' : ''}`}\n      style={{\n        ...style,\n        opacity: (disabled || isProcessing) ? 0.6 : 1,\n        cursor: (disabled || isProcessing) ? 'not-allowed' : 'pointer'\n      }}\n    >\n      {isProcessing ? '⏳' : children}\n    </button>\n  );\n};\n\nexport default TransactionButton;","import API_BASE from '../../config';\nimport axios from 'axios';\nimport { gainIngredients } from '../../Utils/InventoryManagement';\nimport React, { useState, useEffect, useContext } from 'react';\nimport Panel from '../../UI/Panel';\nimport FloatingTextManager from '../../UI/FloatingText';\nimport { updateGridResource } from '../../Utils/GridManagement';\nimport { createCollectEffect } from '../../VFX/VFX';\nimport '../../UI/SharedButtons.css';\nimport { useStrings } from '../../UI/StringsContext';\nimport { getLocalizedString } from '../../Utils/stringLookup';\nimport NPCsInGridManager from '../../GridState/GridStateNPCs';\nimport TransactionButton from '../../UI/TransactionButton';\nimport './AnimalPanel.css';\n\nconst AnimalPanel = ({\n  onClose,\n  inventory,\n  setInventory,\n  backpack,\n  setBackpack,\n  currentPlayer,\n  setCurrentPlayer,\n  setResources,\n  stationType,\n  currentStationPosition,\n  gridId,\n  npcId,\n  TILE_SIZE,\n  updateStatus,\n  masterResources,\n  globalTuning,\n}) => {\n\n  const [stallDetails, setStallDetails] = useState(null);\n  const [currentNPC, setCurrentNPC] = useState(null);\n  const [currentTime, setCurrentTime] = useState(Date.now());\n  const strings = useStrings();\n\n  console.log('--------Inside Animal Panel:', { stationType, currentStationPosition });\n\n  useEffect(() => {\n    const stallResource = masterResources.find((res) => res.type === stationType);\n    setStallDetails(stallResource);\n  }, [stationType, masterResources]);\n\n  // Get current NPC data and update it periodically\n  useEffect(() => {\n    const updateNPCData = () => {\n      if (npcId && gridId) {\n        const npcsInGrid = NPCsInGridManager.getNPCsInGrid(gridId);\n        const npc = Object.values(npcsInGrid).find(n => n.id === npcId);\n        setCurrentNPC(npc);\n      }\n    };\n\n    updateNPCData(); // Initial load\n    const interval = setInterval(updateNPCData, 1000); // Update every second for live status\n\n    return () => clearInterval(interval);\n  }, [npcId, gridId]);\n\n  // Update current time every second for live countdown\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentTime(Date.now());\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, []);\n\n  // Function to generate status text like the tooltip\n  const getNPCStatusText = (npc) => {\n    if (!npc) return \"Unknown status\";\n    \n    switch (npc.state) {\n      case 'processing':\n        return \"is ready.\";\n      case 'hungry':\n        const lookingFor = npc.type === 'Pig' ? 'dirt' : 'grass';\n        return `is hungry and looking for ${lookingFor}.`;\n      case 'grazing':\n        if (npc.grazeEnd) {\n          const remainingTime = Math.max(0, npc.grazeEnd - currentTime);\n          const minutes = Math.floor((remainingTime % (1000 * 60 * 60)) / (1000 * 60));\n          const seconds = Math.floor((remainingTime % (1000 * 60)) / 1000);\n          return `is grazing. ${minutes}m ${seconds}s`;\n        }\n        return \"is grazing.\";\n      case 'roam':\n        return \"is roaming.\";\n      case 'stall':\n        return \"is looking for an Animal Stall.\";\n      default:\n        return `is in ${npc.state} state.`;\n    }\n  };\n\n  useEffect(() => {\n    const syncInventory = async () => {\n      try {\n        const storedInventory = JSON.parse(localStorage.getItem('inventory')) || [];\n        setInventory(storedInventory);\n  \n        const serverResponse = await axios.get(`${API_BASE}/api/inventory/${currentPlayer.playerId}`);\n        const serverInventory = serverResponse.data.inventory || [];\n        if (JSON.stringify(storedInventory) !== JSON.stringify(serverInventory)) {\n          setInventory(serverInventory);\n          localStorage.setItem('inventory', JSON.stringify(serverInventory));\n        }\n      } catch (error) {\n        console.error('Error syncing inventory:', error);\n      }\n    };\n    syncInventory();\n  }, [currentPlayer]);\n\n  const handleSellStation = async (transactionId, transactionKey) => {\n    const ingredients = [];\n    for (let i = 1; i <= 3; i++) {\n      const ingredientType = stallDetails[`ingredient${i}`];\n      const ingredientQty = stallDetails[`ingredient${i}qty`];\n      if (ingredientType && ingredientQty) {\n        ingredients.push({ type: ingredientType, quantity: ingredientQty });\n      }\n    }\n    if (!ingredients.length) { console.error('No ingredients found for refund.'); return; }\n\n    try {\n      for (const { type, quantity } of ingredients) {\n        const success = await gainIngredients({\n          playerId: currentPlayer.playerId,\n          currentPlayer,\n          resource: type,\n          quantity,\n          inventory,\n          backpack,\n          setInventory,\n          setBackpack,\n          setCurrentPlayer,\n          updateStatus,\n          masterResources,\n          globalTuning,\n        });\n        if (!success) return;\n      }\n\n      // Update currentPlayer with the new inventory to ensure money display updates\n      setCurrentPlayer(prev => ({ \n        ...prev, \n        inventory: inventory,\n        backpack: backpack \n      }));\n\n      // Note: We don't remove the animal stall building here - only the NPC\n      // The stall building can be sold separately from the AnimalStall panel\n\n      // Remove the animal NPC from NPCsInGrid using the specific NPC ID\n      try {\n        if (npcId) {\n          console.log(`🐄 Removing animal NPC ${npcId} (original position: ${currentStationPosition.x}, ${currentStationPosition.y})`);\n          await NPCsInGridManager.removeNPC(gridId, npcId);\n          console.log(\"🧹 Animal NPC removed from NPCsInGrid.\");\n        } else {\n          console.error(\"No NPC ID provided - cannot remove animal NPC\");\n        }\n      } catch (error) {\n        console.error('Error removing NPC:', error);\n      }\n\n      const totalRefund = ingredients\n        .filter((item) => item.type === \"Money\")\n        .reduce((sum, item) => sum + item.quantity, 0);\n\n      console.log(`Sold ${stationType} successfully for ${totalRefund} Money.`);\n      updateStatus(`Sold ${getLocalizedString(stationType, strings)} for ${totalRefund} ${getLocalizedString('Money', strings)}.`);\n      onClose();\n    } catch (error) {\n      console.error('Error selling the stall:', error);\n    }\n  };\n  \n\n  return (\n    <Panel onClose={onClose} titleKey=\"1129\" panelName=\"AnimalPanel\" >\n      <div className=\"animal-panel-container\">\n        <div className=\"animal-panel-content\">\n          <h2>\n              {stallDetails?.symbol || '🛖'} {getLocalizedString(stationType, strings)}\n          </h2>\n\n          {/* Show current NPC status */}\n          {currentNPC && (\n            <p>\n              <strong>{getLocalizedString(currentNPC.type, strings)}</strong> {getNPCStatusText(currentNPC)}\n            </p>\n          )}\n        </div>\n        \n        {currentPlayer.location.gtype === 'homestead' && (\n          <div className=\"animal-panel-footer\">\n            <hr />\n            <div className=\"shared-buttons\">\n              <TransactionButton \n                className=\"btn-basic btn-success\" \n                onAction={handleSellStation}\n                transactionKey={`sell-refund-${stationType}-${currentStationPosition.x}-${currentStationPosition.y}-${gridId}`}\n              >\n                {strings[425]}\n              </TransactionButton>\n            </div>\n          </div>\n        )}\n      </div>\n    </Panel>\n  );\n  \n};\n\nexport default React.memo(AnimalPanel);\n","/**\n * Shared formatters for collection status messages\n * Used by both single and bulk collection operations\n */\n\n/**\n * Format harvest/collection results for status bar\n * @param {String} operation - Type of operation ('harvest', 'craft', 'animal', 'logging')\n * @param {Object} results - Collection results with items and quantities\n * @param {Object} skillsInfo - Skills applied for each item type\n * @param {Object} replantInfo - Optional replanting information\n * @param {Object} strings - Localized strings\n * @param {Function} getLocalizedString - String localization function\n * @returns {String} Formatted status message\n */\nexport function formatCollectionResults(operation, results, skillsInfo, replantInfo, strings, getLocalizedString) {\n  const parts = [];\n  \n  // Format the main collection based on operation type\n  const operationLabels = {\n    'harvest': strings[469] || 'Harvest complete',\n    'craft': strings[480] || 'Crafting complete',\n    'animal': strings[469] || 'Animal Collect complete',\n    'logging': strings[479] || 'Logging complete'\n  };\n  \n  const label = operationLabels[operation] || strings[469] || 'Complete';\n  \n  // Format collected items\n  if (results && Object.keys(results).length > 0) {\n    const itemParts = Object.entries(results).map(([type, quantity]) => {\n      const skillInfo = skillsInfo?.[type];\n      const localizedName = getLocalizedString(type, strings);\n      \n      if (skillInfo && skillInfo.hasSkills) {\n        const skillsStr = skillInfo.skills.join(', ');\n        return `${quantity} ${localizedName}, ${strings[481]} ${skillsStr} ${strings[482]} (${skillInfo.multiplier}x)`;\n      } else {\n        return `${quantity} ${localizedName}`;\n      }\n    }).join(', ');\n    \n    parts.push(`${label} ${itemParts}`);\n  }\n  \n  // Add replanting info if provided\n  if (replantInfo && Object.keys(replantInfo).length > 0) {\n    const replantParts = Object.entries(replantInfo)\n      .map(([type, count]) => `${count} ${getLocalizedString(type, strings)}`)\n      .join(', ');\n    parts.push(`${replantParts} ${strings[483] || 'replanted'}`);\n  }\n  \n  return parts.join(' | ');\n}\n\n/**\n * Format single item collection for status bar\n * @param {String} operation - Type of operation\n * @param {String} itemType - Type of item collected\n * @param {Number} quantity - Quantity collected\n * @param {Object} skillInfo - Skills applied\n * @param {Object} strings - Localized strings\n * @param {Function} getLocalizedString - String localization function\n * @returns {String} Formatted status message\n */\nexport function formatSingleCollection(operation, itemType, quantity, skillInfo, strings, getLocalizedString) {\n  const results = { [itemType]: quantity };\n  const skillsInfo = skillInfo ? { [itemType]: skillInfo } : {};\n  return formatCollectionResults(operation, results, skillsInfo, null, strings, getLocalizedString);\n}\n\n/**\n * Format restart/replant results\n * @param {Object} restartInfo - Information about restarted operations\n * @param {String} operation - Type of operation ('craft' or 'harvest')\n * @param {Object} strings - Localized strings\n * @param {Function} getLocalizedString - String localization function\n * @returns {String} Formatted restart message\n */\nexport function formatRestartResults(restartInfo, operation, strings, getLocalizedString) {\n  if (!restartInfo || Object.keys(restartInfo).length === 0) {\n    return '';\n  }\n  \n  const restartParts = Object.entries(restartInfo)\n    .map(([type, count]) => `${count} ${getLocalizedString(type, strings)}`)\n    .join(', ');\n  \n  const labels = {\n    'craft': 'restarted',\n    'harvest': 'replanted'\n  };\n  \n  const label = labels[operation] || 'restarted';\n  return `${restartParts} ${label}`;\n}","import React, { createContext, useContext, useState } from 'react';\n\nconst NPCOverlayContext = createContext();\n\nexport const NPCOverlayProvider = ({ children }) => {\n  // Map of npcId -> { overlay: 'hourglass'|'exclamation'|'attack'|etc, clickable: boolean }\n  const [npcOverlays, setNpcOverlays] = useState({});\n  \n  const setNPCOverlay = (npcId, overlayType, clickable = true) => {\n    console.log(`🎭 NPC ${npcId}: ${overlayType ? `setting overlay '${overlayType}'` : 'clearing overlay'} (clickable: ${clickable})`);\n    setNpcOverlays(prev => ({\n      ...prev,\n      [npcId]: overlayType ? { overlay: overlayType, clickable } : undefined\n    }));\n  };\n  \n  const clearNPCOverlay = (npcId) => {\n    setNPCOverlay(npcId, null);\n  };\n  \n  const getNPCOverlay = (npcId) => {\n    return npcOverlays[npcId];\n  };\n  \n  // Helper methods for common overlay types\n  const setBusyOverlay = (npcId) => setNPCOverlay(npcId, 'hourglass', false);\n  const setQuestOverlay = (npcId) => setNPCOverlay(npcId, 'exclamation', true);\n  const setAttackOverlay = (npcId) => setNPCOverlay(npcId, 'attack', true);\n  \n  return (\n    <NPCOverlayContext.Provider value={{ \n      npcOverlays,\n      setNPCOverlay,\n      clearNPCOverlay,\n      getNPCOverlay,\n      setBusyOverlay,\n      setQuestOverlay,\n      setAttackOverlay\n    }}>\n      {children}\n    </NPCOverlayContext.Provider>\n  );\n};\n\nexport const useNPCOverlay = () => useContext(NPCOverlayContext);","import axios from 'axios';\nimport API_BASE from '../config';\n\nclass QuestCache {\n  constructor() {\n    this.cache = null;\n    this.cacheTime = null;\n    this.cacheExpiry = 5 * 60 * 1000; // 5 minutes cache\n    this.pendingRequest = null;\n  }\n\n  async getQuests() {\n    // If we have a pending request, wait for it\n    if (this.pendingRequest) {\n      return this.pendingRequest;\n    }\n\n    // If cache is fresh, return it\n    if (this.cache && this.cacheTime && (Date.now() - this.cacheTime < this.cacheExpiry)) {\n      // Removed console.log to reduce spam\n      return Promise.resolve(this.cache);\n    }\n\n    // Make new request and cache it\n    console.log('🔄 Fetching fresh quests from API');\n    this.pendingRequest = axios.get(`${API_BASE}/api/quests`)\n      .then(response => {\n        this.cache = response.data;\n        this.cacheTime = Date.now();\n        this.pendingRequest = null;\n        return this.cache;\n      })\n      .catch(error => {\n        this.pendingRequest = null;\n        throw error;\n      });\n\n    return this.pendingRequest;\n  }\n\n  // Force cache refresh (e.g., after quest completion)\n  invalidate() {\n    console.log('🗑️ Invalidating quest cache');\n    this.cache = null;\n    this.cacheTime = null;\n  }\n\n  // Get quests for a specific NPC\n  async getQuestsForNPC(npcType) {\n    const allQuests = await this.getQuests();\n    return allQuests.filter(quest => quest.giver === npcType);\n  }\n}\n\n// Create singleton instance\nconst questCache = new QuestCache();\n\nexport default questCache;","// Singleton manager for active conversations\nclass ConversationManager {\n  constructor() {\n    this.activeConversations = new Map(); // speakerId -> {emoji, topic, timestamp}\n    this.relationshipOutcomes = new Map(); // speakerId -> {type: 'positive'|'negative', timestamp}\n    this.listeners = new Set();\n  }\n  \n  // Add a conversation bubble\n  addSpeech(speakerId, emoji, topic, isMatch = false) {\n    console.log('🗨️ ConversationManager.addSpeech:', { speakerId, emoji, topic, isMatch });\n    this.activeConversations.set(speakerId, {\n      emoji,\n      topic,\n      timestamp: Date.now(),\n      isMatch\n    });\n    this.notifyListeners();\n  }\n  \n  // Remove a conversation bubble\n  removeSpeech(speakerId) {\n    console.log('🗨️ ConversationManager.removeSpeech:', speakerId);\n    this.activeConversations.delete(speakerId);\n    this.notifyListeners();\n  }\n  \n  // Get active speech for a speaker\n  getSpeech(speakerId) {\n    return this.activeConversations.get(speakerId);\n  }\n  \n  // Subscribe to changes\n  subscribe(listener) {\n    this.listeners.add(listener);\n    return () => this.listeners.delete(listener);\n  }\n  \n  // Notify all listeners of changes\n  notifyListeners() {\n    this.listeners.forEach(listener => listener());\n  }\n  \n  // Clear all conversations\n  clear() {\n    this.activeConversations.clear();\n    this.relationshipOutcomes.clear();\n    this.notifyListeners();\n  }\n  \n  // Add relationship outcome VFX\n  showOutcome(speakerId, isPositive) {\n    console.log('🎯 ConversationManager.showOutcome:', { speakerId, isPositive });\n    this.relationshipOutcomes.set(speakerId, {\n      type: isPositive ? 'positive' : 'negative',\n      timestamp: Date.now()\n    });\n    this.notifyListeners();\n    \n    // Auto-remove after animation duration\n    setTimeout(() => {\n      this.relationshipOutcomes.delete(speakerId);\n      this.notifyListeners();\n    }, 2500); // 2.5 seconds to ensure animation completes\n  }\n  \n  // Get outcome for a speaker\n  getOutcome(speakerId) {\n    return this.relationshipOutcomes.get(speakerId);\n  }\n}\n\n// Export singleton instance\nexport default new ConversationManager();","import '../App.css';\nimport '../UI/Panel.css';\nimport '../UI/Cursor.css';\nimport './Render.css';\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport API_BASE from '../config';\nimport { getDerivedRange } from '../Utils/worldHelpers';\nimport { useGridState } from '../GridState/GridStateContext'; \nimport { usePlayersInGrid } from '../GridState/GridStatePCContext';\nimport { handleNPCClick } from '../GameFeatures/NPCs/NPCUtils';\nimport { handleAttackOnPC } from '../GameFeatures/Combat/Combat';\nimport { renderPositions } from '../PlayerMovement';\nimport { useNPCOverlay } from '../UI/NPCOverlayContext';\nimport NPCsInGridManager from '../GridState/GridStateNPCs';\nimport playersInGridManager from '../GridState/PlayersInGrid';\nimport questCache from '../Utils/QuestCache';\nimport ConversationManager from '../GameFeatures/Relationships/ConversationManager';\nimport '../GameFeatures/Relationships/Conversation.css';\nimport { getLocalizedString } from '../Utils/stringLookup';\nimport FloatingTextManager from '../UI/FloatingText';\n\n\nconst DynamicRenderer = ({\n  TILE_SIZE,\n  openPanel,\n  setActiveStation,\n  setInventory,\n  setBackpack,\n  setResources,\n  currentPlayer,\n  setCurrentPlayer,\n  onNPCClick, // This is needed because of the Quest NPCs and their Panels\n  onPCClick,  // This is needed for the Social Panel\n  masterResources,\n  masterSkills,\n  masterTrophies,\n  setHoverTooltip, \n  setModalContent,\n  setIsModalOpen,\n  updateStatus,\n  strings,\n  globalTuning,\n}) => {\n  const NPCsInGrid = useGridState(); // Use the updated NPCsInGrid from context\n  const playersInGrid = usePlayersInGrid(); // Access PCs via modern PC-specific context\n  const hoveredEntityIdRef = useRef(null);\n  const suppressTooltipRef = useRef(false);\n  const { getNPCOverlay } = useNPCOverlay();\n  \n  const masterResourcesRef = useRef(masterResources); // Keep masterResources in a ref\n  useEffect(() => {\n    masterResourcesRef.current = masterResources;\n  }, [masterResources]);\n\n  const containerRef = useRef(null);\n  const animationFrameId = useRef(null);\n  const reloadRef = useRef(0); // Stores the next allowed attack time\n\n  const npcElements = useRef(new Map());\n  const pcElements = useRef(new Map());\n\n  const hoveredNPCDivRef = useRef(null);\n  const questNPCStatusRef = useRef(new Map()); // Cache quest NPC status\n  \n  // State for active conversations\n  const [conversationVersion, setConversationVersion] = useState(0);\n\n  // Function to check quest NPC status\n  async function checkQuestNPCStatus(npc) {\n    if (npc.action !== 'quest' || !currentPlayer) return null;\n    \n    try {\n      // Use cached quests instead of direct API call\n      const allQuests = await questCache.getQuests();\n      \n      // Use same filtering logic as NPCPanel\n      let npcQuests = allQuests\n        .filter((quest) => quest.giver === npc.type)\n        .filter((quest) => {\n          const activeQuest = currentPlayer.activeQuests?.find(q => q.questId === quest.title);\n          if (activeQuest) {\n            return activeQuest.completed && !activeQuest.rewardCollected;\n          }\n          return (quest.repeatable === true || quest.repeatable === 'true') || !currentPlayer.completedQuests?.some(q => q.questId === quest.title);\n        });\n\n      // Apply FTUE filtering for first-time users\n      if (currentPlayer.firsttimeuser === true) {\n        npcQuests = npcQuests.filter((quest) => {\n          const hasFtuestep = quest.ftuestep != null && \n                             quest.ftuestep !== undefined && \n                             quest.ftuestep !== '' && \n                             quest.ftuestep !== 0;\n          \n          if (!hasFtuestep) {\n            return false;\n          } else if (quest.ftuestep > (currentPlayer.ftuestep || 0)) {\n            return false;\n          } else {\n            return true;\n          }\n        });\n      }\n\n      // Check if any quests have completed rewards to collect\n      const hasCompletedQuests = npcQuests.some(quest => {\n        const activeQuest = currentPlayer.activeQuests?.find(q => q.questId === quest.title);\n        return activeQuest && activeQuest.completed && !activeQuest.rewardCollected;\n      });\n\n      if (hasCompletedQuests) {\n        return 'completed'; // Show checkmark\n      } else if (npcQuests.length > 0) {\n        return 'available'; // Show question mark\n      }\n      \n      return null;\n    } catch (error) {\n      console.error('Error checking quest NPC status:', error);\n      return null;\n    }\n  }\n\n  // Check trade NPC status - returns the first trade item symbol\n  function checkTradeNPCStatus(npc) {\n    if (npc.action !== 'trade') return null;\n    \n    try {\n      // Find recipes that this NPC trades\n      const tradeRecipes = masterResourcesRef.current.filter(resource => \n        resource.source === npc.type\n      );\n      \n      if (tradeRecipes.length > 0) {\n        // Return the symbol of the first trade item\n        return tradeRecipes[0].symbol || '📦';\n      }\n      \n      return null;\n    } catch (error) {\n      console.error('Error checking trade NPC status:', error);\n      return null;\n    }\n  }\n\n  // Function to create or update NPC divs\n  function renderNPCs() {\n    const gridId = currentPlayer?.location?.g;\n    const npcs = Object.values(NPCsInGrid?.[gridId]?.npcs || {});\n    const container = containerRef.current;\n    if (!container) return;\n\n    const existingIds = new Set();\n\n    npcs.forEach((npc) => {\n      // Skip NPCs without valid position data\n      if (!npc || !npc.position || typeof npc.position.x === 'undefined' || typeof npc.position.y === 'undefined') {\n        console.warn('NPC missing position data:', npc);\n        return;\n      }\n      \n      existingIds.add(npc.id);\n      let npcDiv = npcElements.current.get(npc.id);\n      const overridePos = renderPositions[npc.id];\n      const renderX = overridePos ? overridePos.x * TILE_SIZE : npc.position.x * TILE_SIZE;\n      const renderY = overridePos ? overridePos.y * TILE_SIZE : npc.position.y * TILE_SIZE;\n      \n      if (!npcDiv) {\n        // REPLACED LOGIC FOR CREATING npcDiv:\n        npcDiv = document.createElement('div');\n        npcDiv.className = 'npc';\n        npcDiv.style.position = 'absolute';\n        npcDiv.style.width = `${TILE_SIZE}px`;\n        npcDiv.style.height = `${TILE_SIZE}px`;\n        npcDiv.style.fontSize = `${TILE_SIZE * 0.7}px`;\n        npcDiv.style.display = 'flex';\n        npcDiv.style.alignItems = 'center';\n        npcDiv.style.justifyContent = 'center';\n        npcDiv.style.zIndex = 15;\n        npcDiv.style.pointerEvents = 'auto';\n        npcDiv.textContent = npc.symbol;\n\n        // Use mousedown, not onclick, for better cross-browser support\n        npcDiv.addEventListener('mousedown', () => {\n          // Check if NPC has an overlay that prevents clicking\n          const overlayData = getNPCOverlay(npc.id);\n          if (overlayData && !overlayData.clickable) {\n            return; // Prevent clicking on non-clickable overlay NPCs\n          }\n          \n          // 🛡️ Prevent interaction with NPCs on another player's homestead\n          const isOnOwnHomestead = currentPlayer?.gridId === currentPlayer?.location?.g;\n          if (currentPlayer?.location?.gtype === 'homestead' && !isOnOwnHomestead) {\n            return; // Cannot interact with NPCs on another player's homestead\n          }\n          \n          setHoverTooltip(null);\n          suppressTooltipRef.current = true;\n          const currentTime = Date.now();\n          if (npc.action === 'attack' || npc.action === 'spawn') {\n            const pcState = playersInGrid?.[gridId]?.pcs?.[currentPlayer._id];\n            const speed = pcState?.speed ?? currentPlayer.baseSpeed ?? 5;\n            if (currentTime < reloadRef.current) return;\n            reloadRef.current = currentTime + (speed * 1000);\n          }\n          if (npc.action === 'quest' || npc.action === 'heal' || npc.action === 'worker' || npc.action === 'trade') {\n            // Check range for helper NPCs\n            const playerPos = playersInGridManager.getPlayerPosition(currentPlayer?.location?.g, String(currentPlayer._id));\n            const npcPos = { x: Math.round(npc.position?.x || 0), y: Math.round(npc.position?.y || 0) };\n            \n            if (playerPos && typeof playerPos.x === 'number' && typeof playerPos.y === 'number') {\n              const distance = Math.sqrt(Math.pow(playerPos.x - npcPos.x, 2) + Math.pow(playerPos.y - npcPos.y, 2));\n              const playerRange = getDerivedRange(currentPlayer, masterResourcesRef.current);\n              \n              if (distance > playerRange) {\n                // Show \"Out of range\" message\n                FloatingTextManager.addFloatingText(24, npcPos.x, npcPos.y, TILE_SIZE);\n                return;\n              }\n            }\n            \n            onNPCClick(npc);\n          } else {\n            handleNPCClick(\n              npc,\n              Math.round(npc.position?.y || 0),\n              Math.round(npc.position?.x || 0),\n              setInventory,\n              setBackpack,\n              setResources,\n              currentPlayer,\n              setCurrentPlayer,\n              TILE_SIZE,\n              masterResourcesRef.current,\n              masterSkills,\n              currentPlayer?.location?.g,\n              setModalContent,\n              setIsModalOpen,\n              updateStatus,\n              openPanel,\n              setActiveStation,\n              strings,\n              masterTrophies,\n              globalTuning\n            );\n          }\n        });\n\n        npcDiv.onmouseenter = (event) => {\n          if (suppressTooltipRef.current) return;\n          hoveredEntityIdRef.current = npc.id;\n          hoveredNPCDivRef.current = npcDiv;\n          handleNPCHover(event, npc, TILE_SIZE, hoveredEntityIdRef, setHoverTooltip, strings);\n        };\n\n        npcDiv.onmouseleave = () => {\n          suppressTooltipRef.current = false;\n          npcDiv.classList.remove('cursor-wait', 'cursor-help', 'cursor-pointer');\n          npcDiv.classList.add('cursor-pointer');\n          hoveredNPCDivRef.current = null;\n          handleNPCHoverLeave(npc, hoveredEntityIdRef, setHoverTooltip);\n        };\n\n        container.appendChild(npcDiv);\n        npcElements.current.set(npc.id, npcDiv);\n        \n        // Add overlay visual element if needed\n        const overlayData = getNPCOverlay(npc.id);\n        if (overlayData) {\n          renderOverlay(npcDiv, overlayData.overlay);\n        } else if (npc.action === 'quest') {\n          // Check quest NPC status only if not already cached\n          const cachedStatus = questNPCStatusRef.current.get(npc.id);\n          if (!cachedStatus) {\n            checkQuestNPCStatus(npc).then(status => {\n              if (status) {\n                questNPCStatusRef.current.set(npc.id, status);\n                const npcDivCheck = npcElements.current.get(npc.id);\n                if (npcDivCheck && !npcDivCheck.querySelector('.npc-overlay')) {\n                  renderOverlay(npcDivCheck, status);\n                }\n              }\n            });\n          } else {\n            // Use cached status\n            renderOverlay(npcDiv, cachedStatus);\n          }\n        } else if (npc.action === 'trade') {\n          // Check trade NPC for trade item symbol\n          const tradeSymbol = checkTradeNPCStatus(npc);\n          if (tradeSymbol) {\n            renderOverlay(npcDiv, tradeSymbol);\n          }\n        }\n\n        /// Dynamic Cursors for NPCs\n        const currentTime = Date.now();\n        if (npc.action === 'attack' || npc.action === 'spawn') {\n          if (currentTime < reloadRef.current) {\n            npcDiv.style.cursor = 'wait';\n          } else {\n            npcDiv.style.cursor = 'crosshair';\n          }\n        } else if (npc.action === 'quest' || npc.action === 'heal' || npc.action === 'trade') {\n          npcDiv.style.cursor = 'help';\n        } else {\n          npcDiv.style.cursor = 'pointer';\n        }\n        \n      } else {\n        // Update symbol if changed\n        if (npcDiv.textContent !== npc.symbol) {\n          npcDiv.textContent = npc.symbol;\n        }\n        \n        // Update overlay visual if changed\n        const overlayData = getNPCOverlay(npc.id);\n        const existingOverlay = npcDiv.querySelector('.npc-overlay');\n        \n        if (overlayData && !existingOverlay) {\n          renderOverlay(npcDiv, overlayData.overlay);\n        } else if (!overlayData && existingOverlay) {\n          // Check if this is a quest NPC that might need overlay\n          if (npc.action === 'quest') {\n            // Check cached status first\n            const cachedStatus = questNPCStatusRef.current.get(npc.id);\n            if (cachedStatus) {\n              // Keep the overlay if we have a cached status\n              const currentType = existingOverlay.getAttribute('data-overlay-type');\n              if (currentType !== cachedStatus) {\n                existingOverlay.remove();\n                renderOverlay(npcDiv, cachedStatus);\n              }\n            } else {\n              // Re-check quest status\n              checkQuestNPCStatus(npc).then(status => {\n                if (status) {\n                  questNPCStatusRef.current.set(npc.id, status);\n                  if (existingOverlay) {\n                    existingOverlay.remove();\n                  }\n                  renderOverlay(npcDiv, status);\n                } else {\n                  existingOverlay.remove();\n                  questNPCStatusRef.current.delete(npc.id);\n                }\n              });\n            }\n          } else if (npc.action === 'trade') {\n            // Check if trade NPC still has items to trade\n            const tradeSymbol = checkTradeNPCStatus(npc);\n            if (tradeSymbol) {\n              const currentType = existingOverlay.getAttribute('data-overlay-type');\n              if (currentType !== tradeSymbol) {\n                existingOverlay.remove();\n                renderOverlay(npcDiv, tradeSymbol);\n              }\n            } else {\n              existingOverlay.remove();\n            }\n          } else {\n            existingOverlay.remove();\n          }\n        } else if (overlayData && existingOverlay) {\n          // Update existing overlay if type changed\n          const currentType = existingOverlay.getAttribute('data-overlay-type');\n          if (currentType !== overlayData.overlay) {\n            existingOverlay.remove();\n            renderOverlay(npcDiv, overlayData.overlay);\n          }\n        } else if (!overlayData && npc.action === 'quest' && !existingOverlay) {\n          // Quest NPC without overlay - check if it needs one\n          const cachedStatus = questNPCStatusRef.current.get(npc.id);\n          if (cachedStatus) {\n            renderOverlay(npcDiv, cachedStatus);\n          } else {\n            checkQuestNPCStatus(npc).then(status => {\n              if (status) {\n                questNPCStatusRef.current.set(npc.id, status);\n                const npcDivCheck = npcElements.current.get(npc.id);\n                if (npcDivCheck && !npcDivCheck.querySelector('.npc-overlay')) {\n                  renderOverlay(npcDivCheck, status);\n                }\n              }\n            });\n          }\n        } else if (!overlayData && npc.action === 'trade' && !existingOverlay) {\n          // Trade NPC without overlay - check if it needs one\n          const tradeSymbol = checkTradeNPCStatus(npc);\n          if (tradeSymbol) {\n            renderOverlay(npcDiv, tradeSymbol);\n          }\n        }\n      }\n      npcDiv.style.left = `${renderX}px`;\n      npcDiv.style.top = `${renderY}px`;\n      \n      // Render speech bubble if active - use NPC type as ID for consistency\n      const npcSpeakerId = npc.type;\n      renderSpeechBubble(npcDiv, npcSpeakerId, 'npc');\n      \n      // Render relationship outcome if active\n      renderRelationshipOutcome(npcDiv, npcSpeakerId);\n    });\n\n    // Remove NPC divs that no longer exist\n    npcElements.current.forEach((div, id) => {\n      if (!existingIds.has(id)) {\n        div.remove(); \n        npcElements.current.delete(id);\n      }\n    });\n  }\n\n  // Function to create or update PC divs\n  function renderPCs() {\n    const gridId = currentPlayer?.location?.g;\n    const pcs = Object.values(playersInGrid?.[gridId]?.pcs || {});\n    const container = containerRef.current;\n    if (!container) return;\n\n    const existingIds = new Set();\n\n    pcs.forEach((pc) => {\n      existingIds.add(pc.playerId);\n      if (!pc || !pc.position || typeof pc.position.x !== 'number' || typeof pc.position.y !== 'number') {\n        return;\n      }\n      const overridePos = renderPositions[pc.playerId];\n      const renderX = overridePos ? overridePos.x * TILE_SIZE : pc.position.x * TILE_SIZE;\n      const renderY = overridePos ? overridePos.y * TILE_SIZE : pc.position.y * TILE_SIZE;\n\n      let symbol = pc.icon || '😊';\n      if (pc.iscamping) symbol = '⛺️';\n      else if (pc.isinboat) symbol = '🛶';\n      else if (pc.hp <= 0) symbol = '💀';\n      else if (pc.hp < 20) symbol = '🤢';\n\n      let pcDiv = pcElements.current.get(pc.playerId);\n      if (!pcDiv) {\n        // REPLACED LOGIC FOR CREATING pcDiv:\n        pcDiv = document.createElement('div');\n        pcDiv.className = 'pc';\n        pcDiv.style.position = 'absolute';\n        pcDiv.style.width = `${TILE_SIZE}px`;\n        pcDiv.style.height = `${TILE_SIZE}px`;\n        pcDiv.style.fontSize = `${TILE_SIZE * 0.7}px`;\n        pcDiv.style.display = 'flex';\n        pcDiv.style.alignItems = 'center';\n        pcDiv.style.justifyContent = 'center';\n        pcDiv.style.zIndex = 16;\n        pcDiv.style.pointerEvents = 'auto';\n        //pcDiv.style.cursor = 'pointer';\n        pcDiv.textContent = symbol;\n\n        // Use mousedown, not onclick, for better cross-browser support\n        pcDiv.addEventListener('mousedown', () => {\n          setHoverTooltip(null);\n          suppressTooltipRef.current = true;\n          onPCClick(pc);\n          handlePCClick(pc, currentPlayer, currentPlayer.location.g, TILE_SIZE);\n        });\n\n        pcDiv.onmouseenter = (event) => {\n          if (suppressTooltipRef.current) return;\n          handlePCHover(event, pc, TILE_SIZE, setHoverTooltip);\n        };\n\n        pcDiv.onmouseleave = () => {\n          suppressTooltipRef.current = false;\n          handlePCHoverLeave(setHoverTooltip);\n        };\n\n        container.appendChild(pcDiv);\n        pcElements.current.set(pc.playerId, pcDiv);\n\n        /// Dynamic Cursors for PCs\n        if (pc.hp > 25) {\n            pcDiv.style.cursor = 'crosshair';\n        } else {\n          pcDiv.style.cursor = 'pointer';\n        }\n\n      } else {\n        if (pcDiv.textContent !== symbol) {\n          pcDiv.textContent = symbol;\n        }\n      }\n      pcDiv.style.left = `${renderX}px`;\n      pcDiv.style.top = `${renderY}px`;\n      \n      // Render speech bubble if active - use player ID for consistency\n      const pcSpeakerId = pc.playerId;\n      renderSpeechBubble(pcDiv, pcSpeakerId, 'player');\n      \n      // Render relationship outcome if active\n      renderRelationshipOutcome(pcDiv, pcSpeakerId);\n    });\n\n    // Remove PC divs that no longer exist\n    pcElements.current.forEach((div, id) => {\n      if (!existingIds.has(id)) {\n        div.remove();\n        pcElements.current.delete(id);\n      }\n    });\n  }\n\nfunction renderPlayerRange() {\n    if (currentPlayer?.settings?.rangeOn === false) return; \n//    if (currentPlayer?.location?.gtype === \"homestead\") return; \n    const gridId = currentPlayer?.location?.g;\n    if (!gridId || !currentPlayer) return;\n    const container = containerRef.current; if (!container) return;\n\n    // Ensure overflow and position only (no fixed size or margin here)\n    container.style.overflow = 'hidden';\n    container.style.position = 'relative';\n\n    let rangeCircle = document.getElementById('player-range-circle');\n\n    if (!rangeCircle) {\n      rangeCircle = document.createElement('div');\n      rangeCircle.id = 'player-range-circle';\n      rangeCircle.style.position = 'absolute';\n      rangeCircle.style.backgroundColor = 'rgba(128, 128, 128, 0.2)';\n      rangeCircle.style.border = 'none';\n      rangeCircle.style.borderRadius = '50%';\n      rangeCircle.style.pointerEvents = 'none';\n      rangeCircle.style.zIndex = 10;\n      container.appendChild(rangeCircle);\n    }\n\n    const position = playersInGrid?.[gridId]?.pcs?.[currentPlayer._id]?.position;\n    if (!position) return;\n\n    const pixelX = position.x * TILE_SIZE;\n    const pixelY = position.y * TILE_SIZE;\n\n    // Calculate derivedRange using utility\n    const derivedRange = getDerivedRange(currentPlayer, masterResourcesRef.current);\n    const radius = derivedRange * TILE_SIZE;\n\n    rangeCircle.style.width = `${radius * 2}px`;\n    rangeCircle.style.height = `${radius * 2}px`;\n    rangeCircle.style.left = `${pixelX - radius + TILE_SIZE / 2}px`;\n    rangeCircle.style.top = `${pixelY - radius + TILE_SIZE / 2}px`;\n\n    // Add a second ring for attackrange\n    const attackRange = playersInGrid?.[gridId]?.pcs?.[currentPlayer._id]?.attackrange;\n    if (attackRange && attackRange > 0 && (currentPlayer?.location?.gtype != \"homestead\")) {\n      let attackRangeRing = document.getElementById('player-attackrange-ring');\n      if (!attackRangeRing) {\n        attackRangeRing = document.createElement('div');\n        attackRangeRing.id = 'player-attackrange-ring';\n        attackRangeRing.style.position = 'absolute';\n        attackRangeRing.style.border = '3px dotted rgba(255, 0, 0, 0.4)';\n        attackRangeRing.style.borderRadius = '50%';\n        attackRangeRing.style.pointerEvents = 'none';\n        attackRangeRing.style.zIndex = 11;\n        container.appendChild(attackRangeRing);\n      }\n\n      const attackRadius = attackRange * TILE_SIZE;\n      attackRangeRing.style.width = `${attackRadius * 2}px`;\n      attackRangeRing.style.height = `${attackRadius * 2}px`;\n      attackRangeRing.style.left = `${pixelX - attackRadius + TILE_SIZE / 2}px`;\n      attackRangeRing.style.top = `${pixelY - attackRadius + TILE_SIZE / 2}px`;\n    } else {\n      // Remove attack range ring if attackrange is not present or 0\n      const existingAttackRing = document.getElementById('player-attackrange-ring');\n      if (existingAttackRing) existingAttackRing.remove();\n    }\n  }\n\n  function renderNPCAttackRanges() {\n    if (currentPlayer?.settings?.rangeOn === false) return;\n    const gridId = currentPlayer?.location?.g;\n    if (!gridId) return;\n    const container = containerRef.current;\n    if (!container) return;\n    \n    const npcs = Object.values(NPCsInGrid?.[gridId]?.npcs || {});\n    \n    // Remove existing NPC range circles that no longer have NPCs\n    const existingRanges = container.querySelectorAll('.npc-attack-range');\n    existingRanges.forEach(rangeElement => {\n      const npcId = rangeElement.getAttribute('data-npc-id');\n      if (!npcs.some(npc => npc.id === npcId)) {\n        rangeElement.remove();\n      }\n    });\n    \n    // Add or update range circles for enemy NPCs\n    npcs.forEach((npc) => {\n      if ((npc.action === 'attack' || npc.action === 'spawn') && npc.attackrange && npc.attackrange > 0) {\n        let rangeCircle = container.querySelector(`.npc-attack-range[data-npc-id=\"${npc.id}\"]`);\n        \n        if (!rangeCircle) {\n          rangeCircle = document.createElement('div');\n          rangeCircle.className = 'npc-attack-range';\n          rangeCircle.setAttribute('data-npc-id', npc.id);\n          rangeCircle.style.position = 'absolute';\n          rangeCircle.style.border = '2px dashed rgba(255, 255, 100, 0.3)'; // Yellow for enemies\n          rangeCircle.style.borderRadius = '50%';\n          rangeCircle.style.pointerEvents = 'none';\n          rangeCircle.style.zIndex = 9;\n          container.appendChild(rangeCircle);\n        }\n        \n        const pixelX = npc.position.x * TILE_SIZE;\n        const pixelY = npc.position.y * TILE_SIZE;\n        const radius = npc.attackrange * TILE_SIZE;\n        \n        rangeCircle.style.width = `${radius * 2}px`;\n        rangeCircle.style.height = `${radius * 2}px`;\n        rangeCircle.style.left = `${pixelX - radius + TILE_SIZE / 2}px`;\n        rangeCircle.style.top = `${pixelY - radius + TILE_SIZE / 2}px`;\n      }\n    });\n  }\n\n  // Animation loop to update positions smoothly if needed\nfunction startRenderingLoop() {\n  if (!containerRef.current) return;\n  renderNPCs();\n  renderPCs();\n  renderPlayerRange();\n  renderNPCAttackRanges();\n  \n  animationFrameId.current = requestAnimationFrame(startRenderingLoop);\n}\n\n\n\n  // Clear quest NPC status cache when player's quests change\n  useEffect(() => {\n    questNPCStatusRef.current.clear();\n  }, [currentPlayer?.activeQuests, currentPlayer?.completedQuests]);\n  \n  // Subscribe to conversation changes\n  useEffect(() => {\n    const unsubscribe = ConversationManager.subscribe(() => {\n      console.log('🗨️ DynamicRenderer: Conversation changed, triggering update');\n      setConversationVersion(v => v + 1);\n    });\n    return unsubscribe;\n  }, []);\n\n  useEffect(() => {\n    startRenderingLoop();\n    return () => {\n      if (animationFrameId.current) {\n        cancelAnimationFrame(animationFrameId.current);\n      }\n      // Clean up all NPC divs\n      npcElements.current.forEach((div) => {\n        div.remove();\n      });\n      npcElements.current.clear();\n      // Clean up all PC divs\n      pcElements.current.forEach((div) => {\n        div.remove();\n      });\n      pcElements.current.clear();\n      const existingRangeCircle = document.getElementById('player-range-circle');\n      if (existingRangeCircle) existingRangeCircle.remove();\n      const existingAttackRing = document.getElementById('player-attackrange-ring');\n      if (existingAttackRing) existingAttackRing.remove();\n      // Clean up NPC attack range circles\n      const npcRangeCircles = document.querySelectorAll('.npc-attack-range');\n      npcRangeCircles.forEach(circle => circle.remove());\n    };\n  }, [NPCsInGrid, playersInGrid, currentPlayer, TILE_SIZE, setInventory, setBackpack, setResources, onNPCClick, onPCClick, masterResourcesRef.current]);\n\n  return (\n    <div\n      ref={containerRef}\n      style={{\n        position: 'relative',\n        width: `${64 * TILE_SIZE}px`,\n        height: `${64 * TILE_SIZE}px`,\n        overflow: 'hidden',\n//        margin: '0 auto'\n      }}\n    >\n      {/* NPCs and PCs are rendered manually in the container */}\n    </div>\n  );\n  \n};\n\n\n// CLICKING ON A PC\n//\nfunction handlePCClick(pc, currentPlayer, gridId, TILE_SIZE) {\n  if (!pc) {\n    console.warn(\"handlePCClick was called with an undefined PC.\");\n    return;\n  }\n\n  const isNotSelf = String(pc.playerId) !== String(currentPlayer._id);\n  const isAttackable = pc.hp > 0 && !pc.iscamping;\n  const isHomestead = currentPlayer?.location?.gtype === 'homestead';\n  const isTown = currentPlayer?.location?.gtype === 'town';\n\n  if (isNotSelf && isAttackable && !isHomestead && !isTown) {\n    handleAttackOnPC(pc, currentPlayer, gridId, TILE_SIZE);\n  }\n}\n\n\n// PC & NPC HOVER\n// CUSTOM TOOLTIP CODE FOR NPCS AND PCS\n\n// React-friendly tooltip handler for NPC hover\nfunction handleNPCHover(event, npc, TILE_SIZE, hoveredEntityIdRef, setHoverTooltip, strings) {\n  const rect = event.target.getBoundingClientRect();\n  const x = rect.left + TILE_SIZE / 2;\n  const y = rect.top;\n\n  const localizedNPCType = getLocalizedString(npc.type, strings);\n  let tooltipContent = `<p>${localizedNPCType}</p>`;\n\n  switch (npc.action) {\n    case 'graze': {\n      switch (npc.state) {\n        case 'processing':\n          tooltipContent = `<p>${localizedNPCType}</p><p>is ready.</p>`;\n          break;\n        case 'hungry': {\n          const lookingFor = npc.type === 'Pig' ? 'dirt' : 'grass';\n          tooltipContent = `<p>${localizedNPCType}</p><p>is hungry and</p><p>looking for ${lookingFor}.</p>`;\n          break;\n        }\n        case 'grazing': {\n          let countdownText = \"\";\n          if (npc.grazeEnd) {\n            const remainingTime = Math.max(0, npc.grazeEnd - Date.now());\n            const minutes = Math.floor((remainingTime % (1000 * 60 * 60)) / (1000 * 60));\n            const seconds = Math.floor((remainingTime % (1000 * 60)) / 1000);\n            countdownText = `<p>${minutes}m ${seconds}s</p>`;\n          }\n          tooltipContent = `<p>${localizedNPCType}</p><p>is grazing.</p>${countdownText}`;\n          break;\n        }\n        case 'idle':\n          tooltipContent = `<p>Zzzz...</p>`;\n          break;\n        case 'roam':\n          tooltipContent = `<p>${localizedNPCType}</p><p>is roaming.</p>`;\n          break;\n        case 'stall':\n          tooltipContent = `<p>${localizedNPCType}</p><p>is looking for an Animal Stall.</p>`;\n          break;\n        default:\n          tooltipContent = `<p>${localizedNPCType}</p>`;\n          break;\n      }\n      break;\n    }\n    case 'quest':\n      tooltipContent = `<p>${localizedNPCType}</p><p>\"Need some advice?\"</p>`;\n      break;\n    case 'attack':\n    case 'spawn':\n      tooltipContent = `<p>${localizedNPCType}</p><p>HP: ${npc.hp}/${npc.maxhp}</p>`;\n      // Add state info for enemy NPCs\n      if (npc.state) {\n        tooltipContent += `<p>State: ${npc.state}</p>`;\n      }\n      break;\n    default:\n      tooltipContent = `<p>${npc.type}</p>`;\n      break;\n  }\n\n  hoveredEntityIdRef.current = npc.id;\n  setHoverTooltip({ x, y, content: tooltipContent });\n}\n\nfunction handleNPCHoverLeave(npc, hoveredEntityIdRef, setHoverTooltip) {\n  if (hoveredEntityIdRef.current === npc.id) {\n    setHoverTooltip(null);\n    hoveredEntityIdRef.current = null;\n  }\n}\n\nfunction handlePCHover(event, pc, TILE_SIZE, setHoverTooltip) {\n  const rect = event.target.getBoundingClientRect();\n  const x = rect.left + TILE_SIZE / 2;\n  const y = rect.top;\n  \n  const username = pc.username || 'Anonymous';\n  let content = `<p>${username}</p><p>❤️‍🩹 HP: ${pc.hp}</p>`;\n  if (pc.iscamping) content += `<p>🏕️ Camping</p>`;\n  if (pc.isinboat) content += `<p>🛶 In a boat</p>`;\n  \n  setHoverTooltip({ x, y, content });\n}\n\nfunction handlePCHoverLeave(setHoverTooltip) {\n  setHoverTooltip(null);\n}\n\n// Render visual overlay on any entity (NPC, crafting station, etc)\nexport function renderOverlay(parentDiv, overlayType) {\n  const overlay = document.createElement('div');\n  overlay.className = 'game-overlay';\n  overlay.setAttribute('data-overlay-type', overlayType);\n  \n  const content = getOverlayContent(overlayType);\n  overlay.textContent = content.emoji;\n  overlay.style.color = content.color;\n  \n  parentDiv.appendChild(overlay);\n}\n\n// Render speech bubble on entity\nfunction renderSpeechBubble(parentDiv, speakerId, speakerType) {\n  const speech = ConversationManager.getSpeech(speakerId);\n  \n  // Check if bubble already exists with correct content\n  const existingBubble = parentDiv.querySelector('.conversation-speech-bubble');\n  if (existingBubble) {\n    const existingEmoji = existingBubble.querySelector('.speech-emoji')?.textContent;\n    if (!speech) {\n      existingBubble.remove();\n      return;\n    }\n    if (existingEmoji === (speech.topic || speech.emoji)) {\n      return; // Bubble already exists with correct content\n    }\n    existingBubble.remove();\n  }\n  \n  if (!speech) return;\n  \n  const bubble = document.createElement('div');\n  bubble.className = `conversation-speech-bubble ${speakerType}${speech.isMatch ? ' match' : ''}`;\n  bubble.style.position = 'absolute';\n  bubble.style.left = '50%';\n  bubble.style.bottom = '100%';\n  bubble.style.transform = 'translateX(-50%)';\n  bubble.style.marginBottom = '10px';\n  \n  // Scale bubble size based on parent size (which scales with zoom)\n  const parentSize = parseInt(window.getComputedStyle(parentDiv).width);\n  const scale = parentSize / 30 * 0.5; // Base size is 30px, then 50% of that\n  bubble.style.fontSize = `${20 * scale}px`;\n  bubble.style.width = `${80 * scale}px`;\n  bubble.style.height = `${80 * scale}px`;\n  bubble.style.padding = `${15 * scale}px`;\n  bubble.style.borderWidth = `${3 * scale}px`;\n  // Don't set borderRadius here - let CSS handle it for the circular shape\n  \n  const emojiDiv = document.createElement('div');\n  emojiDiv.className = 'speech-emoji';\n  emojiDiv.textContent = speech.topic || speech.emoji;\n  emojiDiv.style.fontSize = `${32 * scale * 2}px`; // Scale emoji size (compensate for smaller bubble)\n  bubble.appendChild(emojiDiv);\n  \n  parentDiv.appendChild(bubble);\n  \n  // Log detailed position info\n  const bubbleRect = bubble.getBoundingClientRect();\n  const parentRect = parentDiv.getBoundingClientRect();\n}\n\n// React component for overlay content\nexport const getOverlayContent = (overlayType) => {\n  switch (overlayType) {\n    case 'exclamation':\n      return { emoji: '❗', color: '#FF6B35' };\n    case 'attack':\n      return { emoji: '⚔️', color: '#DC143C' };\n    case 'completed':\n      return { emoji: '✅', color: '#32CD32' };\n    case 'available':\n      return { emoji: '👋', color: '#FFD700' };\n    case 'ready':\n      return { emoji: '✅', color: 'green' };\n    case 'inprogress':\n      return { emoji: '🕑', color: 'orange' };\n    case 'campaign':\n      return { emoji: '🕐', color: '#FFD700' };\n    case 'voting':\n      return { emoji: '✅', color: 'green' };\n    default:\n      // For trade NPCs, the overlayType is the actual trade item symbol\n      if (overlayType && overlayType.length <= 3) {\n        return { emoji: overlayType, color: '#4B9BFF' };\n      }\n      return { emoji: '', color: '#888' };\n  }\n};\n\n// Render relationship outcome VFX on entity\nfunction renderRelationshipOutcome(parentDiv, speakerId) {\n  const outcome = ConversationManager.getOutcome(speakerId);\n  \n  // Check if outcome element exists\n  const existingOutcome = parentDiv.querySelector('.relationship-outcome');\n  if (existingOutcome) {\n    if (!outcome) {\n      existingOutcome.remove();\n      return;\n    }\n    // If same type and timestamp, keep it\n    const existingType = existingOutcome.getAttribute('data-outcome-type');\n    const existingTimestamp = existingOutcome.getAttribute('data-timestamp');\n    if (existingType === outcome.type && existingTimestamp === String(outcome.timestamp)) {\n      return;\n    }\n    existingOutcome.remove();\n  }\n  \n  if (!outcome) return;\n  \n  const outcomeDiv = document.createElement('div');\n  outcomeDiv.className = 'relationship-outcome';\n  outcomeDiv.setAttribute('data-outcome-type', outcome.type);\n  outcomeDiv.setAttribute('data-timestamp', String(outcome.timestamp));\n  outcomeDiv.style.position = 'absolute';\n  outcomeDiv.style.left = '50%';\n  outcomeDiv.style.bottom = '100%';\n  outcomeDiv.style.transform = 'translateX(-50%)';\n  outcomeDiv.style.marginBottom = '10px';\n  outcomeDiv.style.pointerEvents = 'none';\n  outcomeDiv.style.zIndex = '1001';\n  \n  // Scale based on parent size (which scales with zoom)\n  const parentSize = parseInt(window.getComputedStyle(parentDiv).width);\n  const scale = parentSize / 30; // Base size is 30px\n  \n  if (outcome.type === 'positive') {\n    outcomeDiv.textContent = '👍';\n    outcomeDiv.style.color = 'rgb(252, 249, 249)';\n    outcomeDiv.style.fontSize = `${24 * scale}px`;\n    outcomeDiv.style.fontWeight = 'bold';\n    outcomeDiv.style.textShadow = '2px 2px 4px rgba(0,0,0,0.3)';\n  } else {\n    outcomeDiv.textContent = '❌';\n    outcomeDiv.style.fontSize = `${20 * scale}px`;\n  }\n  \n  parentDiv.appendChild(outcomeDiv);\n}\n\nexport default DynamicRenderer;","import React, { memo, useState, useEffect, useRef } from 'react';\nimport { startAmbientVFX, stopAmbientVFX } from '../VFX/AmbientVFX';\nimport GlobalGridStateTilesAndResources from '../GridState/GlobalGridStateTilesAndResources';\nimport { getOverlayContent } from './RenderDynamic';\nimport { getLocalizedString } from '../Utils/stringLookup';\nimport './Render.css';\nimport '../App.css';\n\nexport function generateResourceTooltip(resource, strings) {\n  if (!resource || resource.category === 'doober' || resource.category === 'source') return '';\n\n  const lines = [];\n\n  const currentTime = Date.now();\n  const localizedResourceType = getLocalizedString(resource.type, strings);\n\n  switch (resource.category) {\n    case 'farmplot':\n      lines.push(`<p>${localizedResourceType}</p>`);\n      if (resource.growEnd) {\n        const remainingTime = Math.max(0, resource.growEnd - currentTime);\n        const days = Math.floor(remainingTime / (1000 * 60 * 60 * 24));\n        const hours = Math.floor((remainingTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n        const minutes = Math.floor((remainingTime % (1000 * 60 * 60)) / (1000 * 60));\n        const seconds = Math.floor((remainingTime % (1000 * 60)) / 1000);\n        if (remainingTime > 0) {\n          const parts = [];\n          if (days > 0) parts.push(`${days}d`);\n          if (hours > 0) parts.push(`${hours}h`);\n          if (minutes > 0) parts.push(`${minutes}m`);\n          if (seconds > 0 || parts.length === 0) parts.push(`${seconds}s`);\n          lines.push(`<p>🌱 ${parts.join(' ')} remaining</p>`);\n        }\n      }\n      break;\n\n    case 'crafting':\n      lines.push(`<p>${localizedResourceType}</p>`);\n      if (resource.craftEnd) {\n        const remainingTime = Math.max(0, resource.craftEnd - currentTime);\n        const days = Math.floor(remainingTime / (1000 * 60 * 60 * 24));\n        const hours = Math.floor((remainingTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n        const minutes = Math.floor((remainingTime % (1000 * 60 * 60)) / (1000 * 60));\n        const seconds = Math.floor((remainingTime % (1000 * 60)) / 1000);\n        if (remainingTime > 0) {\n          const parts = [];\n          if (days > 0) parts.push(`${days}d`);\n          if (hours > 0) parts.push(`${hours}h`);\n          if (minutes > 0) parts.push(`${minutes}m`);\n          if (seconds > 0 || parts.length === 0) parts.push(`${seconds}s`);\n          lines.push(`<p>⏳ ${parts.join(' ')} remaining</p>`);\n        }\n      }\n      break;\n\n    default:\n      lines.push(`<p>${localizedResourceType}</p>`);\n      break;\n  }\n\n  return lines.join('');\n}\n\nexport const RenderGrid = memo(\n  ({ grid, tileTypes, resources, handleTileClick, TILE_SIZE, setHoverTooltip, currentPlayer, strings, badgeState, electionPhase }) => {\n\n    const [, forceTick] = useState(0);\n      useEffect(() => {\n        const interval = setInterval(() => {\n          forceTick(t => t + 1);\n        }, 1000);\n        return () => clearInterval(interval);\n      }, []);\n\n    const hoverTimersRef = useRef({}); // ✅ Must be before any early return\n\n    // Validation\n    if (!grid || !Array.isArray(grid) || !tileTypes) { console.error('Invalid grid or tileTypes:', grid, tileTypes); return null; }\n    if (!TILE_SIZE || isNaN(TILE_SIZE)) { console.error('TILE_SIZE is invalid:', TILE_SIZE); return null; }\n\n    const currentTime = Date.now();\n\n    const craftingStatus = resources.reduce((acc, res) => {\n      if ((res.category === 'crafting' || res.category === 'farmhouse') && res.craftEnd) {\n        const key = `${res.x}-${res.y}`;\n        if (res.craftEnd < currentTime) {\n          acc.ready.push(key);\n        } else {\n          acc.inProgress.push(key);\n        }\n      }\n      return acc;\n    }, { ready: [], inProgress: [] });\n\n    // Check for pet status\n    const petStatus = resources.reduce((acc, res) => {\n      if (res.category === 'pet') {\n        const key = `${res.x}-${res.y}`;\n        if (res.craftEnd && res.craftedItem) {\n          // Pet has a reward\n          if (res.craftEnd < currentTime) {\n            acc.ready.push(key);\n          } else {\n            acc.searching.push(key);\n          }\n        } else {\n          // Pet is hungry\n          acc.hungry.push(key);\n        }\n      }\n      return acc;\n    }, { ready: [], searching: [], hungry: [] });\n\n    // Check for completed trades at Trading Post\n    const tradingStatus = resources.reduce((acc, res) => {\n      if (res.type === 'Trading Post' && currentPlayer?.tradeStall) {\n        const hasCompletedTrades = currentPlayer.tradeStall.some(trade => \n          trade && (\n            (trade.sellTime && new Date(trade.sellTime) < currentTime) ||\n            (trade.boughtBy !== null && trade.boughtBy !== undefined)\n          )\n        );\n        if (hasCompletedTrades) {\n          acc.ready.push(`${res.x}-${res.y}`);\n        }\n      }\n      return acc;\n    }, { ready: [] });\n\n    // Render tiles and resources\n    return grid.map((row, rowIndex) =>\n      row.map((tile, colIndex) => {\n        // Check if this tile is part of a multi-tile resource\n        const resource = resources.find((res) => {\n          const range = res.range || 1;\n          // Check if the current tile falls within the resource's range\n          // Resource is anchored at lower-left (res.x, res.y)\n          return colIndex >= res.x && colIndex < res.x + range &&\n                 rowIndex <= res.y && rowIndex > res.y - range;\n        });\n        const tileType = tileTypes[rowIndex]?.[colIndex] || 'unknown';\n        const tileClass = `tile-${tileType}`;\n        const key = `${colIndex}-${rowIndex}`;\n        \n        // For multi-tile resources, check crafting status against anchor coordinates\n        let isCraftReady = false;\n        let isCraftInProgress = false;\n        let isTradingReady = false;\n        let isPetReady = false;\n        let isPetSearching = false;\n        let isPetHungry = false;\n        \n        if (resource && (resource.category === 'crafting' || resource.category === 'farmhouse')) {\n          const resourceKey = `${resource.x}-${resource.y}`;\n          isCraftReady = craftingStatus.ready.includes(resourceKey);\n          isCraftInProgress = craftingStatus.inProgress.includes(resourceKey);\n        } else if (resource && resource.type === 'Trading Post') {\n          const resourceKey = `${resource.x}-${resource.y}`;\n          isTradingReady = tradingStatus.ready.includes(resourceKey);\n        } else if (resource && resource.category === 'pet') {\n          const resourceKey = `${resource.x}-${resource.y}`;\n          isPetReady = petStatus.ready.includes(resourceKey);\n          isPetSearching = petStatus.searching.includes(resourceKey);\n          isPetHungry = petStatus.hungry.includes(resourceKey);\n        } else {\n          // For regular tiles, use current tile coordinates\n          isCraftReady = craftingStatus.ready.includes(key);\n          isCraftInProgress = craftingStatus.inProgress.includes(key);\n        }\n\n        return (\n          <div\n            key={`${rowIndex}-${colIndex}-${resource?.symbol || ''}`}\n            onClick={() => handleTileClick(rowIndex, colIndex)}\n            onMouseEnter={(event) => {\n              if (resource && resource.category !== 'doober' && resource.category !== 'source') {\n                const rect = event.currentTarget.getBoundingClientRect();\n                const updateTooltip = () => {\n                  setHoverTooltip({\n                    x: rect.left + rect.width / 2,\n                    y: rect.top,\n                    content: generateResourceTooltip(resource, strings),\n                  });\n                };\n                updateTooltip(); // Immediate render\n                hoverTimersRef.current[key] = setInterval(updateTooltip, 1000); // Store interval ID\n              }\n            }}\n            onMouseLeave={() => {\n              if (hoverTimersRef.current[key]) {\n                clearInterval(hoverTimersRef.current[key]);\n                delete hoverTimersRef.current[key];\n              }\n              setHoverTooltip(null);\n            }}\n            className={tileClass}\n            style={{\n              position: 'absolute',\n              top: rowIndex * TILE_SIZE,\n              left: colIndex * TILE_SIZE,\n              width: TILE_SIZE,\n              height: TILE_SIZE,\n              fontSize: `${TILE_SIZE * 0.7}px`,\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              zIndex: resource && resource.x === colIndex && resource.y === rowIndex && resource.range > 1 ? 10 : 1,\n              cursor: resource ? 'pointer' : 'default',\n              overflow: resource && resource.x === colIndex && resource.y === rowIndex && resource.range > 1 ? 'visible' : 'hidden',\n            }}\n          >\n            {/* Resource Overlay - only render at anchor position for multi-tile resources */}\n            {resource && resource.x === colIndex && resource.y === rowIndex && (\n              <div\n                className=\"resource-overlay\"\n                style={{\n                  fontSize: resource.range > 1 \n                    ? resource.action === 'wall'\n                      ? `${TILE_SIZE * 1.1 * resource.range}px` // Multi-tile walls\n                      : `${TILE_SIZE * 0.8 * resource.range}px` // Other multi-tile resources\n                    : resource.action === 'wall'\n                      ? `${TILE_SIZE * 1.1}px` // Single-tile walls\n                      : `${TILE_SIZE * 0.7}px`, // Other single-tile resources\n                  width: resource.range > 1 ? `${TILE_SIZE * resource.range}px` : 'auto',\n                  height: resource.range > 1 ? `${TILE_SIZE * resource.range}px` : 'auto',\n                  position: resource.range > 1 ? 'absolute' : 'static',\n                  left: resource.range > 1 ? '0' : 'auto',\n                  top: resource.range > 1 ? `-${TILE_SIZE * (resource.range - 1)}px` : 'auto',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  zIndex: resource.range > 1 ? 10 : 2, // Higher z-index for multi-tile\n                  pointerEvents: 'none',\n                  overflow: 'visible',\n                }}\n              >\n                {resource.symbol || ''}\n              </div>\n            )}\n\n            {/* ✅ Add Checkmark for Ready Crafting Stations */}\n            {isCraftReady && (!resource || resource.range <= 1 || (resource.x === colIndex && resource.y === rowIndex)) && (\n              <div\n                className=\"game-overlay\"\n                style={{\n                  color: getOverlayContent('ready').color,\n                }}\n              >\n                {getOverlayContent('ready').emoji}\n              </div>\n            )}\n\n            {/* ✅ Add Timer (⌛️) for Crafting Stations Still in Progress */}\n            {isCraftInProgress && (!resource || resource.range <= 1 || (resource.x === colIndex && resource.y === rowIndex)) && (\n              <div\n                className=\"game-overlay\"\n                style={{\n                  color: getOverlayContent('inprogress').color,\n                }}\n              >\n                {getOverlayContent('inprogress').emoji}\n              </div>\n            )}\n\n            {/* ✅ Add Checkmark for Trading Post with completed trades */}\n            {isTradingReady && resource && resource.type === 'Trading Post' && resource.x === colIndex && resource.y === rowIndex && (\n              <div\n                className=\"game-overlay\"\n                style={{\n                  color: getOverlayContent('ready').color,\n                }}\n              >\n                {getOverlayContent('ready').emoji}\n              </div>\n            )}\n\n            {/* ✅ Add Checkmark for Mailbox with unread messages */}\n            {badgeState?.mailbox && resource && resource.type === 'Mailbox' && resource.x === colIndex && resource.y === rowIndex && (\n              <div\n                className=\"game-overlay\"\n                style={{\n                  color: getOverlayContent('ready').color,\n                }}\n              >\n                {getOverlayContent('ready').emoji}\n              </div>\n            )}\n            \n            {/* ✅ Add Clock/Checkmark for Courthouse based on election phase */}\n            {resource && resource.type === 'Courthouse' && resource.x === colIndex && resource.y === rowIndex && (\n              <>\n                {electionPhase === 'Campaigning' && (\n                  <div\n                    className=\"game-overlay\"\n                    style={{\n                      color: getOverlayContent('campaign').color,\n                    }}\n                  >\n                    {getOverlayContent('campaign').emoji}\n                  </div>\n                )}\n                {electionPhase === 'Voting' && (\n                  <div\n                    className=\"game-overlay\"\n                    style={{\n                      color: getOverlayContent('voting').color,\n                    }}\n                  >\n                    {getOverlayContent('voting').emoji}\n                  </div>\n                )}\n              </>\n            )}\n            \n            {/* ✅ Add overlays for Pets */}\n            {isPetReady && resource && resource.category === 'pet' && resource.x === colIndex && resource.y === rowIndex && (\n              <div\n                className=\"game-overlay\"\n                style={{\n                  color: getOverlayContent('ready').color,\n                }}\n              >\n                {getOverlayContent('ready').emoji}\n              </div>\n            )}\n            {isPetSearching && resource && resource.category === 'pet' && resource.x === colIndex && resource.y === rowIndex && (\n              <div\n                className=\"game-overlay\"\n                style={{\n                  color: getOverlayContent('inprogress').color,\n                }}\n              >\n                {getOverlayContent('inprogress').emoji}\n              </div>\n            )}\n          </div>\n        );\n      })\n    );\n  }\n);\n\n\nexport const RenderVFX = ({ toggleVFX }) => {\n  // useEffect(() => {\n  //   if (toggleVFX) {\n  //     startAmbientVFX();\n  //   } else {\n  //     stopAmbientVFX();\n  //   }\n  //   return () => {\n  //     stopAmbientVFX(); // Clean up on unmount\n  //   };\n  // }, [toggleVFX]);\n\n  return null;\n};\n\n\nexport const RenderTooltip = memo(({ resource, npc, pc, tooltipPosition, isTooltipVisible }) => {\n  // ✅ Always define hooks at the top\n  const [craftingCountdown, setCraftingCountdown] = useState(null);\n  const [farmingCountdown, setFarmingCountdown] = useState(null);\n\n  // ✅ Prevent the effect from running unnecessarily\n  useEffect(() => {\n    if (!resource) {\n      setCraftingCountdown(null);\n      setFarmingCountdown(null);\n      return;\n    }\n\n    const updateCountdowns = () => {\n      if (resource.craftEnd) {\n        const remainingTime = Math.max(0, resource.craftEnd - Date.now());\n        setCraftingCountdown(remainingTime);\n      }\n\n      if (resource.growEnd) {\n        const remainingTime = Math.max(0, resource.growEnd - Date.now());\n        setFarmingCountdown(remainingTime);\n      }\n    };\n\n    updateCountdowns(); // Initial fetch\n    const timer = setInterval(updateCountdowns, 1000); // Update every second\n\n    return () => clearInterval(timer);\n  }, [resource]); // ✅ Depend on `resource` so it updates correctly\n\n  // ✅ Prevent tooltip from rendering empty content\n  if (!isTooltipVisible || (!resource && !npc && !pc)) return null;\n\n  const tooltipContent = [];\n  const entity = npc || pc || resource; // Prioritize NPCs > PCs > Resources\n\n  // ✅ Tooltip content logic\n  switch (entity.category) {\n\n    case 'source':\n    case 'doober':\n      break;\n\n    case 'farmplot':\n      tooltipContent.push(`${entity.type}`);\n      if (farmingCountdown !== null && farmingCountdown > 0) {\n        const minutes = Math.floor((farmingCountdown % (1000 * 60 * 60)) / (1000 * 60));\n        const seconds = Math.floor((farmingCountdown % (1000 * 60)) / 1000);\n        tooltipContent.push(`🌱 ${minutes}m ${seconds}s remaining`);\n      }\n      break;\n\n    case 'crafting':\n      tooltipContent.push(`${entity.type}`);\n      if (craftingCountdown !== null && craftingCountdown > 0) {\n        const minutes = Math.floor((craftingCountdown % (1000 * 60 * 60)) / (1000 * 60));\n        const seconds = Math.floor((craftingCountdown % (1000 * 60)) / 1000);\n        tooltipContent.push(`⏳ ${minutes}m ${seconds}s remaining`);\n      }\n      break;\n\n    default:\n      tooltipContent.push(`${entity.type}`);\n      break;\n  }\n\n  if (tooltipContent.length === 0) return null; // Avoid rendering empty tooltips\n\n  return (\n    <div\n        className=\"HoverTooltip\"\n        style={{\n        position: 'absolute',\n        top: tooltipPosition.y,\n        left: tooltipPosition.x,\n        zIndex: 20, // Above all\n      }}\n    >\n      {tooltipContent.map((line, index) => (\n        <p key={index}>{line}</p>\n      ))}\n    </div>\n  );\n});","const lockedResources = new Map(); // Key: \"x-y\", Value: timestamp\n\nexport function lockResource(x, y) {\n  lockedResources.set(`${x}-${y}`, Date.now());\n}\n\nexport function unlockResource(x, y) {\n    lockedResources.delete(`${x}-${y}`);\n}\n\nexport function isResourceLocked(x, y) {\n  const lockTime = lockedResources.get(`${x}-${y}`);\n  const now = Date.now();\n\n  // Ignore lock if it has expired (e.g., 3 seconds timeout)\n  return lockTime && now - lockTime < 1000;\n}\n","/**\n * DropRates.js\n * Shared utility for managing drop rates and rarity chances across the game.\n * Used by both ScrollReveal and PetPanel systems.\n */\n\n/**\n * Standard rarity table for the game\n * These values represent the relative weight/chance of each rarity tier.\n * Higher numbers = more common.\n */\nconst STANDARD_RARITY_TABLE = {\n  'common': 100,     // 1 in 1 (baseline)\n  'uncommon': 50,    // 1 in 2 \n  'rare': 20,        // 1 in 5\n  'epic': 5,         // 1 in 20\n  'legendary': 1     // 1 in 100\n};\n\n/**\n * Convert rarity string to numeric chance value for weighted selection\n * @param {string} rarity - Rarity tier: 'common', 'uncommon', 'rare', 'epic', 'legendary'\n * @param {number} level - Optional level multiplier (default: 1). Higher levels increase drop rates.\n *                        Level 1 = standard rates, Level 2 = 2x drop rates, etc.\n * @returns {number} Chance weight (higher = more common)\n */\nexport function getRarityChance(rarity, level = 1) {\n  // Handle backward compatibility with old numeric values\n  if (typeof rarity === 'number') {\n    return rarity * level;\n  }\n  \n  // Get base rarity from table\n  const baseRarity = STANDARD_RARITY_TABLE[rarity] || STANDARD_RARITY_TABLE['common'];\n  \n  // Apply level multiplier to effectively reduce the rarity gap\n  // The goal is to make rare items more common at higher levels\n  // by multiplying their weight more than common items.\n  // \n  // We use a formula that compresses the rarity distribution:\n  // newWeight = baseRarity * level^scaleFactor\n  // where scaleFactor is higher for rarer items\n  // \n  // For the desired behavior where legendary goes from 1/100 to 1/20 at level 5:\n  // We need legendary weight to go from 1 to 5 (5x increase)\n  // While common weight should increase less dramatically\n  \n  // Calculate scale factor based on rarity (rarer items get bigger boost)\n  // Common (100) gets smallest boost, Legendary (1) gets biggest boost\n  const rarityScale = 1 + (100 - baseRarity) / 100; // Common=1, Legendary=1.99\n  \n  // Apply the level scaling with the rarity-specific multiplier\n  // This makes rare items increase faster than common items\n  return baseRarity * Math.pow(level, rarityScale - 1);\n}\n\n/**\n * Example calculations for getRarityChance at different levels:\n * \n * Level 1 (base rates):\n * - Common: 100 * 1^0 = 100 (1 in 1.76)\n * - Uncommon: 50 * 1^0.5 = 50 (1 in 3.52)\n * - Rare: 20 * 1^0.8 = 20 (1 in 8.8)\n * - Epic: 5 * 1^0.95 = 5 (1 in 35.2)\n * - Legendary: 1 * 1^0.99 = 1 (1 in 176)\n * \n * Level 5 (compressed distribution):\n * - Common: 100 * 5^0 = 100 (1 in 3.89)\n * - Uncommon: 50 * 5^0.5 = 111.8 (1 in 3.48)\n * - Rare: 20 * 5^0.8 = 65.9 (1 in 5.91)\n * - Epic: 5 * 5^0.95 = 22.8 (1 in 17.07)\n * - Legendary: 1 * 5^0.99 = 4.9 (1 in 79.4)\n * \n * This achieves the goal where legendary becomes approximately 5x more common at level 5\n * while common items stay at the same absolute weight.\n */\n\n/**\n * Select a random rarity tier based on weighted probabilities\n * @param {number} level - Optional level multiplier for drop rates (default: 1)\n * @returns {string} Selected rarity tier\n */\nexport function selectRandomRarity(level = 1) {\n  // Calculate total weight with level multiplier\n  const totalWeight = Object.entries(STANDARD_RARITY_TABLE).reduce(\n    (sum, [rarity, baseChance]) => sum + getRarityChance(rarity, level), \n    0\n  );\n  \n  // Generate random value\n  const roll = Math.random() * totalWeight;\n  let cumulative = 0;\n  \n  // Find which rarity tier the roll falls into\n  for (const [rarity, baseChance] of Object.entries(STANDARD_RARITY_TABLE)) {\n    cumulative += getRarityChance(rarity, level);\n    if (roll <= cumulative) {\n      return rarity;\n    }\n  }\n  \n  // Fallback (shouldn't reach here)\n  return 'common';\n}\n\n/**\n * Select a random item from a weighted array based on rarity\n * @param {Array} items - Array of items with scrollchance property\n * @param {number} level - Optional level multiplier for drop rates (default: 1)\n * @returns {Object|null} Selected item or null if no items\n */\nexport function selectWeightedRandomItem(items, level = 1) {\n  if (!items || items.length === 0) {\n    return null;\n  }\n  \n  // Calculate total weight based on rarity chances\n  const totalWeight = items.reduce(\n    (sum, item) => sum + getRarityChance(item.scrollchance, level), \n    0\n  );\n  \n  // Generate weighted random selection\n  const roll = Math.random() * totalWeight;\n  let cumulative = 0;\n  \n  // Find the selected item based on weighted probability\n  for (const item of items) {\n    cumulative += getRarityChance(item.scrollchance, level);\n    if (roll <= cumulative) {\n      return item;\n    }\n  }\n  \n  // Fallback to first item\n  return items[0];\n}\n\n/**\n * Get drop quantity for a given rarity\n * Common items tend to drop in larger quantities\n * @param {string} rarity - The rarity tier\n * @returns {number} Quantity to drop\n */\nexport function getDropQuantity(rarity) {\n  const quantityRanges = {\n    'common': { min: 2, max: 3 },\n    'uncommon': { min: 2, max: 3 },\n    'rare': { min: 2, max: 3 },\n    'epic': { min: 1, max: 1 },\n    'legendary': { min: 1, max: 1 }\n  };\n  \n  const range = quantityRanges[rarity] || quantityRanges['common'];\n  return Math.floor(Math.random() * (range.max - range.min + 1)) + range.min;\n}\n\n/**\n * Export the standard rarity table for reference\n */\nexport const RARITY_TABLE = STANDARD_RARITY_TABLE;","import API_BASE from './config.js'; \nimport axios from 'axios';\nimport { fetchInventoryAndBackpack, refreshPlayerAfterInventoryUpdate } from './Utils/InventoryManagement';\nimport { gainIngredients, spendIngredients, calculateSkillMultiplier, hasRoomFor } from './Utils/InventoryManagement';\nimport { updateGridResource } from './Utils/GridManagement';\nimport { loadMasterResources, loadMasterSkills } from './Utils/TuningManager'; // Centralized tuning manager\nimport FloatingTextManager from './UI/FloatingText';\nimport { lockResource, unlockResource } from './Utils/ResourceLockManager';\nimport { handleTransitSignpost } from './GameFeatures/Transit/Transit';\nimport { trackQuestProgress } from './GameFeatures/Quests/QuestGoalTracker';\nimport { createCollectEffect, createSourceConversionEffect, calculateTileCenter } from './VFX/VFX';\nimport { earnTrophy } from './GameFeatures/Trophies/TrophyUtils';\nimport { useStrings } from './UI/StringsContext';\nimport { getLocalizedString } from './Utils/stringLookup';\nimport { formatSingleCollection } from './UI/StatusBar/CollectionFormatters';\nimport GlobalGridStateTilesAndResources from './GridState/GlobalGridStateTilesAndResources';\nimport { checkAndDropWarehouseIngredient } from './Utils/ResourceHelpers';\nimport { selectWeightedRandomItem, getDropQuantity } from './Utils/DropRates';\n \n // Handles resource click actions based on category. //\n export async function handleResourceClick(\n  resource,\n  row,\n  col,\n  resources,\n  setResources,\n  setInventory,\n  setBackpack,\n  inventory,\n  backpack,\n  addFloatingText,\n  gridId,\n  TILE_SIZE,\n  tileTypes,\n  currentPlayer,\n  setCurrentPlayer,\n  setGridId,\n  setGrid,\n  setTileTypes,\n  updateStatus,\n  masterResources,\n  masterSkills,\n  setModalContent,\n  setIsModalOpen,\n  closeAllPanels,\n  strings,\n  bulkOperationContext,\n  openPanel,\n  masterTrophies = null,\n  globalTuning = null\n) {\n  console.log(`Resource Clicked:  (${row}, ${col}):`, { resource, tileType: tileTypes[row]?.[col] });\n  if (!resource || !resource.category) { console.error(`Invalid resource at (${col}, ${row}):`, resource); return; }\n  \n  lockResource(col, row); // Optimistically lock the resource\n\n  try {\n    // Load master resources and skills (cached internally)\n    if (!masterResources || masterResources.length === 0) { \n      masterResources = await loadMasterResources();  // Direct assignment without `const`\n    }\n    if (!masterSkills || masterSkills.length === 0) { \n      masterSkills = await loadMasterSkills(); \n    }\n    const skills = currentPlayer.skills;\n    // Fetch inventory and backpack if either is empty\n    if ((!Array.isArray(inventory)) || (!Array.isArray(backpack))) {\n      console.warn('Inventory or backpack is not initialized; fetching from server.');\n      const { inventory: fetchedInventory, backpack: fetchedBackpack } = await fetchInventoryAndBackpack(currentPlayer.playerId);\n      setInventory(fetchedInventory); // Update state with fetched inventory\n      setBackpack(fetchedBackpack); // Update state with fetched backpack\n    }\n\n    switch (resource.category) {\n\n      case 'doober':\n      case 'special':\n        await handleDooberClick(\n          resource,\n          row,\n          col,\n          resources,\n          setResources,\n          setInventory,\n          setBackpack,\n          currentPlayer?.inventory || [],\n          currentPlayer?.backpack || [],\n          skills,\n          gridId,\n          addFloatingText,\n          TILE_SIZE,\n          currentPlayer,\n          setCurrentPlayer,\n          updateStatus,\n          masterResources,\n          masterSkills, // Pass tuning data\n          strings,\n          openPanel,\n          globalTuning,\n          masterTrophies\n        );\n        break;\n\n      case 'source':\n        await handleSourceConversion(\n          resource,\n          row,\n          col,\n          resources,\n          setResources,\n          inventory,\n          setInventory,\n          backpack,\n          setBackpack,  \n          gridId,\n          addFloatingText,\n          TILE_SIZE,\n          currentPlayer,\n          setCurrentPlayer,\n          masterResources,\n          masterSkills, \n          setModalContent,\n          setIsModalOpen,\n          updateStatus,\n          strings\n        );\n        break;\n\n      case 'seed':\n        console.log('Seed clicked; do nothing');\n        break;\n\n      case 'deco':\n        console.log('Deco clicked; placeholder for future functionality');\n        break;\n\n      case 'travel':\n        console.log('Travel sign clicked');\n        console.log('bulkOperationContext:', bulkOperationContext);\n        console.log('isAnyBulkOperationActive:', bulkOperationContext?.isAnyBulkOperationActive?.());\n        \n        // Check if any bulk operation is active\n        if (bulkOperationContext?.isAnyBulkOperationActive?.()) {\n          const activeOps = bulkOperationContext.getActiveBulkOperations();\n          console.log('🚫 Travel blocked: Bulk operation in progress', activeOps);\n          updateStatus(470);\n          return;\n        }\n        \n        try {\n          await handleTransitSignpost(\n            currentPlayer,\n            resource.type,\n            setCurrentPlayer,\n            setGridId, \n            setGrid,\n            setTileTypes, \n            setResources,\n            updateStatus,\n            TILE_SIZE,\n            skills,\n            closeAllPanels,\n            bulkOperationContext,\n            null, // masterResources not available\n            null, // strings not available in ResourceClicking\n            null  // masterTrophies not available in ResourceClicking\n          );\n        } catch (error) {\n          console.error(\"Error handling travel signpost:\", error.message || error);\n        }\n        break;\n        \n      default:\n        console.warn(`Unhandled resource category: ${resource.category}`);\n    }\n  } catch (error) {\n    console.error('Error handling resource click:', error);\n    unlockResource(col, row); // Unlock the resource on error\n  } finally {\n    unlockResource(col, row);\n  }\n}\n\n\n// HANDLE DOOBER CLICKS //\n//\nexport async function handleDooberClick(\n  resource,\n  row,\n  col,\n  resources,\n  setResources,\n  setInventory,\n  setBackpack,\n  inventory = [],\n  backpack = [],\n  skills = [],\n  gridId,\n  addFloatingText,\n  TILE_SIZE,\n  currentPlayer,\n  setCurrentPlayer,\n  updateStatus,\n  masterResources,\n  masterSkills,\n  strings = {},\n  openPanel = null,\n  globalTuning = null,\n  masterTrophies = null\n) {\n  console.log('handleDooberClick: Current Player:', currentPlayer);\n  console.log('handleDooberClick: Current backpack:', backpack);\n  const gtype = currentPlayer.location.gtype;\n  const baseQtyCollected = resource.qtycollected || 1;\n\n  if (!Array.isArray(inventory) || !Array.isArray(backpack)) {\n    console.warn(\"Inventory or backpack missing; aborting doober click.\");\n    return;\n  }\n\n  // Create a unique ID for this doober to prevent double-processing\n  const dooberId = `${resource.type}-${col}-${row}`;\n  \n  // Check if we're already processing this doober (prevent double-clicks)\n  if (window._processingDoobers && window._processingDoobers.has(dooberId)) {\n    console.log(\"Already processing this doober, ignoring duplicate click\");\n    return;\n  }\n  \n  // Mark this doober as being processed\n  if (!window._processingDoobers) {\n    window._processingDoobers = new Set();\n  }\n  window._processingDoobers.add(dooberId);\n\n  console.log('MasterSkills:', masterSkills);\n  // Extract player skills and upgrades from inventory\n  const playerBuffs = skills\n    .filter((item) => {\n      const resourceDetails = masterResources.find((res) => res.type === item.type);\n      const isSkill = resourceDetails?.category === 'skill' || resourceDetails?.category === 'upgrade';\n      const appliesToResource = (masterSkills?.[item.type]?.[resource.type] || 1) > 1;\n      return isSkill && appliesToResource;\n    })\n    .map((buffItem) => buffItem.type);\n\n  //console.log('Player Buffs (Skills and Upgrades):', playerBuffs);\n  // Calculate skill multiplier\n  const skillMultiplier = playerBuffs.reduce((multiplier, buff) => {\n    const buffValue = masterSkills?.[buff]?.[resource.type] || 1;\n    //console.log(`Buff \"${buff}\" applies to \"${resource.type}\" with multiplier x${buffValue}`);\n    return multiplier * buffValue;\n  }, 1);\n  const qtyCollected = baseQtyCollected * skillMultiplier;\n  console.log('[DEBUG] qtyCollected after multiplier:', qtyCollected);\n  \n  // Pre-check capacity before optimistic update\n  const hasRoom = hasRoomFor({\n    resource: resource.type,\n    quantity: qtyCollected,\n    currentPlayer,\n    inventory,\n    backpack,\n    masterResources,\n    globalTuning\n  });\n  \n  if (!hasRoom) {\n    // Don't do optimistic update if we know it will fail\n    console.warn(\"Pre-check: No room for resource. Showing error immediately.\");\n    FloatingTextManager.addFloatingText(strings[\"41\"] || \"Not enough room\", col, row, TILE_SIZE);\n    if (openPanel) {\n      openPanel('InventoryPanel');\n    }\n    // Clear processing flag\n    if (window._processingDoobers) {\n      window._processingDoobers.delete(dooberId);\n    }\n    return;\n  }\n  \n  // Optimistically remove the resource from display AND show effects\n  setResources((prevResources) =>\n    prevResources.filter((res) => !(res.x === col && res.y === row))\n  );\n  \n  // Show VFX and floating text immediately for responsiveness\n  createCollectEffect(col, row, TILE_SIZE);\n  FloatingTextManager.addFloatingText(`+${qtyCollected} ${getLocalizedString(resource.type, strings)}`, col, row, TILE_SIZE);\n\n  // Perform server validation\n  try {\n    // Use gainIngredients to handle inventory/backpack update, sync, and capacity check\n    console.log(\"Calling gainIngredients with: \",resource.type);\n    \n    const gainResult = await gainIngredients({\n      playerId: currentPlayer.playerId,\n      currentPlayer,\n      resource: resource.type,\n      quantity: qtyCollected,\n      inventory,\n      backpack,\n      setInventory,\n      setBackpack,\n      setCurrentPlayer,\n      updateStatus,\n      masterResources,\n      globalTuning,\n    });\n\n    // Handle the result based on error type\n    if (gainResult === true) {\n      // Success - continue with normal flow\n    } else if (gainResult && gainResult.success === false) {\n      // Check if we should rollback based on error type\n      if (gainResult.isCapacityError) {\n        // Real conflict - rollback the doober\n        console.warn(\"❌ Capacity limit reached. Rolling back doober.\");\n        setResources((prevResources) => [...prevResources, resource]);\n        // Show floating text for capacity error\n        FloatingTextManager.addFloatingText(strings[\"41\"] || \"Not enough room\", col, row, TILE_SIZE);\n        // Auto-open inventory panel when truly at capacity\n        console.log(\"Opening inventory panel. openPanel function:\", openPanel);\n        if (openPanel) {\n          openPanel('InventoryPanel');\n        } else {\n          console.warn(\"openPanel function not available!\");\n        }\n        // Clear processing flag\n        if (window._processingDoobers) {\n          window._processingDoobers.delete(dooberId);\n        }\n        return;\n      } else if (gainResult.isNetworkError) {\n        // Network/server error - don't rollback, the server might have queued it\n        console.warn(\"⚠️ Network error during collection, but server may have queued the operation. Not rolling back.\");\n        // Still show success effects since server likely processed it\n      } else {\n        // Other client-side errors - rollback\n        console.warn(\"❌ Client error during collection. Rolling back.\");\n        setResources((prevResources) => [...prevResources, resource]);\n        // Clear processing flag\n        if (window._processingDoobers) {\n          window._processingDoobers.delete(dooberId);\n        }\n        return;\n      }\n    }\n    \n    // Calculate skill info for formatting\n    const skillInfo = calculateSkillMultiplier(resource.type, skills || [], masterSkills);\n    \n    // Format and show status message using shared formatter\n    const statusMessage = formatSingleCollection('harvest', resource.type, qtyCollected, \n      skillInfo.hasSkills ? skillInfo : null, strings, getLocalizedString);\n    updateStatus(statusMessage);\n\n    const gridUpdateResponse = await updateGridResource(\n      gridId,\n      { type: null, x: col, y: row }, // Collecting doober removes it\n      true\n    );\n    if (!gridUpdateResponse?.success) {\n      console.warn('⚠️ Grid update failed even though inventory succeeded.');\n      return;\n    }\n\n    // Track quest progress for \"Collect\" actions\n    // trackQuestProgress expects: (player, action, item, quantity, setCurrentPlayer)\n    await trackQuestProgress(currentPlayer, 'Collect', resource.type, qtyCollected, setCurrentPlayer);\n\n    // Check for warehouse ingredient drops when collecting crops\n    await checkAndDropWarehouseIngredient(\n      resource.type,\n      col,\n      row,\n      TILE_SIZE,\n      {\n        currentPlayer,\n        inventory,\n        backpack,\n        setInventory,\n        setBackpack,\n        setCurrentPlayer,\n        updateStatus,\n        masterResources,\n        globalTuning,\n        strings,\n        FloatingTextManager,\n        gainIngredients,\n        trackQuestProgress,\n        getLocalizedString,\n        selectWeightedRandomItem,\n      }\n    );\n\n    // Award trophies for specific collected items\n    if (masterTrophies && currentPlayer?.playerId) {\n      try {\n        if (resource.type === \"King's Crown\") {\n          console.log(`🏆 Awarding King's Crown trophy for collecting ${qtyCollected} crown(s)`);\n          \n          // Award the Count-type trophy for each crown collected\n          for (let i = 0; i < qtyCollected; i++) {\n            await earnTrophy(currentPlayer.playerId, \"King's Crown\", 1, currentPlayer, masterTrophies, setCurrentPlayer);\n          }\n          \n          console.log(`✅ Successfully awarded ${qtyCollected} King's Crown trophy instance(s)`);\n        } else if (resource.type === \"Trident\") {\n          console.log(`🏆 Awarding Trident trophy for collecting ${qtyCollected} trident(s)`);\n          \n          // Award the Count-type trophy for each trident collected\n          for (let i = 0; i < qtyCollected; i++) {\n            await earnTrophy(currentPlayer.playerId, \"Trident\", 1, currentPlayer, masterTrophies, setCurrentPlayer);\n          }\n          \n          console.log(`✅ Successfully awarded ${qtyCollected} Trident trophy instance(s)`);\n        }\n      } catch (error) {\n        console.error('❌ Error awarding collection trophy:', error);\n        // Don't fail the collection if trophy awarding fails\n      }\n    }\n\n    // Update currentPlayer state locally\n    await refreshPlayerAfterInventoryUpdate(currentPlayer.playerId, setCurrentPlayer);\n    console.log('[DEBUG] Player state refreshed after inventory update.');\n  } catch (error) {\n    console.error('Error during doober collection:', error);\n    // Rollback local resource state on server failure\n    setResources((prevResources) => [...prevResources, resource]);\n  } finally {\n    unlockResource(col, row); // Always unlock the resource\n    // Clear the processing flag for this doober\n    if (window._processingDoobers) {\n      window._processingDoobers.delete(dooberId);\n    }\n  }\n}\n\n\n// Helper: Handles use of required key/item for a resource\n// Returns a Promise<boolean>: true if item used, false otherwise\nlet pendingKeyResolve = null; // Module-level temporary resolve callback\n\nexport async function handleUseKey(resource,requirement,col,row,TILE_SIZE,currentPlayer,setCurrentPlayer,inventory,setInventory,backpack,setBackpack,addFloatingText,strings,setModalContent,setIsModalOpen,updateStatus) {\n  console.log('handleUseKey: resource:', resource);\n  if (!requirement) return true;\n  if (pendingKeyResolve) {return false;}   // Only allow one modal pending at a time\n  const hasRequirement = currentPlayer.inventory.find((item) => item.type === requirement);\n  if (!hasRequirement) { updateStatus(`${strings[\"35\"]}${requirement}`); return false; }\n\n  return new Promise((resolve) => {\n    pendingKeyResolve = resolve;\n\n    const handleYes = async () => {\n      const spent = await spendIngredients({\n        playerId: currentPlayer.playerId,\n        recipe: { \n          ingredient1: requirement,\n          ingredient1qty: 1,\n        },\n        inventory,\n        backpack,\n        setInventory,\n        setBackpack,\n        setCurrentPlayer,\n        updateStatus,\n      });\n\n      if (!spent) {\n        console.warn('❌ Failed to spend key item.');\n        return;\n      }\n\n      updateStatus(`${strings[\"36\"]}${requirement}`);\n\n      setIsModalOpen(false);\n      if (pendingKeyResolve) {\n        pendingKeyResolve(true);\n        pendingKeyResolve = null;\n      }\n    };\n    const handleNo = () => {\n      setIsModalOpen(false);\n      if (pendingKeyResolve) {\n        pendingKeyResolve(false);\n        pendingKeyResolve = null;\n      }\n    };\n\n    const totalOwned =\n      (currentPlayer.inventory.find(item => item.type === requirement)?.quantity || 0) +\n      (currentPlayer.backpack?.find(item => item.type === requirement)?.quantity || 0);\n      \n    setModalContent({\n      title: `${strings[\"5045\"]} ${requirement}?`,\n      message: `${strings[\"5046\"]} ${requirement}?`,\n      message2: `${strings[\"5047\"]} ${totalOwned}.`,\n      size: 'small',\n      onClose: handleNo,  // 🔁 Close button acts like \"No\"\n      children: (\n        <div style={{ display: 'flex', gap: '10px', justifyContent: 'center', marginTop: '10px' }}>\n          <button onClick={handleYes}>Yes</button>\n          <button onClick={handleNo}>No</button>\n        </div>\n      ),\n    });\n    setIsModalOpen(true);\n  });\n}\n \n// HANDLE SOURCE CONVERSIONS //\n//\nexport async function handleSourceConversion(\n  resource,\n  row,\n  col,\n  resources,\n  setResources,\n  inventory,\n  setInventory,\n  backpack,\n  setBackpack,\n  gridId,\n  addFloatingText,\n  TILE_SIZE,\n  currentPlayer,\n  setCurrentPlayer,\n  masterResources,\n  masterSkills,\n  setModalContent,\n  setIsModalOpen,\n  updateStatus,\n  strings\n) {\n  if (resource.action !== 'convertTo') return;\n\n  // Get target resource first\n  const targetResource = masterResources.find((res) => res.type === resource.output);\n  if (!targetResource) { console.warn(`⚠️ No matching resource found for output: ${resource.output}`); return; }\n\n  // Get required skill\n  const requirement = resource.requires;\n  const isSkillOrUpgrade = masterResources.some(\n    res => res.type === requirement && (res.category === \"skill\" || res.category === \"upgrade\")\n  );\n  const isKey = masterResources.some(\n    res => res.type === requirement && (res.category === \"doober\")\n  );\n\n  // Required Skill Missing\n  if (isSkillOrUpgrade) {\n    const hasSkill = currentPlayer.skills?.some(skill => skill.type === requirement);\n    if (!hasSkill) {\n      addFloatingText(`${requirement} Required`, col, row, TILE_SIZE);\n      return;\n    }\n  }\n  // 🔑 Handle Key Requirement\n  if (isKey) {\n    const usedKey = await handleUseKey(resource,requirement,col,row,TILE_SIZE,currentPlayer,setCurrentPlayer,inventory,setInventory,backpack,setBackpack,addFloatingText,strings,setModalContent,setIsModalOpen,updateStatus,);\n    if (!usedKey) return;\n  }\n  // Check if the object should disappear (output is null/empty) or transform\n  const shouldDisappear = !resource.output || resource.output === 'null' || !targetResource;\n  \n  if (shouldDisappear) {\n    // Find the original resource to check for shadows - use global state like ProtectedSelling does\n    const originalResource = GlobalGridStateTilesAndResources.getResources().find(\n      r => r.x === col && r.y === row\n    );\n    \n    // Update local state to reflect removal of resource and shadows\n    const filteredResources = GlobalGridStateTilesAndResources.getResources().filter(\n      (res) => {\n        // Remove the main resource\n        if (res.x === col && res.y === row) return false;\n        \n        // Remove any shadows belonging to this resource if it was multi-tile\n        if (originalResource && originalResource.range && originalResource.range > 1 && res.type === 'shadow') {\n          const anchorKey = originalResource.anchorKey || `${originalResource.type}-${originalResource.x}-${originalResource.y}`;\n          if (res.parentAnchorKey === anchorKey) {\n            return false;\n          }\n        }\n        return true;\n      }\n    );\n    \n    // Update both global and local state with the same filtered array - exactly like ProtectedSelling does\n    GlobalGridStateTilesAndResources.setResources(filteredResources);\n    setResources(filteredResources);\n\n    // Perform server update to remove the main resource\n    try {\n      const gridUpdateResponse = await updateGridResource(\n        gridId, \n        { type: null, x: col, y: row }, \n        true\n      );\n      if (gridUpdateResponse?.success) {\n        // VFX\n        createSourceConversionEffect(col, row, TILE_SIZE, requirement);\n        console.log('✅ Resource removal completed successfully on the server.');\n      } else {\n        throw new Error('Server failed to confirm the resource removal.');\n      }\n    } catch (error) {\n      console.error('❌ Error during resource removal:', error);\n      console.warn('Server update failed. The client may become out of sync.');\n    }\n  } else {\n    // Build the new resource object to replace the one we just clicked\n    const x = col;\n    const y = row;\n    const enrichedNewResource = {\n      ...targetResource,\n      x,\n      y,\n      symbol: targetResource.symbol,\n      qtycollected: targetResource.qtycollected || 1,\n      category: targetResource.category || 'doober',\n      growEnd: targetResource.growEnd || null,\n    };\n    console.log('Enriched newResource for local state: ', enrichedNewResource);\n\n    // Find the original resource to check for shadows - use global state like ProtectedSelling does\n    const originalResource = GlobalGridStateTilesAndResources.getResources().find(\n      r => r.x === col && r.y === row\n    );\n    \n    // Filter out the main resource AND any shadows, then add the new resource\n    const filteredResources = GlobalGridStateTilesAndResources.getResources().filter(\n      (res) => {\n        // Remove the main resource\n        if (res.x === col && res.y === row) return false;\n        \n        // Remove any shadows belonging to this resource if it was multi-tile\n        if (originalResource && originalResource.range && originalResource.range > 1 && res.type === 'shadow') {\n          const anchorKey = originalResource.anchorKey || `${originalResource.type}-${originalResource.x}-${originalResource.y}`;\n          if (res.parentAnchorKey === anchorKey) {\n            return false;\n          }\n        }\n        return true;\n      }\n    );\n    \n    // Add the new resource to the filtered list\n    const finalResources = [...filteredResources, enrichedNewResource];\n    \n    // Update both global and local state with the same filtered array - exactly like ProtectedSelling does\n    GlobalGridStateTilesAndResources.setResources(finalResources);\n    setResources(finalResources);\n\n    // Perform server update\n    try {\n      const gridUpdateResponse = await updateGridResource(\n        gridId, \n        { type: targetResource.type, x: col, y: row }, \n        true\n      );\n      if (gridUpdateResponse?.success) {\n        // VFX\n        createSourceConversionEffect(col, row, TILE_SIZE, requirement);\n        console.log('✅ Source conversion completed successfully on the server.');\n      } else {\n        throw new Error('Server failed to confirm the source conversion.');\n      }\n    } catch (error) {\n      console.error('❌ Error during source conversion:', error);\n      console.warn('Server update failed. The client may become out of sync.');\n    }\n  }\n  \n  // Shared cleanup regardless of disappear/transform\n  try {\n    await refreshPlayerAfterInventoryUpdate(currentPlayer.playerId, setCurrentPlayer);\n    unlockResource(col, row);\n  } catch (error) {\n    console.error('❌ Error during cleanup:', error);\n  }\n}","import React, { createContext, useContext, useState } from 'react';\n\nconst UILockContext = createContext();\n\nexport const UILockProvider = ({ children }) => {\n  const [uiLocked, setUILocked] = useState(false);\n  return (\n    <UILockContext.Provider value={{ uiLocked, setUILocked }}>\n      {children}\n    </UILockContext.Provider>\n  );\n};\n\nexport const useUILock = () => useContext(UILockContext);","import socket from '../socketManager';\nimport NPCsInGridManager from './GridStateNPCs';\n\nclass NPCController {\n  constructor() {\n    this.controlledGrids = new Map();\n    this.setupSocketListeners();\n    this.retryTimeout = null;\n  }\n\n  setupSocketListeners() {\n    socket.on('npc-controller-assigned', ({ gridId }) => {\n      console.log(`🎮 Assigned as NPC controller for grid ${gridId}`);\n      this.setAsController(gridId);\n    });\n\n    socket.on('npc-controller-revoked', ({ gridId }) => {\n      console.log(`🎮 Revoked as NPC controller for grid ${gridId}`);\n      this.removeController(gridId);\n    });\n\n    // Add new listener for controller updates\n    socket.on('npc-controller-update', ({ controllerUsername, gridId }) => {\n      console.log(`🎮 Controller update received for ${gridId}: ${controllerUsername}`);\n      const currentPlayer = JSON.parse(localStorage.getItem('player'));\n      if (controllerUsername && currentPlayer?.username === controllerUsername) {\n        this.setAsController(gridId);\n      } else {\n        this.removeController(gridId);\n      }\n    });\n \n    // Add connection status listeners\n    socket.on('connect', () => {\n      console.log('🔌 NPCController socket connected');\n    });\n\n    socket.on('disconnect', () => {\n      console.log('🔌 NPCController socket disconnected');\n    });\n\n    // Add response listener\n    socket.on('join-grid-controller-response', ({ success, gridId }) => {\n      console.log(`📡 Received controller join response: success=${success}, gridId=${gridId}`);\n    });\n  }\n\n  joinGrid(gridId) {\n    if (!socket.connected) {\n      console.log('⏳ Socket not ready, retrying controller join in 1s...');\n      clearTimeout(this.retryTimeout);\n      this.retryTimeout = setTimeout(() => this.joinGrid(gridId), 1000);\n      return;\n    }\n\n    console.log(`🎮 Requesting controller status for grid ${gridId}`);\n    socket.emit('join-grid-controller', { \n      gridId,\n      timestamp: Date.now() // Add timestamp for debugging\n    });\n  }\n\n  leaveGrid(gridId) {\n    console.log(`🎮 Leaving grid ${gridId}`);\n    socket.emit('leave-grid-controller', { gridId });\n    this.removeController(gridId);\n  }\n\n  setAsController(gridId) {\n    console.log(`🎮 Setting controller status for grid ${gridId}`);\n    // Add explicit true value and verify it's set\n    this.controlledGrids.set(gridId, { isController: true });\n    console.log(`🔍 Controller Map after set:`, \n      Array.from(this.controlledGrids.entries())\n    );\n\n    // Force an immediate NPC update\n    const NPCsInGrid = NPCsInGridManager.getNPCsInGrid(gridId);\n    if (NPCsInGrid?.npcs) {\n      Object.values(NPCsInGrid.npcs).forEach(npc => {\n        if (typeof npc.update === 'function') {\n          npc.update(Date.now(), NPCsInGrid);\n        }\n      });\n    }\n  }\n\n  removeController(gridId) {\n    this.controlledGrids.delete(gridId);\n    console.log(`🎮 Removed controller for grid ${gridId}`);\n    console.log(`🔍 Controller Map after remove:`, \n      Array.from(this.controlledGrids.entries())\n    );\n  }\n\n  isControllingGrid(gridId) {\n    const controllerData = this.controlledGrids.get(gridId);\n    const isController = controllerData?.isController === true;\n    // console.log(`🎮 Controller check for ${gridId}:`, {\n    //   hasData: !!controllerData,\n    //   isController: isController,\n    //   rawValue: controllerData?.isController\n    // });\n    return isController;\n  }\n}\n\nexport const npcController = new NPCController();\nexport default npcController;\n","import React, { createContext, useState, useContext } from 'react';\nimport { useStrings } from '../StringsContext';\nimport './StatusBar.css';\n\n// Create Context\nexport const StatusBarContext = createContext();\n\n// Provider Component\nexport const StatusBarProvider = ({ children }) => {\n  const strings = useStrings(); // Get strings from context\n  const [messages, setMessages] = useState([]); // Array of message objects with id and text\n  const messageIdRef = React.useRef(0); // Counter for unique message IDs\n\n  /**\n   * Updates the status bar message.\n   * @param {number|string} input - Index for predefined message or custom string.\n   */\n  const updateStatus = (input) => {\n    let newMessage = '';\n    \n    if (typeof input === 'number') {\n      // Use predefined string from strings.json\n      const predefinedMessage = strings[input];\n      if (predefinedMessage) {\n        newMessage = predefinedMessage;\n      } else {\n        console.warn(`No string found for index ${input}. Falling back to default.`);\n        return;\n      }\n    } else if (typeof input === 'string') {\n      // Use custom string directly\n      newMessage = input;\n    } else {\n      console.warn('Invalid status message input. Falling back to default.');\n      return;\n    }\n\n    // Create a new message object with unique ID\n    const messageObject = {\n      id: messageIdRef.current++,\n      text: newMessage\n    };\n\n    // Add new message to the beginning (no max limit for infinite scrolling)\n    setMessages(prev => [messageObject, ...prev]);\n  };\n\n  return (\n    <StatusBarContext.Provider value={{ messages, updateStatus }}>\n      {children}\n    </StatusBarContext.Provider>\n  );\n};\n\n// StatusBar Component\nconst StatusBar = () => {\n  const { messages } = React.useContext(StatusBarContext);\n  const [displayMessages, setDisplayMessages] = React.useState([]);\n  const [slideOffset, setSlideOffset] = React.useState(0);\n  const [scrollPosition, setScrollPosition] = React.useState(0);\n  const [canScrollRight, setCanScrollRight] = React.useState(false);\n  const prevFirstId = React.useRef(null);\n  const newMessageRef = React.useRef(null);\n  const messagesContainerRef = React.useRef(null);\n  const viewportRef = React.useRef(null);\n\n  React.useEffect(() => {\n    if (messages.length === 0) {\n      setDisplayMessages([]);\n      setSlideOffset(0);\n      setScrollPosition(0);\n      return;\n    }\n\n    const currentFirstId = messages[0]?.id;\n    \n    // First render or new message\n    if (prevFirstId.current === null) {\n      // Initial load - also animate the first message\n      setScrollPosition(0); // Reset scroll position\n      if (newMessageRef.current) {\n        const width = newMessageRef.current.offsetWidth || 200; // fallback width\n        setSlideOffset(-width);\n        setDisplayMessages(messages);\n        \n        requestAnimationFrame(() => {\n          setSlideOffset(0);\n        });\n      } else {\n        // Fallback if ref not ready\n        setSlideOffset(-200);\n        setDisplayMessages(messages);\n        \n        requestAnimationFrame(() => {\n          setSlideOffset(0);\n        });\n      }\n    } else if (currentFirstId !== prevFirstId.current) {\n      // New message added - reset scroll position first\n      setScrollPosition(0); // Reset to left before showing new message\n      \n      // Then measure and animate the new message\n      if (newMessageRef.current) {\n        const width = newMessageRef.current.offsetWidth;\n        // Start with new message off-screen\n        setSlideOffset(-width);\n        setDisplayMessages(messages);\n        \n        // Trigger slide animation\n        requestAnimationFrame(() => {\n          setSlideOffset(0);\n        });\n      }\n    } else {\n      // No change\n      setDisplayMessages(messages);\n    }\n    \n    prevFirstId.current = currentFirstId;\n  }, [messages]);\n\n  // Check if we can scroll right\n  React.useEffect(() => {\n    if (messagesContainerRef.current && viewportRef.current) {\n      const containerWidth = messagesContainerRef.current.scrollWidth;\n      const viewportWidth = viewportRef.current.offsetWidth;\n      const maxScroll = containerWidth - viewportWidth;\n      \n      // Can scroll right if we haven't reached the max scroll position\n      setCanScrollRight(scrollPosition < maxScroll && containerWidth > viewportWidth);\n    }\n  }, [scrollPosition, displayMessages]);\n\n  // Handle scrolling\n  const handleScrollRight = () => {\n    if (messagesContainerRef.current && viewportRef.current) {\n      const containerWidth = messagesContainerRef.current.scrollWidth;\n      const viewportWidth = viewportRef.current.offsetWidth;\n      const maxScroll = containerWidth - viewportWidth;\n      \n      // Scroll right by viewport width or to the end\n      const newPosition = Math.min(scrollPosition + viewportWidth, maxScroll);\n      setScrollPosition(newPosition);\n    }\n  };\n\n  const handleScrollLeft = () => {\n    // Scroll left by viewport width or to the beginning\n    const viewportWidth = viewportRef.current?.offsetWidth || window.innerWidth;\n    const newPosition = Math.max(scrollPosition - viewportWidth, 0);\n    setScrollPosition(newPosition);\n  };\n\n  return (\n    <div className=\"status-bar\">\n      {/* Left scroll arrow - only show when scrolled */}\n      {scrollPosition > 0 && (\n        <button\n          className=\"status-bar-arrow status-bar-arrow-left\"\n          onClick={handleScrollLeft}\n          aria-label=\"Scroll left\"\n        >\n          ◀\n        </button>\n      )}\n      \n      <div className=\"status-bar-viewport\" ref={viewportRef}>\n        {/* Hidden measuring container */}\n        {messages.length > 0 && messages[0].id !== prevFirstId.current && (\n          <div style={{ position: 'absolute', visibility: 'hidden', whiteSpace: 'nowrap' }}>\n            <span ref={newMessageRef} className=\"status-message\">\n              {messages[0].text}\n            </span>\n            <span className=\"status-separator\">&nbsp;&nbsp;⬥&nbsp;&nbsp;</span>\n          </div>\n        )}\n        \n        {/* Actual messages container */}\n        <div \n          ref={messagesContainerRef}\n          className=\"status-bar-messages\"\n          style={{\n            transform: `translateX(${slideOffset - scrollPosition}px)`,\n            transition: slideOffset === 0 && scrollPosition === 0 ? 'transform 0.5s ease-out' : \n                       scrollPosition !== 0 ? 'transform 0.3s ease-out' : 'none'\n          }}\n        >\n          {displayMessages.map((msg, index) => (\n            <React.Fragment key={msg.id}>\n              <span className=\"status-message\">\n                {msg.text}\n              </span>\n              {index < displayMessages.length - 1 && (\n                <span className=\"status-separator\">&nbsp;&nbsp;⬥&nbsp;&nbsp;</span>\n              )}\n            </React.Fragment>\n          ))}\n        </div>\n      </div>\n      \n      {/* Right scroll arrow - only show when can scroll right */}\n      {canScrollRight && (\n        <button\n          className=\"status-bar-arrow status-bar-arrow-right\"\n          onClick={handleScrollRight}\n          aria-label=\"Scroll right\"\n        >\n          ▶\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default StatusBar;","import React, { createContext, useContext, useState } from 'react';\n\nconst BulkOperationContext = createContext();\n\nexport const BulkOperationProvider = ({ children }) => {\n  // Track active bulk operations by type\n  const [activeBulkOperations, setActiveBulkOperations] = useState({});\n  \n  const startBulkOperation = (operationType, operationId) => {\n    setActiveBulkOperations(prev => ({\n      ...prev,\n      [operationId]: {\n        type: operationType,\n        startTime: Date.now(),\n        active: true\n      }\n    }));\n  };\n  \n  const endBulkOperation = (operationId) => {\n    setActiveBulkOperations(prev => {\n      const newState = { ...prev };\n      delete newState[operationId];\n      return newState;\n    });\n  };\n  \n  const isAnyBulkOperationActive = () => {\n    return Object.keys(activeBulkOperations).length > 0;\n  };\n  \n  const getActiveBulkOperations = () => {\n    return Object.entries(activeBulkOperations).map(([id, operation]) => ({\n      id,\n      ...operation\n    }));\n  };\n  \n  return (\n    <BulkOperationContext.Provider value={{ \n      activeBulkOperations,\n      startBulkOperation,\n      endBulkOperation,\n      isAnyBulkOperationActive,\n      getActiveBulkOperations\n    }}>\n      {children}\n    </BulkOperationContext.Provider>\n  );\n};\n\nexport const useBulkOperation = () => {\n  const context = useContext(BulkOperationContext);\n  if (!context) {\n    throw new Error('useBulkOperation must be used within a BulkOperationProvider');\n  }\n  return context;\n};","import React from 'react';\nimport './ZoomedOut.css';\n\n// Helper function for grid tile colors\nexport const getGridBackgroundColor = (type) => {\n  switch (type) {\n    // Settlement grid types\n    case \"homestead\":\n    case \"homesteadSet\":\n      case \"homesteadSetN\":\n        case \"homesteadSetNE\":\n          case \"homesteadSetE\":\n            case \"homesteadSetSE\":\n              case \"homesteadSetS\":\n                case \"homesteadSetSW\":\n                  case \"homesteadSetW\":\n                    case \"homesteadSetNW\":\n      return 'var(--homestead-color)';\n    \n    // Valley types (both views)\n    case \"valley0\":\n    case \"valley1\":\n    case \"valley2\":\n    case \"valley3\":\n    case \"valley0Set\":  \n    case \"valley1Set\":\n    case \"valley2Set\":\n    case \"valley3Set\":\n      return 'var(--valley-color)';\n    \n    // Settlement-specific types\n    case \"reserved\":\n      return 'var(--reserved-color)';\n    case \"town\":\n      return 'var(--town-color)';\n    \n    default:\n      return 'var(--unknown-color)';\n  }\n};\n\nconst ZoomOut = ({ children }) => {\n  return (\n    <div className=\"zoom-out-container\">\n      {children}\n    </div>\n  );\n};\n\nexport default ZoomOut;\n","import API_BASE from \"../config\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport \"./SettlementView.css\";\nimport { StatusBarContext } from \"../UI/StatusBar/StatusBar\";\nimport { changePlayerLocation } from \"../Utils/GridManagement\";\nimport { fetchTownSignpostPosition, fetchHomesteadSignpostPosition } from \"../Utils/worldHelpers\";\nimport settlementTileData from './SettlementTile.json';\nimport { useBulkOperation } from \"../UI/BulkOperationContext\";\nimport { getGridBackgroundColor } from './ZoomedOut';\nimport { centerCameraOnPlayer } from \"../PlayerMovement\";\nimport playersInGridManager from \"../GridState/PlayersInGrid\";\nimport { fetchHomesteadOwner } from \"../Utils/worldHelpers\";\nimport { updateGridStatus } from \"../Utils/GridManagement\";\nimport { processRelocation } from \"../Utils/Relocation\";\n\n// Center camera on player's current grid in settlement view\nexport function centerCameraOnPlayerGrid(currentPlayer, settlementGrid) {\n  if (!currentPlayer?.location?.g || !settlementGrid || settlementGrid.length === 0) {\n    console.warn(\"Cannot center camera: missing player location or settlement grid\");\n    return;\n  }\n\n  const playerGridId = currentPlayer.location.g;\n  \n  // Find the player's grid position in the settlement\n  let playerRow = -1;\n  let playerCol = -1;\n  \n  for (let row = 0; row < settlementGrid.length; row++) {\n    for (let col = 0; col < settlementGrid[row].length; col++) {\n      if (settlementGrid[row][col]?.gridId === playerGridId) {\n        playerRow = row;\n        playerCol = col;\n        break;\n      }\n    }\n    if (playerRow !== -1) break;\n  }\n  \n  if (playerRow === -1 || playerCol === -1) {\n    console.warn(`Player's grid ${playerGridId} not found in settlement`);\n    return;\n  }\n\n  // Wait for next frame to ensure layout is complete\n  requestAnimationFrame(() => {\n    // Find the specific tile element instead of calculating position\n    const allTiles = document.querySelectorAll(\".settlement-tile\");\n    const tileIndex = playerRow * 8 + playerCol; // 8 columns per row\n    const playerTile = allTiles[tileIndex];\n    \n    if (!playerTile) {\n      console.warn(\"Player tile element not found\");\n      return;\n    }\n\n    // Scroll the tile into view with centering\n    playerTile.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"center\",\n      inline: \"center\"\n    });\n    \n    // Fallback: If scrollIntoView doesn't work well, try manual scroll after a delay\n    setTimeout(() => {\n      const updatedRect = playerTile.getBoundingClientRect();\n      const isVisible = (\n        updatedRect.top >= 0 &&\n        updatedRect.left >= 0 &&\n        updatedRect.bottom <= window.innerHeight &&\n        updatedRect.right <= window.innerWidth\n      );\n      \n      if (!isVisible) {\n        // Calculate center manually using body scroll\n        const tileCenterX = updatedRect.left + (updatedRect.width / 2);\n        const tileCenterY = updatedRect.top + (updatedRect.height / 2);\n        const windowCenterX = window.innerWidth / 2;\n        const windowCenterY = window.innerHeight / 2;\n        \n        const scrollX = window.scrollX + (tileCenterX - windowCenterX);\n        const scrollY = window.scrollY + (tileCenterY - windowCenterY);\n        \n        window.scrollTo({\n          left: Math.max(0, scrollX),\n          top: Math.max(0, scrollY),\n          behavior: \"smooth\"\n        });\n      }\n    }, 500);\n  });\n}\n\nconst SettlementView = ({ \n  currentPlayer, \n  isDeveloper,\n  setZoomLevel, \n  isRelocating,\n  setIsRelocating,\n  setCurrentPlayer,            \n  setGridId,        \n  setGrid,      \n  setResources, \n  setTileTypes,  \n  TILE_SIZE,\n  masterResources,\n  closeAllPanels,\n  visibleSettlementId,\n  setVisibleSettlementId,\n}) => {\n\n  const [settlementGrid, setSettlementGrid] = useState([]);\n  const [players, setPlayers] = useState(new Map());  // Map player IDs to player data\n  const [error, setError] = useState(null);\n  const [NPCsInGrids, setGridStates] = useState({});  // Add new state for grid states\n  const [playersInGridMap, setPlayersInGrid] = useState({});\n  const { updateStatus } = useContext(StatusBarContext);\n  const bulkOperationContext = useBulkOperation();\n\n  // Added diagnostic log for player-to-ownerId matching\n  if (players) {\n    const ownerIdsInGrid = settlementGrid.flat().map(tile => tile.ownerId).filter(Boolean);\n    const unmatchedOwnerIds = ownerIdsInGrid.filter(id => !players.get(id));\n  }\n\n  // Fetch both settlement grid and player data\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        console.log(\"📦 Fetching settlement bundle for ID:\", visibleSettlementId);\n        const response = await axios.post(`${API_BASE}/api/get-settlement-bundle`, { settlementId: visibleSettlementId });\n        console.log(\"✅ Settlement bundle response:\", response.data);\n        const { gridStates, players: playersArray, settlement } = response.data;\n\n        // Transform playersArray (array) to playersById (object)\n        const playersById = {};\n        if (Array.isArray(playersArray)) {\n          for (const player of playersArray) {\n            playersById[player._id] = player;\n          }\n        }\n\n        setGridStates(gridStates || {});\n        setPlayers(new Map(Object.entries(playersById || {})));\n        setSettlementGrid(settlement?.grids || []);\n        console.log(\"📐 Settlement grid set:\", settlement?.grids);\n\n        // 🔄 Fetch playersInGrid for all grids in this settlement\n        const gridIds = (settlement?.grids || []).flat().map(tile => tile.gridId).filter(Boolean);\n        const gridStateResponse = await axios.post(`${API_BASE}/api/get-multiple-grid-states`, { gridIds });\n        const mergedPlayersInGrid = {};\n\n        for (const gridId in gridStateResponse.data) {\n          const pcs = gridStateResponse.data[gridId]?.playersInGrid?.pcs || {};\n          mergedPlayersInGrid[gridId] = pcs;\n        }\n\n        setPlayersInGrid(mergedPlayersInGrid);\n\n      } catch (err) {\n        console.error(\"Error fetching settlement bundle:\", err);\n        setError(\"Failed to fetch settlement data\");\n      }\n    };\n\n    fetchData();\n  }, [visibleSettlementId]);\n\n  useEffect(() => {\n    if (isRelocating) {\n      updateStatus(125);\n    }\n  }, [isRelocating]);\n\n  // Center camera on player's grid when settlement view loads\n  useEffect(() => {\n    if (settlementGrid.length > 0 && currentPlayer?.location?.g) {\n      // Delay to ensure DOM is ready and rendered\n      setTimeout(() => {\n        centerCameraOnPlayerGrid(currentPlayer, settlementGrid);\n      }, 300);\n    }\n  }, [settlementGrid, currentPlayer?.location?.g]);\n\n\n  const handleTileClick = async (tile, TILE_SIZE) => {\n    console.log(\"Clicked tile:\", tile);\n\n    if (tile.settlementId && tile.settlementId !== visibleSettlementId) {\n      console.log(\"Switching visible settlement to:\", tile.settlementId);\n      setVisibleSettlementId(tile.settlementId);\n      return;\n    }\n  \n    // Are we in RELOCATIONN mode?\n    if (isRelocating) {\n      if (tile.gridType !== 'homestead') {\n        updateStatus(123); return;\n      }\n      if (tile.available != true) {\n        updateStatus(124); return; \n      }\n      if (tile.available === true) {\n        // CONFIRMATION MOADAL\n        processRelocation(currentPlayer, setCurrentPlayer, currentPlayer.gridId, tile.gridCoord, settlementGrid);\n        setIsRelocating(false);\n        setZoomLevel('close');\n        updateStatus(121);\n      }\n      return;\n    }\n\n    // Clicking on the tile where the player already is\n    if (tile.gridId === currentPlayer.location.g) {\n      setZoomLevel(\"far\");\n      if ([\"valley0\", \"valley1\", \"valley2\", \"valley3\"].includes(tile.gridType)) {\n        updateStatus(16);\n      } else if (tile.gridType === \"town\") {\n        updateStatus(111);\n      } else {\n        const { username, gridType } = await fetchHomesteadOwner(currentPlayer.location.g);\n        await updateGridStatus(gridType, username, updateStatus, currentPlayer, currentPlayer.location.g);\n      }\n      let pcs = null;\n      let pc = null;\n      pcs = playersInGridManager.getPlayersInGrid(tile.gridId);\n      pc = pcs?.[currentPlayer.playerId];\n      centerCameraOnPlayer(pc.position, TILE_SIZE);\n      return;\n    }\n    \n    // Check if player has Horse skill before allowing teleportation to another grid\n    if (tile.gridId && tile.gridId !== currentPlayer.location.g) {\n      const hasHorse = currentPlayer.skills?.some((skill) => skill.type === \"Horse\" && skill.quantity > 0);\n      if (!hasHorse) {\n        console.log(\"🐴 Player lacks Horse skill for teleportation\");\n        updateStatus(15); // \"You need Horse skill to travel\"\n        return;\n      }\n    }\n  \n    // Clicking on any other valley tile\n    if ([\"valley0\", \"valley1\", \"valley2\", \"valley3\"].includes(tile.gridType) && !isDeveloper) {\n      updateStatus(9);\n      return;\n    }\n\n    try {\n      // Default position\n      let arrivalX = 0;\n      let arrivalY = 0;\n      \n      // If clicking on a town tile, find the Train location\n      if (tile.gridType === \"town\") {\n        console.log(\"🏘️ Clicking on town grid, fetching Train location...\");\n        const signpostPosition = await fetchTownSignpostPosition(tile.gridId);\n        arrivalX = signpostPosition.x;\n        arrivalY = signpostPosition.y;\n      }\n      // If clicking on a homestead tile, find the Signpost Town location\n      else if (tile.gridType === \"homestead\") {\n        console.log(\"🏠 Clicking on homestead grid, fetching Signpost Town location...\");\n        const signpostPosition = await fetchHomesteadSignpostPosition(tile.gridId);\n        arrivalX = signpostPosition.x;\n        arrivalY = signpostPosition.y;\n      }\n      \n      const toLocation = {\n        x: arrivalX,  \n        y: arrivalY,\n        g: tile.gridId,\n        s: currentPlayer.location.s,\n        f: currentPlayer.location.f,\n        gtype: tile.gridType || \"unknown\", \n        gridCoord: tile.gridCoord || 0,\n      };\n  \n      console.log(\"Built toLocation object:\", toLocation);\n      console.log(\"About to call changePlayerLocation from SettlementView;  current player = \",currentPlayer, \"toLocatoin = \", toLocation);\n     \n      // Call changePlayerLocation using the properly built toLocation\n      await changePlayerLocation(\n        currentPlayer,\n        currentPlayer.location,\n        toLocation,  \n        setCurrentPlayer,\n        setGridId,                // ✅ Ensure this is passed\n        setGrid,                  // ✅ Pass setGrid function\n        setTileTypes,             // ✅ Pass setTileTypes function\n        setResources,             // ✅ Pass setResources function\n        TILE_SIZE,\n        closeAllPanels,\n        updateStatus,\n        bulkOperationContext,\n        masterResources,\n        null, // strings not available in SettlementView\n        null  // masterTrophies not available in SettlementView\n      );\n      // Zoom into grid view after movement\n      setZoomLevel(\"far\"); \n\n    } catch (error) {\n      console.error(\"Error changing player location:\", error);\n      updateStatus(10); // General error\n    }\n  };\n\nconst getTooltip = (tile) => {\n    if (!tile.gridId) return '';\n    const pcs = playersInGridMap[tile.gridId];\n    if (!pcs || Object.keys(pcs).length === 0) return '';\n    return Object.values(pcs)\n      .map(pc => `${pc.username || 'Unknown'}: ${pc.hp || 0} HP`)\n      .join('\\n');\n  };\n\n  const renderMiniGrid = (tile) => {\n    let gridType = tile.gridType;\n    if (gridType === \"homestead\") {\n      gridType = tile.available ? \"homesteadEmpty\" : \"homesteadOccupied\";\n    }\n  \n    const tileData = settlementTileData[gridType] || Array(8).fill(Array(8).fill(\"\"));\n    const isPlayerHere = tile.gridId === currentPlayer.location.g;\n  \n    let owner = null;\n    if (tile.ownerId && players) {\n      const ownerIdStr = typeof tile.ownerId === 'object' ? tile.ownerId._id : tile.ownerId;\n      owner = players.get(ownerIdStr);\n    }\n  \n    if (tile.ownerId && !owner) {\n    }\n  \n    const tooltip = getTooltip(tile);\n  \n    let miniX = 0;\n    let miniY = 0;\n    const isValleyGrid = [\"valley0\", \"valley1\", \"valley2\", \"valley3\"].includes(gridType);\n    let playerPCs = null;\n    let playerPC = null;\n\n    if (isPlayerHere && isValleyGrid && tile.gridId) {\n      playerPCs = playersInGridManager.getPlayersInGrid(tile.gridId);\n      playerPC = playerPCs?.[currentPlayer.playerId];\n      if (playerPC?.position) {\n        miniX = Math.floor(playerPC.position.x / 8);\n        miniY = Math.floor(playerPC.position.y / 8);\n      }\n    }\n  \n    return (\n      <div className=\"mini-grid\">\n        {tileData.map((row, rowIndex) =>\n          row.map((cell, colIndex) => {\n            let content = cell;\n  \n            if (isPlayerHere && isValleyGrid && rowIndex === miniY && colIndex === miniX) {\n              content = currentPlayer.icon;\n            }\n  \n            // 🏠 For homestead or other grid types, show icon at default corner\n            else if (isPlayerHere && !isValleyGrid && rowIndex === 0 && colIndex === 0) {\n              content = currentPlayer.icon;\n            }\n  \n            // 🛒 Homestead trade stall rendering\n            if (gridType === \"homesteadOccupied\") {\n              if (rowIndex === 7 && colIndex < 6) {\n                if (owner && Array.isArray(owner.tradeStall)) {\n                  const stall = owner.tradeStall[colIndex];\n                  if (stall?.resource) {\n                    const template = masterResources.find(r => r.type === stall.resource);\n                    if (template?.symbol) content = template.symbol;\n                  }\n                }\n              } else if (cell === \"username\") {\n                content = owner?.username || \"\";\n              } else if (cell === \"role\") {\n                content = owner?.role || \"Citizen\";\n              } else if (cell === \"netWorth\") {\n                content = `${owner?.netWorth?.toLocaleString() || \"0\"} (net worth)`;\n              }\n            }\n  \n            return (\n              <div key={`${rowIndex}-${colIndex}`} className=\"mini-cell\">\n                <span>{content}</span>\n                {tooltip && (\n                  <div className=\"tooltip\">\n                    <p>Who's Here:</p>\n                    {tooltip}\n                  </div>\n                )}\n              </div>\n            );\n          })\n        )}\n      </div>\n    );\n  };\n\n  if (error) return <div>Error: {error}</div>;\n  if (!settlementGrid.length) return <div>Loading Settlement Grid...</div>;\n\n  return (\n    <div className=\"settlement-grid\">\n      {settlementGrid.map((row, rowIndex) =>\n        row.map((tile, colIndex) => (\n          <div\n            key={`${rowIndex}-${colIndex}`}\n            className=\"settlement-tile\"\n            style={{\n              backgroundColor: getGridBackgroundColor(tile.gridType),\n            }}\n            onClick={() => handleTileClick(tile,TILE_SIZE)}\n          >\n            {renderMiniGrid(tile)}\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default SettlementView;\n","import axios from \"axios\";\nimport API_BASE from \"../config\";\n\nexport const processRelocation = async (currentPlayer, setCurrentPlayer, fromGridId, targetGridCoord, settlementGrid) => {\n  console.log(\"At processRelocation; fromGridId =\", fromGridId, \"; targetGridCoord =\", targetGridCoord);\n  console.log(\"settlementGrid =\", settlementGrid);\n\n  try {\n    const relocationResponse = await axios.post(`${API_BASE}/api/relocate-homestead`, {\n      fromGridId,\n      targetGridCoord,\n    });\n\n    // 🔄 Refresh player data\n    try {\n      console.log(\"🔄 Fetching updated player data...\");\n      const playerResponse = await axios.get(`${API_BASE}/api/player/${currentPlayer.playerId}`);\n      console.log(\"📊 Updated player object:\", playerResponse.data);\n\n      if (playerResponse.data) {\n        setCurrentPlayer(playerResponse.data);\n        localStorage.setItem(\"player\", JSON.stringify(playerResponse.data));\n        console.log(\"✅ setCurrentPlayer + localStorage update complete\");\n      }\n    } catch (error) {\n      console.error(\"❌ Failed to refresh player data after relocation:\", error);\n    }\n\n    console.log(\"✅ Relocation successful:\", relocationResponse.data);\n    return relocationResponse.data;\n  } catch (error) {\n    console.error(\"❌ Relocation failed:\", error.response?.data || error.message);\n    return { success: false, error: error.response?.data || error.message };\n  }\n};","import API_BASE from \"../config\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport \"./FrontierView.css\";\nimport { StatusBarContext } from \"../UI/StatusBar/StatusBar\";\nimport { changePlayerLocation } from \"../Utils/GridManagement\";\nimport { fetchHomesteadSignpostPosition } from \"../Utils/worldHelpers\";\nimport frontierTileData from './FrontierTile.json';\nimport { useBulkOperation } from \"../UI/BulkOperationContext\";\nimport { getGridBackgroundColor } from './ZoomedOut';\nimport { showNotification } from '../UI/Notifications/Notifications';\nimport { useStrings } from '../UI/StringsContext';\nimport { earnTrophy } from '../GameFeatures/Trophies/TrophyUtils';\n\n\nconst FrontierView = ({ \n  currentPlayer, \n  isDeveloper,\n  setZoomLevel, \n  isRelocating,\n  setIsRelocating,\n  setCurrentPlayer,            \n  setGridId,                // ✅ Ensure this is passed\n  setGrid,                  // ✅ Pass setGrid function\n  setResources,             // ✅ Pass setResources function\n  setTileTypes,             // ✅ Pass setTileTypes function\n  TILE_SIZE,\n  closeAllPanels,\n  visibleSettlementId,\n  setVisibleSettlementId,\n  masterResources,          // ✅ Add masterResources prop\n  masterTrophies,           // ✅ Add masterTrophies prop\n}) => {\n\n  const [frontierGrid, setFrontierGrid] = useState([]);\n  const [settlementGrids, setSettlementGrids] = useState({}); // Store all settlement grids\n  const [error, setError] = useState(null);\n  const { updateStatus } = useContext(StatusBarContext);\n  const bulkOperationContext = useBulkOperation();\n  const strings = useStrings();\n \n  // Fetch Frontier Grid and Settlement Grids together\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`${API_BASE}/api/frontier-bundle/${currentPlayer.location.f}?playerSettlementId=${currentPlayer.location.s}`);\n        const { frontierGrid, settlementGrids = {} } = response.data;\n        setFrontierGrid(frontierGrid);\n        const settlementData = settlementGrids;\n        setSettlementGrids(settlementData);\n      } catch (err) {\n        console.error(\"Error fetching frontier bundle:\", err);\n        setError(\"Failed to fetch grid data\");\n      }\n    };\n    fetchData();\n  }, [currentPlayer.location.f]);\n\n  useEffect(() => {\n    if (isRelocating) {\n      updateStatus(125);\n    }\n  }, [isRelocating]);\n\n  // Show notification when zooming out to Frontier view (first time only)\n  useEffect(() => {\n    const checkAndShowFrontierTip = async () => {\n      // Check if player has already seen the frontier tip\n      const hasSawFrontierTip = currentPlayer.trophies?.some(trophy => trophy.name === \"SawFrontierTip\");\n      \n      if (!hasSawFrontierTip) {\n        console.log('🏆 First time in Frontier view - awarding \"SawFrontierTip\" trophy');\n        \n        try {\n          // Award the invisible trophy to mark they've seen the tip\n          await earnTrophy(currentPlayer.playerId, \"SawFrontierTip\", 1, currentPlayer, masterTrophies, setCurrentPlayer);\n          \n          // Show the notification\n          showNotification('Tip', {\n            title: strings[7001],\n            message: strings[7020]\n          });\n          \n          console.log('✅ Frontier tip shown and trophy awarded');\n        } catch (error) {\n          console.error('❌ Error awarding SawFrontierTip trophy:', error);\n          // Still show notification even if trophy award fails\n          showNotification('Tip', {\n            title: strings[7001],\n            message: strings[7020]\n          });\n        }\n      } else {\n        console.log('🔇 Player already has SawFrontierTip trophy - skipping notification');\n      }\n    };\n    \n    if (currentPlayer?.playerId && strings && masterTrophies) {\n      checkAndShowFrontierTip();\n    }\n  }, [currentPlayer?.playerId, strings, masterTrophies]); // Re-run if these dependencies change\n\n  const handleTileClick = async (tile) => {\n    console.log('🎯 Tile clicked:', tile);\n    console.log('👤 Current player state:', {\n      id: currentPlayer?._id,\n      playerId: currentPlayer?.playerId,\n      location: currentPlayer?.location,\n      gridId: currentPlayer?.gridId\n    });\n\n    // Are we in RELOCATION mode?\n    if (isRelocating) {\n      if (tile.settlementType.startsWith('homesteadSet')) {\n        if (tile.settlementId) { setVisibleSettlementId(tile.settlementId);}\n        setZoomLevel('settlement'); return;\n      } else { updateStatus(122); return; }\n    };\n\n    try {\n      // Add validation before attempting transit\n      if (!tile.settlementId) {\n        console.warn('❌ Missing settlementId in clicked tile');\n        updateStatus(\"Invalid destination\");\n        return;\n      }\n\n      // Case 1: Current settlement\n      if (tile.settlementId === currentPlayer.location.s) {\n          console.log('🏠 Player clicked current settlement - zooming in');\n        setZoomLevel(\"settlement\");\n        updateStatus(12);\n        return;\n      }\n\n      // Case 2: Clicking on a tile where the player owns a homestead\n      if (tile.settlementType.startsWith('homesteadSet')) {\n        try {\n          // Fetch the settlement grid\n          const response = await axios.get(`${API_BASE}/api/get-settlement-grid/${tile.settlementId}`);\n          const grids = response.data.grid || [];\n          // Find the player's owned homestead\n          const ownedHomestead = grids.flat().find(\n            (grid) => grid.gridType === \"homestead\" && grid.gridId === currentPlayer.gridId\n          );    \n          if (ownedHomestead) {\n            console.log(\"Traveling to owned homestead:\", ownedHomestead);\n            \n            // Fetch the homestead grid data to find Signpost Town location\n            const signpostPosition = await fetchHomesteadSignpostPosition(ownedHomestead.gridId);\n            \n            const toLocation = {\n              x: signpostPosition.x,  \n              y: signpostPosition.y,\n              g: ownedHomestead.gridId, \n              s: tile.settlementId, \n              f: currentPlayer.location.f,\n              gtype: ownedHomestead.gridType, \n              gridCoord: ownedHomestead.gridCoord  \n            };\n            await changePlayerLocation(\n              currentPlayer,\n              currentPlayer.location, \n              toLocation,\n              setCurrentPlayer,\n              setGridId,                // ✅ Ensure this is passed\n              setGrid,                  // ✅ Pass setGrid function\n              setTileTypes,             // ✅ Pass setTileTypes function\n              setResources,             // ✅ Pass setResources function\n              TILE_SIZE,\n              closeAllPanels,\n              updateStatus,\n              bulkOperationContext,\n              masterResources,          // ✅ Pass masterResources\n              strings,                  // ✅ Pass strings for valley trophy check\n              null                      // ✅ masterTrophies not available in FrontierView\n            ); \n            setZoomLevel(\"far\");\n            return;\n          }\n        } catch (error) {\n          console.error(\"Error checking for owned homestead:\", error);\n          updateStatus(8); // General error\n          return;\n        }\n        updateStatus(17); // Homestead tile clicked but no ownership\n        return;\n      }\n\n      // Case 3: Clicking on any other valley tile\n      if ([\"valley0Set\", \"valley1Set\", \"valley2Set\", \"valley3Set\"].includes(tile.settlementType)) {\n        updateStatus(9); // Valley tile clicked\n        return;\n      }\n\n    } catch (error) {\n      console.error('❌ Transit error details:', {\n        message: error.message,\n        response: error.response?.data,\n        status: error.response?.status,\n        tile: tile\n      });\n      updateStatus(99);\n    }\n  };\n\n  const renderMiniGrid = (tile) => {\n    const tileData = frontierTileData[tile.settlementType] || Array(8).fill(Array(8).fill(\"\"));\n    const settlementGrid = settlementGrids[tile.settlementId]?.grid || [];\n    const flatSettlementGrid = settlementGrid.flat();\n\n    return (\n      <div className=\"mini-grid\">\n        {tileData.map((row, rowIndex) =>\n          row.map((cell, colIndex) => {\n            const gridIndex = rowIndex * 8 + colIndex;\n            const gridData = flatSettlementGrid[gridIndex];\n\n            // Default content from tile data\n            let content = cell;\n\n            // Player's icon always overrides other content\n            if (gridData?.gridId && gridData.gridId === currentPlayer.location.g) {\n              content = currentPlayer.icon;\n            } else if (gridData?.gridType === 'homestead' && !gridData.available) {\n              content = '🏠';\n            } else if (gridData?.gridType === 'town') {\n              content = '🚂';\n            }\n\n            return (\n              <div key={`${rowIndex}-${colIndex}`} className=\"mini-cell\">\n                <span>{content}</span>\n              </div>\n            );\n          })\n        )}\n      </div>\n    );\n  };\n\n  if (error) return <div>Error: {error}</div>;\n  if (!frontierGrid.length) return <div>Loading Frontier Grid...</div>;\n\n  return (\n    <div className=\"frontier-grid\">\n      {frontierGrid.map((row, rowIndex) =>\n        row.map((tile, colIndex) => (\n          <div\n            key={`${rowIndex}-${colIndex}`}\n            className=\"frontier-tile\"\n            style={{\n              backgroundColor: getGridBackgroundColor(tile.settlementType),\n            }}\n            onClick={() => handleTileClick(tile)}\n          >\n            {renderMiniGrid(tile)}\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default FrontierView;\n","// src/UI/Modal.js\nimport React from 'react';\nimport './Modal.css';\nimport './SharedButtons.css';\n\nfunction Modal({ isOpen = true, onClose, title, children, custom, message, message2, size = \"standard\", className }) {\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className={`modal-container ${size === \"small\" ? \"modal-small\" : \"\"} ${className || \"\"}`}>\n        {/* Close Button (X style) */}\n        <button className=\"modal-close-btn\" onClick={onClose}>\n          &times;\n        </button>\n\n        {title && <h2 className=\"modal-title\">{title}</h2>}\n\n        <div className=\"modal-content\">\n          {message && <p className=\"modal-message\">{message}</p>}\n          {message2 && <p className=\"modal-message\">{message2}</p>}\n          {children}\n          {custom}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Modal;","import API_BASE from '../config';\nimport Modal from './Modal';\nimport React, { useState } from 'react';\nimport './LanguagePickerModal.css';\nimport './SharedButtons.css';\nimport LANGUAGE_OPTIONS from './Languages.json';\nimport axios from 'axios';\nimport { useStrings } from './StringsContext';\n\nexport default function LanguagePickerModal({ currentPlayer, setCurrentPlayer, updateStatus, onClose, onSave }) {\n  const strings = useStrings();\n  const [selectedLanguage, setSelectedLanguage] = useState(currentPlayer.language || '');\n\n  const handleLanguageClick = (langCode) => {\n    setSelectedLanguage(langCode);\n  };\n\nconst handleSave = async () => {\n  try {\n    const updatedPlayer = { ...currentPlayer, language: selectedLanguage };\n    localStorage.setItem('player', JSON.stringify(updatedPlayer));\n    setCurrentPlayer(updatedPlayer);\n\n    await axios.post(`${API_BASE}/api/update-profile`, {\n      playerId: currentPlayer._id,\n      updates: { language: selectedLanguage },\n    });\n\n    updateStatus && updateStatus('Language updated!');\n    onSave && onSave();\n\n    // ✅ Only reload after successful DB update\n    window.location.reload();\n  } catch (error) {\n    console.error('Error saving language:', error);\n    updateStatus && updateStatus('Failed to update language');\n  }\n};\n\n  return (\n    <div className=\"modal-overlay\" onClick={onClose}>\n      <div className=\"language-modal\" onClick={(e) => e.stopPropagation()}>\n        <button className=\"modal-close-btn\" onClick={onClose}>×</button>\n        <h1>{strings[130]}</h1>\n        <ul className=\"language-list\">\n          {LANGUAGE_OPTIONS.map(({ code, label, flag }) => (\n            <li\n              key={code}\n              className={`language-item ${selectedLanguage === code ? 'selected' : ''}`}\n              onClick={() => handleLanguageClick(code)}\n            >\n              <span className=\"flag\">{flag}</span> {label}\n            </li>\n          ))}\n        </ul>\n        <div className=\"modal-buttons shared-buttons\">\n          <button className=\"btn-basic btn-modal btn-success\" onClick={handleSave}>{strings[131]}</button>\n        </div>\n      </div>\n    </div>\n  );\n}","import axios from 'axios';\nimport API_BASE from '../config';\nimport playersInGridManager from '../GridState/PlayersInGrid';\n\nexport const updatePlayerIcon = async (currentPlayer, setCurrentPlayer, playerId, icon, updateStatus) => {\n\n    // ✅ Validate that the icon is a proper emoji\n    const isEmoji = (icon) => {\n      return typeof icon === 'string' && /\\p{Emoji}/u.test(icon);\n    };\n\n    if (!isEmoji(icon)) {\n        console.error('❌ Attempted to set non-emoji icon:', icon);\n        updateStatus?.(\"Please select a valid emoji.\");\n        return;\n    }\n\n    const updates = { icon };\n\n    const res = await axios.post(`${API_BASE}/api/update-profile`, {\n        playerId,\n        updates\n    });\n    if (!res.data.success) {\n        throw new Error('Failed to update icon');\n    }\n\n    // ✅ Proceed only if DB update was successful\n    const gridId = currentPlayer?.location?.g;\n    if (gridId) {\n        const playerData = playersInGridManager.getPlayersInGrid(gridId)?.[currentPlayer.playerId];\n        if (playerData) {\n            const updatedPlayerData = {\n                ...playerData,\n                icon: icon,\n            };\n            playersInGridManager.updatePC(gridId, currentPlayer.playerId, updatedPlayerData);\n            console.log(`✅ Updated icon in playersInGrid: ${currentPlayer.playerId} → ${icon}`);\n        }\n    } else {\n        console.warn(\"⚠️ No valid gridId found, skipping NPCsInGrid update.\");\n    }\n\n    const updatedCurrentPlayer = { ...currentPlayer, icon };\n    localStorage.setItem('player', JSON.stringify(updatedCurrentPlayer));\n    setCurrentPlayer(updatedCurrentPlayer); // ✅ Trigger React state update\n    console.log('✅ Updated localStorage and state for currentPlayer:', icon);\n\n  return res.data.player;\n};","var RELEASE_TRAIN = 'basil';\n\nvar runtimeVersionToUrlVersion = function runtimeVersionToUrlVersion(version) {\n  return version === 3 ? 'v3' : version;\n};\n\nvar ORIGIN = 'https://js.stripe.com';\nvar STRIPE_JS_URL = \"\".concat(ORIGIN, \"/\").concat(RELEASE_TRAIN, \"/stripe.js\");\nvar V3_URL_REGEX = /^https:\\/\\/js\\.stripe\\.com\\/v3\\/?(\\?.*)?$/;\nvar STRIPE_JS_URL_REGEX = /^https:\\/\\/js\\.stripe\\.com\\/(v3|[a-z]+)\\/stripe\\.js(\\?.*)?$/;\nvar EXISTING_SCRIPT_MESSAGE = 'loadStripe.setLoadParameters was called but an existing Stripe.js script already exists in the document; existing script parameters will be used';\n\nvar isStripeJSURL = function isStripeJSURL(url) {\n  return V3_URL_REGEX.test(url) || STRIPE_JS_URL_REGEX.test(url);\n};\n\nvar findScript = function findScript() {\n  var scripts = document.querySelectorAll(\"script[src^=\\\"\".concat(ORIGIN, \"\\\"]\"));\n\n  for (var i = 0; i < scripts.length; i++) {\n    var script = scripts[i];\n\n    if (!isStripeJSURL(script.src)) {\n      continue;\n    }\n\n    return script;\n  }\n\n  return null;\n};\n\nvar injectScript = function injectScript(params) {\n  var queryString = params && !params.advancedFraudSignals ? '?advancedFraudSignals=false' : '';\n  var script = document.createElement('script');\n  script.src = \"\".concat(STRIPE_JS_URL).concat(queryString);\n  var headOrBody = document.head || document.body;\n\n  if (!headOrBody) {\n    throw new Error('Expected document.body not to be null. Stripe.js requires a <body> element.');\n  }\n\n  headOrBody.appendChild(script);\n  return script;\n};\n\nvar registerWrapper = function registerWrapper(stripe, startTime) {\n  if (!stripe || !stripe._registerWrapper) {\n    return;\n  }\n\n  stripe._registerWrapper({\n    name: 'stripe-js',\n    version: \"7.4.0\",\n    startTime: startTime\n  });\n};\n\nvar stripePromise$1 = null;\nvar onErrorListener = null;\nvar onLoadListener = null;\n\nvar onError = function onError(reject) {\n  return function (cause) {\n    reject(new Error('Failed to load Stripe.js', {\n      cause: cause\n    }));\n  };\n};\n\nvar onLoad = function onLoad(resolve, reject) {\n  return function () {\n    if (window.Stripe) {\n      resolve(window.Stripe);\n    } else {\n      reject(new Error('Stripe.js not available'));\n    }\n  };\n};\n\nvar loadScript = function loadScript(params) {\n  // Ensure that we only attempt to load Stripe.js at most once\n  if (stripePromise$1 !== null) {\n    return stripePromise$1;\n  }\n\n  stripePromise$1 = new Promise(function (resolve, reject) {\n    if (typeof window === 'undefined' || typeof document === 'undefined') {\n      // Resolve to null when imported server side. This makes the module\n      // safe to import in an isomorphic code base.\n      resolve(null);\n      return;\n    }\n\n    if (window.Stripe && params) {\n      console.warn(EXISTING_SCRIPT_MESSAGE);\n    }\n\n    if (window.Stripe) {\n      resolve(window.Stripe);\n      return;\n    }\n\n    try {\n      var script = findScript();\n\n      if (script && params) {\n        console.warn(EXISTING_SCRIPT_MESSAGE);\n      } else if (!script) {\n        script = injectScript(params);\n      } else if (script && onLoadListener !== null && onErrorListener !== null) {\n        var _script$parentNode;\n\n        // remove event listeners\n        script.removeEventListener('load', onLoadListener);\n        script.removeEventListener('error', onErrorListener); // if script exists, but we are reloading due to an error,\n        // reload script to trigger 'load' event\n\n        (_script$parentNode = script.parentNode) === null || _script$parentNode === void 0 ? void 0 : _script$parentNode.removeChild(script);\n        script = injectScript(params);\n      }\n\n      onLoadListener = onLoad(resolve, reject);\n      onErrorListener = onError(reject);\n      script.addEventListener('load', onLoadListener);\n      script.addEventListener('error', onErrorListener);\n    } catch (error) {\n      reject(error);\n      return;\n    }\n  }); // Resets stripePromise on error\n\n  return stripePromise$1[\"catch\"](function (error) {\n    stripePromise$1 = null;\n    return Promise.reject(error);\n  });\n};\nvar initStripe = function initStripe(maybeStripe, args, startTime) {\n  if (maybeStripe === null) {\n    return null;\n  }\n\n  var pk = args[0];\n  var isTestKey = pk.match(/^pk_test/); // @ts-expect-error this is not publicly typed\n\n  var version = runtimeVersionToUrlVersion(maybeStripe.version);\n  var expectedVersion = RELEASE_TRAIN;\n\n  if (isTestKey && version !== expectedVersion) {\n    console.warn(\"Stripe.js@\".concat(version, \" was loaded on the page, but @stripe/stripe-js@\").concat(\"7.4.0\", \" expected Stripe.js@\").concat(expectedVersion, \". This may result in unexpected behavior. For more information, see https://docs.stripe.com/sdks/stripejs-versioning\"));\n  }\n\n  var stripe = maybeStripe.apply(undefined, args);\n  registerWrapper(stripe, startTime);\n  return stripe;\n}; // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n\nvar stripePromise;\nvar loadCalled = false;\n\nvar getStripePromise = function getStripePromise() {\n  if (stripePromise) {\n    return stripePromise;\n  }\n\n  stripePromise = loadScript(null)[\"catch\"](function (error) {\n    // clear cache on error\n    stripePromise = null;\n    return Promise.reject(error);\n  });\n  return stripePromise;\n}; // Execute our own script injection after a tick to give users time to do their\n// own script injection.\n\n\nPromise.resolve().then(function () {\n  return getStripePromise();\n})[\"catch\"](function (error) {\n  if (!loadCalled) {\n    console.warn(error);\n  }\n});\nvar loadStripe = function loadStripe() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  loadCalled = true;\n  var startTime = Date.now(); // if previous attempts are unsuccessful, will re-load script\n\n  return getStripePromise().then(function (maybeStripe) {\n    return initStripe(maybeStripe, args, startTime);\n  });\n};\n\nexport { loadStripe };\n","import API_BASE from '../config';\nimport React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\nimport Modal from '../UI/Modal';\nimport './Store.css';\nimport '../UI/SharedButtons.css';\nimport { StatusBarContext } from '../UI/StatusBar/StatusBar';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { updateBadge } from '../Utils/appUtils';\nimport { useStrings } from '../UI/StringsContext';\n\nexport const handlePurchase = async (offerId, currentPlayer, updateStatus) => {\n  try {\n    const response = await axios.post(`${API_BASE}/api/create-checkout-session`, {\n      playerId: currentPlayer.playerId,\n      offerId\n    });\n\n    if (response.data?.id) {\n      const stripe = await loadStripe(process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY);\n      await stripe.redirectToCheckout({ sessionId: response.data.id });\n    } else {\n      updateStatus(\"❌ Failed to initiate checkout.\");\n    }\n  } catch (err) {\n    console.error(\"❌ Error initiating checkout:\", err);\n    updateStatus(\"❌ Error initiating checkout.\");\n  }\n};\n\nfunction Store({ onClose, currentPlayer, setCurrentPlayer, resources, openMailbox, setModalContent, setIsModalOpen }) {\n  const strings = useStrings();\n  const [offers, setOffers] = useState([]);\n  const { updateStatus } = useContext(StatusBarContext);\n\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const purchaseSuccess = params.get(\"purchase\");\n    console.log(\"🔍 URL query params:\", {\n      purchaseSuccess,\n      playerId: params.get(\"playerId\"),\n      offerId: params.get(\"offerId\")\n    });\n    const playerId = params.get(\"playerId\");\n    const offerId = params.get(\"offerId\");\n\n    if (purchaseSuccess === \"success\" && playerId && offerId) {\n\n      // ✅ Finalize fulfillment by notifying backend\n      axios.post(`${API_BASE}/api/purchase-store-offer`, {\n        playerId,\n        offerId\n      }).then(() => {\n        console.log(\"📬 Called /api/purchase-store-offer successfully for:\", { playerId, offerId });\n        console.log(\"✅ Store reward successfully delivered.\");\n        updateStatus(\"🎉 Purchase successful! Check your Inbox.\");\n        updateBadge(currentPlayer, () => {}, \"store\", false); // Clear store badge\n\n        axios.get(`${API_BASE}/api/player/${playerId}`).then((playerResponse) => {\n          setCurrentPlayer(playerResponse.data);\n        }).catch((err) => {\n          console.error(\"❌ Failed to refresh player data:\", err);\n        });\n        \n      }).catch((err) => {\n        console.error(\"🛑 Error calling /api/purchase-store-offer with:\", { playerId, offerId });\n        console.error(\"❌ Failed to deliver store reward:\", err);\n        updateStatus(\"⚠️ Purchase may not have been delivered. Please contact support.\");\n      });\n\n      // ✅ Optionally hit backend to finalize fulfillment if needed\n\n      // ✅ Clean up query params from the URL\n      const url = new URL(window.location.href);\n      url.search = \"\";\n      window.history.replaceState({}, document.title, url.toString());\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchOffers();\n  }, []);\n\n  const fetchOffers = async () => {\n    try {\n      const response = await axios.get(`${API_BASE}/api/store-offers`);\n      setOffers(response.data || []);\n    } catch (error) {\n      console.error(\"❌ Failed to load store offers:\", error);\n    }\n  };\n\n  const isOfferExpired = (offer) => {\n    if (!offer.shelflifeDays || !currentPlayer?.created) return false;\n\n    const created = new Date(currentPlayer.created);\n    const now = new Date();\n    const daysSince = Math.floor((now - created) / (1000 * 60 * 60 * 24));\n\n    return daysSince > offer.shelflifeDays;\n  };\n\n  return (\n    <Modal\n      onClose={(args) => {\n        if (args?.openMailbox && typeof openMailbox === 'function') {\n          openMailbox();\n        }\n        onClose();\n      }}\n      title={strings[1701]}\n    >\n        <h3>{strings[1702]}</h3>\n        <h4>{strings[1703]}</h4>\n        <h4>{strings[1704]}</h4>\n\n      <div className=\"store-offers\">\n        {(() => {\n          const activeOffers = offers.filter((offer) => !isOfferExpired(offer));\n          const processedIds = new Set();\n          \n          return activeOffers.map((offer) => {\n            // Skip if already processed\n            if (processedIds.has(offer.id)) return null;\n            \n            // Process offers 3 & 4 together\n            if (offer.id === 3 || offer.id === 4) {\n              const offer3 = activeOffers.find(o => o.id === 3);\n              const offer4 = activeOffers.find(o => o.id === 4);\n              \n              if (offer3) processedIds.add(3);\n              if (offer4) processedIds.add(4);\n              \n              return (\n                <div key=\"group-3-4\" className=\"store-offer-row\">\n                  {offer3 && (\n                    <div className=\"store-offer-card store-offer-card-half\">\n                      <div className=\"store-offer-left\">\n                        <h3>{offer3.title}</h3>\n                        <p>{offer3.body}</p>\n                        <p className=\"store-reward-line\">\n                          {offer3.rewards.map(r => {\n                            const symbol = resources.find(res => res.type === r.item)?.symbol || '';\n                            return `${symbol} ${r.qty} ${r.item}`;\n                          }).join(\", \")}\n                        </p>\n                      </div>\n                      <div className=\"store-offer-right\">\n                        <div className=\"store-price\">USD ${offer3.price.toFixed(2)}</div>\n                        <div className=\"shared-buttons\">\n                          <button className=\"btn-basic btn-gold\" onClick={() => handlePurchase(offer3.id, currentPlayer, updateStatus)}>Buy</button>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                  {offer4 && (\n                    <div className=\"store-offer-card store-offer-card-half\">\n                      <div className=\"store-offer-left\">\n                        <h3>{offer4.title}</h3>\n                        <p>{offer4.body}</p>\n                        <p className=\"store-reward-line\">\n                          {offer4.rewards.map(r => {\n                            const symbol = resources.find(res => res.type === r.item)?.symbol || '';\n                            return `${symbol} ${r.qty} ${r.item}`;\n                          }).join(\", \")}\n                        </p>\n                      </div>\n                      <div className=\"store-offer-right\">\n                        <div className=\"store-price\">USD ${offer4.price.toFixed(2)}</div>\n                        <div className=\"shared-buttons\">\n                          <button className=\"btn-basic btn-gold\" onClick={() => handlePurchase(offer4.id, currentPlayer, updateStatus)}>Buy</button>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              );\n            }\n            \n            // Process offers 6, 7 & 8 together\n            if (offer.id === 6 || offer.id === 7 || offer.id === 8) {\n              const offer6 = activeOffers.find(o => o.id === 6);\n              const offer7 = activeOffers.find(o => o.id === 7);\n              const offer8 = activeOffers.find(o => o.id === 8);\n              \n              if (offer6) processedIds.add(6);\n              if (offer7) processedIds.add(7);\n              if (offer8) processedIds.add(8);\n              \n              return (\n                <div key=\"group-6-7-8\" className=\"store-offer-row\">\n                  {offer6 && (\n                    <div className=\"store-offer-card store-offer-card-third store-offer-card-gem\">\n                      <div className=\"store-offer-left\">\n                        <h3>{offer6.title}</h3>\n                        <p>{offer6.body}</p>\n                        <p className=\"store-reward-line\">\n                          {offer6.rewards.map(r => {\n                            const symbol = resources.find(res => res.type === r.item)?.symbol || '';\n                            return `${symbol} ${r.qty} ${r.item}`;\n                          }).join(\", \")}\n                        </p>\n                      </div>\n                      <div className=\"store-offer-right\">\n                        <div className=\"store-price\">USD ${offer6.price.toFixed(2)}</div>\n                        <div className=\"shared-buttons\">\n                          <button className=\"btn-basic btn-gold\" onClick={() => handlePurchase(offer6.id, currentPlayer, updateStatus)}>Buy</button>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                  {offer7 && (\n                    <div className=\"store-offer-card store-offer-card-third store-offer-card-gem\">\n                      <div className=\"store-offer-left\">\n                        <h3>{offer7.title}</h3>\n                        <p>{offer7.body}</p>\n                        <p className=\"store-reward-line\">\n                          {offer7.rewards.map(r => {\n                            const symbol = resources.find(res => res.type === r.item)?.symbol || '';\n                            return `${symbol} ${r.qty} ${r.item}`;\n                          }).join(\", \")}\n                        </p>\n                      </div>\n                      <div className=\"store-offer-right\">\n                        <div className=\"store-price\">USD ${offer7.price.toFixed(2)}</div>\n                        <div className=\"shared-buttons\">\n                          <button className=\"btn-basic btn-gold\" onClick={() => handlePurchase(offer7.id, currentPlayer, updateStatus)}>Buy</button>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                  {offer8 && (\n                    <div className=\"store-offer-card store-offer-card-third store-offer-card-gem\">\n                      <div className=\"store-offer-left\">\n                        <h3>{offer8.title}</h3>\n                        <p>{offer8.body}</p>\n                        <p className=\"store-reward-line\">\n                          {offer8.rewards.map(r => {\n                            const symbol = resources.find(res => res.type === r.item)?.symbol || '';\n                            return `${symbol} ${r.qty} ${r.item}`;\n                          }).join(\", \")}\n                        </p>\n                      </div>\n                      <div className=\"store-offer-right\">\n                        <div className=\"store-price\">USD ${offer8.price.toFixed(2)}</div>\n                        <div className=\"shared-buttons\">\n                          <button className=\"btn-basic btn-gold\" onClick={() => handlePurchase(offer8.id, currentPlayer, updateStatus)}>Buy</button>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              );\n            }\n            \n            // Mark as processed and render normally\n            processedIds.add(offer.id);\n            \n            return (\n              <div key={offer.id} className={`store-offer-card${String(offer.id) === \"1\" ? ' store-offer-card-gold' : ''}`}>\n                <div className=\"store-offer-left\">\n                  <h3>{offer.title}</h3>\n                  <p>{offer.body}</p>\n                  <p className=\"store-reward-line\">\n                    {offer.rewards.map(r => {\n                      const symbol = resources.find(res => res.type === r.item)?.symbol || '';\n                      return `${symbol} ${r.qty} ${r.item}`;\n                    }).join(\", \")}\n                  </p>\n                </div>\n                <div className=\"store-offer-right\">\n                  <div className=\"store-price\">USD ${offer.price.toFixed(2)}</div>\n                  <div className=\"shared-buttons\">\n                    <button className=\"btn-basic btn-gold\" onClick={() => handlePurchase(offer.id, currentPlayer, updateStatus)}>Buy</button>\n                  </div>\n                </div>\n              </div>\n            );\n          });\n        })()}\n      </div>\n    </Modal>\n  );\n}\n\nexport default Store;","import React, { useState } from 'react';\nimport './ChangeIconModal.css';\nimport '../UI/SharedButtons.css';\nimport { updatePlayerIcon } from '../Authentication/ChangeIcon';\nimport ICON_OPTIONS from '../Authentication/PlayerIcons.json';\nimport { handlePurchase } from '../Store/Store';\nimport { useStrings } from '../UI/StringsContext';\n\nexport default function ChangeIconModal({ currentPlayer, setCurrentPlayer, updateStatus, currentIcon, playerId, onClose, onSave, setModalContent, setModalIsOpen  }) {\n  const [selectedIcon, setSelectedIcon] = useState(currentIcon);\n  const strings = useStrings();\n  \n  const handleSave = async () => {\n    try {\n      // Save the emoji label instead of the ID\n      await updatePlayerIcon(currentPlayer, setCurrentPlayer, playerId, selectedIcon);\n      onSave(selectedIcon);\n    } catch (err) {\n      alert(\"Failed to update icon.\");\n    }\n  };\n\n  // Determine gold status\n  const isGold = currentPlayer.accountStatus === 'Gold';\n\n  // Split icons into free and paid\n  const freeIcons = ICON_OPTIONS.free || [];\n  const paidIcons = ICON_OPTIONS.paid || [];\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"icon-modal\">\n        <button className=\"modal-close-btn\" onClick={onClose}>×</button>\n        <h2>Choose Your Avatar</h2>\n\n        <br />\n\n        <div className=\"icon-grid\">\n          {freeIcons.map(icon => (\n            <button\n              key={icon.value}\n              className={`icon-button ${selectedIcon === icon.value ? 'selected' : ''}`}\n              onClick={() => setSelectedIcon(icon.value)}\n              disabled={false}\n            >\n              {icon.value}\n            </button>\n          ))}\n        </div>\n\n        <h3>Premium Avatars</h3>\n\n        {!isGold && (\n          <div className=\"shared-buttons\">\n            <button className=\"btn-gold\" onClick={() => handlePurchase(1, currentPlayer, updateStatus)}>Unlock Premium Avatars</button>\n          </div>\n        )}\n\n        <div className=\"icon-grid\">\n          {paidIcons.map(icon => {\n            const locked = !isGold;\n            return (\n              <button\n                key={icon.value}\n                className={`icon-button ${selectedIcon === icon.value ? 'selected' : ''} ${locked ? 'locked' : ''}`}\n                disabled={locked}\n                onClick={() => {\n                  if (!locked) setSelectedIcon(icon.value);\n                }}\n              >\n                {icon.value}\n              </button>\n            );\n          })}\n        </div>\n\n\n        <div className=\"shared-buttons\">\n          <button className=\"btn-success\" onClick={handleSave}>Save</button>\n        </div>\n      </div>\n    </div>\n  );\n}","import React, { createContext, useContext, useState } from 'react';\n\n// Create a context\nconst ModalContext = createContext();\n\n// Hook to use context\nexport const useModalContext = () => useContext(ModalContext);\n\n// Provider to wrap the app\nexport const ModalProvider = ({ children, custom }) => {\n  const [activeModal, setActiveModal] = useState(null);\n\n  const openModal = (modalName) => {\n    console.log(`Opening modal: ${modalName}`);\n    setActiveModal(modalName);\n  };\n\n  const closeModal = () => {\n    setActiveModal(null);\n  };\n\n  return (\n    <ModalContext.Provider value={{ activeModal, setActiveModal, openModal, closeModal }}>\n      {children}\n      {custom}\n    </ModalContext.Provider>\n  );\n};\n","import API_BASE from '../config';\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport ChangeIconModal from '../UI/ChangeIconModal';\nimport axios from 'axios';\nimport '../UI/Panel.css'; // Use the standardized styles\nimport '../UI/SharedButtons.css'; // Use the standardized buttons\nimport Panel from '../UI/Panel';\nimport { updatePlayerSettings } from '../settings';  \nimport NPCsInGridManager from '../GridState/GridStateNPCs';\nimport playersInGridManager from '../GridState/PlayersInGrid';\nimport { StatusBarContext } from '../UI/StatusBar/StatusBar';\nimport { usePanelContext } from '../UI/PanelContext';\nimport LANGUAGE_OPTIONS from '../UI/Languages.json';\nimport { useModalContext } from '../UI/ModalContext';\nimport { useStrings } from '../UI/StringsContext';\n\nconst ProfilePanel = ({ onClose, currentPlayer, setCurrentPlayer, handleLogout, isRelocating, setIsRelocating, zoomLevel, setZoomLevel }) => {\n  const strings = useStrings();\n  const { openPanel } = usePanelContext();\n\n  const [isDeveloper, setIsDeveloper] = useState(false);\n  const hasCheckedDeveloperStatus = useRef(false);\n  const [showChangeIconModal, setShowChangeIconModal] = useState(false);\n\n  useEffect(() => {\n    const checkDevStatus = async () => {\n      try {\n        if (!hasCheckedDeveloperStatus.current && currentPlayer?.username) {\n          const res = await axios.get(`${API_BASE}/api/check-developer-status/${currentPlayer.username}`);\n          if (res.data?.isDeveloper) {\n            setIsDeveloper(true);\n          }\n          hasCheckedDeveloperStatus.current = true;\n          console.log('🔍 Developer check complete. isDeveloper:', res.data?.isDeveloper);\n        }\n      } catch (err) {\n        console.warn('⚠️ Failed to check developer status:', err);\n      }\n    };\n\n    checkDevStatus();\n  }, [currentPlayer]);\n\n  const [formData, setFormData] = useState({\n    username: '',\n    icon: '',\n    password: '',\n    accountStatus: 'Free',\n    role: 'Citizen',\n  });\n\n  const { updateStatus } = useContext(StatusBarContext);\n  const [isSaving, setIsSaving] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  // Local settings to track changes independently\n  const [localSettings, setLocalSettings] = useState({\n    isStateMachineEnabled: false,\n    isTeleportEnabled: false,\n    toggleVFX: true,\n  });\n\n  // Initialize form fields and local settings\n  useEffect(() => {\n    if (currentPlayer) {\n      const { settings } = currentPlayer;\n      setLocalSettings({\n        isStateMachineEnabled: settings?.isStateMachineEnabled ?? false,\n        isTeleportEnabled: settings?.isTeleportEnabled ?? false,\n        toggleVFX: settings?.toggleVFX ?? true,\n        rangeOn: settings?.rangeOn ?? true,\n      });\n  \n      setFormData({\n        username: currentPlayer.username || '',\n        icon: currentPlayer.icon || '',\n        password: '',\n        accountStatus: currentPlayer.accountStatus || 'Free',\n        role: currentPlayer.role || 'Citizen',\n      });\n  \n      setErrorMessage('');\n\n      console.log('Profile: curentPlayer = ',currentPlayer);\n    }\n  }, [currentPlayer]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const handleToggleChange = (key) => {\n    setLocalSettings((prev) => {\n      const updatedSettings = {\n        ...prev,\n        [key]: !prev[key],\n      };\n\n      // ✅ Call the centralized function to update local and server settings\n      updatePlayerSettings(updatedSettings, currentPlayer, setCurrentPlayer);\n      return updatedSettings;\n    });\n  };\n\n  const { setActiveModal } = useModalContext();\n\n  const handleLanguage = () => {\n    setActiveModal('LanguagePicker');\n  };\n\n  const handleSave = async () => {\n    setIsSaving(true);\n    setErrorMessage('');\n  \n    try {\n      // Validate username and icon inputs\n      if (!formData.username.trim()) {\n        throw new Error('Username cannot be empty.');\n      }\n  \n      // Prepare updates payload\n      const updates = {\n        username: formData.username.trim(),\n        icon: formData.icon.trim(),\n        ...(formData.password && { password: formData.password }),\n        accountStatus: formData.accountStatus,\n        role: formData.role,\n        settings: { ...localSettings }, // Save settings as an object\n      };\n  \n      console.log('Saving updates:', updates);\n  \n      // Call API to update the player profile\n      const response = await axios.post(`${API_BASE}/api/update-profile`, {\n        playerId: currentPlayer.playerId,\n        updates,\n      });\n  \n      if (response.data.success) {\n        console.log('Profile and settings successfully updated:', response.data.player);\n\n        // ✅ Update the React state\n        const updatedPlayer = {\n          ...currentPlayer,\n          settings: { ...localSettings },\n          username: formData.username.trim(),\n          icon: formData.icon.trim(),\n          accountStatus: formData.accountStatus,\n          role: formData.role,\n        };\n\n        setCurrentPlayer(updatedPlayer);\n        localStorage.setItem('player', JSON.stringify(updatedPlayer));\n        console.log('Updated localStorage after save:', updatedPlayer.settings);\n\n        // ✅ Update the Settlement with the player's new role (only if it's not Citizen)\n        if (formData.role && formData.role !== 'Citizen') {\n          console.log(`🏛️ Assigning player to role \"${formData.role}\" in the settlement...`);\n          \n          await axios.post(`${API_BASE}/api/update-settlement-role`, {\n            settlementId: currentPlayer.location.s, // ✅ Settlement ID\n            playerId: currentPlayer._id,           // ✅ Player's ID\n            roleName: formData.role                // ✅ Role they are assigned to\n          });\n        }\n\n        // ✅ Directly update playersInGrid via playersInGridManager\n        const gridId = currentPlayer?.location?.g;\n        if (gridId) {\n            const playerData = playersInGridManager.getPlayersInGrid(gridId)?.[currentPlayer.playerId];\n            if (playerData) {\n                const updatedPlayerData = {\n                    ...playerData,\n                    username: formData.username.trim(),\n                };\n\n                playersInGridManager.updatePC(gridId, currentPlayer.playerId, updatedPlayerData);\n\n                console.log(`✅ Updated username in playersInGrid: ${currentPlayer.playerId} → ${formData.username.trim()}`);\n            }\n        } else {\n            console.warn(\"⚠️ No valid gridId found, skipping NPCsInGrid update.\");\n        }\n\n        // Notify success and close panel\n        onClose();\n      } else {\n        const errorMessage = response.data.error || 'Failed to update profile.';\n        console.error(errorMessage);\n        setErrorMessage(errorMessage);\n      }\n    } catch (error) {\n      console.error('Error during save operation:', error);\n      // ✅ Check if the error message contains \"TAKEN\"\n      if (error.response?.data?.error === \"TAKEN\") {\n        console.log(\"❌ Username is already taken.\");\n        updateStatus(50); \n      }\n      setErrorMessage(error.message || 'An unexpected error occurred while saving.');\n    } finally {\n      setIsSaving(false);\n    }\n};\n\n\n  const handleRelocation = async () => {\n    if (isRelocating) {\n      setIsRelocating(false);\n      setZoomLevel('close');\n      updateStatus(0);\n    } else {\n      setIsRelocating(true);\n      setZoomLevel('frontier');\n    }\n  };\n\n  const handleGoldPanelSwitch = () => {\n    openPanel('GoldBenefitsPanel');\n  };\n\n\n\n\n\n  \n  return (\n    <Panel\n      onClose={() => {\n        setIsRelocating(false);\n        if (zoomLevel === 'settlement' || zoomLevel === 'frontier') {\n          setZoomLevel('close');\n          updateStatus(0);\n        }\n        onClose();\n      }}\n      titleKey=\"1119\"\n      panelName=\"ProfilePanel\"\n    >\n      <div className=\"standard-panel\">\n\n        <h2>{strings[4051]} {currentPlayer.username} {currentPlayer.icon}</h2>\n\n        <div className=\"shared-buttons\">\n          <button className=\"btn-basic btn-success\" onClick={() => setShowChangeIconModal(true)}>\n            {strings[4065]}\n          </button>\n        </div>\n\n        <br />\n\n        {/* User Details Form */}\n        <div className=\"form-group\">\n          <label>{strings[4052]}</label>\n          <input\n            name=\"username\"\n            type=\"text\"\n            value={formData.username}\n            onChange={handleInputChange}\n            placeholder=\"Enter your username\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>{strings[4053]}</label>\n          <input\n            name=\"password\"\n            type=\"password\"\n            value={formData.password}\n            onChange={handleInputChange}\n            placeholder=\"Enter new password (optional)\"\n          />\n        </div>\n\n        <div className=\"shared-buttons\">\n          <button className=\"btn-basic btn-success\" onClick={handleSave} disabled={isSaving}>\n            {isSaving ? 'Saving...' : strings[10128]}\n          </button>\n        </div>\n\n        <br />\n        <br />\n\n        <h3>{strings[4054]}</h3>\n\n        {isDeveloper && (\n          <div className=\"form-group\">\n            <label>{strings[4055]}</label>\n            <select name=\"accountStatus\" value={formData.accountStatus} onChange={handleInputChange}>\n              <option value=\"Free\">Free</option>\n              <option value=\"Bronze\">Bronze</option>\n              <option value=\"Silver\">Silver</option>\n              <option value=\"Gold\">Gold</option>\n            </select>\n          </div>\n        )}\n\n        <div className=\"shared-buttons\">\n          <button className=\"btn-basic btn-gold\" onClick={handleGoldPanelSwitch}>\n            {formData.accountStatus === 'Gold' ? strings[10130] : strings[10131]}\n          </button>\n        </div>\n        <div className=\"shared-buttons\">\n          <button className=\"btn-basic btn-danger\" onClick={handleLogout}>\n            {strings[4056]}\n          </button>\n        </div>\n        <div className=\"shared-buttons\">\n          <button\n            className=\"btn-basic btn-danger\"\n            onClick={async () => {\n              const confirmed = window.confirm(\"Are you sure you want to delete your account? This action cannot be undone.\");\n              if (!confirmed) return;\n\n              try {\n                const response = await axios.post(`${API_BASE}/api/delete-player`, {\n                  playerId: currentPlayer.playerId,\n                });\n\n                if (response.data.success) {\n                  alert(\"Account deleted successfully.\");\n                  localStorage.removeItem('player');\n                  window.location.reload();\n                } else {\n                  alert(\"Failed to delete account.\");\n                }\n              } catch (err) {\n                console.error(\"Error deleting account:\", err);\n                alert(\"An error occurred while trying to delete your account.\");\n              }\n            }}\n          >\n            {strings[4057]}\n          </button>\n        </div>\n        <p>{strings[4058]} {currentPlayer?.playerId || 'N/A'}</p>\n        <p>Home Settlement ID: {currentPlayer?.settlementId || 'N/A'}</p>\n\n        <br/>\n\n\n        {/* Relocation Controls */}\n\n        <h3>{strings[4059]}</h3>\n        <p>{strings[4060]} <strong>{currentPlayer.relocations}</strong></p>\n        <div className=\"shared-buttons\">\n          <button className=\"btn-basic btn-success\" onClick={handleRelocation} disabled={!currentPlayer.relocations}>\n            {isRelocating ? strings[10132] : strings[10133]}\n          </button>\n        </div>\n        <p>{strings[4061]}</p>\n\n\n        {/* Settings Toggles */}\n\n        <h3>{strings[4062]}</h3>\n        <div className=\"shared-buttons\">\n          <button className=\"btn-basic btn-success\" onClick={handleLanguage}>\n            🌎 {LANGUAGE_OPTIONS.find(l => l.code === currentPlayer.language)?.label || 'Language'}\n          </button>\n        </div>\n\n        <div className=\"shared-buttons\">\n          <button\n            className={`btn-basic ${localSettings.rangeOn ? 'btn-success' : 'btn-neutral'}`}\n            onClick={() => handleToggleChange('rangeOn')}\n          >\n            {strings[4064]}{localSettings.rangeOn ? 'is ON' : 'is OFF'}\n          </button>\n        </div>\n\n        {isDeveloper && (\n          <div className=\"shared-buttons\">\n            <button\n              className={`btn-basic ${localSettings.isTeleportEnabled ? 'btn-success' : 'btn-neutral'}`}\n              onClick={() => handleToggleChange('isTeleportEnabled')}\n            >\n              Teleport: {localSettings.isTeleportEnabled ? 'is ON' : 'is OFF'}\n            </button>\n          </div>\n        )}\n\n        <div className=\"shared-buttons\">\n          <button\n            className={`btn-basic ${localSettings.toggleVFX ? 'btn-success' : 'btn-neutral'}`}\n            onClick={() => handleToggleChange('toggleVFX')}\n          >\n            VFX: {localSettings.toggleVFX ? 'is ON' : 'is OFF'}\n          </button>\n        </div>\n\n        {showChangeIconModal && (\n          <ChangeIconModal\n            currentPlayer={currentPlayer}\n            setCurrentPlayer={setCurrentPlayer}\n            updateStatus={updateStatus}\n            currentIcon={formData.icon}\n            playerId={currentPlayer.playerId}\n            onClose={() => setShowChangeIconModal(false)}\n            onSave={(newIcon) => {\n              setFormData(prev => ({ ...prev, icon: newIcon }));\n              setShowChangeIconModal(false);\n            }}\n          />\n        )}\n      </div>\n    </Panel>\n    \n  );\n};\n\nexport default ProfilePanel;","import API_BASE from './config';\nimport axios from 'axios';\n\n/**\n * Update player settings both locally and on the server.\n */\nexport async function updatePlayerSettings(newSettings, currentPlayer, setCurrentPlayer) {\n  try {\n    // Prepare payload\n    const updatedPlayer = {\n      ...currentPlayer,\n      settings: { ...newSettings }, // Merge new settings\n    };\n\n    // Save to local storage first for immediate responsiveness\n    localStorage.setItem('player', JSON.stringify(updatedPlayer));\n    setCurrentPlayer(updatedPlayer);\n\n    console.log('Updating settings on server:', newSettings);\n\n    // Send update to server\n    const response = await axios.post(`${API_BASE}/api/update-settings`, {\n      playerId: currentPlayer.playerId,\n      settings: newSettings,\n    });\n\n    if (response.data.success) {\n      console.log('Settings updated successfully on server.');\n    } else {\n      console.error('Server update failed:', response.data.error);\n    }\n  } catch (error) {\n    console.error('Error updating player settings:', error);\n  }\n}","import API_BASE from '../config';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport NPCsInGridManager from '../GridState/GridStateNPCs';\nimport { useStrings } from '../UI/StringsContext';\nimport LANGUAGE_OPTIONS from '../UI/Languages.json';\nimport '../UI/SharedButtons.css';\n\nconst CreateAccount = ({ setCurrentPlayer, zoomLevel, setZoomLevel, setIsLoggedIn, closeModal }) => {\n  const strings = useStrings();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [language, setLanguage] = useState('en');\n  const [error, setError] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\nconst handleCreateAccount = async (e) => {\n  e.preventDefault();\n  if (isSubmitting) return;\n  setIsSubmitting(true);\n\n  try {\n    const frontierName = 'Valley View 1';\n\n    // 1. Fetch the Frontier by Name\n    const frontierResponse = await axios.get(`${API_BASE}/api/frontiers-by-name`, { params: { name: frontierName } });\n    if (!frontierResponse.data || frontierResponse.data.length === 0) throw new Error('Frontier not found');\n    const frontier = frontierResponse.data[0];\n\n    // 2. Locate an available sub-grid in a settlement\n    let assignedSettlementId = null;\n    let assignedGridCoord = null;\n    let gridType = null;\n\n    for (const settlementRow of frontier.settlements || []) {\n      for (const settlement of settlementRow) {\n        if (settlement.available !== true) continue;\n\n        const settlementResponse = await axios.get(`${API_BASE}/api/get-settlement/${settlement.settlementId}`);\n        const settlementData = settlementResponse.data;\n\n        const availableGrid = settlementData.grids.flat().find((grid) => grid.available === true);\n        if (availableGrid) {\n          assignedSettlementId = settlement.settlementId;\n          assignedGridCoord = availableGrid.gridCoord;\n          gridType = availableGrid.gridType;\n          break;\n        }\n      }\n      if (assignedGridCoord) break;\n    }\n\n    if (!assignedSettlementId || !assignedGridCoord) {\n      throw new Error('No available sub-grids in the Frontier.');\n    }\n\n    // 3. Register player using unified endpoint (server will create the grid)\n    const registerPayload = {\n      username,\n      password,\n      language,\n      location: {\n        x: 30,\n        y: 33,\n        gridCoord: assignedGridCoord,\n        settlementId: assignedSettlementId,\n        frontierId: frontier._id,\n        gtype: gridType,\n      },\n    };\n\n    console.log('Calling /api/register-new-player with payload:', registerPayload);\n    const response = await axios.post(`${API_BASE}/api/register-new-player`, registerPayload);\n    if (!response.data.success || !response.data.player) {\n      throw new Error('Player registration failed');\n    }\n\n    const player = response.data.player;\n    const location = player.location;\n    const assignedGridId = location?.g;\n\n    console.log('✅ Player registered:', player);\n\n    // 4. Finalize account setup\n    setCurrentPlayer(player);\n    localStorage.removeItem('player');\n    localStorage.setItem('player', JSON.stringify(player));\n\n    // 5. Save PC to grid\n    const now = Date.now();\n    const newPC = {\n      playerId: player._id,\n      type: 'pc',\n      username: player.username,\n      position: { x: 30, y: 33 },\n      icon: player.icon || '😀',\n      hp: player.baseHp || 25,\n      maxhp: player.baseMaxhp || 25,\n      attackbonus: player.baseAttackbonus || 1,\n      armorclass: player.baseArmorclass || 1,\n      damage: player.baseDamage || 1,\n      attackrange: player.baseAttackrange || 1,\n      speed: player.baseSpeed || 1,\n      iscamping: false,\n      isinboat: false,\n      lastUpdated: now,\n    };\n\n    const payload = {\n      gridId: assignedGridId,\n      playerId: player._id,\n      pc: newPC,\n      lastUpdated: now,\n    };\n\n    await axios.post(`${API_BASE}/api/save-single-pc`, payload);\n\n    // 6. Send welcome message\n    try {\n      await axios.post(`${API_BASE}/api/send-mailbox-message`, {\n        playerId: player._id,\n        messageId: 1,\n      });\n    } catch (mailError) {\n      console.error(\"❌ Failed to send welcome message:\", mailError);\n    }\n\n    // 7. Close modal and reload\n    if (closeModal) closeModal();\n    localStorage.setItem(\"initialZoomLevel\", \"close\");\n    window.location.reload();\n\n  } catch (err) {\n    console.error('Error during account creation:', err);\n    setError(err.response?.data?.error || 'Account creation failed. Please try again.');\n    setIsSubmitting(false);\n  }\n};\n\nreturn (\n  <div id=\"create-account-form\">\n    <h2>{strings[4002]}</h2>\n    <form onSubmit={handleCreateAccount}>\n      <input\n        type=\"text\"\n        placeholder=\"Username\"\n        value={username}\n        onChange={(e) => setUsername(e.target.value)}\n      />\n      <input\n        type=\"password\"\n        placeholder=\"Password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <select\n        value={language}\n        onChange={(e) => setLanguage(e.target.value)}\n      >\n        <option value=\"\">{strings[4067]}</option>\n        {LANGUAGE_OPTIONS.map(({ code, label }) => (\n          <option key={code} value={code}>\n            {label}\n          </option>\n        ))}\n      </select>\n      <div className=\"shared-buttons\">\n        <button className=\"btn-panel btn-success\" type=\"submit\" disabled={isSubmitting}>\n          {strings[4002]}\n        </button>\n      </div>\n    </form>\n\n    <div className=\"shared-buttons\">\n      <button className=\"btn-panel btn-neutral\"\n        type=\"button\"\n        onClick={() => setIsLoggedIn(false)}\n      >\n        {strings[4066]}\n      </button>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      </div>\n\n      <p> <strong>{strings[4004]}</strong></p>\n    </div>\n    \n  );\n};\n\nexport default CreateAccount;","import API_BASE from '../config';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Panel from '../UI/Panel';\nimport CreateAccount from './CreateAccount';\nimport '../UI/Panel.css'; \nimport '../UI/SharedButtons.css'; \n\nimport { useStrings } from '../UI/StringsContext';\n\nconst LoginPanel = ({ onClose, setCurrentPlayer, zoomLevel, setZoomLevel, onLoginSuccess }) => {\n  const strings = useStrings();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [showCreateAccount, setShowCreateAccount] = useState(false);\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    try {\n      console.log('Login attempt:', { username, password });\n\n      const response = await axios.post(`${API_BASE}/api/login`, { username, password });\n      if (response.data.success) {\n        const player = response.data.player;\n        console.log('Login successful:', player);\n\n        setCurrentPlayer(player); // Set player data\n        localStorage.setItem('player', JSON.stringify(player)); // Store in local storage\n        onClose(); // Close panel\n\n        if (onLoginSuccess) {\n          onLoginSuccess(player); // Notify parent component\n        }\n      } else {\n        setError(response.data.error || 'Invalid username or password');\n      }\n    } catch (err) {\n      console.error('Error during login:', err);\n      setError('Login failed. Please try again.');\n    }\n  };\n\n  return (\n    <Panel onClose={onClose} descriptionKey=\"1021\" titleKey=\"1121\" panelName=\"LoginPanel\">\n      {showCreateAccount ? (\n        <CreateAccount\n          setCurrentPlayer={setCurrentPlayer}\n          zoomLevel={zoomLevel}\n          setZoomLevel={setZoomLevel}\n          setIsLoggedIn={() => {\n            setShowCreateAccount(false);\n            onClose();\n          }}\n        />\n      ) : (\n        <div className=\"standard-panel\">\n          <form onSubmit={handleLogin} className=\"panel-form\">\n            <div className=\"form-group\">\n\n            <div className=\"shared-buttons\">\n            <h3>{strings[4001]}</h3>\n              <button\n                type=\"button\"\n                className=\"btn-basic btn-success\"\n                onClick={() => setShowCreateAccount(true)}\n              >\n                {strings[4002]}\n              </button>\n            </div>  \n            <h4>{strings[4004]}</h4>\n            <h4>{strings[4005]}</h4>\n\n            <h3>{strings[5033]}</h3>\n\n            <h3>{strings[4010]}</h3>\n\n              <label htmlFor=\"username\">Username</label>\n              <input\n                id=\"username\"\n                type=\"text\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">{strings[4006]}</label>\n              <input\n                id=\"password\"\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                required\n              />\n            </div>\n            {error && <p className=\"error-message\">{error}</p>}\n\n            <div className=\"shared-buttons\">\n              <button type=\"submit\" className=\"btn-basic btn-neutral\">\n                {strings[4007]}\n              </button>\n            </div>\n          </form>\n          <div className=\"panel-buffer-space\" />\n          <div className=\"panel-buffer-space\" />\n\n          <div className=\"shared-buttons\">\n            <button\n              className=\"btn-basic btn-success\"\n              onClick={() => window.location.href = 'mailto:valleyviewgamedev@gmail.com'}\n            >\n              {strings[97]}\n            </button>\n          </div>\n\n        </div>\n        \n      )}\n    </Panel>\n  );\n};\n\nexport default LoginPanel;\n","// A small component to add to App.js Base Panel for visual debugging\nimport React from 'react';\nimport './GridStateDebug.css';\n\nconst GridStateDebugPanel = ({ gridId, gridCoord, gridType, settlementId, NPCsInGrid, playersInGrid }) => {\n  const formatJSON = (obj) => {\n    try {\n      return JSON.stringify(obj, null, 2);\n    } catch {\n      return '[Unserializable]';\n    }\n  };\n\n  const currentNPCs = NPCsInGrid?.[gridId] || 'Not loaded';\n  const currentPCs = playersInGrid?.[gridId] || 'Not loaded';\n\n  return (\n    <div className=\"grid-debug-panel\">\n      <h4 style={{ color: 'white' }}>Debug:</h4>\n      <br></br>\n      <h5>gridId:</h5>\n      <pre>{formatJSON(gridId)}</pre>\n      <h5>gridCoord: {formatJSON(gridCoord)}</h5>\n      <h5>gridType: {formatJSON(gridType)}</h5>\n      <h5>settlementId: {formatJSON(settlementId)}</h5>\n      <br></br>\n      <h5>🐮 NPCsInGrid?[gridId]</h5>\n      <pre>{formatJSON(currentNPCs)}</pre>\n      <h5>👥 PlayersInGrid?[gridId]</h5>\n      <pre>{formatJSON(currentPCs)}</pre>\n    </div>\n  );\n};\n\nexport default GridStateDebugPanel;\n","import API_BASE from '../config'; \nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport Panel from '../UI/Panel';\nimport '../UI/Panel.css'; // Specific styles for Debug Panel\nimport '../UI/SharedButtons.css'; // Specific styles for Debug Panel\nimport { fetchInventory, refreshPlayerAfterInventoryUpdate } from './InventoryManagement';\nimport { fetchGridData, changePlayerLocation } from './GridManagement';\nimport NPCsInGridManager from '../GridState/GridStateNPCs'; // Use default export for NPCsInGridManager\nimport playersInGridManager from '../GridState/PlayersInGrid';\nimport GridStateDebugPanel from './GridStateDebug';\nimport { generateTownGrids, generateValleyGrids, createSingleValleyGrid } from './WorldGeneration';\n\nconst DebugPanel = ({ onClose, currentPlayer, setCurrentPlayer, setInventory, setResources, currentGridId, updateStatus, TILE_SIZE, setGrid, setGridId, setTileTypes, closeAllPanels }) => {\n  const [timers, setTimers] = useState([]);\n  const [npcs, setNPCs] = useState([]);\n  const [pcs, setPCs] = useState([]);\n  const [updatedNPCs, setUpdatedNPCs] = useState(npcs);\n  const [refreshDebug, setRefreshDebug] = useState(false);\n  const [singleGridCoord, setSingleGridCoord] = useState('');\n  const [toGridCoord, setToGridCoord] = useState('');\n  const [usernameToDelete, setUsernameToDelete] = useState('');\n  const [messageIdentifier, setMessageIdentifier] = useState('');\n  \n  // Fetch resources with timers when the panel opens or gridId changes\n  useEffect(() => {\n    if (!currentGridId) return;\n\n    const fetchTimers = async () => {\n        try {\n            console.log('Fetching timers for gridId:', currentGridId);\n            const gridData = await fetchGridData(currentGridId,updateStatus,currentPlayer);\n\n            // ✅ Include both growEnd (Farming) and craftEnd (Crafting)\n            const resourcesWithTimers = (gridData.resources || []).filter(\n                (res) => res.growEnd || res.craftEnd\n            );\n\n            console.log('⏳ Active Timers:', resourcesWithTimers);\n            setTimers(resourcesWithTimers);\n        } catch (error) {\n            console.error('Error fetching timers:', error);\n        }\n    };\n\n    fetchTimers();\n  }, [currentGridId]);\n\n  // Refresh timers periodically\n  useEffect(() => {\n    const timerInterval = setInterval(() => {\n      setTimers((prevTimers) =>\n        prevTimers.map((timer) => {\n          const growTimeRemaining = timer.growEnd ? Math.max(0, Math.floor((timer.growEnd - Date.now()) / 1000)) : null;\n          const craftTimeRemaining = timer.craftEnd ? Math.max(0, Math.floor((timer.craftEnd - Date.now()) / 1000)) : null;\n\n          return {\n            ...timer,\n            remainingTime: growTimeRemaining !== null ? growTimeRemaining : craftTimeRemaining, // Prioritize active timer\n          };\n        })\n      );\n    }, 1000);\n\n    return () => clearInterval(timerInterval);\n  }, []);\n\n  // Fetch NPCs and PCs from GridState\n  useEffect(() => {\n    if (!currentGridId) return;\n\n    const fetchGridStateEntities = () => {\n      const NPCsInGrid = NPCsInGridManager.getNPCsInGrid(currentGridId);\n      const playersInGrid = playersInGridManager.getPlayersInGrid(currentGridId);\n\n      if (!NPCsInGrid) {\n        console.warn(`No NPCsInGrid found for gridId: ${currentGridId}`);\n        setNPCs([]);\n      } else {\n        setNPCs(Object.values(NPCsInGrid.npcs || {}));\n      }\n\n      if (!playersInGrid) {\n        console.warn(`No playersInGrid found for gridId: ${currentGridId}`);\n        setPCs([]);\n      } else {\n        setPCs(Object.values(playersInGrid));\n      }\n    };\n\n    fetchGridStateEntities();\n  }, [currentGridId, refreshDebug]);\n  \n  // Synchronize updatedNPCs with npcs when npcs changes\n  useEffect(() => {\n    setUpdatedNPCs(npcs);\n  }, [npcs]);\n\n\n\n\n  const handleResetGrid = async () => {\n    if (!currentGridId) { console.error('currentGridId is not defined.'); return; }\n    console.log('handleResetGrid: gridId:', currentGridId);\n  \n    try {\n      // Fetch settlement details using the player's current location\n      const settlementId = currentPlayer?.location?.s; // Fetch settlementId from current player location\n      if (!settlementId) {\n        console.error('Settlement ID not found for the current player.');\n        alert('Settlement ID not found for the current player.');\n        return;\n      }\n  \n      // Fetch settlement data to retrieve frontierId\n      const settlementResponse = await axios.get(`${API_BASE}/api/get-settlement/${settlementId}`);\n      const settlement = settlementResponse.data;\n  \n      if (!settlement || !settlement.frontierId) {\n        console.error('Settlement data is incomplete or missing frontierId.');\n        alert('Settlement data is incomplete or missing frontierId.');\n        return;\n      }\n  \n      const frontierId = settlement.frontierId; // Extract frontierId from the settlement\n      console.log('Settlement and frontierId resolved:', { settlementId, frontierId });\n  \n      // Fetch grid data to determine the gridType dynamically\n      const gridResponse = await axios.get(`${API_BASE}/api/load-grid/${currentGridId}`);\n      const gridData = gridResponse.data;\n  \n      if (!gridData || !gridData.gridType) {\n        console.error('Grid data is incomplete or missing gridType.');\n        alert('Grid data is incomplete or missing gridType.');\n        return;\n      }\n  \n      const gridType = gridData.gridType;\n\n      let gridCoord = null;\n      for (const row of settlement.grids) {\n        for (const cell of row) {\n          if (cell.gridId && String(cell.gridId) === String(currentGridId)) {\n            gridCoord = cell.gridCoord;\n            break;\n          }\n        }\n        if (gridCoord !== null) break;\n      }\n\n      if (gridCoord === null) {\n        console.error('Could not resolve gridCoord from settlement.');\n        alert('Could not resolve gridCoord from settlement.');\n        return;\n      }\n\n      console.log('Extracted gridData: gridType=', gridType, '; gridCoord=', gridCoord);\n  \n      // Send request to reset the grid\n      const resetResponse = await axios.post(`${API_BASE}/api/reset-grid`, {\n        gridCoord,\n        gridId: currentGridId, // Use the Mongo `_id` of the grid\n        gridType,\n        settlementId,\n        frontierId,\n      });\n  \n      console.log(`Grid ${currentGridId} of type ${gridType} reset successfully:`, resetResponse.data);\n      updateStatus(903);\n      window.location.reload();\n    } catch (error) {\n      console.error(`Error resetting grid \"${currentGridId}\":`, error);\n      alert(`Failed to reset grid \"${currentGridId}\". Check the console for details.`);\n    }\n  }; \n\n  \n  const handleAddMoney = async () => {\n    try {\n      const playerId = currentPlayer?.playerId;\n      if (!playerId) { console.error('No user logged in. Cannot add money.'); return; }\n      // Call delta-based inventory update\n      await axios.post(`${API_BASE}/api/update-inventory-delta`, {\n        playerId,\n        delta: { type: 'Money', quantity: 10000, target: 'inventory' },\n      });\n\n      // Update local inventory state\n      const updatedInventory = await fetchInventory(playerId);\n      setInventory(updatedInventory);\n      // Update currentPlayer with the new inventory\n      setCurrentPlayer(prev => ({ ...prev, inventory: updatedInventory }));\n      // Refresh player data (but preserve the inventory we just set)\n      await refreshPlayerAfterInventoryUpdate(playerId, setCurrentPlayer, true);\n      console.log('✅ Added 10,000 Money successfully using delta update.');\n    } catch (error) {\n      console.error('❌ Error adding money:', error);\n    }\n  };\n\nconst handleGetRich = async () => {\n  try {\n    const playerId = currentPlayer?.playerId;\n    if (!playerId) {\n      console.error('No user logged in. Cannot perform Get Rich.');\n      return;\n    }\n\n    // Define resources to add\n    const resourcesToAdd = [\n      { type: 'Money', quantity: 100000 },\n      { type: 'Potion A', quantity: 50 },\n      { type: 'Potion B', quantity: 50 },\n      { type: 'Potion C', quantity: 50 },\n      { type: 'Gem', quantity: 200 },\n      { type: 'Book', quantity: 100 },\n      { type: 'Wood', quantity: 1000 },\n      { type: 'Clay', quantity: 1000 },\n      { type: 'Stone', quantity: 1000 },\n      { type: 'Wheat', quantity: 1000 },\n      { type: 'Corn', quantity: 1000 },\n      { type: 'Carrot', quantity: 1000 },\n      { type: 'Grapes', quantity: 500 },\n      { type: 'Apple', quantity: 500 },\n      { type: 'Bread', quantity: 500 },\n      { type: 'Olive Oil', quantity: 500 },\n      { type: 'Honey', quantity: 500 },\n      { type: 'Flour', quantity: 500 },\n      { type: 'Butter', quantity: 500 },\n      { type: 'Egg', quantity: 500 },\n      { type: 'Sugar', quantity: 500 },\n      { type: 'Cream', quantity: 500 },\n      { type: 'Lemon', quantity: 500 },\n      { type: 'Orange', quantity: 500 },\n      { type: 'Cloth', quantity: 500 },\n      { type: 'Lumber', quantity: 500 },\n      { type: 'Thread', quantity: 500 },\n      { type: 'Milk', quantity: 500 },\n      { type: 'Aged Wine', quantity: 500 },\n      { type: 'Sweater', quantity: 500 },\n      { type: 'Cheese', quantity: 500 },\n      { type: 'Sugarcane', quantity: 500 },\n      { type: 'Strawberry', quantity: 500 },\n      { type: 'Diamond Ring', quantity: 500 },\n      { type: 'Feverfew', quantity: 100 },\n      { type: 'Golden Key', quantity: 100 },\n      { type: 'Skeleton Key', quantity: 100 },\n      { type: 'Furniture', quantity: 100 },\n      { type: 'Port', quantity: 100 },\n      { type: 'Wool', quantity: 500 },\n      { type: 'Scroll', quantity: 100 },\n      { type: 'Pottery', quantity: 100 },\n      { type: 'Portrait', quantity: 10 },\n      { type: 'Trident', quantity: 10 },\n      { type: 'Yellow Heart', quantity: 1000 },\n      { type: 'Green Heart', quantity: 500 },\n      { type: 'Purple Heart', quantity: 500 },\n      { type: 'Saw', quantity: 10 },\n      { type: 'Shovel', quantity: 20 },\n      { type: 'Screwdriver', quantity: 30 },\n      { type: 'Hammer', quantity: 40 },\n      { type: 'Bolt', quantity: 50 },\n    ];\n\n    // Use delta endpoint for batched update, adding target: 'inventory' to each resource\n    await axios.post(`${API_BASE}/api/update-inventory-delta`, {\n      playerId,\n      delta: resourcesToAdd.map(item => ({ ...item, target: 'inventory' })),\n    });\n\n    // Update local inventory state\n    const updatedInventory = await fetchInventory(playerId);\n    setInventory(updatedInventory);\n    \n    // Update currentPlayer with the new inventory\n    setCurrentPlayer(prev => ({ ...prev, inventory: updatedInventory }));\n    \n    // Refresh player data after the batched update (preserve inventory)\n    await refreshPlayerAfterInventoryUpdate(playerId, setCurrentPlayer, true);\n\n    console.log('💰 Get Rich: Inventory updated successfully via delta.');\n  } catch (error) {\n    console.error('❌ Error performing Get Rich:', error);\n  }\n};\n  \n  const handleGetSkills = async () => {\n    try {\n      const playerId = currentPlayer?.playerId;\n      if (!playerId) {\n        console.error('No user logged in. Cannot add skills.');\n        return;\n      }\n  \n      // Fetch master resources\n      const response = await axios.get(`${API_BASE}/api/resources`);\n      const masterResources = response.data;\n  \n      if (!Array.isArray(masterResources)) {\n        console.error('Master resources are not an array:', masterResources);\n        return;\n      }\n  \n      // Filter resources of type \"skill\"\n      const skillResources = masterResources.filter((res) => res.category === 'skill');\n      if (skillResources.length === 0) {\n        console.warn('No skill resources found.');\n        alert('No skill resources available to add.');\n        return;\n      }\n  \n      // Fetch the latest skills\n      const skillsResponse = await axios.get(`${API_BASE}/api/skills/${playerId}`);\n      const currentSkills = skillsResponse.data.skills || [];\n  \n      // Create a new skills list by adding one of each skill\n      const updatedSkills = [...currentSkills];\n      skillResources.forEach((skill) => {\n        const existingSkill = updatedSkills.find((item) => item.type === skill.type);\n        if (existingSkill) {\n          existingSkill.quantity += 1;\n        } else {\n          updatedSkills.push({ type: skill.type, quantity: 1 });\n        }\n      });\n  \n      // Send the full updated skills list to the server\n      await axios.post(`${API_BASE}/api/update-skills`, {\n        playerId,\n        skills: updatedSkills,\n      });\n  \n      // Update the `currentPlayer` state with new skills\n      const updatedPlayer = { ...currentPlayer, skills: updatedSkills };\n      setCurrentPlayer(updatedPlayer);\n      localStorage.setItem('player', JSON.stringify(updatedPlayer));\n      updateStatus(904);\n      console.log('Get Skills: Added skills successfully.');\n    } catch (error) {\n      console.error('Error adding skills:', error);\n      alert('Failed to add skills. Check console for details.');\n    }\n  };\n  \n  const handleClearTrophies = async () => {\n    try {\n      const playerId = currentPlayer?.playerId;\n      if (!playerId) {\n        console.error('No player ID found. Cannot clear trophies.');\n        return;\n      }\n\n      // Clear trophies\n      const clearedTrophies = [];\n      console.log('Clearing all trophies.');\n      \n      // Update trophies on the server by setting to empty array\n      await axios.post(`${API_BASE}/api/update-profile`, {\n        playerId,\n        updates: {\n          trophies: clearedTrophies\n        }\n      });\n      \n      console.log('Trophies cleared successfully on the server.');\n\n      // Refresh player data after updates\n      await refreshPlayerAfterInventoryUpdate(playerId, setCurrentPlayer);\n\n      // Update the local state for trophies\n      setCurrentPlayer((prevPlayer) => ({\n        ...prevPlayer,\n        trophies: clearedTrophies\n      }));\n      \n      updateStatus('Trophies cleared successfully.');\n      console.log('Trophies cleared successfully.');\n    } catch (error) {\n      console.error('Error clearing trophies:', error);\n    }\n  };\n  \n  const handleClearInventory = async () => {\n    try {\n      const playerId = currentPlayer?.playerId;\n      if (!playerId) {\n        console.error('No player ID found. Cannot clear inventory.');\n        return;\n      }\n\n      // Retain only Money and Gems in the inventory\n      const filteredInventory = currentPlayer.inventory.filter(\n        (item) => item.type === 'Money' || item.type === 'Gem'\n      );\n      console.log('Filtered inventory to retain only Money and Gems:', filteredInventory);\n\n      // Update inventory on the server\n      await axios.post(`${API_BASE}/api/update-inventory`, {\n        playerId,\n        inventory: filteredInventory,\n        backpack: currentPlayer.backpack || [],\n      });\n      console.log('Inventory updated successfully on the server.');\n\n      // Refresh player data after updates\n      await refreshPlayerAfterInventoryUpdate(playerId, setCurrentPlayer);\n\n      // Force a re-fetch to confirm changes are saved\n      const updatedInventory = await fetchInventory(playerId);\n      console.log('Fetched inventory after clearing:', updatedInventory);\n\n      // Update the local state for inventory\n      setInventory(updatedInventory);\n      setCurrentPlayer((prevPlayer) => ({\n        ...prevPlayer,\n        inventory: updatedInventory,\n      }));\n      updateStatus(900);\n      console.log('Inventory cleared successfully except for Money.');\n    } catch (error) {\n      console.error('Error clearing inventory:', error);\n    }\n  };\n\n  const handleClearSkillsAndPowers = async () => {\n    try {\n      const playerId = currentPlayer?.playerId;\n      if (!playerId) {\n        console.error('No player ID found. Cannot clear skills and powers.');\n        return;\n      }\n\n      // Clear skills\n      const clearedSkills = [];\n      console.log('Clearing all skills.');\n      await axios.post(`${API_BASE}/api/update-skills`, {\n        playerId,\n        skills: clearedSkills,\n      });\n      console.log('Skills cleared successfully on the server.');\n\n      // Clear powers\n      const clearedPowers = [];\n      console.log('Clearing all powers.');\n      await axios.post(`${API_BASE}/api/update-powers`, {\n        playerId,\n        powers: clearedPowers,\n      });\n      console.log('Powers cleared successfully on the server.');\n\n      // Refresh player data after updates\n      await refreshPlayerAfterInventoryUpdate(playerId, setCurrentPlayer);\n\n      // Update the local state for skills and powers\n      setCurrentPlayer((prevPlayer) => ({\n        ...prevPlayer,\n        skills: clearedSkills,\n        powers: clearedPowers,\n      }));\n      updateStatus(905);\n      console.log('Skills and powers cleared successfully.');\n    } catch (error) {\n      console.error('Error clearing skills and powers:', error);\n    }\n  };\n  \n  const handleClearQuestHistory = async () => {\n    try {\n        const playerId = currentPlayer?.playerId;\n        if (!playerId) {\n            console.error('No player logged in. Cannot clear quest history.');\n            return;\n        }\n\n        // Make the API request to clear both activeQuests and completedQuests\n        await axios.post(`${API_BASE}/api/clear-quest-history`, { playerId });\n\n        // Update the `currentPlayer` state to reflect changes\n        const updatedPlayer = { \n            ...currentPlayer, \n            activeQuests: [], \n            completedQuests: [] \n        };\n        setCurrentPlayer(updatedPlayer);\n\n        console.log('Quest history cleared successfully.');\n        updateStatus(901); // Update with a debug-specific status code\n\n    } catch (error) {\n        console.error('Error clearing quest history:', error);\n    }\n  };\n\n  const handleClearTradeStall = async () => {\n    try {\n      const username = currentPlayer?.username;\n      if (!username) {\n        console.error('No user logged in. Cannot clear Trade Stall.');\n        return;\n      }\n\n      await axios.post(`${API_BASE}/api/update-player-trade-stall`, {\n        username,\n        tradeStall: [], // Clear the trade stall\n      });\n\n      console.log('Trade Stall cleared successfully.');\n    } catch (error) {\n      console.error('Error clearing Trade Stall:', error);\n    }\n  };\n\n  const handleWelcomeMessage = async () => {\n    const playerId = currentPlayer?.playerId;\n    if (!playerId) { console.error(\"❌ No player ID available.\"); return; }\n    try {\n      await axios.post(`${API_BASE}/api/send-mailbox-message`, {\n        playerId,\n        messageId: 1, // Assuming 1 is the Welcome message ID\n      });\n      console.log(\"📬 Welcome message added to mailbox.\");\n      updateStatus(\"✅ Welcome message delivered.\");\n      await refreshPlayerAfterInventoryUpdate(playerId, setCurrentPlayer);\n\n    } catch (mailError) {\n      console.error(\"❌ Failed to send welcome message:\", mailError);\n      updateStatus(\"❌ Failed to deliver welcome message.\");\n    }\n  };\n\n  const handleRewardMessage = async () => {\n    const playerId = currentPlayer?.playerId;\n    if (!playerId) { console.error(\"❌ No player ID available.\"); return; }\n    try {\n      await axios.post(`${API_BASE}/api/send-mailbox-message`, {\n        playerId,\n        messageId: 101, \n      });\n      console.log(\"📬 Welcome message added to mailbox.\");\n      updateStatus(\"✅ Welcome message delivered.\");\n      await refreshPlayerAfterInventoryUpdate(playerId, setCurrentPlayer);\n\n    } catch (mailError) {\n      console.error(\"❌ Failed to send welcome message:\", mailError);\n      updateStatus(\"❌ Failed to deliver welcome message.\");\n    }\n  };\n\n  const sendMessageToAll = async (messageId) => {\n    try {\n      await axios.post(`${API_BASE}/api/send-mailbox-message-all`, {\n        messageId: messageId, // Send to all players\n      });\n      console.log(`📬 Message ${messageId} added to mailbox for all users.`);\n      updateStatus(`✅ Message ${messageId} delivered to all users.`);\n      // Optionally refresh current player\n      if (currentPlayer?.playerId) {\n        await refreshPlayerAfterInventoryUpdate(currentPlayer.playerId, setCurrentPlayer);\n      }\n    } catch (mailError) {\n      console.error(`❌ Failed to send message ${messageId}:`, mailError);\n      updateStatus(`❌ Failed to deliver message ${messageId}.`);\n    }\n  };\n  \n  const handleClearGridState = async (command) => {\n    switch (command) {\n      case 'cleargrid':\n        if (NPCsInGridManager.clearGridState(currentGridId)) {\n          updateStatus('Grid state cleared successfully');\n          // Clear from localStorage if you're using it\n          localStorage.removeItem(`NPCsInGrid_${currentGridId}`);\n        } else {\n          updateStatus('Failed to clear grid state');\n        }\n        break;\n\n      // Add other debug commands here\n      default:\n        console.warn(`Unknown debug command: ${command}`);\n    }\n  };\n\n  // Add Reset Combat Stats handler\n  const handleResetCombatStats = async () => {\n    try {\n      const playerId = currentPlayer?.playerId;\n      if (!playerId) {\n        console.error('No player ID found. Cannot reset combat stats.');\n        return;\n      }\n\n      const combatStats = {\n        maxhp: currentPlayer.baseMaxhp,\n        attackbonus: currentPlayer.baseAttackbonus,\n        armorclass: currentPlayer.baseArmorclass,\n        damage: currentPlayer.baseDamage,\n        attackrange: currentPlayer.baseAttackrange,\n        speed: currentPlayer.baseSpeed,\n      };\n\n      await playersInGridManager.updatePC(currentGridId, playerId, combatStats);\n\n      console.log('Combat stats reset successfully using updatePC.');\n      updateStatus(906); // Optional: new debug status\n    } catch (error) {\n      console.error('Error resetting combat stats:', error);\n    }\n  };\n\n  const handleCreateNewFrontier = async () => {\n    try {\n      const response = await axios.post(`${API_BASE}/api/create-frontier`);\n      console.log('Create New Frontier response:', response.data);\n      alert('New Frontier created successfully!');\n    } catch (error) {\n      console.error('Error creating new Frontier:', error);\n      alert('Failed to create new Frontier. Check console for details.');\n    }\n  };\n\n  const handleGenerateTown = async () => {\n    try { await generateTownGrids({ currentPlayer }); } catch (error) {\n      console.error('Error generating town:', error);\n      alert('Failed to generate town. Check console for details.');\n    }\n  };\n\n  const handleGenerateValley = async (valleyType) => {\n    try { await generateValleyGrids({ valleyType, currentPlayer }); } catch (error) {\n      console.error(`Error generating valley${valleyType} grids:`, error);\n      alert(`Failed to generate valley${valleyType} grids. Check the console for details.`);\n    }\n  };\n\n  const handleDeleteAccount = async (username) => {\n    // Accept either {username} or username string for backward compatibility\n    if (typeof username === \"object\" && username?.username) {\n      username = username.username;\n    }\n    if (!username) {\n      alert(\"Please enter a username.\");\n      return;\n    }\n\n    try {\n      // Step 1: Look up the player by username\n      const lookupResponse = await axios.get(`${API_BASE}/api/get-player-by-username/${username}`);\n      const player = lookupResponse.data;\n\n      if (!player || !player._id) {\n        alert(`Player not found for username: ${username}`);\n        return;\n      }\n\n      const confirmed = window.confirm(`Are you sure you want to delete the account for \"${username}\"? This cannot be undone.`);\n      if (!confirmed) return;\n\n      // Step 2: Delete the player by ID\n      const deleteResponse = await axios.post(`${API_BASE}/api/delete-player`, {\n        playerId: player._id,\n      });\n\n      if (deleteResponse.data.success) {\n        alert(`✅ Account for \"${username}\" deleted successfully.`);\n        console.log(`✅ Account deleted for username: ${username}`);\n      } else {\n        alert(\"❌ Failed to delete account. See console for details.\");\n        console.error(\"Delete failed:\", deleteResponse.data);\n      }\n    } catch (error) {\n      console.error(\"❌ Error deleting account:\", error);\n      alert(\"An error occurred while trying to delete the account.\");\n    }\n  };\n\n  const handleTeleport = async (gridCoord) => {\n    if (!gridCoord || typeof gridCoord !== 'number' || isNaN(gridCoord)) {\n      console.error('❌ Invalid gridCoord passed to handleTeleport:', gridCoord);\n      updateStatus('❌ Invalid grid selected for teleport.');\n      return;\n    }\n\n    // Extract settlement row and col from the 4th and 5th digits\n    const coordStr = String(gridCoord).padStart(7, '0'); // Ensure string is long enough\n    const row = parseInt(coordStr[3], 10); // 4th digit\n    const col = parseInt(coordStr[4], 10); // 5th digit\n\n    console.log(`🔢 Parsed gridCoord ${gridCoord} → row=${row}, col=${col}`);\n\n    try {\n      // 1. Call backend to get settlement data\n      const response = await axios.get(`${API_BASE}/api/get-settlement-by-coords/${row}/${col}`);\n      const settlement = response.data;\n\n      if (!settlement || !settlement.grids || settlement.grids.length === 0) {\n        console.warn('No settlement or empty grids array found.');\n        updateStatus('❌ Settlement data not found.');\n        return;\n      }\n\n      // 2. Search through grids to find the matching gridCoord\n      let matchingGridObj = null;\n      for (const row of settlement.grids) {\n        for (const cell of row) {\n          if (cell.gridCoord === gridCoord) {\n            matchingGridObj = cell;\n            break;\n          }\n        }\n        if (matchingGridObj) break;\n      }\n\n      if (!matchingGridObj) {\n        console.warn(`GridCoord ${gridCoord} not found in settlement.`);\n        updateStatus('❌ Grid not found in settlement.');\n        return;\n      }\n\n      // 3. Build toLocation using found grid data\n      const fromLocation = currentPlayer.location;\n      const toLocation = {\n        x: 0,\n        y: 0,\n        g: matchingGridObj.gridId,\n        s: settlement._id,\n        f: currentPlayer.location.f,\n        gtype: matchingGridObj.gridType,\n        gridCoord: gridCoord,\n      };\n\n      // 4. Call changePlayerLocation\n      changePlayerLocation(\n        currentPlayer,\n        fromLocation,\n        toLocation,\n        setCurrentPlayer,\n        setGridId,\n        setGrid,\n        setTileTypes,\n        setResources,\n        TILE_SIZE,\n        closeAllPanels,\n        updateStatus,\n        null, // bulkOperationContext not available\n        null, // masterResources not available\n        null, // strings not available\n        null  // masterTrophies not available\n      );\n    } catch (error) {\n      console.error('Error during teleport:', error);\n      updateStatus('❌ Teleport failed due to error.');\n    }\n  };\n\n\n  const handleResetFTUE = async () => {\n    const playerId = currentPlayer?.playerId;\n    if (!playerId) { console.error(\"❌ No player ID available.\"); return; }\n\n    try {\n      // Update player document on DB: player.firsttimeuser = true\n      const response = await axios.post(`${API_BASE}/api/update-profile`, {\n        playerId,\n        updates: { firsttimeuser: true, ftuestep: 1 }, \n      });\n      \n      if (response.data.success) {\n        // Update in the local storage as well\n        const updatedPlayer = {\n          ...currentPlayer,\n          firsttimeuser: true,\n          ftuestep: 1, \n        };\n        localStorage.setItem('player', JSON.stringify(updatedPlayer));\n        \n        console.log('✅ FTUE reset successfully.');\n        updateStatus('✅ FTUE reset. Refreshing page...');\n        \n        // Refresh the window after a short delay\n        setTimeout(() => {\n          window.location.reload();\n        }, 1000);\n      } else {\n        console.error('❌ Failed to reset FTUE:', response.data.error);\n        updateStatus('❌ Failed to reset FTUE.');\n      }\n    } catch (error) {\n      console.error('❌ Error resetting FTUE:', error);\n      updateStatus('❌ Error resetting FTUE.');\n    }\n  };\n\n  const handleRemoveHomestead = async () => {\n    if (!currentGridId) {\n      console.error('❌ No grid ID available.');\n      updateStatus('❌ No grid ID available.');\n      return;\n    }\n\n    // Check if this is actually a homestead\n    const gridType = currentPlayer?.location?.gtype;\n    if (gridType !== 'homestead') {\n      alert('⚠️ This command only works on homestead grids.');\n      return;\n    }\n\n    const confirmed = window.confirm(\n      `⚠️ Are you absolutely sure you want to remove this homestead grid?\\n\\n` +\n      `Grid ID: ${currentGridId}\\n\\n` +\n      `This will:\\n` +\n      `1. Delete this grid from the database\\n` +\n      `2. Mark this location as available in the settlement\\n\\n` +\n      `This action CANNOT be undone!`\n    );\n\n    if (!confirmed) return;\n\n    try {\n      console.log('🏚️ Removing homestead grid:', currentGridId);\n      \n      const response = await axios.post(`${API_BASE}/api/remove-homestead`, {\n        gridId: currentGridId\n      });\n\n      if (response.data.success) {\n        console.log('✅ Homestead removed successfully');\n        updateStatus('✅ Homestead removed. Players relocated. Reloading...');\n        \n        // The server has relocated all players using relocateOnePlayerHome\n        // Just reload the page to reflect the new state\n        setTimeout(() => {\n          window.location.reload();\n        }, 1500);\n      } else {\n        console.error('❌ Failed to remove homestead:', response.data);\n        updateStatus('❌ Failed to remove homestead.');\n      }\n    } catch (error) {\n      console.error('❌ Error removing homestead:', error);\n      updateStatus('❌ Error removing homestead.');\n      alert('Failed to remove homestead. Check console for details.');\n    }\n  };\n\n\n  return (\n    <Panel onClose={onClose} titleKey=\"1120\" panelName=\"DebugPanel\">\n      <div className=\"shared-buttons\">\n        <button className=\"btn-basic btn-danger\" onClick={handleCreateNewFrontier}> Create New Frontier </button>\n      </div>\n      <div className=\"shared-buttons\">\n        <button className=\"btn-basic btn-danger\" onClick={handleResetGrid}> Reset This Grid </button>\n      </div>\n      <div className=\"shared-buttons\">\n        <button className=\"btn-basic btn-danger\" onClick={handleRemoveHomestead}> Remove Homestead </button>\n      </div>\n      <div className=\"shared-buttons\">\n        <button className=\"btn-basic btn-danger\" onClick={handleGenerateTown}> Generate Town </button>\n      </div>\n      <div className=\"shared-buttons\">\n        <button className=\"btn-basic btn-danger\" onClick={() => handleGenerateValley(0)}> Generate Valley 0 </button>\n      </div>\n      <div className=\"shared-buttons\">\n        <button className=\"btn-basic btn-danger\" onClick={() => handleGenerateValley(1)}> Generate Valley 1 </button>\n      </div>\n      <div className=\"shared-buttons\">\n        <button className=\"btn-basic btn-danger\" onClick={() => handleGenerateValley(2)}> Generate Valley 2 </button>\n      </div>\n      <div className=\"shared-buttons\">\n        <button className=\"btn-basic btn-danger\" onClick={() => handleGenerateValley(3)}> Generate Valley 3 </button>\n      </div>\n      <div className=\"shared-buttons\">\n        <button className=\"btn-basic btn-neutral\" onClick={handleClearInventory}> Clear Inventory </button>\n      </div>\n      <div className=\"shared-buttons\">\n        <button className=\"btn-basic btn-neutral\" onClick={handleClearSkillsAndPowers}> Clear Skills & Powers </button>\n      </div>\n      <div className=\"shared-buttons\">\n        <button className=\"btn-basic btn-neutral\" onClick={handleResetCombatStats}> Reset Combat Stats </button>\n      </div>\n      <div className=\"shared-buttons\">\n        <button className=\"btn-basic btn-neutral\" onClick={handleClearQuestHistory}> Clear Quest History </button>\n      </div>\n      <div className=\"shared-buttons\">\n        <button className=\"btn-basic btn-neutral\" onClick={handleClearGridState}> Clear Grid State </button>\n      </div>\n      <div className=\"shared-buttons\">\n        <button className=\"btn-basic btn-neutral\" onClick={handleClearTradeStall}> Clear Trade Stall </button>\n      </div>\n      <div className=\"shared-buttons\">\n        <button className=\"btn-basic btn-neutral\" onClick={handleClearTrophies}> Clear Trophies </button>\n      </div>\n      <div className=\"shared-buttons\">\n        <button className=\"btn-basic btn-success\" onClick={handleResetFTUE}> Reset FTUE </button>\n      </div>\n      <div className=\"shared-buttons\">\n        <button className=\"btn-basic btn-success\" onClick={handleWelcomeMessage}> Resend Welcome Message </button>\n      </div>\n      <div className=\"shared-buttons\">\n        <button className=\"btn-basic btn-success\" onClick={handleRewardMessage}> Resend Reward Message </button>\n      </div>\n      <div className=\"shared-buttons\">\n        <button className=\"btn-basic btn-success\" onClick={handleAddMoney}> Add Money </button>\n      </div>\n      <div className=\"shared-buttons\">\n        <button className=\"btn-basic btn-success\" onClick={handleGetRich}> Get Rich </button>\n      </div>\n      <div className=\"shared-buttons\">\n        <button className=\"btn-basic btn-success\" onClick={handleGetSkills}> Get Skills </button>\n      </div>\n\n        <h3>Create Single Valley Grid</h3>\n        <input\n          type=\"text\"\n          placeholder=\"Enter GridCoord\"\n          value={singleGridCoord}\n          onChange={(e) => setSingleGridCoord(e.target.value)}\n        />\n        <div className=\"shared-buttons\">\n          <button\n            className=\"btn-basic btn-danger\"\n            onClick={async () => {\n              const settlementId = currentPlayer?.location?.s;\n              const frontierId = currentPlayer?.location?.f;\n              const gridType = currentPlayer?.location?.gtype || 'valley0';\n              if (!singleGridCoord || !settlementId || !frontierId) {\n                alert(\"Missing gridCoord, settlementId, or frontierId.\");\n                return;\n              }\n              try {\n                await createSingleValleyGrid({\n                  gridCoord: singleGridCoord,\n                });\n              } catch (error) {\n                console.error(\"Error creating single valley grid:\", error);\n                alert(\"Failed to create valley grid. See console for details.\");\n              }\n            }}\n          >\n            Create Grid\n          </button>\n        </div>\n\n        <h3>Teleport to Another Grid</h3>\n        <input\n          type=\"text\"\n          placeholder=\"Enter Username\"\n          value={toGridCoord}\n          onChange={(e) => setToGridCoord(e.target.value)}\n        />\n        <div className=\"shared-buttons\">\n          <button\n            className=\"btn-basic btn-danger\"\n            onClick={async () => {\n              try {\n                const parsedCoord = parseInt(toGridCoord, 10);\n                if (isNaN(parsedCoord)) {\n                  alert(\"Invalid gridCoord (not a number).\");\n                  return;\n                }\n                await handleTeleport(parsedCoord);\n              } catch (error) {\n                console.error(\"Error teleporting:\", error);\n                alert(\"Failed to teleport.\");\n              }\n            }}\n          >\n            Teleport\n          </button>\n        </div>\n        \n\n        <h3>Delete User Account</h3>\n        <input\n          type=\"text\"\n          placeholder=\"Enter Username\"\n          value={usernameToDelete}\n          onChange={(e) => setUsernameToDelete(e.target.value)}\n        />\n        <div className=\"shared-buttons\">\n          <button\n            className=\"btn-basic btn-danger\"\n            onClick={async () => {\n              const confirmed = window.confirm(`⚠️ Are you absolutely sure you want to permanently delete the account for \"${usernameToDelete}\"? This cannot be undone.`);\n              if (!confirmed) return;\n\n              try {\n                await handleDeleteAccount({\n                  username: usernameToDelete,\n                });\n              } catch (error) {\n                console.error(\"Error deleting user account:\", error);\n                alert(\"Failed to delete user account. See console for details.\");\n              }\n            }}\n          >\n            Delete\n          </button>\n        </div>\n        \n\n        <h3>Send Message to All Users</h3>\n        <input\n          type=\"text\"\n          placeholder=\"Enter Message ID\"\n          value={messageIdentifier}\n          onChange={(e) => setMessageIdentifier(e.target.value)}\n        />\n        <div className=\"shared-buttons\">\n          <button\n            className=\"btn-basic btn-danger\"\n            onClick={async () => {\n              if (!messageIdentifier) {\n                alert(\"Please enter a message ID.\");\n                return;\n              }\n              try {\n                await sendMessageToAll(Number(messageIdentifier));\n              } catch (error) {\n                console.error(\"Error sending message to all users:\", error);\n                alert(\"Failed to send message. See console for details.\");\n              }\n            }}\n          >\n            Send Message\n          </button>\n        </div>\n\n    <br />\n    <h3>FTUE Step: {currentPlayer?.ftuestep || \"Not set\"}</h3>\n    <h3>Warehouse Level: {currentPlayer?.warehouseLevel ?? 0}</h3>\n\n      <div className=\"debug-timers\">\n        <h3>⏳ Active Timers:</h3>\n        {timers.length > 0 ? (\n          <ul>\n            {timers.map((res, index) => (\n              <li key={index}>\n                {res.type} at ({res.x}, {res.y}) - \n                {res.growEnd ? ` 🌱 Farming Timer Ends in ${res.remainingTime}s` : \"\"}\n                {res.craftedItem ? ` 🛠️ ${res.craftedItem}: ` : \"\"}\n                {res.craftEnd ? ` Ends in ${res.remainingTime}s` : \"\"}\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>No active timers.</p>\n        )}\n      </div>\n          \n    <GridStateDebugPanel\n      gridId={currentGridId}\n      gridCoord={currentPlayer?.location?.gridCoord}\n      gridType={currentPlayer?.location?.gtype}\n      settlementId={currentPlayer?.location?.s}\n      NPCsInGrid={{ [currentGridId]: NPCsInGridManager.getNPCsInGrid(currentGridId) }}\n      playersInGrid={{ [currentGridId]: playersInGridManager.getPlayersInGrid(currentGridId) }}\n    />\n\n    </Panel>\n  );\n};\n\nexport default DebugPanel;","import API_BASE from '../config';\nimport axios from 'axios';\n\n\nexport async function generateTownGrids ({ currentPlayer })\n    {\n    try {\n      const settlementId = currentPlayer.location.s;\n      if (!settlementId) {\n        console.error('No settlement ID found for the current player.');\n        alert('No settlement ID found for the current player.');\n        return;\n      }\n  \n      // Fetch the settlement data\n      const response = await axios.get(\n        `${API_BASE}/api/get-settlement/${settlementId}`\n      );\n  \n      const settlement = response.data;\n      if (!settlement || !settlement.grids || settlement.grids.length === 0) {\n        console.error('Settlement data is incomplete or missing grids.');\n        alert('Settlement data is incomplete or missing grids.');\n        return;\n      }\n  \n      // Find all uninitialized town grids by looking for gridType === 'town' but no gridId\n      const townGrids = [];\n      settlement.grids.forEach((row) => {\n        row.forEach((grid) => {\n          if (grid.gridType === 'town' && !grid.gridId) {\n            // Instead of placeholderName, push the gridCoord\n            townGrids.push(grid.gridCoord);\n          }\n        });\n      });\n  \n      if (townGrids.length === 0) {\n        console.log('No uninitialized town grids found in this settlement.');\n        alert('No uninitialized town grids found in this settlement.');\n        return;\n      }\n  \n      console.log(`Found ${townGrids.length} uninitialized town grids. Processing grids...`);\n  \n      // Generate/create each town grid by passing gridCoord\n      for (const gridCoord of townGrids) {\n        try {\n          console.log(`Creating Town grid with gridCoord: ${gridCoord}`);\n  \n          const result = await axios.post(`${API_BASE}/api/create-grid`, {\n            gridCoord,             // instead of placeholderName\n            gridType: 'town',\n            settlementId,\n            frontierId: settlement.frontierId,\n          });\n  \n          console.log(`Processed town grid for gridCoord: ${gridCoord}`, result.data);\n  \n        } catch (gridError) {\n          console.error(`Failed to process grid for gridCoord: ${gridCoord}`, gridError);\n        }\n      }\n  \n      alert('Town grids created successfully!');\n    } catch (error) {\n      console.error('Error processing town grids:', error);\n      alert('Failed to create town grids. Check the console for details.');\n    }\n  };\n\n\n\n\nexport async function generateValleyGrids({ valleyType, currentPlayer }) {\n    try {\n      const frontierId = currentPlayer?.location?.f;\n      if (!frontierId) {\n        console.error(\"No frontier ID found for the current player.\");\n        alert(\"No frontier ID found for the current player.\");\n        return;\n      }\n      console.log(`Fetching frontier data for ID: ${frontierId}`);\n      const frontierResponse = await axios.get(`${API_BASE}/api/get-frontier/${frontierId}`);\n      const frontierData = frontierResponse.data;\n      if (!frontierData || !frontierData.settlements) {\n        console.error(\"Frontier data is incomplete or missing settlements.\");\n        alert(\"Frontier data is incomplete or missing settlements.\");\n        return;\n      }\n      console.log(`Searching settlements for valley${valleyType} grids.`);\n      const valleyGrids = [];\n  \n      // 1) For each settlement in the frontier, fetch its data\n      for (const settlementRow of frontierData.settlements) {\n        for (const settlement of settlementRow) {\n          if (!settlement?.settlementId) {\n            console.warn(\"Settlement is invalid or missing settlementId. Skipping.\");\n            continue;\n          }\n          try {\n            console.log(\"Fetching settlement data for settlement ID:\", settlement.settlementId);\n            const settlementResponse = await axios.get(\n              `${API_BASE}/api/get-settlement/${settlement.settlementId}`\n            );\n            const settlementData = settlementResponse.data;\n  \n            if (!settlementData?.grids) {\n              console.warn(`Settlement ${settlement.settlementId} has no grids. Skipping.`);\n              continue;\n            }\n            // 2) Find all uninitialized valleyX sub-grids (i.e., same valleyType, no gridId)\n            settlementData.grids.flat().forEach((grid) => {\n              if (grid.gridType === `valley${valleyType}` && !grid.gridId) {\n                valleyGrids.push({\n                  ...grid,\n                  settlementId: settlement.settlementId,\n                });\n              }\n            });\n          } catch (error) {\n            console.error(`Failed to fetch data for settlement ${settlement.settlementId}:`, error);\n          }\n        }\n      }\n  \n      if (valleyGrids.length === 0) {\n        console.log(`No valley${valleyType} grids found in this frontier.`);\n        alert(`No valley${valleyType} grids found in this frontier.`);\n        return;\n      }\n  \n      console.log(`Found ${valleyGrids.length} valley${valleyType} grids. Starting generation process.`);\n  \n      // 3) Create each valley grid via /create-grid, sending gridCoord instead of placeholderName\n      for (const valleyGrid of valleyGrids) {\n        try {\n          console.log(\n            `Creating valley${valleyType} grid with gridCoord: ${valleyGrid.gridCoord}, Settlement ID: ${valleyGrid.settlementId}`\n          );\n  \n          await axios.post(`${API_BASE}/api/create-grid`, {\n            gridCoord: valleyGrid.gridCoord,\n            gridType: valleyGrid.gridType, // 'valley0', 'valley1', 'valley2', or 'valley3'\n            settlementId: valleyGrid.settlementId,\n            frontierId: frontierId,\n          });\n  \n          console.log(`Successfully created valley${valleyType} grid for gridCoord: ${valleyGrid.gridCoord}`);\n        } catch (error) {\n          console.error(\n            `Error creating valley${valleyType} grid with gridCoord ${valleyGrid.gridCoord}:`,\n            error\n          );\n        }\n      }\n  \n      alert(`Valley${valleyType} grids processed successfully!`);\n    } catch (error) {\n      console.error(`Error processing valley${valleyType} grids:`, error);\n      alert(`Failed to process valley${valleyType} grids. Check the console for details.`);\n    }\n  };\n\n\nexport async function createSingleValleyGrid({ gridCoord }) {\n  try {\n    console.log(\"🔍 Fetching all settlements to determine gridType for gridCoord:\", gridCoord);\n    const settlementsResponse = await axios.get(`${API_BASE}/api/settlements`);\n    const settlements = settlementsResponse.data;\n\n    if (!settlements || settlements.length === 0) {\n      throw new Error(\"No settlements returned from the server\");\n    }\n\n    let foundGrid = null;\n    let foundSettlementId = null;\n    let foundFrontierId = null;\n\n    for (const settlement of settlements) {\n      if (!settlement.grids) continue;\n\n      for (const row of settlement.grids) {\n        for (const grid of row) {\n          console.log(`🔍 Checking gridCoord ${grid.gridCoord} (type: ${typeof grid.gridCoord}) against input ${gridCoord}`);\n          if (String(grid.gridCoord) === String(gridCoord)) {\n            foundGrid = grid;\n            foundSettlementId = settlement._id;\n            foundFrontierId = settlement.frontierId;\n            break;\n          }\n        }\n        if (foundGrid) break;\n      }\n      if (foundGrid) break;\n    }\n\n    if (!foundGrid) {\n      console.warn(`❗ GridCoord ${gridCoord} not found in any settlement.`);\n      alert(\"GridCoord not found in any settlement data.\");\n      return;\n    }\n\n    const payload = {\n      gridCoord,\n      gridType: foundGrid.gridType,\n      settlementId: foundSettlementId,\n      frontierId: foundFrontierId,\n    };\n\n    console.log(\"📤 Sending grid creation request with:\", payload);\n\n    const response = await axios.post(`${API_BASE}/api/create-grid`, payload);\n\n    console.log(`✅ Grid created: ${gridCoord}`, response.data);\n    alert(`Grid ${gridCoord} created successfully!`);\n  } catch (error) {\n    console.error(`❌ Failed to create grid ${gridCoord}:`, error);\n    alert(`Failed to create grid ${gridCoord}. See console for details.`);\n  }\n}","import API_BASE from '../../config';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Panel from '../../UI/Panel';\nimport '../../UI/Panel.css';\nimport './InventoryPanel.css'; \nimport { useStrings } from '../../UI/StringsContext';\nimport { getLocalizedString } from '../../Utils/stringLookup';\nimport { deriveWarehouseAndBackpackCapacity, isCurrency } from '../../Utils/InventoryManagement';\nimport { handlePurchase } from '../../Store/Store';\n\nfunction InventoryPanel({ onClose, masterResources, globalTuning, currentPlayer, setCurrentPlayer, setInventory, setBackpack, updateStatus, openPanel, setActiveStation, setModalContent, setIsModalOpen }) {\n\n    const strings = useStrings();\n    const inventory = currentPlayer?.inventory || [];\n    const backpack = currentPlayer?.backpack || [];\n    const baseWarehouseCapacity = currentPlayer?.warehouseCapacity || 0;\n    const baseBackpackCapacity = currentPlayer?.backpackCapacity || 0;\n    const [showBackpackModal, setShowBackpackModal] = useState(false);\n    const [showWarehouseModal, setShowWarehouseModal] = useState(false);\n    const [backpackAmounts, setBackpackAmounts] = useState({}); // Store amounts per resource for backpack\n    const [warehouseAmounts, setWarehouseAmounts] = useState({}); // Store amounts per resource for warehouse\n    const hasBackpackSkill = currentPlayer?.skills?.some(item => item.type === 'Backpack');\n    const finalCapacities = deriveWarehouseAndBackpackCapacity(currentPlayer, masterResources, globalTuning);\n    \n    // Get Gold bonuses from globalTuning prop\n    const warehouseGoldBonus = globalTuning?.warehouseCapacityGold || 100000;\n    const backpackGoldBonus = globalTuning?.backpackCapacityGold || 5000;\n    \n    const calculateTotalQuantity = (inventory) =>\n        inventory.filter((item) => !isCurrency(item.type)).reduce((total, item) => total + item.quantity, 0);\n    \n    const handleAmountChange = (amounts, setAmounts, type, value, maxValue) => {\n        const clampedValue = Math.min(Math.max(0, value), maxValue);\n        setAmounts((prev) => ({\n            ...prev,\n            [type]: clampedValue,\n        }));\n    };\n\n    const handleMoveItem = async (item) => {\n        const isAtHome = currentPlayer.location.g === currentPlayer.gridId;\n        const amount = backpackAmounts[item.type] || 0;\n        \n        if (amount <= 0) return;\n\n        try {\n            if (isAtHome) {\n                // Check warehouse capacity before moving\n                const currentWarehouseUsage = calculateTotalQuantity(inventory);\n                const spaceAvailable = finalCapacities.warehouse - currentWarehouseUsage;\n                \n                if (amount > spaceAvailable) {\n                    updateStatus(20); // Warehouse full message\n                    return;\n                }\n                \n                const updatedWarehouse = [...inventory];\n                const existingIndex = updatedWarehouse.findIndex(i => i.type === item.type);\n                if (existingIndex !== -1) {\n                    updatedWarehouse[existingIndex].quantity += amount;\n                } else {\n                    updatedWarehouse.push({ ...item, quantity: amount });\n                }\n\n                const updatedBackpack = backpack.map(i => {\n                    if (i.type === item.type) {\n                        const newQuantity = i.quantity - amount;\n                        return newQuantity > 0 ? { ...i, quantity: newQuantity } : null;\n                    }\n                    return i;\n                }).filter(Boolean);\n\n                await axios.post(`${API_BASE}/api/update-inventory`, {\n                    playerId: currentPlayer.playerId,\n                    inventory: updatedWarehouse,\n                    backpack: updatedBackpack,\n                });\n\n                setCurrentPlayer({\n                    ...currentPlayer,\n                    inventory: updatedWarehouse,\n                    backpack: updatedBackpack,\n                });\n                \n                // Also update parent component's state\n                setInventory(updatedWarehouse);\n                setBackpack(updatedBackpack);\n\n                updateStatus(`Moved ${amount}x ${getLocalizedString(item.type, strings)} to warehouse`);\n            } else {\n                const updatedBackpack = backpack.map(i => {\n                    if (i.type === item.type) {\n                        const newQuantity = i.quantity - amount;\n                        return newQuantity > 0 ? { ...i, quantity: newQuantity } : null;\n                    }\n                    return i;\n                }).filter(Boolean);\n\n                await axios.post(`${API_BASE}/api/update-inventory`, {\n                    playerId: currentPlayer.playerId,\n                    backpack: updatedBackpack,\n                });\n\n                setCurrentPlayer({\n                    ...currentPlayer,\n                    backpack: updatedBackpack,\n                });\n                \n                // Also update parent component's state\n                setBackpack(updatedBackpack);\n\n                updateStatus(`❌ Discarded ${amount}x ${getLocalizedString(item.type, strings)}`);\n            }\n        } catch (error) {\n            console.error('Error updating inventory:', error);\n        }\n    };\n\n    const handleMoveAll = async () => {\n        const isAtHome = currentPlayer.location.g === currentPlayer.gridId;\n\n        try {\n            if (isAtHome) {\n                const itemsToMove = backpack.filter((item) => item.type !== \"Tent\" && item.type !== \"Boat\");\n                \n                // Calculate total quantity to move\n                const totalToMove = itemsToMove.reduce((sum, item) => sum + item.quantity, 0);\n                const currentWarehouseUsage = calculateTotalQuantity(inventory);\n                const spaceAvailable = finalCapacities.warehouse - currentWarehouseUsage;\n                \n                if (totalToMove > spaceAvailable) {\n                    updateStatus(20); // Warehouse full message\n                    return;\n                }\n\n                const updatedWarehouseInventory = [...inventory];\n\n                itemsToMove.forEach((item) => {\n                    const existingIndex = updatedWarehouseInventory.findIndex((invItem) => invItem.type === item.type);\n                    if (existingIndex !== -1) {\n                        updatedWarehouseInventory[existingIndex].quantity += item.quantity;\n                    } else {\n                        updatedWarehouseInventory.push(item);\n                    }\n                });\n\n                const updatedBackpack = backpack.filter((item) => item.type === \"Tent\" || item.type === \"Boat\");\n\n                await axios.post(`${API_BASE}/api/update-inventory`, {\n                    playerId: currentPlayer.playerId,\n                    inventory: updatedWarehouseInventory,\n                    backpack: updatedBackpack,\n                });\n\n                setCurrentPlayer({\n                    ...currentPlayer,\n                    inventory: updatedWarehouseInventory,\n                    backpack: updatedBackpack,\n                });\n                \n                // Also update parent component's state\n                setInventory(updatedWarehouseInventory);\n                setBackpack(updatedBackpack);\n\n                updateStatus(`Moved all items to warehouse`);\n            } else {\n                // When not at home, discard all items except Tent and Boat\n                const itemsToKeep = backpack.filter((item) => item.type === \"Tent\" || item.type === \"Boat\");\n                \n                await axios.post(`${API_BASE}/api/update-inventory`, {\n                    playerId: currentPlayer.playerId,\n                    backpack: itemsToKeep,\n                });\n\n                setCurrentPlayer({\n                    ...currentPlayer,\n                    backpack: itemsToKeep,\n                });\n                \n                // Also update parent component's state\n                setBackpack(itemsToKeep);\n\n                updateStatus(`❌ Discarded all items except Tent and Boat`);\n            }\n        } catch (error) {\n            console.error('Error updating inventory:', error);\n        }\n    };\n\n    const handleDiscardWarehouseItem = async (item) => {\n        try {\n            const amount = warehouseAmounts[item.type] || 0;\n            \n            if (amount <= 0) return;\n            \n            const updatedWarehouse = inventory.map(i => {\n                if (i.type === item.type) {\n                    const newQuantity = i.quantity - amount;\n                    return newQuantity > 0 ? { ...i, quantity: newQuantity } : null;\n                }\n                return i;\n            }).filter(Boolean);\n\n            await axios.post(`${API_BASE}/api/update-inventory`, {\n                playerId: currentPlayer.playerId,\n                inventory: updatedWarehouse,\n            });\n\n            setCurrentPlayer({\n                ...currentPlayer,\n                inventory: updatedWarehouse,\n            });\n            \n            // Also update parent component's state\n            setInventory(updatedWarehouse);\n\n            updateStatus(`❌ Discarded ${amount}x ${getLocalizedString(item.type, strings)}`);\n        } catch (error) {\n            console.error('Error updating inventory:', error);\n        }\n    };\n\n    const handleDiscardAllWarehouse = async () => {\n        try {\n            await axios.post(`${API_BASE}/api/update-inventory`, {\n                playerId: currentPlayer.playerId,\n                inventory: [],\n            });\n\n            setCurrentPlayer({\n                ...currentPlayer,\n                inventory: [],\n            });\n            \n            // Also update parent component's state\n            setInventory([]);\n\n            updateStatus(`❌ Discarded all warehouse items`);\n            setShowWarehouseModal(false);\n        } catch (error) {\n            console.error('Error updating inventory:', error);\n        }\n    };\n\n    return (\n        <Panel onClose={onClose} descriptionKey=\"1001\" titleKey=\"1101\" panelName=\"InventoryPanel\">\n            \n            {/* Gold Pass info for non-Gold users */}\n            \n            {currentPlayer.accountStatus !== 'Gold' && (\n                <>\n                    <div className=\"gold-pass-info\">\n                        {strings[199]}\n                    </div>\n                    <div className=\"shared-buttons\" style={{ display: 'flex', justifyContent: 'center', width: '100%', marginBottom: '20px' }}>\n                        <button \n                            className=\"btn-basic btn-panel btn-gold\"\n                            onClick={() => handlePurchase(1, currentPlayer, updateStatus)}\n                        >\n                            {strings[9061]}\n                        </button>\n                    </div>\n                </>\n            )}\n\n            {/* CURRENCIES */}\n            <div className=\"currency-section\">\n                <div className=\"currency-display\">\n                    {/* Column 1: Money and Gems */}\n                    <div className=\"currency-column\">\n                        <div className=\"currency-item\">\n                            <span className=\"currency-emoji\">💰</span>\n                            <span className=\"currency-amount\">{(inventory.find(item => item.type === 'Money')?.quantity || 0).toLocaleString('en-US')}</span>\n                        </div>\n                        <div className=\"currency-item\">\n                            <span className=\"currency-emoji\">💎</span>\n                            <span className=\"currency-amount\">{(inventory.find(item => item.type === 'Gem')?.quantity || 0).toLocaleString('en-US')}</span>\n                        </div>\n                    </div>\n                    {/* Column 2: Hearts */}\n                    <div className=\"currency-column\">\n                        <div className=\"currency-item\">\n                            <span className=\"currency-emoji\">💛</span>\n                            <span className=\"currency-amount\">{(inventory.find(item => item.type === 'Yellow Heart')?.quantity || 0).toLocaleString('en-US')}</span>\n                        </div>\n                        <div className=\"currency-item\">\n                            <span className=\"currency-emoji\">💚</span>\n                            <span className=\"currency-amount\">{(inventory.find(item => item.type === 'Green Heart')?.quantity || 0).toLocaleString('en-US')}</span>\n                        </div>\n                        <div className=\"currency-item\">\n                            <span className=\"currency-emoji\">💜</span>\n                            <span className=\"currency-amount\">{(inventory.find(item => item.type === 'Purple Heart')?.quantity || 0).toLocaleString('en-US')}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <hr className=\"inventory-divider\" />\n\n            {/* BACKPACK */}\n\n            <h3>{strings[182]}</h3>\n\n            {hasBackpackSkill ? (\n              <>\n                <div className=\"capacity-display\">\n                    {strings[183]} {calculateTotalQuantity(backpack)}/\n                    <span style={currentPlayer?.accountStatus === \"Gold\" ? {color: \"#B8860B\"} : {}}>\n                        {finalCapacities.backpack}\n                    </span>\n                    {currentPlayer?.accountStatus === \"Gold\" && (\n                        <div style={{fontSize: \"12px\", color: \"#666\", marginTop: \"2px\"}}>\n                            (+{backpackGoldBonus.toLocaleString()} {strings[89] || \"additional capacity for Gold Pass\"})\n                        </div>\n                    )}\n                </div>\n\n                {backpack.length > 0 && (\n                <div className=\"shared-buttons\">\n                    <button className=\"btn-basic btn-panel btn-neutral\" onClick={() => setShowBackpackModal(true)}>\n                    {strings[78]}\n                    </button>\n                </div>\n                )}\n                <br></br>\n                <div className=\"inventory-table\">\n                    {backpack.filter(item => !isCurrency(item.type)).length > 0 ? (\n                        backpack.filter(item => !isCurrency(item.type)).map((item, index) => (\n                            <div className=\"inventory-row\" key={index}>\n                                <div className=\"inventory-cell name-cell\">{masterResources.find(r => r.type === item.type)?.symbol || ''} {getLocalizedString(item.type, strings)}</div>\n                                <div className=\"inventory-cell quantity-cell\">{item.quantity.toLocaleString()}</div>\n                            </div>\n                        ))\n                    ) : (\n                        <p>{strings[77]}</p>\n                    )}\n                </div>\n              </>\n            ) : (\n              <div className=\"capacity-display\">{strings[75]}</div>\n            )}\n\n            <hr className=\"inventory-divider\" />\n\n            {/* WAREHOUSE */}\n\n            <h3>{strings[181]}</h3>\n\n            <div className=\"capacity-display\">\n                {strings[183]} {calculateTotalQuantity(inventory)}/\n                <span style={currentPlayer?.accountStatus === \"Gold\" ? {color: \"#B8860B\"} : {}}>\n                    {finalCapacities.warehouse}\n                </span>\n                {currentPlayer?.accountStatus === \"Gold\" && (\n                    <div style={{fontSize: \"12px\", color: \"#666\", marginTop: \"2px\"}}>\n                        (+{warehouseGoldBonus.toLocaleString()} {strings[89] || \"additional capacity for Gold Pass\"})\n                    </div>\n                )}\n            </div>\n\n            <div className=\"shared-buttons\">\n                <button className=\"btn-basic btn-panel btn-success\" onClick={() => {\n                    onClose();\n                    setTimeout(() => {\n                        openPanel('WarehousePanel');\n                    }, 0);\n                }}>\n                {strings[194]}\n                </button>\n            </div>\n\n            {inventory.length > 0 && (\n            <div className=\"shared-buttons\">\n                <button className=\"btn-basic btn-panel btn-neutral\" onClick={() => setShowWarehouseModal(true)}>\n                {strings[184]}\n                </button>\n            </div>\n            )}\n\n            <br></br>\n            <div className=\"inventory-table\">\n                {inventory.filter(item => !isCurrency(item.type)).length > 0 ? (\n                    inventory.filter(item => !isCurrency(item.type)).map((item, index) => (\n                        <div className=\"inventory-row\" key={index}>\n                            <div className=\"inventory-cell name-cell\">{masterResources.find(r => r.type === item.type)?.symbol || ''} {getLocalizedString(item.type, strings)}</div>\n                            <div className=\"inventory-cell quantity-cell\">{item.quantity.toLocaleString()}</div>\n                        </div>\n                    ))\n                ) : (\n                    <p>{strings[76]}</p>\n                )}\n            </div>\n\n\n            {showBackpackModal && (() => {\n                const isAtHome = currentPlayer.location.g === currentPlayer.gridId;\n                const nonTentBoatItems = backpack.filter( (item) => item.type !== \"Tent\" && item.type !== \"Boat\" );\n                const isAddAllDisabled = isAtHome ? (backpack.length === 0 || nonTentBoatItems.length === 0) : \n                                        (backpack.length === 0 || nonTentBoatItems.length === 0);\n                return (\n                    <div className=\"inventory-modal\">\n                        <button className=\"close-button\" onClick={() => setShowBackpackModal(false)}>✖</button>\n                        <h2>{isAtHome ? strings[187] : strings[193]}</h2>\n\n                        <div className=\"inventory-modal-scroll\">\n                        <table>\n                            <thead>\n                                <tr>\n                                    <th>{strings[191]}</th>\n                                    <th>{strings[185]}</th>\n                                    <th>{strings[186]}</th>\n                                    <th>{strings[192]}</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {backpack.map((item) => {\n                                    const isTentAtHome = isAtHome && item.type === \"Tent\";\n                                    const isBoatAtHome = isAtHome && item.type === \"Boat\";\n                                    const isTentOrBoatNotHome = !isAtHome && (item.type === \"Tent\" || item.type === \"Boat\");\n\n                                    return (\n                                        <tr key={item.type}>\n                                            <td>{masterResources.find(r => r.type === item.type)?.symbol || ''} {getLocalizedString(item.type, strings)}</td>\n                                            <td>{item.quantity.toLocaleString()}</td>\n                                            <td>\n                                                <div className=\"amount-input\">\n                                                    <button\n                                                        onClick={() =>\n                                                            handleAmountChange(backpackAmounts, setBackpackAmounts, item.type, (backpackAmounts[item.type] || 0) - 1, item.quantity)\n                                                        }\n                                                        disabled={(backpackAmounts[item.type] || 0) <= 0}\n                                                    >\n                                                        -\n                                                    </button>\n                                                    <input\n                                                        type=\"number\"\n                                                        value={backpackAmounts[item.type] || 0}\n                                                        onChange={(e) =>\n                                                            handleAmountChange(backpackAmounts, setBackpackAmounts, item.type, parseInt(e.target.value, 10) || 0, item.quantity)\n                                                        }\n                                                    />\n                                                    <button\n                                                        onClick={() =>\n                                                            handleAmountChange(backpackAmounts, setBackpackAmounts, item.type, (backpackAmounts[item.type] || 0) + 1, item.quantity)\n                                                        }\n                                                        disabled={(backpackAmounts[item.type] || 0) >= item.quantity}\n                                                    >\n                                                        +\n                                                    </button>\n                                                    <button\n                                                        onClick={() =>\n                                                            handleAmountChange(backpackAmounts, setBackpackAmounts, item.type, item.quantity, item.quantity)\n                                                        }\n                                                        style={{ marginLeft: '4px' }}\n                                                    >\n                                                        {strings[165]}\n                                                    </button>\n                                                </div>\n                                            </td>\n                                            <td>\n                                                <button\n                                                    className=\"add-button\"\n                                                    onClick={() => handleMoveItem(item)}\n                                                    disabled={isTentAtHome || isBoatAtHome || isTentOrBoatNotHome || !(backpackAmounts[item.type] > 0 && backpackAmounts[item.type] <= item.quantity)}\n                                                >\n                                                    {isAtHome ? strings[187] : strings[188]}\n                                                </button>\n                                            </td>\n                                        </tr>\n                                    );\n                                })}\n                            </tbody>\n                        </table>\n\n                        <button \n                            className=\"sell-button\" \n                            onClick={handleMoveAll} \n                            disabled={isAddAllDisabled}\n                        >\n                            {isAtHome ? strings[189] : strings[190]}\n                        </button>\n                        </div>\n                    </div>\n                );\n            })()}\n\n            {showWarehouseModal && (\n                <div className=\"inventory-modal\">\n                    <button className=\"close-button\" onClick={() => setShowWarehouseModal(false)}>✖</button>\n                    <h2>{strings[193]}</h2>\n\n                    <div className=\"inventory-modal-scroll\">\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>{strings[191]}</th>\n                                <th>{strings[185]}</th>\n                                <th>{strings[186]}</th>\n                                <th>{strings[192]}</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {inventory.filter(item => item.type !== 'Money' && item.type !== 'Gem').map((item) => (\n                                <tr key={item.type}>\n                                    <td>{masterResources.find(r => r.type === item.type)?.symbol || ''} {getLocalizedString(item.type, strings)}</td>\n                                    <td>{item.quantity.toLocaleString()}</td>\n                                    <td>\n                                        <div className=\"amount-input\">\n                                            <button\n                                                onClick={() =>\n                                                    handleAmountChange(warehouseAmounts, setWarehouseAmounts, item.type, (warehouseAmounts[item.type] || 0) - 1, item.quantity)\n                                                }\n                                                disabled={(warehouseAmounts[item.type] || 0) <= 0}\n                                            >\n                                                -\n                                            </button>\n                                            <input\n                                                type=\"number\"\n                                                value={warehouseAmounts[item.type] || 0}\n                                                onChange={(e) =>\n                                                    handleAmountChange(warehouseAmounts, setWarehouseAmounts, item.type, parseInt(e.target.value, 10) || 0, item.quantity)\n                                                }\n                                            />\n                                            <button\n                                                onClick={() =>\n                                                    handleAmountChange(warehouseAmounts, setWarehouseAmounts, item.type, (warehouseAmounts[item.type] || 0) + 1, item.quantity)\n                                                }\n                                                disabled={(warehouseAmounts[item.type] || 0) >= item.quantity}\n                                            >\n                                                +\n                                            </button>\n                                            <button\n                                                onClick={() =>\n                                                    handleAmountChange(warehouseAmounts, setWarehouseAmounts, item.type, item.quantity, item.quantity)\n                                                }\n                                                style={{ marginLeft: '4px' }}\n                                            >\n                                                {strings[165]}\n                                            </button>\n                                        </div>\n                                    </td>\n                                    <td>\n                                        <button\n                                            className=\"add-button\"\n                                            onClick={() => handleDiscardWarehouseItem(item)}\n                                            disabled={!(warehouseAmounts[item.type] > 0 && warehouseAmounts[item.type] <= item.quantity)}\n                                        >\n                                            {strings[188]}\n                                        </button>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n\n                    <button \n                        className=\"sell-button\" \n                        onClick={() => {\n                            setModalContent({\n                                title: \"Are you sure?\",\n                                message: \"This will permanently discard ALL items in your warehouse!\",\n                                message2: \"This action cannot be undone.\",\n                                custom: (\n                                    <div className=\"shared-buttons\" style={{ marginTop: '20px' }}>\n                                        <button \n                                            className=\"btn-modal btn-danger\" \n                                            onClick={() => {\n                                                handleDiscardAllWarehouse();\n                                                setIsModalOpen(false);\n                                            }}\n                                        >\n                                            Yes, Discard All\n                                        </button>\n                                        <button \n                                            className=\"btn-modal btn-success\" \n                                            onClick={() => setIsModalOpen(false)}\n                                            style={{ marginLeft: '10px' }}\n                                        >\n                                            Cancel\n                                        </button>\n                                    </div>\n                                )\n                            });\n                            setIsModalOpen(true);\n                        }}\n                    >\n                        {strings[190]}\n                    </button>\n                    </div>\n                </div>\n            )}\n        </Panel>\n    );\n}\n\nexport default InventoryPanel;","import React from 'react';\nimport { getLocalizedString } from '../Utils/stringLookup';\nimport { calculateGemSpeedupCost } from '../Utils/ResourceHelpers';\nimport './GemPurchaseCalculation.css';\n\n// Pure function that doesn't use hooks\nexport const calculateGemPurchase = ({ \n    resource, \n    inventory, \n    backpack, \n    masterResources,\n    currentPlayer,\n    strings,\n    overrideGemCost = null\n}) => {\n    // Ensure arrays are defined\n    const safeInventory = inventory || [];\n    const safeBackpack = backpack || [];\n    const safeMasterResources = masterResources || [];\n    \n    // Calculate total gems from inventory and backpack\n    const inventoryGems = safeInventory.find(item => item.type === 'Gem')?.quantity || 0;\n    const backpackGems = safeBackpack.find(item => item.type === 'Gem')?.quantity || 0;\n    const playerGems = inventoryGems + backpackGems;\n    const ownedSkills = currentPlayer?.skills || [];\n    \n    // Calculate gem cost and spending\n    let totalValueCalc = 0;\n    let totalHasCalc = 0;\n    const spendingItems = [];\n    \n    // Calculate for ingredient requirements\n    for (let i = 1; i <= 10; i++) {\n        const ingredientType = resource[`ingredient${i}`];\n        const ingredientQty = resource[`ingredient${i}qty`];\n        \n        if (ingredientType && ingredientQty) {\n            const resourceData = safeMasterResources.find(r => r.type === ingredientType);\n            const moneyValue = resourceData?.moneyvalue || 0;\n            \n            // Add to total value needed\n            totalValueCalc += moneyValue * ingredientQty;\n            \n            // Calculate what player has\n            const inventoryQty = safeInventory.find(inv => inv.type === ingredientType)?.quantity || 0;\n            const backpackQty = safeBackpack.find(item => item.type === ingredientType)?.quantity || 0;\n            const playerQty = inventoryQty + backpackQty;\n            const willSpend = Math.min(playerQty, ingredientQty);\n            \n            // Add to total value player has (capped at required qty)\n            totalHasCalc += moneyValue * Math.min(playerQty, ingredientQty);\n            \n            // Track what will be spent\n            if (willSpend > 0) {\n                spendingItems.push({\n                    symbol: resourceData?.symbol || '',\n                    name: getLocalizedString(ingredientType, strings),\n                    amount: willSpend\n                });\n            }\n        }\n    }\n    \n    // Calculate for skill requirement\n    if (resource.requires) {\n        const requiredSkill = safeMasterResources.find(r => r.type === resource.requires);\n        const skillMoneyValue = requiredSkill?.moneyvalue || 0;\n        \n        totalValueCalc += skillMoneyValue;\n        \n        // Check if player has the required skill\n        const hasSkill = ownedSkills.some(skill => skill.type === resource.requires);\n        if (hasSkill) {\n            totalHasCalc += skillMoneyValue;\n            spendingItems.push({\n                symbol: requiredSkill?.symbol || '',\n                name: getLocalizedString(resource.requires, strings),\n                amount: '✓',\n                isSkill: true\n            });\n        }\n    }\n    \n    // Calculate gem cost based on context\n    let gemCost;\n    \n    // If an override gem cost is provided (like for speedups), use it directly\n    if (overrideGemCost !== null && overrideGemCost !== undefined) {\n        gemCost = overrideGemCost;\n    } else if (resource.crafttime && resource.source !== 'Buy' && resource.source !== 'Build' && resource.source !== 'BuildTown' && resource.source !== 'BuildValley') {\n        // For crafting items: base cost is time + missing ingredient costs\n        const craftTimeMs = resource.crafttime * 60 * 1000; // Convert minutes to milliseconds\n        const timeCost = calculateGemSpeedupCost(craftTimeMs);\n        \n        // Calculate missing ingredient costs\n        let missingIngredientCost = 0;\n        for (let i = 1; i <= 10; i++) {\n            const ingredientType = resource[`ingredient${i}`];\n            const ingredientQty = resource[`ingredient${i}qty`];\n            \n            if (ingredientType && ingredientQty) {\n                const inventoryQty = safeInventory.find(inv => inv.type === ingredientType)?.quantity || 0;\n                const backpackQty = safeBackpack.find(item => item.type === ingredientType)?.quantity || 0;\n                const playerQty = inventoryQty + backpackQty;\n                const missingQty = Math.max(0, ingredientQty - playerQty);\n                \n                if (missingQty > 0) {\n                    const resourceData = safeMasterResources.find(r => r.type === ingredientType);\n                    const ingredientGemCost = resourceData?.gemcost || 1;\n                    missingIngredientCost += ingredientGemCost * missingQty;\n                }\n            }\n        }\n        \n        // Check missing skill cost\n        if (resource.requires) {\n            const hasSkill = ownedSkills.some(skill => skill.type === resource.requires);\n            if (!hasSkill) {\n                const requiredSkill = safeMasterResources.find(r => r.type === resource.requires);\n                const skillGemCost = requiredSkill?.gemcost || 1;\n                missingIngredientCost += skillGemCost;\n            }\n        }\n        \n        gemCost = Math.ceil(timeCost + missingIngredientCost);\n    } else {\n        // For non-crafting items: calculate cost based on missing ingredients\n        let missingIngredientCost = 0;\n        \n        for (let i = 1; i <= 10; i++) {\n            const ingredientType = resource[`ingredient${i}`];\n            const ingredientQty = resource[`ingredient${i}qty`];\n            \n            if (ingredientType && ingredientQty) {\n                const inventoryQty = safeInventory.find(inv => inv.type === ingredientType)?.quantity || 0;\n                const backpackQty = safeBackpack.find(item => item.type === ingredientType)?.quantity || 0;\n                const playerQty = inventoryQty + backpackQty;\n                const missingQty = Math.max(0, ingredientQty - playerQty);\n                \n                if (missingQty > 0) {\n                    const resourceData = safeMasterResources.find(r => r.type === ingredientType);\n                    const ingredientGemCost = resourceData?.gemcost || 1;\n                    const calculatedCost = ingredientGemCost * missingQty;\n                    \n                    // Debug logging for Money calculations\n                    if (ingredientType === 'Money') {\n                        console.log(`[GEM DEBUG] Money calculation: missing ${missingQty}, gemcost ${ingredientGemCost}, calculated ${calculatedCost}`);\n                    }\n                    \n                    missingIngredientCost += Math.ceil(calculatedCost);\n                }\n            }\n        }\n        \n        // Check missing skill cost\n        if (resource.requires) {\n            const hasSkill = ownedSkills.some(skill => skill.type === resource.requires);\n            if (!hasSkill) {\n                const requiredSkill = safeMasterResources.find(r => r.type === resource.requires);\n                const skillGemCost = requiredSkill?.gemcost || 1;\n                missingIngredientCost += skillGemCost;\n            }\n        }\n        \n        // Use missing ingredient cost, with minimum of 1 gem if there are missing ingredients\n        gemCost = missingIngredientCost > 0 ? Math.max(1, Math.ceil(missingIngredientCost)) : 0;\n    }\n    \n    // Final safety check: ensure gemCost is always an integer\n    gemCost = Math.ceil(gemCost);\n    \n    // Create a modified recipe for purchase\n    const getModifiedRecipe = () => {\n        const modifiedRecipe = { ...resource };\n        \n        // Adjust ingredient quantities to what player actually has\n        for (let i = 1; i <= 10; i++) {\n            const ingredientType = resource[`ingredient${i}`];\n            const ingredientQty = resource[`ingredient${i}qty`];\n            \n            if (ingredientType && ingredientQty) {\n                const inventoryQty = safeInventory.find(inv => inv.type === ingredientType)?.quantity || 0;\n                const backpackQty = safeBackpack.find(item => item.type === ingredientType)?.quantity || 0;\n                const playerQty = inventoryQty + backpackQty;\n                \n                // Set to what player can actually spend\n                modifiedRecipe[`ingredient${i}qty`] = Math.min(playerQty, ingredientQty);\n            }\n        }\n        \n        // Add gems as the next available ingredient slot\n        // Find the first empty slot after existing ingredients\n        let gemSlot = 1;\n        for (let i = 1; i <= 10; i++) {\n            if (!resource[`ingredient${i}`]) {\n                gemSlot = i;\n                break;\n            }\n        }\n        \n        modifiedRecipe[`ingredient${gemSlot}`] = 'Gem';\n        modifiedRecipe[`ingredient${gemSlot}qty`] = gemCost;\n        \n        return modifiedRecipe;\n    };\n    \n    const hasEnoughGems = playerGems >= gemCost;\n    \n    return {\n        render: () => (\n            <div className=\"gem-purchase-tooltip\">                \n                <div className=\"spending-summary\">\n                    <div className=\"spending-label\">Will use:</div>\n                    {spendingItems.map((item, index) => (\n                        <div key={index} className=\"spending-line\">\n                            {item.symbol} {item.amount} {item.isSkill ? '(Skill)' : ''}\n                        </div>\n                    ))}\n                    <div className=\"spending-line gem-line\">\n                        💎 {gemCost}  (You have: 💎 {playerGems})\n                    </div>\n                </div>\n                \n                \n                {!hasEnoughGems && (\n                    <div className=\"tooltip-footer\">\n                        Click for more 💎\n                    </div>\n                )}\n            </div>\n        ),\n        getModifiedRecipe,\n        hasEnoughGems,\n        gemCost\n    };\n};\n\nexport default calculateGemPurchase;","import React, { useState, useRef, useEffect, useMemo } from 'react';\nimport ReactDOM from 'react-dom';\nimport { calculateGemPurchase } from './GemPurchaseCalculation';\nimport { useStrings } from './StringsContext';\nimport { usePanelContext } from './PanelContext';\nimport './ResourceButton.css';\n \nconst ResourceButton = ({ \n  symbol, \n  name, \n  details, \n  info, \n  disabled, \n  className,\n  style, \n  onClick, \n  hideInfo = false, \n  children,\n  // Transaction support props\n  transactionKey,\n  onTransactionAction,\n  isTransactionMode = false,\n  // Gem button props\n  gemCost = null,\n  onGemPurchase = null,\n  hideGem = false,\n  // For gem calculation\n  resource = null,\n  inventory = null,\n  backpack = null,\n  masterResources = null,\n  currentPlayer = null\n}) => { \n  const strings = useStrings();\n  const { openPanel } = usePanelContext();\n  const [showInfo, setShowInfo] = useState(false);\n  const [tooltipPosition, setTooltipPosition] = useState({ top: 0, left: 0 });\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [transactionId] = useState(() => `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`);\n  const [showGemTooltip, setShowGemTooltip] = useState(false);\n  const [gemTooltipPosition, setGemTooltipPosition] = useState({ top: 0, left: 0 });\n  const buttonRef = useRef(null);\n  \n  // Only create gem calculation when we have gem functionality enabled\n  const shouldCalculateGem = !!(resource && inventory && backpack && masterResources && currentPlayer && onGemPurchase && (gemCost || resource?.gemcost));\n  \n  const gemCalculation = useMemo(() => {\n    if (!shouldCalculateGem) {\n      return null;\n    }\n    \n    try {\n      return calculateGemPurchase({\n        resource,\n        inventory,\n        backpack,\n        masterResources,\n        currentPlayer,\n        strings,\n        overrideGemCost: gemCost // Pass the explicit gem cost if provided\n      });\n    } catch (error) {\n      console.error('Error creating gem calculation:', error);\n      return null;\n    }\n  }, [shouldCalculateGem, resource, inventory, backpack, masterResources, currentPlayer, strings]);\n\n  // Debug processing state changes\n  useEffect(() => {\n    if (isTransactionMode && transactionKey) {\n      console.log(`📱 [RESOURCE_BUTTON] Processing state changed: ${isProcessing} for ${transactionKey}`);\n    }\n  }, [isProcessing, transactionKey, isTransactionMode]);\n\n  const updateTooltipPosition = (event) => {\n    setTooltipPosition({\n      top: event.clientY + window.scrollY + 10, // ✅ Adjust Y position (below cursor)\n      left: event.clientX + window.scrollX + 15, // ✅ Adjust X position (to the right of cursor)\n    });\n  };\n\n  const updateGemTooltipPosition = (event) => {\n    setGemTooltipPosition({\n      top: event.clientY + window.scrollY + 10,\n      left: event.clientX + window.scrollX + 15,\n    });\n  };\n\n  const handleClick = async (e) => {\n    if (disabled || isProcessing) return;\n\n    if (isTransactionMode && onTransactionAction && transactionKey) {\n      // Transaction mode - prevent multiple clicks\n      e.preventDefault();\n      e.stopPropagation();\n      \n      console.log(`🔒 [RESOURCE_BUTTON] Setting processing state for ${transactionKey}`);\n      setIsProcessing(true);\n      try {\n        await onTransactionAction(transactionId, transactionKey);\n        console.log(`✅ [RESOURCE_BUTTON] Transaction completed for ${transactionKey}`);\n      } catch (error) {\n        console.error('Transaction failed:', error);\n      } finally {\n        console.log(`🔓 [RESOURCE_BUTTON] Clearing processing state for ${transactionKey}`);\n        setIsProcessing(false);\n      }\n    } else if (onClick) {\n      // Normal mode\n      onClick(e);\n    }\n  };\n\n  const handleGemClick = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (onGemPurchase && gemCalculation) {\n      if (gemCalculation.hasEnoughGems) {\n        // Has enough gems - execute the purchase\n        const modifiedRecipe = gemCalculation.getModifiedRecipe();\n        onGemPurchase(modifiedRecipe);\n      } else {\n        // Not enough gems - open the HowToGemsPanel\n        openPanel('HowToGemsPanel');\n      }\n    }\n  };\n\n  return (\n    <>\n      <div\n        className=\"resource-button-wrapper\"\n      >\n        <button\n          ref={buttonRef}\n          className={`resource-button ${disabled || isProcessing ? 'disabled' : ''} ${className || ''} ${isProcessing ? 'processing' : ''}`}\n          onClick={handleClick}\n          disabled={disabled || isProcessing}\n          style={{\n            opacity: (disabled || isProcessing) ? 0.6 : 1,\n            cursor: (disabled || isProcessing) ? 'not-allowed' : 'pointer',\n            ...style\n          }}\n        >\n\n          {/* ✅ Ensure default content is displayed */}\n          <span className=\"resource-title\">\n            {isProcessing ? '⏳' : symbol} {isProcessing ? 'Processing...' : name}\n          </span>\n          <span className=\"resource-details\" dangerouslySetInnerHTML={{ \n            __html: isProcessing ? 'Processing...' : details \n          }} />\n\n\n          {/* ✅ Render children properly (fixes missing text issue) */}\n          {children}\n          \n          {/* ✅ Hide \"ℹ️\" info button when `hideInfo` is true */}\n          {!hideInfo && info && (\n            <span\n              className=\"info-button\"\n              onMouseEnter={(event) => {\n                setShowInfo(true);\n                updateTooltipPosition(event);\n              }}\n              onMouseMove={updateTooltipPosition} // ✅ Dynamically reposition on cursor move\n              onMouseLeave={() => setShowInfo(false)}\n            >\n              ℹ️\n            </span>\n            )}\n\n        </button>\n\n        {/* ✅ Gem button for gem purchases - moved outside button so it's always clickable */}\n        {!hideGem && shouldCalculateGem && gemCalculation && !isProcessing && (\n          <span\n            className=\"gem-button\"\n            onClick={handleGemClick}\n            onMouseEnter={(event) => {\n              setShowGemTooltip(true);\n              updateGemTooltipPosition(event);\n            }}\n            onMouseMove={updateGemTooltipPosition}\n            onMouseLeave={() => setShowGemTooltip(false)}\n          >\n            💎\n          </span>\n        )}\n      </div>\n\n      {/* ✅ Render info toaster inside `document.body` for proper layering */}\n      {showInfo && info && ReactDOM.createPortal(\n        <div\n          className=\"info-toaster\"\n          style={{\n            top: tooltipPosition.top,\n            left: tooltipPosition.left,\n            position: 'absolute', // ✅ Prevents clipping\n          }}\n        >\n          {typeof info === 'string' ? (\n            <p dangerouslySetInnerHTML={{ __html: info }} />\n          ) : (\n            <>{info}</> // ✅ Supports JSX rendering\n          )}\n        </div>,\n        document.body\n      )}\n\n      {/* ✅ Render gem tooltip inside `document.body` for proper layering */}\n      {showGemTooltip && gemCalculation && ReactDOM.createPortal(\n        <div\n          style={{\n            top: gemTooltipPosition.top,\n            left: gemTooltipPosition.left,\n            position: 'absolute',\n            zIndex: 99999,\n          }}\n        >\n          {gemCalculation.render()}\n        </div>,\n        document.body\n      )}\n    </>\n  );\n};\n\nexport default ResourceButton;","import API_BASE from '../../config';\nimport React, { useState, useEffect, useContext } from 'react';\nimport Panel from '../../UI/Panel';\nimport axios from 'axios';\nimport ResourceButton from '../../UI/ResourceButton';\nimport { useStrings } from '../../UI/StringsContext';\nimport { getLocalizedString } from '../../Utils/stringLookup';\nimport { canAfford, isCurrency } from '../../Utils/InventoryManagement';\nimport { spendIngredients, gainIngredients } from '../../Utils/InventoryManagement';\nimport { StatusBarContext } from '../../UI/StatusBar/StatusBar';\nimport { deriveWarehouseAndBackpackCapacity } from '../../Utils/InventoryManagement';\nimport './WarehousePanel.css';\n\nconst WarehousePanel = ({\n  onClose,\n  inventory,\n  setInventory,\n  currentPlayer,\n  setCurrentPlayer,\n  masterResources,\n  globalTuning,\n  masterWarehouse,\n  updateStatus,\n}) => {\n  const strings = useStrings();\n  const [currentLevel, setCurrentLevel] = useState(0);\n  const [nextLevel, setNextLevel] = useState(null);\n  const [needsLevelMigration, setNeedsLevelMigration] = useState(false);\n\n  // Calculate current warehouse level and handle backward compatibility\n  useEffect(() => {\n    if (!masterWarehouse || masterWarehouse.length === 0) return;\n    \n    // Use the stored level if available\n    if (currentPlayer?.warehouseLevel !== undefined) {\n      setCurrentLevel(currentPlayer.warehouseLevel);\n      setNeedsLevelMigration(false);\n    } else {\n      // For backward compatibility, start at level 0\n      setCurrentLevel(0);\n      setNeedsLevelMigration(true);\n      \n      // Auto-migrate the level to the player document\n      if (currentPlayer?.playerId) {\n        migrateLevelToPlayer(0);\n      }\n    }\n    \n    // Get next level data\n    const level = currentPlayer?.warehouseLevel ?? currentLevel;\n    if (level < masterWarehouse.length - 1) {\n      setNextLevel(masterWarehouse[level + 1]);\n    } else {\n      setNextLevel(null);\n    }\n  }, [currentPlayer?.warehouseCapacity, currentPlayer?.warehouseLevel, masterWarehouse]);\n\n  // Function to migrate level to player document\n  const migrateLevelToPlayer = async (level) => {\n    try {\n      const response = await axios.post(`${API_BASE}/api/update-profile`, {\n        playerId: currentPlayer.playerId,\n        updates: {\n          warehouseLevel: level\n        }\n      });\n\n      if (response.data.success) {\n        // Update local state\n        setCurrentPlayer({\n          ...currentPlayer,\n          warehouseLevel: level\n        });\n        setNeedsLevelMigration(false);\n        console.log('Successfully migrated warehouse level to player document');\n      }\n    } catch (error) {\n      console.error('Error migrating warehouse level:', error);\n    }\n  };\n\n  const handleGemPurchase = async (modifiedRecipe) => {\n    // This is called by the gem button with a recipe modified to include gems\n    return handleUpgrade(modifiedRecipe);\n  };\n\n  const handleUpgrade = async (customRecipe = null) => {\n    if (!nextLevel) return;\n\n    const recipeToUse = customRecipe || nextLevel;\n\n    // Build ingredients array\n    const ingredients = [];\n    \n    // Add all 5 potential ingredients (including gems if present)\n    for (let i = 1; i <= 5; i++) {\n      const ingredientType = recipeToUse[`ingredient${i}`];\n      const ingredientQty = recipeToUse[`ingredient${i}qty`];\n      \n      if (ingredientType && ingredientQty) {\n        ingredients.push({\n          type: ingredientType,\n          quantity: ingredientQty\n        });\n      }\n    }\n    \n    console.log('Warehouse upgrade - Recipe to use:', recipeToUse);\n    console.log('Warehouse upgrade - Ingredients array:', ingredients);\n\n    // Check if player can afford (now handled by spendIngredients)\n    if (!customRecipe && !canAfford(nextLevel, inventory, null, 1)) {\n      updateStatus(16); // Cannot afford message\n      return;\n    }\n\n    try {\n      // Spend ingredients using the proper async function\n      const spendSuccess = await spendIngredients({\n        playerId: currentPlayer.playerId,\n        recipe: recipeToUse,\n        inventory,\n        backpack: [],\n        setInventory,\n        setBackpack: () => {}, // Not using backpack for warehouse upgrades\n        setCurrentPlayer,\n        updateStatus,\n      });\n\n      if (!spendSuccess) {\n        console.warn('Failed to spend ingredients.');\n        return;\n      }\n      \n      // Calculate new capacity and level\n      const newCapacity = (currentPlayer.warehouseCapacity || 1000) + nextLevel.add;\n      const newLevel = nextLevel.Level;\n      \n      // Update player's warehouse capacity AND level\n      const response = await axios.post(`${API_BASE}/api/update-profile`, {\n        playerId: currentPlayer.playerId,\n        updates: {\n          warehouseCapacity: newCapacity,\n          warehouseLevel: newLevel\n        }\n      });\n\n      if (response.data.success) {\n        // Update local state\n        setCurrentPlayer({\n          ...currentPlayer,\n          warehouseCapacity: newCapacity,\n          warehouseLevel: newLevel\n        });\n\n        updateStatus(`${strings[197] || \"Warehouse upgraded\"}`);\n      }\n    } catch (error) {\n      console.error('Error upgrading warehouse:', error);\n      updateStatus('Failed to upgrade warehouse');\n    }\n  };\n\n  // Get current capacity info\n  const finalCapacities = deriveWarehouseAndBackpackCapacity(currentPlayer, masterResources, globalTuning);\n  \n  // Get Gold bonus from globalTuning prop\n  const warehouseGoldBonus = globalTuning?.warehouseCapacityGold || 100000;\n  \n  // Calculate total quantity in warehouse (excluding currencies)\n  const calculateTotalQuantity = (inventory) => {\n    if (!inventory || !Array.isArray(inventory)) return 0;\n    return inventory\n      .filter((item) => item && !isCurrency(item.type))\n      .reduce((total, item) => total + (item.quantity || 0), 0);\n  };\n  \n  const currentUsage = calculateTotalQuantity(inventory);\n\n  return (\n    <Panel \n      onClose={onClose} \n      titleKey=\"181\" // \"Warehouse\"\n      panelName=\"WarehousePanel\"\n    >\n      <div className=\"standard-panel\">\n        <div className=\"warehouse-capacity-display\">\n          <h3>\n            {strings[183]} {currentUsage}/\n            <span style={currentPlayer?.accountStatus === \"Gold\" ? {color: \"#B8860B\"} : {}}>\n              {finalCapacities.warehouse}\n            </span>\n          </h3>\n          {currentPlayer?.accountStatus === \"Gold\" && (\n            <p style={{fontSize: \"14px\", color: \"#666\", margin: \"5px 0\"}}>\n              (+{warehouseGoldBonus.toLocaleString()} {strings[89] || \"additional capacity for Gold Pass\"})\n            </p>\n          )}\n        </div>\n\n        {nextLevel ? (\n          <>\n            <p className=\"upgrade-info\">\n              {strings[196] || \"Add\"} {nextLevel.add} {strings[198] || \"to warehouse capacity\"}\n            </p>\n\n            <div className=\"skills-options\">\n              <ResourceButton\n                symbol=\"📦\"\n                name={strings[2024] || \"Upgrade Warehouse\"}\n                details={(() => {\n                  // Build details string similar to CraftingStation\n                  const ingredients = [];\n                  for (let i = 1; i <= 5; i++) {\n                    const type = nextLevel[`ingredient${i}`];\n                    const qty = nextLevel[`ingredient${i}qty`];\n                    if (!type || !qty) continue;\n                    \n                    const inventoryQty = inventory?.find(inv => inv.type === type)?.quantity || 0;\n                    const playerQty = inventoryQty;\n                    const color = playerQty >= qty ? 'green' : 'red';\n                    const symbol = masterResources.find(r => r.type === type)?.symbol || '';\n                    ingredients.push(`<span style=\"color: ${color}; display: block;\">${symbol} ${getLocalizedString(type, strings)} ${qty} / ${playerQty}</span>`);\n                  }\n                  return `${strings[461] || \"Requires:\"}<div>${ingredients.join('')}</div>`;\n                })()}\n                info={`+${nextLevel.add} ${strings[2021] || \"capacity\"}`}\n                disabled={!canAfford(nextLevel, inventory, null, 1)}\n                onClick={() => handleUpgrade()}\n                // Don't pass gemCost prop - instead ensure resource has gemcost property\n                onGemPurchase={!canAfford(nextLevel, inventory, null, 1) ? handleGemPurchase : null}\n                resource={{...nextLevel, gemcost: 1}} // Add gemcost property to enable gem button\n                inventory={inventory}\n                backpack={[]}\n                masterResources={masterResources}\n                currentPlayer={currentPlayer}\n              />\n            </div>\n          </>\n        ) : (\n          <div className=\"max-level\">\n            <p>{strings[88] || \"Your warehouse is at maximum capacity.\"}</p>\n          </div>\n        )}\n      </div>\n    </Panel>\n  );\n};\n\nexport default WarehousePanel;","import API_BASE from '../../config';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Panel from '../../UI/Panel';\nimport '../../UI/Panel.css';\nimport './TrophyPanel.css'; \nimport { useStrings } from '../../UI/StringsContext';\nimport { getLocalizedString } from '../../Utils/stringLookup';\nimport { gainIngredients } from '../../Utils/InventoryManagement';\nimport FloatingTextManager from '../../UI/FloatingText';\n\n\nfunction TrophyPanel({ onClose, masterResources, masterTrophies, currentPlayer, setCurrentPlayer, updateStatus, openPanel, setActiveStation, inventory, setInventory, backpack, setBackpack }) {\n\n    const strings = useStrings();\n    const [trophies, setTrophies] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [collecting, setCollecting] = useState(null); // Track which trophy is being collected\n    \n    useEffect(() => {\n        // Fetch trophies when panel opens\n        const fetchTrophies = async () => {\n            try {\n                setLoading(true);\n                const response = await axios.get(`${API_BASE}/api/player/${currentPlayer.playerId}/trophies`);\n                if (response.data.success) {\n                    setTrophies(response.data.trophies || []);\n                }\n            } catch (error) {\n                console.error('Error fetching trophies:', error);\n                updateStatus('Failed to load trophies');\n            } finally {\n                setLoading(false);\n            }\n        };\n        \n        if (currentPlayer?.playerId) {\n            fetchTrophies();\n        }\n    }, [currentPlayer?.playerId]);\n    \n    // Handle collecting trophy reward\n    const handleCollectReward = async (trophyName) => {\n        try {\n            setCollecting(trophyName);\n            \n            const response = await axios.post(`${API_BASE}/api/collect-trophy-reward`, {\n                playerId: currentPlayer.playerId,\n                trophyName: trophyName\n            });\n            \n            if (response.data.success) {\n                const { gemReward, inventory } = response.data;\n                \n                // Update inventory from server response\n                if (inventory) {\n                    setInventory(inventory);\n                    setCurrentPlayer(prev => ({ ...prev, inventory }));\n                }\n                \n                // Update local trophy state to mark as collected\n                setTrophies(prevTrophies => \n                    prevTrophies.map(t => \n                        t.name === trophyName ? { ...t, collected: true } : t\n                    )\n                );\n                \n                FloatingTextManager.addFloatingText(`+${gemReward} 💎`, window.innerWidth / 2, window.innerHeight / 2, 64);\n                updateStatus(`💎 Earned ${gemReward} Gem${gemReward > 1 ? 's' : ''} from your trophy`);\n            } else {\n                updateStatus(response.data.message || 'Failed to collect reward');\n            }\n        } catch (error) {\n            console.error('Error collecting trophy reward:', error);\n            updateStatus('Failed to collect trophy reward');\n        } finally {\n            setCollecting(null);\n        }\n    };\n\n    // Helper function to get progress info\n    const getProgressInfo = (trophyDef, playerTrophy) => {\n        if (!trophyDef.progress || trophyDef.progress.length === 0) return null;\n        \n        const currentProgress = playerTrophy?.progress || 0;\n        const progressArray = trophyDef.progress;\n        \n        // Find last achieved milestone and next milestone\n        let lastAchievedMilestone = null;\n        let lastMilestone = 0; // For progress bar calculation\n        let nextMilestone = progressArray[0];\n        \n        for (let i = 0; i < progressArray.length; i++) {\n            if (currentProgress >= progressArray[i]) {\n                // This milestone has been achieved\n                lastAchievedMilestone = progressArray[i];\n                lastMilestone = progressArray[i];\n                // Look for next milestone\n                if (i + 1 < progressArray.length) {\n                    nextMilestone = progressArray[i + 1];\n                } else {\n                    // Max milestone reached\n                    nextMilestone = progressArray[i];\n                }\n            } else {\n                // Found the next milestone to achieve\n                nextMilestone = progressArray[i];\n                break;\n            }\n        }\n        \n        // For display, we show progress between current milestone boundaries\n        const progressBetweenMilestones = currentProgress - lastMilestone;\n        const milestoneDifference = nextMilestone - lastMilestone;\n        const percentage = milestoneDifference > 0 ? (progressBetweenMilestones / milestoneDifference) * 100 : 100;\n        \n        return {\n            current: currentProgress,\n            lastAchievedMilestone, // The actual milestone number to display on icon\n            lastMilestone, // For progress bar calculation\n            nextMilestone,\n            percentage: Math.min(100, Math.max(0, percentage)),\n            displayText: `${currentProgress} / ${nextMilestone}`,\n            hasAchievedAll: currentProgress >= progressArray[progressArray.length - 1]\n        };\n    };\n\n    return (\n        <Panel onClose={onClose} descriptionKey=\"1035\" titleKey=\"1135\" panelName=\"TrophyPanel\">\n            \n            <div className=\"trophy-container\">\n                {loading ? (\n                    <div className=\"loading\">Loading trophies...</div>\n                ) : (\n                    <div className=\"trophy-grid\">\n                        {masterTrophies?.filter(trophy => trophy.visible !== false).sort((a, b) => {\n                            // Sort trophies by status:\n                            // 1. Earned but not collected (highest priority)\n                            // 2. Earned and collected\n                            // 3. Not earned (lowest priority)\n                            \n                            const playerTrophyA = trophies.find(t => t.name === a.name);\n                            const playerTrophyB = trophies.find(t => t.name === b.name);\n                            \n                            const isEarnedA = !!playerTrophyA;\n                            const isEarnedB = !!playerTrophyB;\n                            \n                            const hasUncollectedRewardA = isEarnedA && playerTrophyA?.collected === false;\n                            const hasUncollectedRewardB = isEarnedB && playerTrophyB?.collected === false;\n                            \n                            // If both have uncollected rewards, maintain original order\n                            if (hasUncollectedRewardA && hasUncollectedRewardB) return 0;\n                            // If only A has uncollected reward, A comes first\n                            if (hasUncollectedRewardA && !hasUncollectedRewardB) return -1;\n                            // If only B has uncollected reward, B comes first\n                            if (!hasUncollectedRewardA && hasUncollectedRewardB) return 1;\n                            \n                            // Neither has uncollected rewards, check if earned\n                            // If both are earned and collected, maintain original order\n                            if (isEarnedA && isEarnedB) return 0;\n                            // If only A is earned, A comes first\n                            if (isEarnedA && !isEarnedB) return -1;\n                            // If only B is earned, B comes first\n                            if (!isEarnedA && isEarnedB) return 1;\n                            \n                            // Neither is earned, maintain original order\n                            return 0;\n                        }).map((trophyDef, index) => {\n                            // Find if player has earned this trophy\n                            const playerTrophy = trophies.find(t => t.name === trophyDef.name);\n                            const isEarned = !!playerTrophy;\n                            const progressInfo = trophyDef.type === 'Progress' ? getProgressInfo(trophyDef, playerTrophy) : null;\n                            const hasUncollectedReward = isEarned && playerTrophy?.collected === false;\n                            const isCollecting = collecting === trophyDef.name;\n                            \n                            return (\n                                <div \n                                    key={index} \n                                    className={`trophy-card ${!isEarned ? 'unearned' : ''} trophy-${(trophyDef.type || 'Event').toLowerCase()}`}\n                                    data-tooltip={trophyDef.tooltip || ''}\n                                >\n                                    <div className=\"trophy-icon-wrapper\">\n                                        <div className=\"trophy-icon\">🏆</div>\n                                        {isEarned && trophyDef.type === 'Progress' && progressInfo?.lastAchievedMilestone && (\n                                            <div className=\"progress-number\">{progressInfo.lastAchievedMilestone}</div>\n                                        )}\n                                    </div>\n                                    <div className=\"trophy-content\">\n                                        <div className=\"trophy-name\">\n                                            {getLocalizedString(trophyDef.name, strings)}\n                                        </div>\n                                        {trophyDef.type === 'Progress' && progressInfo && (\n                                            <div className=\"trophy-progress\">\n                                                <div className=\"progress-text\">\n                                                    {progressInfo.displayText}\n                                                </div>\n                                                <div className=\"progress-bar\">\n                                                    <div \n                                                        className=\"progress-fill\" \n                                                        style={{\n                                                            width: `${Math.min(100, Math.max(0, progressInfo.percentage))}%`\n                                                        }}\n                                                    />\n                                                </div>\n                                            </div>\n                                        )}\n                                        {trophyDef.type === 'Count' && isEarned && playerTrophy?.qty > 0 && (\n                                            <div className=\"trophy-count\">\n                                                <div className=\"count-text\">\n                                                    {playerTrophy.qty}x\n                                                </div>\n                                            </div>\n                                        )}\n                                    </div>\n                                    {hasUncollectedReward && (\n                                        <div \n                                            className=\"trophy-reward-gem\"\n                                            onClick={() => handleCollectReward(trophyDef.name)}\n                                            style={{\n                                                opacity: isCollecting ? 0.5 : 1,\n                                                cursor: isCollecting ? 'wait' : 'pointer'\n                                            }}\n                                        >\n                                            💎\n                                        </div>\n                                    )}\n                                </div>\n                            );\n                        })}\n                    </div>\n                )}\n            </div>\n  \n        </Panel>\n    );\n}\n\nexport default TrophyPanel;","import React, { memo } from 'react';\nimport Panel from './Panel'; // Importing the shared Panel component\nimport { useStrings } from './StringsContext';\n\nconst HowToPanel = memo(({ onClose }) => {\n  const strings = useStrings();\n  return (\n    <Panel onClose={onClose} descriptionKey=\"1018\" titleKey=\"1118\" panelName=\"HowToPanel\">\n      <div className=\"panel-content\">\n        <p>{strings[9000]}</p>\n        <h2>{strings[9001]}</h2>\n        <p>{strings[9002]}</p>\n        <p>{strings[9003]}</p>\n        <h3>{strings[9004]}</h3>\n        <p>{strings[9005]}</p>\n        <p>{strings[9006]}</p>\n        <p>{strings[9007]}</p>\n        <h3>{strings[9008]}</h3>\n        <p>{strings[9009]}</p>\n        <p>{strings[9010]}</p>\n        <p>{strings[9011]}</p>\n        <h3>{strings[9012]}</h3>\n        <p>{strings[9013]}</p>\n        <p>{strings[9014]}</p>\n      </div>\n    </Panel>\n  );\n});\n\nexport default HowToPanel;\n","import React, { memo } from 'react';\nimport Panel from './Panel'; // Importing the shared Panel component\nimport { useStrings } from './StringsContext';\n\nconst HowToMoneyPanel = memo(({ onClose }) => {\n\n  const strings = useStrings();\n  return (\n    <Panel onClose={onClose} descriptionKey=\"1026\" titleKey=\"1126\" panelName=\"HowToMoneyPanel\">\n      <div className=\"panel-content\">\n\n        <h2>{strings[9020]}</h2>\n        <p>{strings[9021]}</p>\n        <p>{strings[9022]}</p>\n        <p>{strings[9023]}</p>\n        <p>{strings[9024]}</p>\n        <h2>{strings[9025]}</h2>\n        <p>{strings[9026]}</p>\n        <p>{strings[9027]}</p>\n\n\n      </div>\n    </Panel>\n  );\n});\n\nexport default HowToMoneyPanel;\n","import React, { memo, useState, useEffect } from 'react';\nimport Panel from './Panel'; // Importing the shared Panel component\nimport { handlePurchase } from '../Store/Store';\nimport { useStrings } from './StringsContext';\nimport axios from 'axios';\nimport API_BASE from '../config';\nimport './SharedButtons.css';\n\nconst HowToGemsPanel = memo(({ currentPlayer, updateStatus, onClose }) => {\n\n  const strings = useStrings();\n  const [offers, setOffers] = useState({});\n\n  useEffect(() => {\n    const fetchOffers = async () => {\n      try {\n        const response = await axios.get(`${API_BASE}/api/store-offers`);\n        const offerData = response.data || [];\n        // Convert array to object keyed by id for easy lookup\n        const offerMap = {};\n        offerData.forEach(offer => {\n          offerMap[offer.id] = offer;\n        });\n        setOffers(offerMap);\n      } catch (error) {\n        console.error(\"❌ Failed to load store offers:\", error);\n      }\n    };\n    fetchOffers();\n  }, []);\n  return (\n    <Panel onClose={onClose} descriptionKey=\"1034\" titleKey=\"1134\" panelName=\"HowToGemsPanel\">\n      <div className=\"panel-content\">\n\n        <h2>{strings[9030]}</h2>\n        <p>{strings[9031]}</p>\n        <p>{strings[9032]}</p>\n\n        <div className=\"shared-buttons\" style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', width: '100%', gap: '10px' }}>\n        <p style={{ marginBottom: '0px', fontWeight: 'bold' }}>{strings[9040]}</p>\n            <button className=\"btn-basic btn-gold\" style={{ width: '100%' }} onClick={() => handlePurchase(6, currentPlayer, updateStatus)}>{strings[9041]}{offers[6] ? ` $${offers[6].price.toFixed(2)}` : ''}</button>\n        <p style={{ marginBottom: '0px', marginTop: '6px', fontWeight: 'bold' }}>{strings[9042]}</p>\n            <button className=\"btn-basic btn-gold\" style={{ width: '100%' }} onClick={() => handlePurchase(7, currentPlayer, updateStatus)}>{strings[9043]}{offers[7] ? ` $${offers[7].price.toFixed(2)}` : ''}</button>\n        <p style={{ marginBottom: '0px', marginTop: '6px', fontWeight: 'bold' }}>{strings[9044]}</p>\n            <button className=\"btn-basic btn-gold\" style={{ width: '100%' }} onClick={() => handlePurchase(8, currentPlayer, updateStatus)}>{strings[9045]}{offers[8] ? ` $${offers[8].price.toFixed(2)}` : ''}</button>\n        </div>\n\n        <p>{strings[9033]}</p>\n\n\n      </div>\n    </Panel>\n  );\n});\n\nexport default HowToGemsPanel;\n","import React from 'react';\nimport './ResourceButton.css';\nimport './QuestButton.css';\nimport { useStrings } from './StringsContext';\n\nconst QuestButton = ({ quest, state, onClick }) => {\n  const strings = useStrings();\n  const { symbol, title, completed, goals = [], reward, rewardqty } = quest;\n\n  return (\n    <div\n      className={`quest-item ${state}`}\n      onClick={onClick}\n    >\n      <div className=\"quest-header\">\n        <h2>{symbol}</h2>\n        {state === 'reward' && <span className=\"quest-checkmark\">✅</span>}\n      </div>\n      <h3>{title}</h3>\n      <h4>{completed ? strings[206] : strings[207]}</h4>\n      {goals.map((goal, index) =>\n        goal.action && goal.item && goal.qty ? (\n          <p key={index}>\n            {goal.action} {goal.item} x{goal.qty}: {goal.progress} of {goal.qty}\n          </p>\n        ) : null\n      )}\n      {reward && rewardqty && (\n        <p>Reward: {rewardqty} {reward}</p>\n      )}\n    </div>\n  );\n};\n\nconst QuestGiverButton = ({ quest, state, onClick }) => {\n  const strings = useStrings();\n  const { symbol, title, reward, rewardqty, goals = [] } = quest;\n  const buttonText = state === 'reward' ? strings[208] : strings[209];\n  return (\n    <div\n      className={`quest-item ${state}`}\n      onClick={onClick}\n    >\n      <div className=\"quest-header\">\n        <h2>{symbol}</h2>\n        {state === 'reward' && <span className=\"quest-checkmark\">✅</span>}\n      </div>\n      <h3>{title}</h3>\n      <div className=\"quest-goals\">\n        {goals.map((goal, index) =>\n          goal.action && goal.item && goal.qty ? (\n            <p key={index}>{goal.action} {goal.item} x{goal.qty}</p>\n          ) : null\n        )}\n      </div>\n      <p>Reward: {rewardqty} {reward}</p>\n      <button className=\"quest-giver-button\">{buttonText}</button>\n    </div>\n  );\n};\n\nexport { QuestButton, QuestGiverButton };","import API_BASE from '../../config';\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport Panel from '../../UI/Panel';\nimport { QuestButton } from '../../UI/QuestButton';\nimport '../../UI/ResourceButton.css';\nimport '../../UI/QuestButton.css';\nimport { useStrings } from '../../UI/StringsContext';\n\nfunction QuestPanel({ onClose, currentPlayer }) {\n  const strings = useStrings();\n  const [playerQuests, setPlayerQuests] = useState([]);\n  const [questTemplates, setQuestTemplates] = useState([]);\n\n  // Load active player quests\n  useEffect(() => {\n    if (currentPlayer?.activeQuests) {\n      setPlayerQuests(currentPlayer.activeQuests);\n    }\n  }, [currentPlayer]);\n\n  // Load all quest templates from tuning file\n  useEffect(() => {\n    const fetchQuestTemplates = async () => {\n      try {\n        const response = await axios.get(`${API_BASE}/api/quests`);\n        setQuestTemplates(response.data || []);\n      } catch (error) {\n        console.error('Error fetching quest templates:', error);\n      }\n    };\n    fetchQuestTemplates();\n  }, []);\n\n  return (\n    <Panel onClose={onClose} descriptionKey=\"1006\" titleKey=\"1106\" panelName=\"QuestPanel\">\n      {(!playerQuests || playerQuests.length === 0) ? (\n        <p>{strings[203]}</p>\n      ) : (\n        <div className=\"standard-panel\">\n          {playerQuests.map((quest, index) => {\n            const template = questTemplates.find(t => t.title === quest.questId);\n            const goals = [\n              {\n                action: quest.goal1action,\n                item: quest.goal1item,\n                qty: quest.goal1qty,\n                progress: quest.progress?.goal1 || 0,\n              },\n              {\n                action: quest.goal2action,\n                item: quest.goal2item,\n                qty: quest.goal2qty,\n                progress: quest.progress?.goal2 || 0,\n              },\n              {\n                action: quest.goal3action,\n                item: quest.goal3item,\n                qty: quest.goal3qty,\n                progress: quest.progress?.goal3 || 0,\n              },\n            ].filter(goal => goal.action && goal.item && goal.qty);\n\n            return (\n              <QuestButton\n                key={index}\n                className={`resource-button ${quest.completed ? 'reward' : 'in-progress'}`}\n                quest={{\n                  symbol: quest.symbol,\n                  title: quest.questId,\n                  completed: quest.completed,\n                  goals,\n                  textbody: template?.textbody || '',\n                  reward: template?.reward || '',\n                  rewardqty: template?.rewardqty || 1,\n                }}\n                state={quest.completed ? 'reward' : 'in-progress'}\n                onClick={null}\n              />\n            );\n          })}\n        </div>\n      )}\n    </Panel>\n  );\n}\n\nexport default QuestPanel;","import axios from 'axios';\nimport API_BASE from '../../config';\nimport RelationshipMatrix from './RelationshipMatrix.json';\n\n/**\n * Central utility for managing relationship changes\n * Creates a new relationship if it doesn't exist, or updates existing one\n */\nexport const updateRelationship = async (currentPlayer, targetName, delta) => {\n  \n  try {\n    const playerId = currentPlayer._id || currentPlayer.playerId;\n    \n    // Check if relationship exists\n    const existingRelationship = currentPlayer.relationships?.find(rel => rel.name === targetName);\n    \n    if (!existingRelationship) {\n      // Create new relationship\n      const response = await axios.post(`${API_BASE}/api/add-relationship`, {\n        playerId,\n        targetName,\n        initialScore: delta\n      });\n      \n      return {\n        success: response.data.success,\n        player: response.data.player,\n        relationships: response.data.relationships\n      };\n    } else {\n      // Update existing relationship\n      const response = await axios.post(`${API_BASE}/api/update-relationship`, {\n        playerId,\n        targetName,\n        delta: delta\n      });\n      \n      return {\n        success: response.data.success,\n        player: response.data.player,\n        relationships: response.data.relationships,\n        relationship: response.data.relationship\n      };\n    }\n  } catch (error) {\n    console.error('Error updating relationship:', error);\n    return { success: false, error: error.message };\n  }\n};\n\n/**\n * Update relationship status (friend, crush, love, married, rival, etc.)\n */\nexport const updateRelationshipStatus = async (currentPlayer, targetName, status, value) => {\n  try {\n    const playerId = currentPlayer._id || currentPlayer.playerId;\n    \n    const response = await axios.post(`${API_BASE}/api/add-or-update-relationship-status`, {\n      playerId,\n      name: targetName,\n      status: status,\n      value: value\n    });\n    \n    // Check for \"Meet the Cast\" trophy if status is \"met\" and value is true\n    if (response.data.success && status === 'met' && value === true) {\n      // Get all character names from RelationshipMatrix\n      const allCharacters = RelationshipMatrix\n        .filter(char => char.type)\n        .map(char => char.type);\n      \n      // Check if player has met all characters\n      const updatedPlayer = response.data.player;\n      const metCharacters = updatedPlayer.relationships.filter(rel => rel.met === true);\n      const hasMetAll = allCharacters.every(charName => \n        metCharacters.some(rel => rel.name === charName)\n      );\n      \n      if (hasMetAll) {\n        // Award \"Meet the Cast\" trophy\n        try {\n          const trophyResponse = await axios.post(`${API_BASE}/api/earn-trophy`, {\n            playerId,\n            trophyName: 'Meet the Cast'\n          });\n          \n          if (trophyResponse.data.success && trophyResponse.data.isNewMilestone) {\n            console.log(`🏆 Player earned Meet the Cast trophy!`);\n            // Trophy notification will be handled by the earn-trophy endpoint\n          }\n        } catch (trophyError) {\n          console.error('Error awarding Meet the Cast trophy:', trophyError);\n        }\n      }\n    }\n    \n    return {\n      success: response.data.success,\n      player: response.data.player,\n      relationship: response.data.relationship\n    };\n  } catch (error) {\n    console.error('Error updating relationship status:', error);\n    return { success: false, error: error.message };\n  }\n};\n\n/**\n * Get relationship status between player and target\n */\nexport const getRelationshipStatus = (currentPlayer, targetName) => {\n  if (!currentPlayer?.relationships) return null;\n  \n  return currentPlayer.relationships.find(rel => rel.name === targetName) || {\n    name: targetName,\n    relscore: 0\n  };\n};\n\n\n/**\n * Get NPC reactions when player forms a new relationship status\n * Returns an array of NPCs that would react and their relationship changes\n */\nexport const getNPCReactions = (targetNPC, newStatus) => {\n  const reactions = [];\n  \n  // RelationshipMatrix is now an array, so iterate through it\n  RelationshipMatrix.forEach((npcEntry) => {\n    // Get the NPC name from the 'type' field\n    const npc = npcEntry.type;\n    \n    // Skip the target NPC\n    if (npc === targetNPC) return;\n    \n    // Check if this NPC has a relationship with the target\n    const npcRelationshipWithTarget = npcEntry[targetNPC];\n    \n    if (npcRelationshipWithTarget) {\n      // If new status is love, and another NPC loves this NPC\n      if (newStatus === 'love' && npcRelationshipWithTarget === 'love') {\n        reactions.push({\n          npc: npc,\n          setScore: -50,\n          clearAllStatuses: true,\n          setStatus: 'rival'\n        });\n      }\n      // If new status is friend, and another NPC has Rival with this NPC\n      else if (newStatus === 'friend' && npcRelationshipWithTarget === 'rival') {\n        reactions.push({\n          npc: npc,\n          setScore: -50,\n          clearAllStatuses: true,\n          setStatus: 'rival'\n        });\n      }\n      // If new status is friend, and another NPC has Friend with this NPC\n      else if (newStatus === 'friend' && npcRelationshipWithTarget === 'friend') {\n        reactions.push({\n          npc: npc,\n          scoreChange: 30\n        });\n      }\n      // If new status is rival, and another NPC has Rival with this NPC\n      else if (newStatus === 'rival' && npcRelationshipWithTarget === 'rival') {\n        reactions.push({\n          npc: npc,\n          scoreChange: 50\n        });\n      }\n      // If new status is rival, and another NPC has Love with this NPC\n      else if (newStatus === 'rival' && npcRelationshipWithTarget === 'love') {\n        reactions.push({\n          npc: npc,\n          setScore: -50,\n          clearAllStatuses: true,\n          setStatus: 'rival'\n        });\n      }\n    }\n  });\n  \n  return reactions;\n};\n\n/**\n * Check if an interaction should be blocked based on other relationships\n * Returns { allowed: boolean, reason?: string }\n */\nexport const checkOtherRelationships = (currentPlayer, targetNPC, interaction) => {\n  // Check if this interaction would add a relationship status\n  if (!interaction.relbitadd) {\n    return { allowed: true };\n  }\n  \n  // Check for married status - can only be married to one NPC\n  if (interaction.relbitadd === 'married') {\n    const existingMarriage = currentPlayer.relationships?.find(rel => \n      rel.married === true && rel.name !== targetNPC\n    );\n    if (existingMarriage) {\n      return { \n        allowed: false, \n        reason: `You are already married to ${existingMarriage.name}` \n      };\n    }\n  }\n  \n  // Check for friend status with rivals\n  if (interaction.relbitadd === 'friend') {\n    // Get all NPCs that are rivals of the target\n    const targetRivals = [];\n    RelationshipMatrix.forEach((npcEntry) => {\n      const npc = npcEntry.type;\n      if (npcEntry[targetNPC] === 'rival') {\n        targetRivals.push(npc);\n      }\n    });\n    \n    // Check if player is friends with any of target's rivals\n    for (const rival of targetRivals) {\n      const playerRelWithRival = currentPlayer.relationships?.find(rel => rel.name === rival);\n      if (playerRelWithRival?.friend === true) {\n        return { \n          allowed: false, \n          reason: `${targetNPC} won't be friends with you because you're friends with ${rival}` \n        };\n      }\n    }\n  }\n  \n  // Check for love/crush status with NPCs who are already in love\n  if (interaction.relbitadd === 'love' || interaction.relbitadd === 'crush') {\n    // Check if target NPC already loves someone else\n    const targetNPCEntry = RelationshipMatrix.find(entry => entry.type === targetNPC);\n    if (targetNPCEntry) {\n      // Find who the target loves by checking all their relationships\n      const targetLoves = Object.entries(targetNPCEntry)\n        .filter(([key, value]) => key !== 'type' && key !== 'symbol' && value === 'love');\n      \n      if (targetLoves.length > 0) {\n        return { \n          allowed: false, \n          reason: `${targetNPC} is already in love with ${targetLoves[0][0]}` \n        };\n      }\n    }\n  }\n  \n  return { allowed: true };\n};\n\n/**\n * Generate a status message for relationship changes\n * @param {string} targetName - The NPC the player interacted with\n * @param {string} newStatus - The new relationship status (if any)\n * @param {boolean} success - Whether the interaction was successful\n * @param {Array} reactions - Array of NPC reactions from getNPCReactions\n * @param {Object} strings - The strings object from useStrings hook\n * @returns {string} The status message to display\n */\nexport const generateRelationshipStatusMessage = (targetName, newStatus, success, reactions = [], strings = {}) => {\n  let message = '';\n  \n  if (success && newStatus) {\n    // Generate primary status message based on the new status\n    switch (newStatus) {\n      case 'met':\n        message = `${strings[602]} ${targetName}.`;\n        break;\n      case 'friend':\n        message = `${strings[603]} ${targetName}.`;\n        break;\n      case 'crush':\n        message = `${strings[604]} ${targetName}.`;\n        break;\n      case 'love':\n        message = `${strings[605]} ${targetName}.`;\n        break;\n      case 'married':\n        message = `${strings[606]} ${targetName} ${strings[607]}`;\n        break;\n      case 'rival':\n        message = `${strings[606]} ${targetName} ${strings[608]}`;\n        break;\n      default:\n        message = `${strings[615]} ${targetName} ${strings[616]}`;\n    }\n    \n    // Add reaction messages if there are any\n    if (reactions && reactions.length > 0) {\n      const negativeReactions = reactions.filter(r => r.setStatus === 'rival' || r.scoreChange < 0);\n      const positiveReactions = reactions.filter(r => r.scoreChange > 0 && r.setStatus !== 'rival');\n      \n      if (negativeReactions.length > 0) {\n        if (negativeReactions.length === 1) {\n          const reaction = negativeReactions[0];\n          if (reaction.setStatus === 'rival') {\n            message += ` ${reaction.npc} ${strings[609]}`;\n          } else {\n            message += ` ${reaction.npc} ${strings[610]}`;\n          }\n        } else {\n          const npcNames = negativeReactions.map(r => r.npc).join(` ${strings[614]} `);\n          message += ` ${npcNames} ${strings[611]}`;\n        }\n      }\n      \n      if (positiveReactions.length > 0) {\n        if (positiveReactions.length === 1) {\n          const reaction = positiveReactions[0];\n          message += ` ${reaction.npc} ${strings[612]}`;\n        } else {\n          const npcNames = positiveReactions.map(r => r.npc).join(` ${strings[614]} `);\n          message += ` ${npcNames} ${strings[613]}`;\n        }\n      }\n    }\n  }\n  \n  return message;\n};\n\n/**\n * Get resource multiplier based on relationship status with an NPC\n * @param {string} npcName - The name of the NPC\n * @param {Object} currentPlayer - The current player object with relationships\n * @param {Object} strings - The localized strings object\n * @returns {Object} - { multiplier: number, bonusMessage: string }\n */\nexport const getRelationshipMultiplier = (npcName, currentPlayer, strings) => {\n\n  // Find the NPC in the RelationshipMatrix\n  const npcEntry = RelationshipMatrix.find(entry => entry.type === npcName);\n\n  // If no NPC entry found or no buffs defined, return default\n  if (!npcEntry || (!npcEntry.buff4friend && !npcEntry.buff4love && !npcEntry.buff4marriage)) {\n    return { multiplier: 1, bonusMessage: '' };\n  }\n  \n  // Find player's relationship with this NPC\n  const relationship = currentPlayer.relationships?.find(rel => rel.name === npcName);\n  \n  if (!relationship) {\n    return { multiplier: 1, bonusMessage: '' };\n  }\n  \n  // Check relationship status and apply appropriate buff\n  if (relationship.married === true && npcEntry.buff4marriage) {\n    return { \n      multiplier: npcEntry.buff4marriage, \n      bonusMessage: ` ${npcEntry.buff4marriage}x ${strings[621]}.` \n    };\n  } else if (relationship.love === true && npcEntry.buff4love) {\n    return { \n      multiplier: npcEntry.buff4love, \n      bonusMessage: ` ${npcEntry.buff4love}x ${strings[623]}.` \n    };\n  } else if (relationship.friend === true && npcEntry.buff4friend) {\n    return { \n      multiplier: npcEntry.buff4friend, \n      bonusMessage: ` ${npcEntry.buff4friend}x ${strings[622]}.` \n    };\n  }\n  \n  return { multiplier: 1, bonusMessage: '' };\n};\n","import React, { useState, useEffect } from 'react';\nimport './Conversation.css';\nimport ConversationManager from './ConversationManager';\nimport RelationshipMatrix from './RelationshipMatrix.json';\n\n// Track conversation results for chance modification\nlet conversationResults = {\n  matchingInterests: 0,\n  matchingRandom: 0,\n  totalRounds: 0\n};\n\n// Calculate modified chance based on conversation results\nexport const calculateModifiedChance = (baseChance, interaction, conversationResults, currentPlayer, targetName) => {\n  let modifiedChance = baseChance || 1.0;\n  \n  // 1. Add bonus for matching interests during conversation\n  if (interaction.interaction === 'Talk' && conversationResults.matchingInterests > 0) {\n    // Add 0.5 for each matching interest\n    modifiedChance += (0.5 * conversationResults.matchingInterests);\n  }\n  \n  // 1b. Add bonus for matching random topics during conversation\n  if (interaction.interaction === 'Talk' && conversationResults.matchingRandom > 0) {\n    // Add 0.5 for each matching random topic\n    modifiedChance += (0.5 * conversationResults.matchingRandom);\n  }\n  \n  // 2. Add bonus for relationship status buffs\n  if (currentPlayer && currentPlayer.relationships) {\n    const relationship = currentPlayer.relationships.find(rel => rel.name === targetName);\n    if (relationship && relationship.relstatus) {\n      // Check relbuff1, relbuff2, relbuff3\n      for (let i = 1; i <= 3; i++) {\n        const buffField = interaction[`relbuff${i}`];\n        if (buffField && relationship.relstatus.includes(buffField)) {\n          // Add the buff amount (default 0.2 if not specified)\n          const buffAmount = interaction[`relbuffamount${i}`] || 0.2;\n          modifiedChance += buffAmount;\n        }\n      }\n    }\n  }\n  \n  // Cap at 1.0 (100% chance)\n  return Math.min(modifiedChance, 1.0);\n};\n\n// Main conversation sequence handler\nexport const playConversation = async (\n  playerPosition,\n  npcPosition,\n  playerEmoji = '😊',\n  npcEmoji = '🤔',\n  TILE_SIZE,\n  onComplete,\n  playerId = null,\n  npcId = null,\n  interaction = null,\n  currentPlayer = null,\n  masterResources = null\n) => {\n  console.log('🗨️ playConversation started:', { playerPosition, npcPosition, playerEmoji, npcEmoji, playerId, npcId, interaction });\n  \n  // Reset conversation results\n  conversationResults = {\n    matchingInterests: 0,\n    matchingRandom: 0,\n    totalRounds: 0\n  };\n  \n  // Use rounds from interaction if available, otherwise random 1-3\n  const numExchanges = interaction?.rounds || (Math.floor(Math.random() * 3) + 1);\n  \n  // Helper function to get current TILE_SIZE dynamically\n  const getCurrentTileSize = () => {\n    // Try to get the actual tile size from the DOM element\n    const gameContainer = document.querySelector('.homestead');\n    if (gameContainer) {\n      const gridElement = gameContainer.querySelector('.grid');\n      if (gridElement) {\n        const firstTile = gridElement.querySelector('.tile');\n        if (firstTile) {\n          return firstTile.offsetWidth;\n        }\n      }\n    }\n    return TILE_SIZE; // Fallback to passed TILE_SIZE\n  };\n\n  \n  // Create context for topic resolution\n  const topicContext = {\n    playerIcon: currentPlayer?.icon || playerEmoji,\n    npcIcon: npcEmoji,\n    currentPlayer: currentPlayer,\n    interaction: interaction,\n    masterResources: masterResources,\n    npcId: npcId\n  };\n  \n  // Add relationship score if it exists\n  if (currentPlayer?.relationships && npcId) {\n    const relationship = currentPlayer.relationships.find(rel => rel.name === npcId);\n    if (relationship) {\n      topicContext.relscore = relationship.relscore;\n    }\n  }\n  \n  // Play conversation sequence\n  for (let i = 0; i < numExchanges; i++) {\n    const roundNum = i + 1;\n    conversationResults.totalRounds = roundNum;\n    \n    // Player speaks - use provided ID or position-based ID\n    const playerSpeakerId = playerId || `player_${Math.floor(playerPosition.x)}_${Math.floor(playerPosition.y)}`;\n    const playerTopicKey = interaction?.[`playertopic${roundNum}`];\n    const playerTopic = playerTopicKey ? getTopicSymbol(playerTopicKey, topicContext, true) : '💭';\n    \n    await showSpeech('player', playerSpeakerId, playerEmoji, playerTopic);\n    await animateCharacter('player', playerPosition, getCurrentTileSize());\n    await delay(1500);\n    await hideSpeech(playerSpeakerId);\n    \n    await delay(500); // Brief pause between speakers\n    \n    // NPC responds - use provided ID or position-based ID\n    const npcSpeakerId = npcId || `npc_${Math.floor(npcPosition.x)}_${Math.floor(npcPosition.y)}`;\n    const npcTopicKey = interaction?.[`npctopic${roundNum}`];\n    const npcTopic = npcTopicKey ? getTopicSymbol(npcTopicKey, topicContext, false) : '💭';\n    \n    // Check if topics match for bonus\n    let isMatch = false;\n    \n    // Check if both topics are interests and if they match\n    if (playerTopicKey === 'interest' && npcTopicKey === 'interest' && playerTopic === npcTopic) {\n      conversationResults.matchingInterests++;\n      isMatch = true;\n      console.log('🎯 Matching interests!', playerTopic, npcTopic, 'Total matches:', conversationResults.matchingInterests);\n    }\n    \n    // Check if both topics are random and if they match\n    if (playerTopicKey === 'random' && npcTopicKey === 'random' && playerTopic === npcTopic) {\n      conversationResults.matchingRandom++;\n      isMatch = true;\n      console.log('🎯 Matching random topics!', playerTopic, npcTopic, 'Total matches:', conversationResults.matchingRandom);\n    }\n    \n    await showSpeech('npc', npcSpeakerId, npcEmoji, npcTopic, isMatch);\n    await animateCharacter('npc', npcPosition, getCurrentTileSize());\n    await delay(1500);\n    await hideSpeech(npcSpeakerId);\n    \n    await delay(500); // Brief pause before next exchange\n  }\n  \n  // Conversation complete - trigger callback with results\n  if (onComplete) {\n    onComplete(conversationResults);\n  }\n};\n\n\n// Get topic emoji based on interaction type and relationship status\nexport const getConversationTopic = (interaction, relationship) => {\n  // TODO: Implement topic selection algorithm\n  // For now, return a default topic\n\n  return '?';\n};\n\n// Convert topic key to actual symbol/emoji\nexport const getTopicSymbol = (topicKey, context = {}, isPlayerTurn = false) => {\n  if (!topicKey) return '❓'; // Default fallback\n  \n  // Handle emoji shortcuts\n  if (topicKey.startsWith('emoji_')) {\n    const emojiMap = {\n      'emoji_heart': '❤️',\n      'emoji_pinkheart': '💖',\n      'emoji_friend': '👫',\n      'emoji_diamond': '💍',\n      'emoji_forgive': '🙏',\n      'emoji_questionmark': '❓',\n      'emoji_annoyed': '😠',\n      'emoji_laughing': '😂',\n      'emoji_blush': '😊',\n      'emoji_hug': '🤗',\n      'emoji_wink': '😉',\n      'emoji_kiss': '😘',\n      'emoji_angry': '😡',\n      'emoji_sad': '😢',\n      'emoji_happy': '😊',\n      'emoji_thinking': '🤔',\n      'emoji_wow': '😮',\n      'emoji_love': '🥰',\n      'emoji_cool': '😎',\n      'emoji_party': '🥳',\n      'emoji_sleepy': '😴',\n      'emoji_hungry': '😋',\n      'emoji_brokenheart': '💔'\n    };\n    return emojiMap[topicKey] || '❓';\n  }\n  \n  // Handle special context-based topics\n  switch (topicKey) {\n    case 'player':\n      return context.playerIcon || '😊';\n      \n    case 'npc':\n      return context.npcIcon || '🤔';\n      \n    case 'interest':\n      // Show player's top resources from inventory/backpack\n      if (isPlayerTurn && context.currentPlayer && context.masterResources) {\n        const inventory = context.currentPlayer.inventory || [];\n        const backpack = context.currentPlayer.backpack || [];\n        \n        // Combine inventory and backpack items\n        const allItems = [...inventory, ...backpack];\n        \n        // Sort by quantity and get top 3 (excluding Money)\n        const topItems = allItems\n          .filter(item => item.type !== 'Money' && item.type !== 'Gem')\n          .sort((a, b) => b.quantity - a.quantity)\n          .slice(0, 5)\n          .map(item => {\n            const resource = context.masterResources.find(r => r.type === item.type);\n            return resource?.symbol || item.type;\n          })\n          .filter(symbol => symbol); // Remove any undefined\n        \n        // Return random item from top 3, or fallback\n        if (topItems.length > 0) {\n          return topItems[Math.floor(Math.random() * topItems.length)];\n        }\n      }\n      \n      // For NPC turn, check RelationshipMatrix for interests\n      if (!isPlayerTurn && context.npcId && context.masterResources) {\n        const npcEntry = RelationshipMatrix.find(entry => entry.type === context.npcId);\n        if (npcEntry) {\n          // Collect all defined interests (interest1, interest2, interest3, etc.)\n          const npcInterests = [];\n          let i = 1;\n          while (npcEntry[`interest${i}`]) {\n            // Look up the interest in masterResources to get its symbol\n            const interest = npcEntry[`interest${i}`];\n            const resource = context.masterResources.find(r => r.type === interest);\n            if (resource && resource.symbol) {\n              npcInterests.push(resource.symbol);\n            }\n            i++;\n          }\n          \n          // If NPC has interests defined, return one randomly\n          if (npcInterests.length > 0) {\n            return npcInterests[Math.floor(Math.random() * npcInterests.length)];\n          }\n        }\n      }\n      \n      // Fallback to default interests\n      const interests = ['🎨', '📚', '🛶', '🔬', '🪉', '⛺', '💰'];\n      return interests[Math.floor(Math.random() * interests.length)];\n\n    case 'relationship':\n      // TODO: Add logic based on relationship status\n      return '👫';\n      \n    case 'random':\n      // TODO: Add random topic selection\n      if (context.relscore > 80) {\n        // If relscore is high, use secret topics\n        const secretTopics = ['🧝‍♀️', '🐲', '🧌', '💍', '👻', '🔱', '🎪', '🦄', '🔑', '🖼️'];\n        return secretTopics[Math.floor(Math.random() * secretTopics.length)];\n      } else {\n        const randomTopics = ['🚂', '🚜', '👩‍🌾', '🐺', '🐻'];\n        return randomTopics[Math.floor(Math.random() * randomTopics.length)];\n      };\n\n      case 'quest':\n      return '✅';\n      \n    case 'trade':\n      return '💰';\n      \n    case 'skill':\n      return '💪';\n      \n    case 'location':\n      return '🗺️';\n      \n    case 'weather':\n      const weatherTopics = ['☀️', '🌨️', '🌦️', '🌩️'];\n      return weatherTopics[Math.floor(Math.random() * weatherTopics.length)];\n      \n    case 'time':\n      return '🕐';\n      \n    default:\n      // If it's not a recognized key, just return it as-is (might be an emoji already)\n      return topicKey;\n  }\n};\n\n\n// Show speech bubble for a character\nconst showSpeech = async (speakerType, speakerId, emoji, topic, isMatch = false) => {\n  console.log('🗨️ showSpeech called:', { speakerType, speakerId, emoji, topic, isMatch });\n  ConversationManager.addSpeech(speakerId, emoji, topic || emoji, isMatch);\n};\n\n// Hide speech bubble for a character\nconst hideSpeech = async (speakerId) => {\n  ConversationManager.removeSpeech(speakerId);\n};\n\n// Animate character bouncing\nconst animateCharacter = async (characterType, position, TILE_SIZE) => {\n  // Find the character element based on type and position\n  let characterElement;\n  \n  if (characterType === 'player') {\n    // Find player element\n    const playerElements = document.querySelectorAll('.pc');\n    characterElement = Array.from(playerElements).find(el => {\n      const transform = el.style.transform;\n      if (transform) {\n        const match = transform.match(/translate\\((-?\\d+(?:\\.\\d+)?)px,\\s*(-?\\d+(?:\\.\\d+)?)px\\)/);\n        if (match) {\n          const x = parseFloat(match[1]);\n          const y = parseFloat(match[2]);\n          // Check if position matches (with some tolerance)\n          const expectedX = position.x * TILE_SIZE;\n          const expectedY = position.y * TILE_SIZE;\n          return Math.abs(x - expectedX) < TILE_SIZE/2 && Math.abs(y - expectedY) < TILE_SIZE/2;\n        }\n      }\n      return false;\n    });\n  } else {\n    // Find NPC element\n    const npcElements = document.querySelectorAll('.npc');\n    characterElement = Array.from(npcElements).find(el => {\n      const transform = el.style.transform;\n      if (transform) {\n        const match = transform.match(/translate\\((-?\\d+(?:\\.\\d+)?)px,\\s*(-?\\d+(?:\\.\\d+)?)px\\)/);\n        if (match) {\n          const x = parseFloat(match[1]);\n          const y = parseFloat(match[2]);\n          // Check if position matches (with some tolerance)\n          const expectedX = position.x * TILE_SIZE;\n          const expectedY = position.y * TILE_SIZE;\n          return Math.abs(x - expectedX) < TILE_SIZE/2 && Math.abs(y - expectedY) < TILE_SIZE/2;\n        }\n      }\n      return false;\n    });\n  }\n  \n  if (characterElement) {\n    // Simply add the animation class\n    characterElement.classList.add('speaking-animation');\n    \n    // Remove animation class after duration\n    setTimeout(() => {\n      characterElement.classList.remove('speaking-animation');\n    }, 1500);\n  }\n};\n\n// Utility delay function\nconst delay = (ms) => new Promise(resolve => setTimeout(resolve, ms));\n\n// Component for rendering conversation UI if needed\nconst ConversationUI = ({ isActive, playerData, npcData }) => {\n  if (!isActive) return null;\n  \n  return (\n    <div className=\"conversation-overlay\">\n      {/* This can be used for additional UI elements if needed */}\n    </div>\n  );\n};\n\nexport default ConversationUI;","import React, { useState, useEffect } from 'react';\nimport { \n  updateRelationship, \n  updateRelationshipStatus, \n  getNPCReactions, \n  checkOtherRelationships,\n  generateRelationshipStatusMessage \n} from './RelationshipUtils';\nimport { useStrings } from '../../UI/StringsContext';\nimport { getLocalizedString } from '../../Utils/stringLookup';\nimport { playConversation, calculateModifiedChance } from './Conversation';\nimport ConversationManager from './ConversationManager';\nimport '../../UI/SharedButtons.css';\n\nconst RelationshipCard = ({ \n  currentPlayer,\n  setCurrentPlayer,\n  targetName,\n  targetType = 'npc', // 'npc' or 'player'\n  targetEmoji = null, // Optional emoji for the target\n  onRelationshipChange,\n  showActions = true,\n  compact = false,\n  masterInteractions = [],\n  updateStatus,\n  checkDistance = null, // Optional function to check if target is in range\n  onInteractionClick = null, // Optional function to handle zoom/camera when interaction is clicked\n  playerPosition = null, // Player's grid position for conversation\n  targetPosition = null, // Target's grid position for conversation\n  TILE_SIZE = 30, // Tile size for positioning speech bubbles\n  masterResources = [] // Master resources for topic resolution\n}) => {\n  const [relationship, setRelationship] = useState(null);\n  const [isInitializing, setIsInitializing] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const strings = useStrings();\n\n  useEffect(() => {\n    loadOrCreateRelationship();\n  }, [currentPlayer?.playerId, targetName]);\n\n  const loadOrCreateRelationship = async () => {\n    if (!currentPlayer || !targetName) {\n      return;\n    }\n\n    // Find existing relationship\n    const existingRel = currentPlayer.relationships?.find(rel => rel.name === targetName);\n    \n    if (existingRel) {\n      setRelationship(existingRel);\n    } else if (!isInitializing) {\n      // Create new relationship with score 0\n      setIsInitializing(true);\n      const result = await updateRelationship(currentPlayer, targetName, 0);\n      \n      if (result.success && result.player) {\n        // Update the currentPlayer with the new data\n        setCurrentPlayer(result.player);\n        const newRel = result.player.relationships.find(rel => rel.name === targetName);\n        setRelationship(newRel || {\n          name: targetName,\n          relscore: 0\n        });\n      }\n      setIsInitializing(false);\n    }\n  };\n\n  const handleInteraction = async (interaction) => {\n    if (!relationship || isProcessing) return;\n    \n    setIsProcessing(true);\n    \n    // Check distance first, before any zoom/camera operations\n    if (checkDistance && !checkDistance()) {\n      if (updateStatus) {\n        updateStatus(620); // \"You are too far away\"\n      }\n      setIsProcessing(false);\n      return;\n    }\n    \n    // Handle zoom and camera centering only after distance check passes\n    if (onInteractionClick) {\n      await onInteractionClick();\n    }\n    \n    // Check if interaction is allowed based on other relationships\n    const relationshipCheck = checkOtherRelationships(currentPlayer, targetName, interaction);\n    if (!relationshipCheck.allowed) {\n      if (updateStatus) {\n        updateStatus(`❌ ${relationshipCheck.reason}`);\n      }\n      setIsProcessing(false);\n      return;\n    }\n    \n    // Play conversation sequence if positions are provided\n    if (playerPosition && targetPosition) {\n      const playerEmoji = currentPlayer.icon || '😊';\n      const defaultTargetEmoji = targetType === 'npc' ? '🤔' : '😊';\n      const conversationTargetEmoji = targetEmoji || defaultTargetEmoji;\n      \n      // Use player ID for consistent tracking\n      const playerId = currentPlayer._id?.toString() || currentPlayer.playerId;\n      const targetId = targetType === 'npc' ? targetName : targetName; // For NPCs, use name as ID\n      \n      // Store conversation results for chance calculation\n      let conversationResults = null;\n      \n      await playConversation(\n        playerPosition,\n        targetPosition,\n        playerEmoji,\n        conversationTargetEmoji,\n        TILE_SIZE,\n        (results) => {\n          // Store conversation results\n          conversationResults = results;\n        },\n        playerId,\n        targetId,\n        interaction,\n        currentPlayer,\n        masterResources\n      );\n      \n      // Calculate modified chance based on conversation results\n      const baseChance = interaction.chance || 1.0;\n      const modifiedChance = conversationResults \n        ? calculateModifiedChance(baseChance, interaction, conversationResults, currentPlayer, targetName)\n        : baseChance;\n      \n      console.log('🎲 Chance calculation:', {\n        baseChance,\n        conversationResults,\n        modifiedChance\n      });\n      \n      // Roll for success based on modified chance\n      const randomRoll = Math.random();\n      const success = randomRoll <= modifiedChance;\n      \n      // Continue with success/failure handling\n      await handleInteractionOutcome(success, interaction);\n    } else {\n      // No conversation - use base chance\n      const randomRoll = Math.random();\n      const success = randomRoll <= (interaction.chance || 1.0);\n      \n      // Continue with success/failure handling\n      await handleInteractionOutcome(success, interaction);\n    }\n  };\n  \n  // Helper function to handle interaction outcome\n  const handleInteractionOutcome = async (success, interaction) => {\n    if (success) {\n      // Update relationship score\n      const scoreChange = interaction.relscoreresult || 0;\n      const result = await updateRelationship(currentPlayer, targetName, scoreChange);\n      \n      if (result.success && result.player) {\n        setCurrentPlayer(result.player);\n        let updatedRel = result.player.relationships.find(rel => rel.name === targetName);\n        setRelationship(updatedRel);\n        \n        // Add relationship status if specified\n        if (interaction.relbitadd) {\n          const statusResult = await updateRelationshipStatus(\n            currentPlayer, \n            targetName, \n            interaction.relbitadd, \n            true\n          );\n          \n          if (statusResult.success && statusResult.player) {\n            setCurrentPlayer(statusResult.player);\n            updatedRel = statusResult.player.relationships.find(rel => rel.name === targetName);\n            setRelationship(updatedRel);\n            \n            // Check for NPC reactions only if this is an NPC\n            let npcReactions = [];\n            if (targetType === 'npc') {\n              npcReactions = getNPCReactions(targetName, interaction.relbitadd);\n              \n              // Apply each reaction\n              for (const reaction of npcReactions) {\n                // Clear all statuses if needed\n                if (reaction.clearAllStatuses) {\n                  // First, set the score to the exact value\n                  const scoreResult = await updateRelationship(\n                    statusResult.player, \n                    reaction.npc, \n                    reaction.setScore - (statusResult.player.relationships?.find(r => r.name === reaction.npc)?.relscore || 0)\n                  );\n                  \n                  if (scoreResult.success && scoreResult.player) {\n                    // Clear all statuses dynamically from masterInteractions\n                    const statuses = masterInteractions\n                      .filter(item => item.isaninteraction === false)\n                      .map(item => item.interaction.toLowerCase());\n                    for (const status of statuses) {\n                      await updateRelationshipStatus(scoreResult.player, reaction.npc, status, false);\n                    }\n                    \n                    // Set new status\n                    if (reaction.setStatus) {\n                      // First ensure they are \"met\"\n                      const metResult = await updateRelationshipStatus(\n                        scoreResult.player, \n                        reaction.npc, \n                        'met', \n                        true\n                      );\n                      \n                      // Then set the reaction status\n                      const finalResult = await updateRelationshipStatus(\n                        metResult.success ? metResult.player : scoreResult.player, \n                        reaction.npc, \n                        reaction.setStatus, \n                        true\n                      );\n                      if (finalResult.success && finalResult.player) {\n                        setCurrentPlayer(finalResult.player);\n                      }\n                    }\n                  }\n                } else if (reaction.scoreChange) {\n                  // Just change the score\n                  const scoreResult = await updateRelationship(\n                    statusResult.player, \n                    reaction.npc, \n                    reaction.scoreChange\n                  );\n                  if (scoreResult.success && scoreResult.player) {\n                    // Ensure they are \"met\" if relationship exists and score is positive\n                    const updatedRelWithReactor = scoreResult.player.relationships?.find(r => r.name === reaction.npc);\n                    if (updatedRelWithReactor && !updatedRelWithReactor.met) {\n                      const metResult = await updateRelationshipStatus(\n                        scoreResult.player, \n                        reaction.npc, \n                        'met', \n                        true\n                      );\n                      if (metResult.success && metResult.player) {\n                        setCurrentPlayer(metResult.player);\n                      } else {\n                        setCurrentPlayer(scoreResult.player);\n                      }\n                    } else {\n                      setCurrentPlayer(scoreResult.player);\n                    }\n                  }\n                }\n              }\n            }\n            \n            // Generate and display status message for successful interaction\n            if (updateStatus) {\n              const statusMessage = generateRelationshipStatusMessage(\n                targetName, \n                interaction.relbitadd, \n                true, \n                npcReactions,\n                strings\n              );\n              if (statusMessage) {\n                updateStatus(statusMessage);\n              }\n            }\n          }\n        }\n        \n        // Remove relationship status if specified\n        if (interaction.relbitremove) {\n          const removeResult = await updateRelationshipStatus(\n            currentPlayer, \n            targetName, \n            interaction.relbitremove, \n            false\n          );\n          \n          if (removeResult.success && removeResult.player) {\n            setCurrentPlayer(removeResult.player);\n            updatedRel = removeResult.player.relationships.find(rel => rel.name === targetName);\n            setRelationship(updatedRel);\n          }\n        }\n        \n        // Check if any relationship statuses should be removed due to score falling below minimum\n        const statusesToRemove = masterInteractions.filter(item => {\n          // Only check non-interaction status items\n          if (item.isaninteraction !== false) return false;\n          \n          // Check if this status has a minimum score requirement\n          if (typeof item.relscoremin !== 'number') return false;\n          \n          // Check if the new score is below the minimum and the relationship has this status\n          const statusKey = item.interaction.toLowerCase();\n          return updatedRel.relscore < item.relscoremin && updatedRel[statusKey] === true;\n        });\n        \n        // Remove any statuses that no longer meet minimum score requirements\n        for (const statusItem of statusesToRemove) {\n          const statusKey = statusItem.interaction.toLowerCase();\n          const removeResult = await updateRelationshipStatus(\n            currentPlayer,\n            targetName,\n            statusKey,\n            false\n          );\n          \n          if (removeResult.success && removeResult.player) {\n            setCurrentPlayer(removeResult.player);\n            updatedRel = removeResult.player.relationships.find(rel => rel.name === targetName);\n            setRelationship(updatedRel);\n          }\n        }\n      \n        // Show relationship outcome VFX\n        if (scoreChange !== 0) {\n          const targetId = targetType === 'npc' ? targetName : targetName; // For NPCs, use name as ID\n          ConversationManager.showOutcome(targetId, scoreChange > 0);\n        }\n        \n      }\n    } else {\n      // Failed interaction - decrease score by same amount\n      const scoreChange = -(interaction.relscoreresult || 0);\n      const result = await updateRelationship(currentPlayer, targetName, scoreChange);\n      \n      if (result.success && result.player) {\n        setCurrentPlayer(result.player);\n        let updatedRel = result.player.relationships.find(rel => rel.name === targetName);\n        setRelationship(updatedRel);\n        \n        // Check if any relationship statuses should be removed due to score falling below minimum\n        const statusesToRemove = masterInteractions.filter(item => {\n          // Only check non-interaction status items\n          if (item.isaninteraction !== false) return false;\n          \n          // Check if this status has a minimum score requirement\n          if (typeof item.relscoremin !== 'number') return false;\n          \n          // Check if the new score is below the minimum and the relationship has this status\n          const statusKey = item.interaction.toLowerCase();\n          return updatedRel.relscore < item.relscoremin && updatedRel[statusKey] === true;\n        });\n        \n        // Remove any statuses that no longer meet minimum score requirements\n        for (const statusItem of statusesToRemove) {\n          const statusKey = statusItem.interaction.toLowerCase();\n          const removeResult = await updateRelationshipStatus(\n            currentPlayer,\n            targetName,\n            statusKey,\n            false\n          );\n          \n          if (removeResult.success && removeResult.player) {\n            setCurrentPlayer(removeResult.player);\n            updatedRel = removeResult.player.relationships.find(rel => rel.name === targetName);\n            setRelationship(updatedRel);\n          }\n        }\n      }\n      \n      // Show relationship outcome VFX for failed interaction\n      if (scoreChange < 0) {\n        const targetId = targetType === 'npc' ? targetName : targetName; // For NPCs, use name as ID\n        ConversationManager.showOutcome(targetId, false);\n      }\n    }\n    \n    // Call the parent's relationship change handler\n    if (onRelationshipChange) {\n      onRelationshipChange(interaction, success);\n    }\n    \n    setIsProcessing(false);\n  };\n\n  if (!relationship) {\n    return null;\n  }\n\n  // Determine color based on score\n  const getScoreColor = (score) => {\n    if (score > 50) return '#4CAF50'; // Green\n    if (score > 0) return '#8BC34A'; // Light Green\n    if (score === 0) return '#9E9E9E'; // Gray\n    if (score > -50) return '#FF9800'; // Orange\n    return '#F44336'; // Red\n  };\n\n  const scoreColor = getScoreColor(relationship.relscore);\n\n  // Get visible relationship statuses early so we can use in both compact and full views\n  const visibleStatuses = masterInteractions.filter(item => {\n    // Only consider non-interaction items\n    if (item.isaninteraction !== false) return false;\n    \n    // Check if visible and if the relationship has this status\n    const statusKey = item.interaction.toLowerCase();\n    return item.isvisible && relationship[statusKey] === true;\n  });\n\n  if (compact) {\n    // Compact version for inline display\n    return (\n      <div className=\"relationship-card-compact\">\n        <span className=\"relationship-name\">{targetName}</span>\n        <span className=\"relationship-score\" style={{ color: scoreColor }}>\n          [{relationship.relscore}]\n        </span>\n        {/* Status flags */}\n        {visibleStatuses.map((status) => (\n          <span key={status.interaction} className=\"relationship-status\">\n            • {getLocalizedString(status.interaction, strings)}\n          </span>\n        ))}\n      </div>\n    );\n  }\n\n  // Get available interactions based on visibility and relationship score\n  const availableInteractions = masterInteractions.filter(interaction => {\n    // Only include actual interactions\n    if (interaction.isaninteraction === false) return false;\n    // Only show visible interactions\n    if (!interaction.isvisible) return false;\n    // Check if relationship score is within min/max range\n    const minScore = interaction.relscoremin ?? -100;\n    const maxScore = interaction.relscoremax ?? 100;\n    if (relationship.relscore < minScore || relationship.relscore > maxScore) return false;\n    \n    // Check if required relationship status exists\n    if (interaction.relbitrequired && !relationship[interaction.relbitrequired]) {\n      return false; // Doesn't have required status\n    }\n    \n    // Check relbitblock fields - hide interaction if any blocked status exists\n    for (let i = 1; i <= 3; i++) {\n      const blockField = interaction[`relbitblock${i}`];\n      if (blockField) {\n        if (blockField === 'all') {\n          // Block if ANY relationship status exists\n          const hasAnyStatus = relationship.met || relationship.friend || \n                             relationship.crush || relationship.love || \n                             relationship.married || relationship.rival;\n          if (hasAnyStatus) return false;\n        } else if (relationship[blockField]) {\n          // Block if specific status exists\n          return false;\n        }\n      }\n    }\n    \n    return true;\n  });\n\n  // Full card version\n  return (\n    <div className=\"relationship-card\">\n      <div className=\"relationship-card-content\">\n        <h3 className=\"relationship-title\">{strings[601]}</h3>\n        \n        <div className=\"relationship-score-bar-container\">\n          <div className=\"relationship-score-gradient\">\n            <div \n              className=\"relationship-score-marker\"\n              style={{ \n                left: `${((relationship.relscore + 100) / 200) * 100}%`\n              }}\n            />\n          </div>\n        </div>\n\n        {/* Status flags display */}\n        <div className=\"relationship-status-display\">\n          {visibleStatuses.map((status) => (\n            <span \n              key={status.interaction}\n              className={`relationship-status-badge ${status.interaction.toLowerCase()}`}\n            >\n              {getLocalizedString(status.interaction, strings)}\n            </span>\n          ))}\n        </div>\n\n        {showActions && availableInteractions.length > 0 && (\n          <div className=\"relationship-actions shared-buttons\">\n            {availableInteractions.map((interaction) => (\n              <button\n                key={interaction.interaction} \n                className=\"btn-basic\"\n                onClick={() => handleInteraction(interaction)}\n                disabled={isProcessing}\n              >\n                {getLocalizedString(interaction.interaction, strings)}\n              </button>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(RelationshipCard);","import API_BASE from '../../config';\nimport React, { useState, useEffect, useContext } from 'react';\nimport Panel from '../../UI/Panel';\nimport '../../UI/SharedButtons.css';\nimport axios from 'axios';\nimport ResourceButton from '../../UI/ResourceButton';\nimport { getIngredientDetails } from '../../Utils/ResourceHelpers';\nimport { canAfford, hasRoomFor } from '../../Utils/InventoryManagement';\nimport { refreshPlayerAfterInventoryUpdate } from '../../Utils/InventoryManagement';\nimport { gainIngredients, spendIngredients } from '../../Utils/InventoryManagement';\nimport { QuestGiverButton } from '../../UI/QuestButton';\nimport { modifyPlayerStatsInPlayer, modifyPlayerStatsInGridState } from '../../Utils/playerManagement';\nimport playersInGridManager from '../../GridState/PlayersInGrid';\nimport { trackQuestProgress } from '../Quests/QuestGoalTracker';\nimport { useStrings } from '../../UI/StringsContext';\nimport { getLocalizedString } from '../../Utils/stringLookup';\nimport RelationshipCard from '../Relationships/RelationshipCard';\nimport { getRelationshipStatus, getRelationshipMultiplier } from '../Relationships/RelationshipUtils';\nimport '../Relationships/Relationships.css';\nimport NPCsInGridManager from '../../GridState/GridStateNPCs';\nimport { checkDeveloperStatus } from '../../Utils/appUtils';\nimport questCache from '../../Utils/QuestCache';\nimport { calculateDistance, getDerivedRange } from '../../Utils/worldHelpers';\nimport { earnTrophy } from '../Trophies/TrophyUtils';\n\nconst NPCPanel = ({\n  onClose,\n  npcData,\n  inventory,\n  setInventory,\n  backpack,\n  setBackpack,\n  currentPlayer,\n  setCurrentPlayer,\n  setResources,\n  TILE_SIZE,\n  updateStatus,\n  masterResources,\n  masterInteractions,\n  masterTraders,\n  masterTrophies,\n  zoomLevel,\n  setZoomLevel,\n  centerCameraOnPlayer,\n  globalTuning,\n}) => {\n  const strings = useStrings();\n  const [questList, setQuestList] = useState([]);\n  const [healRecipes, setHealRecipes] = useState([]);\n  const [tradeRecipes, setTradeRecipes] = useState([]);\n  const [statusMessage, setStatusMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [canQuest, setCanQuest] = useState(false);\n  const [hasHiddenQuests, setHasHiddenQuests] = useState(false);\n  const [questThreshold, setQuestThreshold] = useState(0);\n  const [canTrade, setCanTrade] = useState(false);\n  const [tradeThreshold, setTradeThreshold] = useState(0);\n  const [isDeveloper, setIsDeveloper] = useState(false);\n\n\n  // Ensure npcData has default values\n  if (!npcData) {\n    console.warn(\"NPCPanel was opened with missing npcData.\");\n    npcData = { type: \"Unknown NPC\", symbol: \"❓\" }; // Provide default fallback values\n  }\n\n  // Check developer status\n  useEffect(() => {\n    const checkStatus = async () => {\n      if (currentPlayer?.username) {\n        const devStatus = await checkDeveloperStatus(currentPlayer.username);\n        setIsDeveloper(devStatus);\n      }\n    };\n    checkStatus();\n  }, [currentPlayer]);\n\n  // Check if player can quest based on relationship\n  useEffect(() => {\n    if (masterInteractions && npcData && npcData.action === 'quest') {\n      // Find the quest interaction threshold\n      const questInteraction = masterInteractions.find(interaction => \n        interaction.interaction === 'Quest' || interaction.interaction === 'quest'\n      );\n      \n      if (questInteraction) {\n        setQuestThreshold(questInteraction.relscoremin || 0);\n        \n        // Get current relationship status\n        const relationship = getRelationshipStatus(currentPlayer, npcData.type);\n        const currentScore = relationship?.relscore || 0;\n        \n        setCanQuest(currentScore >= questInteraction.relscoremin);\n      } else {\n        // If no quest threshold defined, allow questing\n        setCanQuest(true);\n      }\n    }\n    \n    // Check if player can trade based on relationship\n    if (npcData && npcData.action === 'trade') {\n      const tradeInteraction = masterInteractions.find(interaction => \n        interaction.interaction === 'Trade' || interaction.interaction === 'trade'\n      );\n      \n      if (tradeInteraction) {\n        setTradeThreshold(tradeInteraction.relscoremin || 0);\n        \n        // Get current relationship status\n        const relationship = getRelationshipStatus(currentPlayer, npcData.type);\n        const currentScore = relationship?.relscore || 0;\n        \n        setCanTrade(currentScore >= tradeInteraction.relscoremin);\n      } else {\n        // If no trade threshold defined, allow trading\n        setCanTrade(true);\n      }\n    }\n  }, [masterInteractions, npcData, currentPlayer]);\n\n  // Handle quests or healing logic\n  useEffect(() => {\n    if (!npcData || !npcData.type) return;\n\n    if (npcData.action === 'quest') {\n      // Add a small delay to debounce rapid changes\n      const timeoutId = setTimeout(() => {\n        fetchQuests();\n      }, 100);\n      \n      return () => clearTimeout(timeoutId);\n    } else if (npcData.action === 'heal') {\n      const filteredRecipes = masterResources.filter((resource) => resource.type === npcData.type);\n      setHealRecipes(filteredRecipes);\n    } else if (npcData.action === 'trade') {\n      // Find this trader in masterTraders\n      const trader = masterTraders?.find(t => t.trader === npcData.type);\n      \n      if (trader && trader.trades) {\n        // Transform trader.trades into the format expected by the rest of the component\n        const filteredRecipes = trader.trades.map(trade => {\n          // Get the symbol from masterResources\n          const resourceDef = masterResources.find(r => r.type === trade.gives.type);\n          \n          const recipe = {\n            type: trade.gives.type,\n            symbol: resourceDef?.symbol || '?',\n            tradeqty: trade.gives.quantity,\n            requiresArray: trade.requires, // Store the full requires array for dynamic ingredients\n            requires: trade.requiresSkill || null, // Keep 'requires' for skill requirements\n            source: npcData.type,\n            gemcost: resourceDef?.gemcost || null\n          };\n          \n          // Also add legacy format for backward compatibility\n          trade.requires.forEach((req, index) => {\n            recipe[`ingredient${index + 1}`] = req.type;\n            recipe[`ingredient${index + 1}qty`] = req.quantity;\n          });\n          \n          return recipe;\n        });\n        \n        setTradeRecipes(filteredRecipes);\n      } else {\n        // Fallback to old method if masterTraders is not available\n        const filteredRecipes = masterResources.filter((resource) => resource.source === npcData.type);\n        setTradeRecipes(filteredRecipes);\n      }\n    }\n  }, [npcData, currentPlayer?.activeQuests, currentPlayer?.completedQuests, currentPlayer?.ftuestep, masterResources, masterTraders]);\n\n  \n  ////////////////////////////////////////////////////////////\n  ////////////////////// Fetch QUESTS for QUEST NPCs\n  const fetchQuests = async () => {\n    try {\n      // Use cached quests instead of direct API call\n      const allQuests = await questCache.getQuests();\n\n      // Use new quest filtering logic\n      let npcQuests = allQuests\n        .filter((quest) => quest.giver === npcData.type)\n        .filter((quest) => {\n          const activeQuest = currentPlayer.activeQuests.find(q => q.questId === quest.title);\n          const isInCompleted = currentPlayer.completedQuests.some(q => q.questId === quest.title);        \n          if (activeQuest) {\n            const shouldShow = activeQuest.completed && !activeQuest.rewardCollected;\n            return shouldShow;\n          }          \n          const shouldShow = (quest.repeatable === true || quest.repeatable === 'true') || !isInCompleted;\n          return shouldShow;\n        });\n\n      // Check if any quests exist that are hidden due to relationship requirements\n      const relationship = currentPlayer.relationships?.find(rel => rel.name === npcData.type);\n      const questsHiddenByRelationship = npcQuests.some((quest) => {\n        // Check if quest has relationship requirements that aren't met\n        if (quest.rel || quest.relscore) {\n          // If no relationship exists with this NPC, quest is hidden\n          if (!relationship) return true;\n          // Check relationship status requirement\n          if (quest.rel && relationship[quest.rel] !== true) return true;\n          // Check relationship score requirement\n          if (quest.relscore && (relationship.relscore || 0) < quest.relscore) return true;\n        }\n        return false;\n      });\n\n      // Filter by relationship requirements (existing logic)\n      npcQuests = npcQuests.filter((quest) => {\n        // Check if quest has relationship requirements\n        if (quest.rel || quest.relscore) {\n          // If no relationship exists with this NPC, exclude the quest\n          if (!relationship) return false;\n          // Check relationship status requirement\n          if (quest.rel && relationship[quest.rel] !== true) { return false; }\n          // Check relationship score requirement\n          if (quest.relscore && (relationship.relscore || 0) < quest.relscore) { return false; }\n        }\n        return true;\n      });\n\n      // Filter by FTUE step only if player is a first-time user\n      if (currentPlayer.firsttimeuser === true) {\n        // Apply FTUE filtering to the already-filtered npcQuests, not the original response.data\n        npcQuests = npcQuests.filter((quest) => {\n          // For first-time users:\n          // 1. Quest must have ftuestep defined (not null, undefined, or empty string)\n          // 2. Quest ftuestep must be <= current player ftuestep\n          const hasFtuestep = quest.ftuestep != null && \n                             quest.ftuestep !== undefined && \n                             quest.ftuestep !== '' && \n                             quest.ftuestep !== 0;\n          \n          if (!hasFtuestep) {\n            return false;\n          } else if (quest.ftuestep > (currentPlayer.ftuestep || 0)) {\n            return false;\n          } else {\n            return true;\n          }\n        });\n      }\n      setQuestList(npcQuests);\n      setHasHiddenQuests(questsHiddenByRelationship);\n    } catch (error) {\n      console.error('Error fetching quests:', error);\n    }\n  };\n\n  const handleAcceptQuest = async (questTitle) => {\n    if (!questTitle) return;\n    // Find the accepted quest in questList\n    const acceptedQuest = questList.find(q => q.title === questTitle);\n    if (!acceptedQuest) {\n        console.error(`Quest \"${questTitle}\" not found in available quests.`);\n        return;\n    }\n    // Prepare progress tracking for skill-based goals\n    let initialProgress = { goal1: 0, goal2: 0, goal3: 0 }; // Explicitly initialize\n    let goalsCompleted = 0;\n    let totalGoals = 0;\n\n    for (let i = 1; i <= 3; i++) {\n      const goalAction = acceptedQuest[`goal${i}action`];\n      const goalItem = acceptedQuest[`goal${i}item`];\n      const goalQty = acceptedQuest[`goal${i}qty`];\n\n      if (!goalAction || !goalItem || !goalQty) continue; // Skip undefined goals\n      totalGoals++; // Count valid goals\n\n      if (goalAction === \"Gain skill with\") {\n          // Check if player already has the required skill\n          const playerHasSkill = currentPlayer.skills?.some(skill => skill.type === goalItem);\n          if (playerHasSkill) {\n              initialProgress[`goal${i}`] = 1; // Pre-mark as completed\n              goalsCompleted++;\n          } else {\n              initialProgress[`goal${i}`] = 0; // Start at 0\n          }\n      } else {\n          initialProgress[`goal${i}`] = 0; // Default progress for other goals\n      }\n    }\n    // If all goals are completed before even accepting, mark the quest as completed\n    const isQuestCompleted = totalGoals > 0 && goalsCompleted === totalGoals;\n\n    try {\n      const response = await axios.post(`${API_BASE}/api/add-player-quest`, {\n        playerId: currentPlayer.playerId,\n        questId: questTitle,\n        startTime: Date.now(),\n        progress: initialProgress, // Send pre-computed progress\n        completed: isQuestCompleted, // If all goals are done, mark it completed\n      });\n\n      if (response.data.success) {\n        setCurrentPlayer(response.data.player); // Update player after quest is added\n        updateStatus(202);\n        // No need to invalidate cache when accepting quests\n      } else {\n        setStatusMessage(`Failed to accept quest: ${response.data.error}`);\n      }\n    } catch (error) {\n      console.error('Error accepting quest:', error);\n      setStatusMessage('Error accepting quest. Check console.');\n    }\n  };\n\nconst handleGetReward = async (quest) => {\n    try {\n      // Get relationship-based multiplier from RelationshipMatrix data\n      const { multiplier, bonusMessage } = getRelationshipMultiplier(npcData.type, currentPlayer, strings);\n      const rewardQuantity = Math.floor((quest.rewardqty || 1) * multiplier);\n      \n      // Ensure inventory and backpack are valid arrays\n      const safeInventory = Array.isArray(inventory) ? inventory : [];\n      const safeBackpack = Array.isArray(backpack) ? backpack : [];\n      \n      const success = await gainIngredients({\n        playerId: currentPlayer.playerId,\n        currentPlayer,\n        resource: quest.reward,\n        quantity: rewardQuantity,\n        inventory: safeInventory,\n        backpack: safeBackpack,\n        setInventory,\n        setBackpack,\n        setCurrentPlayer,\n        updateStatus,\n        masterResources,\n        globalTuning,\n      });\n      if (!success) return;\n\n      // Award trophies for specific quest rewards\n      try {\n        if (quest.reward === \"Prospero's Orb\") {\n          console.log(`🏆 Awarding Prospero's Orb trophy for collecting ${rewardQuantity} orb(s)`);\n          \n          // Award the Count-type trophy for each orb collected\n          for (let i = 0; i < rewardQuantity; i++) {\n            await earnTrophy(currentPlayer.playerId, \"Prospero's Orb\", 1, currentPlayer, masterTrophies, setCurrentPlayer);\n          }\n          \n          console.log(`✅ Successfully awarded ${rewardQuantity} Prospero's Orb trophy instance(s)`);\n        } else if (quest.reward === \"Skeleton Key\") {\n          console.log(`🏆 Awarding Skeleton Key trophy for collecting ${rewardQuantity} key(s)`);\n          \n          // Award the Count-type trophy for each key collected\n          for (let i = 0; i < rewardQuantity; i++) {\n            await earnTrophy(currentPlayer.playerId, \"Skeleton Key\", 1, currentPlayer, masterTrophies, setCurrentPlayer);\n          }\n          \n          console.log(`✅ Successfully awarded ${rewardQuantity} Skeleton Key trophy instance(s)`);\n        } else if (quest.reward === \"Golden Key\") {\n          console.log(`🏆 Awarding Golden Key trophy for collecting ${rewardQuantity} key(s)`);\n          \n          // Award the Count-type trophy for each key collected\n          for (let i = 0; i < rewardQuantity; i++) {\n            await earnTrophy(currentPlayer.playerId, \"Golden Key\", 1, currentPlayer, masterTrophies, setCurrentPlayer);\n          }\n          \n          console.log(`✅ Successfully awarded ${rewardQuantity} Golden Key trophy instance(s)`);\n        }\n        \n      } catch (error) {\n        console.error('❌ Error awarding quest reward trophy:', error);\n        // Don't fail the quest completion if trophy awarding fails\n      }\n\n      // Track quest progress for \"Collect\" type quests (use multiplied quantity)\n      await trackQuestProgress(currentPlayer, 'Collect', quest.reward, rewardQuantity, setCurrentPlayer);\n\n      let updatedCompletedQuests = currentPlayer.completedQuests.map((q) =>\n        q.questId === quest.title ? { ...q, rewardCollected: true } : q\n      );\n      const alreadyCompleted = updatedCompletedQuests.some(q => q.questId === quest.title);\n      if (!alreadyCompleted) {\n        updatedCompletedQuests.push({\n          questId: quest.title,\n          rewardCollected: true,\n          timestamp: Date.now(),\n        });\n      }\n\n      // Remove the quest from activeQuests\n      const updatedActiveQuests = currentPlayer.activeQuests.filter(q => q.questId !== quest.title);\n\n      const updatedPlayer = {\n        ...currentPlayer,\n        completedQuests: updatedCompletedQuests,\n        activeQuests: updatedActiveQuests,\n      };\n      await axios.post(`${API_BASE}/api/update-profile`, {\n        playerId: currentPlayer.playerId,\n        updates: {\n          completedQuests: updatedPlayer.completedQuests,\n          activeQuests: updatedActiveQuests,\n        },\n      }).then((result) => {\n      });\n      // Don't call refreshPlayerAfterInventoryUpdate here - gainIngredients already updated the state\n      // and calling refresh would overwrite the local updates with potentially stale server data\n      // Update player with quest progress but preserve the inventory that was just updated\n      setCurrentPlayer(prev => ({\n        ...prev,\n        completedQuests: updatedPlayer.completedQuests,\n        activeQuests: updatedActiveQuests,\n      }));\n      setQuestList((prevList) => prevList.filter((q) => q.title !== quest.title));\n      \n      // Show quest complete message with bonus if applicable\n      if (bonusMessage) {\n        updateStatus(`Action item complete! Received ${rewardQuantity} ${getLocalizedString(quest.reward, strings)}. ${bonusMessage}`);\n      } else {\n        updateStatus(201);\n      }\n\n    } catch (error) {\n      console.error('Error collecting quest reward:', error);\n      alert('Failed to collect quest reward.');\n    }\n  };\n\n\nconst handleGemPurchase = async (modifiedRecipe, actionType) => {\n    // This is called by the gem button with a recipe modified to include gems\n    // Route to the appropriate handler based on action type\n    if (actionType === 'heal') {\n      return handleHeal(modifiedRecipe);\n    } else if (actionType === 'trade') {\n      return handleTrade(modifiedRecipe);\n    }\n  };\n\nconst handleHeal = async (recipe) => {\n    setErrorMessage('');\n\n    if (!recipe) {\n      setErrorMessage('Invalid healing recipe selected.');\n      return;\n    }\n    // Fetch current HP and Max HP from playersInGridManager\n    const gridId = currentPlayer?.location?.g;\n    const playerId = currentPlayer._id?.toString();\n    const playerInGridState = playersInGridManager.getPlayersInGrid(gridId)?.[playerId];\n    if (!playerInGridState) {\n      console.error(`Player ${currentPlayer.username} not found in NPCsInGrid.`);\n      return;\n    }\n    const currentHp = playerInGridState.hp;\n    const maxHp = playerInGridState.maxhp;\n  \n    // Healing logic with NPCsInGrid HP\n    if (npcData.output === 'hp') {\n      if (currentHp >= maxHp) {\n        updateStatus(401);  // Player is already at full HP\n        return;\n      }\n    }\n    const spendResult = await spendIngredients({\n      playerId: currentPlayer.playerId,\n      recipe,\n      inventory,\n      backpack,\n      setInventory,\n      setBackpack,\n      setCurrentPlayer,\n      updateStatus,\n    });\n    if (!spendResult) return;\n    \n    // Refresh player to update money display\n    await refreshPlayerAfterInventoryUpdate(currentPlayer.playerId, setCurrentPlayer);\n\n    const healAmount = npcData.qtycollected;\n    const statToMod = 'hp';\n    const amountToMod = Math.min(healAmount, maxHp - currentHp);  // Ensure it doesn't exceed max HP\n\n    try {\n      await modifyPlayerStatsInGridState(statToMod, amountToMod, currentPlayer._id, gridId);\n      setCurrentPlayer((prev) => ({\n        ...prev,\n        hp: Math.min(prev.maxhp, prev.hp + amountToMod),\n      }));  \n      updateStatus(`${strings[405]}${amountToMod}.`);\n\n    } catch (error) {\n      console.error('Error applying healing:', error);\n    }\n\n  };\n\n  const handleTrade = async (recipe) => {\n    setErrorMessage('');\n    if (!recipe) {\n      setErrorMessage('Invalid recipe selected.');\n      return;\n    }\n\n    let quantityToGive = recipe.tradeqty || 1;\n    \n    // Get relationship-based multiplier from RelationshipMatrix data\n    const { multiplier, bonusMessage } = getRelationshipMultiplier(npcData.type, currentPlayer, strings);\n    quantityToGive = Math.floor(quantityToGive * multiplier);\n    \n    // Check if we have room for the trade reward BEFORE spending ingredients\n    const hasRoom = hasRoomFor({\n      resource: recipe.type,\n      quantity: quantityToGive,\n      currentPlayer,\n      inventory: inventory,  // Use current prop\n      backpack: backpack,    // Use current prop\n      masterResources,\n      globalTuning\n    });\n    \n    // Create safe copies after the capacity check\n    const safeInventory = Array.isArray(inventory) ? inventory : [];\n    const safeBackpack = Array.isArray(backpack) ? backpack : [];\n    \n    if (!hasRoom) {\n      const isHomestead = currentPlayer?.location?.gtype === 'homestead';\n      const isMoney = recipe.type === \"Money\";\n      const isGem = recipe.type === \"Gem\";\n      \n      if (!isMoney && !isGem && !isHomestead) {\n        // Check if player has backpack skill\n        const hasBackpackSkill = currentPlayer?.skills?.some((item) => item.type === 'Backpack' && item.quantity > 0);\n        if (!hasBackpackSkill) {\n          updateStatus(19); // Missing backpack\n        } else {\n          updateStatus(21); // Backpack full\n        }\n      } else {\n        updateStatus(20); // Warehouse full\n      }\n      return;\n    }\n\n    const spendResult = await spendIngredients({\n      playerId: currentPlayer.playerId,\n      recipe,\n      inventory: safeInventory,\n      backpack: safeBackpack,\n      setInventory,\n      setBackpack,\n      setCurrentPlayer,\n      updateStatus,\n    });\n\n    if (!spendResult || (spendResult.success !== undefined && !spendResult.success)) {\n      setErrorMessage('Not enough ingredients.');\n      return;\n    }\n    \n    // Use the updated inventory and backpack from spendIngredients\n    const gained = await gainIngredients({\n      playerId: currentPlayer.playerId,\n      currentPlayer,\n      resource: recipe.type,\n      quantity: quantityToGive,\n      inventory: spendResult.updatedInventory,  // Use the updated inventory\n      backpack: spendResult.updatedBackpack,   // Use the updated backpack\n      setInventory,\n      setBackpack,\n      setCurrentPlayer,\n      updateStatus,\n      masterResources,\n      globalTuning,\n    });\n    \n    if (!gained) {\n      setErrorMessage('Failed to complete trade.');\n      return;\n    }\n\n    // Track quest progress for trading (using 'Collect' action to match quest system)\n    await trackQuestProgress(currentPlayer, 'Collect', recipe.type, quantityToGive, setCurrentPlayer);\n    \n    // Build ingredient list for status message\n    const ingredientList = [];\n    \n    // Check if using new format with requiresArray\n    if (recipe.requiresArray && Array.isArray(recipe.requiresArray)) {\n      recipe.requiresArray.forEach(req => {\n        if (req.type && req.quantity) {\n          ingredientList.push(`${req.quantity} ${req.type}`);\n        }\n      });\n    } else {\n      // Legacy format - check all numbered ingredients\n      for (let i = 1; i <= 10; i++) {\n        const ingredientType = recipe[`ingredient${i}`];\n        const ingredientQty = recipe[`ingredient${i}qty`];\n        if (ingredientType && ingredientQty) {\n          ingredientList.push(`${ingredientQty} ${ingredientType}`);\n        }\n      }\n    }\n    const ingredientString = ingredientList.join(', ');\n    \n    // Show success message with bonus if applicable\n    updateStatus(`Exchanged ${ingredientString} for ${quantityToGive} ${getLocalizedString(recipe.type, strings)}.${bonusMessage}`);\n  };\n\n  const handleSellNPC = async () => {\n    if (!npcData || !npcData.id) {\n      console.error('Cannot sell NPC: Missing NPC data or ID');\n      return;\n    }\n\n    try {\n      const gridId = currentPlayer.location.g;\n      await NPCsInGridManager.removeNPC(gridId, npcData.id);\n      updateStatus(`${getLocalizedString(npcData.type, strings)} has been removed from the grid.`);\n      onClose(); // Close the panel after selling\n    } catch (error) {\n      console.error('Error selling NPC:', error);\n      updateStatus(`❌ Failed to remove ${getLocalizedString(npcData.type, strings)}.`);\n    }\n  };\n\n\n  return (\n    <Panel onClose={onClose} descriptionKey=\"1013\" title={`${npcData.symbol} ${getLocalizedString(npcData.type, strings)}`} panelName=\"NPCPanel\">\n\n{/* //////////////////// QUESTS //////////////////////// */}\n\n      {npcData.action === 'quest' && (\n        <div className=\"quest-options\">\n          \n          {/* Relationship Card - only show if NPC doesn't have output='noRel' */}\n          {(() => {\n            const npcResource = masterResources.find(r => r.type === npcData.type && r.category === 'npc');\n            const shouldHideRelationship = npcResource?.output === 'noRel';\n            \n            if (shouldHideRelationship) {\n              return null;\n            }\n            \n            return (\n              <RelationshipCard\n            currentPlayer={currentPlayer}\n            setCurrentPlayer={setCurrentPlayer}\n            targetName={npcData.type}\n            targetType=\"npc\"\n            targetEmoji={npcData.symbol}\n            showActions={true}\n            compact={false}\n            masterInteractions={masterInteractions}\n            updateStatus={updateStatus}\n            masterResources={masterResources}\n            playerPosition={(() => {\n              const gridId = currentPlayer?.location?.g;\n              const playerId = currentPlayer._id?.toString();\n              const playerInGridState = playersInGridManager.getPlayersInGrid(gridId)?.[playerId];\n              return playerInGridState?.position || null;\n            })()}\n            targetPosition={(() => {\n              const gridId = currentPlayer?.location?.g;\n              const npcInGrid = NPCsInGridManager.getNPCsInGrid(gridId)?.[npcData.id];\n              return npcInGrid?.position || null;\n            })()}\n            TILE_SIZE={TILE_SIZE}\n            checkDistance={() => {\n              // Get player position\n              const gridId = currentPlayer?.location?.g;\n              const playerId = currentPlayer._id?.toString();\n              const playerInGridState = playersInGridManager.getPlayersInGrid(gridId)?.[playerId];\n              if (!playerInGridState?.position) return false;\n              \n              // Get NPC position\n              const npcInGrid = NPCsInGridManager.getNPCsInGrid(gridId)?.[npcData.id];\n              if (!npcInGrid?.position) return false;\n              \n              // Calculate distance\n              const distance = calculateDistance(playerInGridState.position, npcInGrid.position);\n              const playerRange = getDerivedRange(currentPlayer, masterResources);\n              \n              return distance <= playerRange;\n            }}\n            onInteractionClick={() => {\n              return new Promise((resolve) => {\n                const wasZoomedOut = zoomLevel !== 'closer';\n                \n                // Zoom to closer if not already\n                if (wasZoomedOut) {\n                  setZoomLevel('closer');\n                  // Wait for zoom animation and re-render to complete\n                  setTimeout(() => {\n                    // Center camera on player after zoom\n                    const gridId = currentPlayer?.location?.g;\n                    const playerId = currentPlayer._id?.toString();\n                    const playerInGridState = playersInGridManager.getPlayersInGrid(gridId)?.[playerId];\n                    if (playerInGridState?.position) {\n                      // Use a larger tile size for closer zoom (typically 50)\n                      const closerTileSize = masterResources?.find(r => r.type === 'globalTuning')?.closerZoom || 50;\n                      centerCameraOnPlayer(playerInGridState.position, closerTileSize);\n                    }\n                    // Give additional time for camera centering\n                    setTimeout(resolve, 300);\n                  }, 100);\n                } else {\n                  // Already zoomed in, just center camera\n                  const gridId = currentPlayer?.location?.g;\n                  const playerId = currentPlayer._id?.toString();\n                  const playerInGridState = playersInGridManager.getPlayersInGrid(gridId)?.[playerId];\n                  if (playerInGridState?.position) {\n                    // Already at closer zoom, use current TILE_SIZE\n                    centerCameraOnPlayer(playerInGridState.position, TILE_SIZE);\n                  }\n                  resolve();\n                }\n              });\n            }}\n            onRelationshipChange={(interaction, success) => {\n              // Additional handling if needed after interaction completes\n            }}\n          />\n            );\n          })()}\n          \n          {/* Show message if quest interaction is not available due to relationship */}\n          {!canQuest && (\n            <div style={{ \n              padding: '10px', \n              backgroundColor: '#f5f5f5', \n              borderRadius: '5px', \n              marginTop: '10px',\n              textAlign: 'center',\n              fontStyle: 'italic',\n              color: '#666'\n            }}>\n              {strings[625]}\n            </div>\n          )}\n\n          {canQuest && hasHiddenQuests && (\n            <div style={{ \n              padding: '10px', \n              backgroundColor: '#f5f5f5', \n              borderRadius: '5px', \n              marginTop: '10px',\n              textAlign: 'center',\n              fontStyle: 'italic',\n              color: '#666'\n            }}>\n              {strings[627]}\n            </div>\n          )}\n          \n          {canQuest && questList.length === 0 && !hasHiddenQuests && (\n            <div style={{ \n              padding: '10px', \n              backgroundColor: '#f5f5f5', \n              borderRadius: '5px', \n              marginTop: '10px',\n              textAlign: 'center',\n              fontStyle: 'italic',\n              color: '#666'\n            }}>\n              {strings[205]}\n            </div>\n          )}\n\n          {canQuest && (\n            <>\n              {questList.length > 0 && (\n                <h3>{strings[204]}</h3>\n              )}\n              {questList.map((quest) => {\n            const isRewardable = currentPlayer.activeQuests.some(\n              (q) => q.questId === quest.title && q.completed && !q.rewardCollected\n            );\n\n            const state = isRewardable ? 'reward' : 'accept';\n            const onClick = state === 'reward'\n              ? () => handleGetReward(quest)\n              : () => handleAcceptQuest(quest.title);\n\n            return (\n              <QuestGiverButton\n                key={quest.title}\n                quest={{\n                  symbol: quest.symbol,\n                  title: quest.title,\n                  textbody: quest.textbody,\n                  goals: [\n                    { action: quest.goal1action, item: quest.goal1item, qty: quest.goal1qty },\n                    { action: quest.goal2action, item: quest.goal2item, qty: quest.goal2qty },\n                    { action: quest.goal3action, item: quest.goal3item, qty: quest.goal3qty },\n                  ],\n                  reward: quest.reward,\n                  rewardqty: quest.rewardqty,\n                }}\n                state={state}\n                onClick={onClick}\n              />\n            );\n              })}\n            </>\n          )}\n          \n          {/* Developer option to sell NPC */}\n          {isDeveloper && (\n              <div className=\"shared-buttons\">\n              <button \n                className=\"btn-danger\" \n                onClick={handleSellNPC}\n                style={{ width: '100%', padding: '10px' }}\n              >\n                {strings[490]}\n              </button>\n            </div>\n          )}\n        </div>\n      )}\n\n\n{/* //////////////////// HEALING //////////////////////// */}\n\n      {npcData.action === 'heal' && healRecipes.length > 0 && (\n        <div className=\"heal-options\">\n<br />\n          {/* Fetch and display player's HP from playersInGridManager */}\n          {(() => {\n            const gridId = currentPlayer?.location?.g;\n            const playerId = currentPlayer._id?.toString();\n            const playerInGridState = playersInGridManager.getPlayersInGrid(gridId)?.[playerId];\n<br />\n            if (playerInGridState) {\n              return (\n                <>\n                  <h2>{strings[511]} <br />{playerInGridState.hp} / {playerInGridState.maxhp}</h2>\n                </>\n              );\n            } else {\n              return <h4>{strings[512]}</h4>;\n            }\n          })()}\n<br />\n          {healRecipes.map((recipe) => {\n            const ingredients = getIngredientDetails(recipe, masterResources);\n            const affordable = canAfford(recipe, inventory, 1);\n            const healAmount = recipe.qtycollected; // Healing value\n\n            return (\n              <ResourceButton\n                key={recipe.type}\n                symbol={recipe.symbol}\n                name={getLocalizedString(recipe.type, strings)}\n                details={`${strings[463]} ❤️‍🩹 +${healAmount}<br>${strings[461]} ${ingredients.join(', ') || 'None'}`}\n                disabled={!affordable}\n                onClick={() => handleHeal(recipe)}\n                // Gem purchase props\n                gemCost={recipe.gemcost || null}\n                onGemPurchase={(recipe.gemcost && !affordable) ? (modifiedRecipe) => handleGemPurchase(modifiedRecipe, 'heal') : null}\n                resource={recipe}\n                inventory={inventory}\n                backpack={backpack}\n                masterResources={masterResources}\n                currentPlayer={currentPlayer}\n              />\n            );\n          })}\n          {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n          \n          {/* Developer option to sell NPC */}\n          {isDeveloper && (\n              <div className=\"shared-buttons\">\n              <button \n                className=\"btn-danger\" \n                onClick={handleSellNPC}\n                style={{ width: '100%', padding: '10px' }}\n              >\n                {strings[490]}\n              </button>\n            </div>\n          )}\n        </div>\n      )}\n\n{/* //////////////////// TRADING //////////////////////// */}\n\n      {npcData.action === 'trade' && (\n        <div className=\"trade-options\">\n          \n          {/* Relationship Card - only show if NPC doesn't have output='noRel' */}\n          {(() => {\n            const npcResource = masterResources.find(r => r.type === npcData.type && r.category === 'npc');\n            const shouldHideRelationship = npcResource?.output === 'noRel';\n            \n            if (shouldHideRelationship) {\n              return null;\n            }\n            \n            return (\n              <RelationshipCard\n            currentPlayer={currentPlayer}\n            setCurrentPlayer={setCurrentPlayer}\n            targetName={npcData.type}\n            targetType=\"npc\"\n            targetEmoji={npcData.symbol}\n            showActions={true}\n            compact={false}\n            masterInteractions={masterInteractions}\n            updateStatus={updateStatus}\n            masterResources={masterResources}\n            playerPosition={(() => {\n              const gridId = currentPlayer?.location?.g;\n              const playerId = currentPlayer._id?.toString();\n              const playerInGridState = playersInGridManager.getPlayersInGrid(gridId)?.[playerId];\n              return playerInGridState?.position || null;\n            })()}\n            targetPosition={(() => {\n              const gridId = currentPlayer?.location?.g;\n              const npcInGrid = NPCsInGridManager.getNPCsInGrid(gridId)?.[npcData.id];\n              return npcInGrid?.position || null;\n            })()}\n            TILE_SIZE={TILE_SIZE}\n            checkDistance={() => {\n              // Get player position\n              const gridId = currentPlayer?.location?.g;\n              const playerId = currentPlayer._id?.toString();\n              const playerInGridState = playersInGridManager.getPlayersInGrid(gridId)?.[playerId];\n              if (!playerInGridState?.position) return false;\n              \n              // Get NPC position\n              const npcInGrid = NPCsInGridManager.getNPCsInGrid(gridId)?.[npcData.id];\n              if (!npcInGrid?.position) return false;\n              \n              // Calculate distance\n              const distance = calculateDistance(playerInGridState.position, npcInGrid.position);\n              const playerRange = getDerivedRange(currentPlayer, masterResources);\n              \n              return distance <= playerRange;\n            }}\n            onInteractionClick={() => {\n              return new Promise((resolve) => {\n                const wasZoomedOut = zoomLevel !== 'closer';\n                \n                // Zoom to closer if not already\n                if (wasZoomedOut) {\n                  setZoomLevel('closer');\n                  // Wait for zoom animation and re-render to complete\n                  setTimeout(() => {\n                    // Center camera on player after zoom\n                    const gridId = currentPlayer?.location?.g;\n                    const playerId = currentPlayer._id?.toString();\n                    const playerInGridState = playersInGridManager.getPlayersInGrid(gridId)?.[playerId];\n                    if (playerInGridState?.position) {\n                      // Use a larger tile size for closer zoom (typically 50)\n                      const closerTileSize = masterResources?.find(r => r.type === 'globalTuning')?.closerZoom || 50;\n                      centerCameraOnPlayer(playerInGridState.position, closerTileSize);\n                    }\n                    // Give additional time for camera centering\n                    setTimeout(resolve, 300);\n                  }, 100);\n                } else {\n                  // Already zoomed in, just center camera\n                  const gridId = currentPlayer?.location?.g;\n                  const playerId = currentPlayer._id?.toString();\n                  const playerInGridState = playersInGridManager.getPlayersInGrid(gridId)?.[playerId];\n                  if (playerInGridState?.position) {\n                    // Already at closer zoom, use current TILE_SIZE\n                    centerCameraOnPlayer(playerInGridState.position, TILE_SIZE);\n                  }\n                  resolve();\n                }\n              });\n            }}\n            onRelationshipChange={(interaction, success) => {\n              // Additional handling if needed after interaction completes\n            }}\n          />\n            );\n          })()}\n          \n          {/* Show message if trade interaction is not available due to relationship */}\n          {!canTrade && (\n            <div style={{ \n              padding: '10px', \n              backgroundColor: '#f5f5f5', \n              borderRadius: '5px', \n              marginTop: '10px',\n              textAlign: 'center',\n              fontStyle: 'italic',\n              color: '#666'\n            }}>\n              {strings[626]}\n            </div>\n          )}\n          \n          {canTrade && (\n            <>\n              <h3>{strings[420]}</h3>\n              {tradeRecipes.length > 0 ? (\n                tradeRecipes.map((recipe) => {\n                  const affordable = canAfford(recipe, inventory, backpack, 1);\n                  const quantityToGive = recipe.tradeqty || 1;\n\n                  // Format costs with color per ingredient (matching CraftingStation.js style)\n                  // Support dynamic number of ingredients based on whether data comes from masterTraders or legacy format\n                  let formattedCosts = '';\n                  \n                  // Check if this recipe has a 'requiresArray' array (from masterTraders)\n                  if (recipe.requiresArray && Array.isArray(recipe.requiresArray)) {\n                    // New format from masterTraders - dynamic number of ingredients\n                    formattedCosts = recipe.requiresArray.map((req) => {\n                      const type = req.type;\n                      const qty = req.quantity;\n                      if (!type || !qty) return '';\n                      \n                      const inventoryQty = inventory?.find(item => item.type === type)?.quantity || 0;\n                      const backpackQty = backpack?.find(item => item.type === type)?.quantity || 0;\n                      const playerQty = inventoryQty + backpackQty;\n                      const color = playerQty >= qty ? 'green' : 'red';\n                      const symbol = masterResources.find(r => r.type === type)?.symbol || '';\n                      return `<span style=\"color: ${color}; display: block;\">${symbol} ${getLocalizedString(type, strings)} ${qty} / ${playerQty}</span>`;\n                    }).join('');\n                  } else {\n                    // Legacy format - check ingredient1 through ingredientN\n                    const ingredientsList = [];\n                    for (let i = 1; i <= 10; i++) { // Check up to 10 ingredients for safety\n                      const type = recipe[`ingredient${i}`];\n                      const qty = recipe[`ingredient${i}qty`];\n                      if (!type || !qty) continue;\n                      \n                      const inventoryQty = inventory?.find(item => item.type === type)?.quantity || 0;\n                      const backpackQty = backpack?.find(item => item.type === type)?.quantity || 0;\n                      const playerQty = inventoryQty + backpackQty;\n                      const color = playerQty >= qty ? 'green' : 'red';\n                      const symbol = masterResources.find(r => r.type === type)?.symbol || '';\n                      ingredientsList.push(`<span style=\"color: ${color}; display: block;\">${symbol} ${getLocalizedString(type, strings)} ${qty} / ${playerQty}</span>`);\n                    }\n                    formattedCosts = ingredientsList.join('');\n                  }\n\n                  return (\n                    <ResourceButton\n                      key={recipe.type}\n                      symbol={recipe.symbol}\n                      name={`${getLocalizedString(recipe.type, strings)} (${quantityToGive}x)`}\n                      details={`${strings[461]}<div>${formattedCosts}</div>`}\n                      disabled={!affordable}\n                      onClick={() => handleTrade(recipe)}\n                      // Gem purchase props\n                      gemCost={recipe.gemcost || null}\n                      onGemPurchase={(recipe.gemcost && !affordable) ? (modifiedRecipe) => handleGemPurchase(modifiedRecipe, 'trade') : null}\n                      resource={recipe}\n                      inventory={inventory}\n                      backpack={backpack}\n                      masterResources={masterResources}\n                      currentPlayer={currentPlayer}\n                    />\n                  );\n                })\n              ) : (\n                <p>{strings[423]}</p>\n              )}\n              \n              {/* Trader story text */}\n              {(() => {\n                const storyStringMap = {\n                  Iago: 1201,\n                  Juliet: 1202,\n                  Falstaff: 1203,\n                  Apothecary: 1204,\n                  Gertrude: 1205,\n                  Leontes: 1206,\n                  Caliban: 1207,\n                };\n                \n                if (storyStringMap[npcData.type]) {\n                  return (\n                    <div className=\"trader-story\">\n                      <p>{strings[storyStringMap[npcData.type]]}</p>\n                    </div>\n                  );\n                }\n                return null;\n              })()}\n            </>\n          )}\n          \n          {/* Developer option to sell NPC */}\n          {isDeveloper && (\n            <div className=\"shared-buttons\">\n              <button \n                className=\"btn-danger\" \n                onClick={handleSellNPC}\n                style={{ width: '100%', padding: '10px' }}\n              >\n                {strings[490]}\n              </button>\n            </div>\n          )}\n        </div>\n      )}\n\n    </Panel>\n  );\n};\n\nexport default React.memo(NPCPanel);\n","import API_BASE from '../config';\nimport axios from 'axios';\nimport playersInGridManager from '../GridState/PlayersInGrid';\nimport { changePlayerLocation } from './GridManagement';\nimport { fetchHomesteadSignpostPosition } from './worldHelpers';\n\nexport const modifyPlayerStatsInGridState = async (statToMod, amountToMod, playerId, gridId) => {\n  try {\n    console.log('made it to modifyPlayerStatsInGridState');\n    console.log('statToMod = ', statToMod, '; amountToMod = ', amountToMod);\n\n    if (!statToMod || !amountToMod) { console.error('Invalid stat or amount to modify.'); return; }\n\n    // Use playersInGridManager to get PCs and update\n    const pcs = playersInGridManager.getPlayersInGrid(gridId);\n    const player = pcs?.[playerId];\n\n    if (!player) {\n      console.warn(`🛑 Player ${playerId} not found in playersInGrid for gridId ${gridId}`);\n      console.warn('🧠 All available PCs:', Object.keys(pcs));\n      return;\n    }\n\n    // Modify stat safely\n    const updatedValue = (player[statToMod] || 0) + amountToMod;\n    playersInGridManager.updatePC(gridId, playerId, { [statToMod]: updatedValue });\n    console.log(`✅ Modified ${statToMod} for player ${playerId} by +${amountToMod}. New value: ${updatedValue}`);\n\n  } catch (error) {\n    console.error('Error in modifyPlayerStats:', error);\n  }\n};\n\n\nexport const modifyPlayerStatsInPlayer = async (statToMod, amountToMod, playerId) => {\n  try {\n    console.log('🔄 Modifying player stats in the Player Profile (DB)');\n    console.log('statToMod = ', statToMod, '; amountToMod = ', amountToMod);\n\n    if (!statToMod || !amountToMod) {\n      console.error('❌ Invalid stat or amount to modify.');\n      return null;\n    }\n\n    // Step 1: Fetch the current player data from the server\n    const response = await axios.get(`${API_BASE}/api/player/${playerId}`);\n    const currentPlayerData = response.data;\n\n    if (!currentPlayerData || !currentPlayerData.playerId) {\n      console.error('❌ Failed to fetch current player data from the server.');\n      return null;\n    }\n\n    // Step 2: Calculate new stat value by adding to the existing value\n    const currentStatValue = currentPlayerData[statToMod] || 0;  // Default to 0 if undefined\n    const newStatValue = currentStatValue + amountToMod;\n    console.log(`✅ Updating ${statToMod}: ${currentStatValue} + ${amountToMod} = ${newStatValue}`);\n\n    // Step 3: Send the updated stat back to the database\n    await axios.post(`${API_BASE}/api/update-profile`, {\n      playerId,\n      updates: {\n        [statToMod]: newStatValue,  // ✅ Now ADDING instead of replacing\n      },\n    });\n\n    console.log(`✅ Successfully updated ${statToMod} in the database.`);\n\n    // Step 4: Return updated player data\n    currentPlayerData[statToMod] = newStatValue;\n    return currentPlayerData;\n\n  } catch (error) {\n    console.error('❌ Error in modifyPlayerStatsInPlayer:', error);\n    return null;\n  }\n};\n\n/**\n * Determines if a given stat should be stored in NPCsInGrid rather than the player document.\n * @param {string} stat - The name of the stat to check.\n * @returns {boolean} - Returns true if the stat belongs in NPCsInGrid, false otherwise.\n */\nexport const isAGridStateStat = (stat) => {\n  const NPCsInGridStats = new Set([\n    \"damage\",\n    \"armorclass\",\n    \"hp\",\n    \"maxhp\",\n    \"attackbonus\",\n    \"attackrange\",\n    \"speed\",\n    \"iscamping\",\n    \"isinboat\",\n  ]);\n\n  return NPCsInGridStats.has(stat);\n};\n\nexport const handlePlayerDeath = async (\n  player,\n  setCurrentPlayer,\n  setGridId,\n  setGrid,\n  setResources,\n  setTileTypes,\n  TILE_SIZE,\n  updateStatus,\n  setModalContent,\n  setIsModalOpen,\n  closeAllPanels\n\n) => {\n  console.log('⚰️ Handling player death for', player.username);\n\n  try {\n    const currentGridId = player.location.g;\n    \n    // Fetch the Signpost Town position from the homestead grid\n    const signpostPosition = await fetchHomesteadSignpostPosition(player.gridId);\n    \n    // Determine respawn grid and coordinates\n    const targetLocation = {\n      x: signpostPosition.x,\n      y: signpostPosition.y,\n      g: player.gridId !== currentGridId ? player.gridId : currentGridId,\n      s: player.settlementId,\n      gtype: \"homestead\",\n    };\n    // Preserve other location fields (frontier, settlement, gtype)\n    const updatedLocation = {\n      ...player.location,\n      ...targetLocation,\n    };\n\n    // Determine restored HP based on account status\n    let restoredHp = 25;\n    if (player.accountStatus === \"Gold\") {\n      restoredHp = Math.floor(player.baseMaxhp / 2); // use baseMaxhp or maxHp as appropriate\n    }\n    console.log(`Restored HP for ${player.username}: ${restoredHp}`);\n    \n    // Keep only Tent and Boat items in backpack, discard everything else\n    const filteredBackpack = player.backpack.filter((item) => item.type === \"Tent\" || item.type === \"Boat\");\n    const originalLocation = { ...player.location }; // ✅ preserve the correct fromLocation\n    \n    // Create updated player object with restored HP\n    const updatedPlayer = {\n      ...player,\n      hp: restoredHp,\n      backpack: filteredBackpack,\n      location: updatedLocation\n    };\n\n    // 1. **Update Player Data in the Database**\n    await axios.post(`${API_BASE}/api/update-profile`, {\n      playerId: player._id,\n      updates: {\n        backpack: filteredBackpack,  // Backpack now only contains Tent and Boat\n        hp: restoredHp,  // Use restored HP value\n        location: updatedLocation,  // Update location\n        settings: player.settings,\n      },\n    });\n    setCurrentPlayer(updatedPlayer);\n    localStorage.setItem('player', JSON.stringify(updatedPlayer));\n\n    // REMOVED: Don't update PlayersInGrid here - let changePlayerLocation handle the cleanup\n    // The player is dead and about to be moved, so we shouldn't update their HP in the current grid\n\n    console.log(`Player ${player.username} will be teleported to home grid with ${restoredHp} HP.`);\n    console.log('📦 Player before changePlayerLocation:', JSON.stringify(updatedPlayer, null, 2));\n\n    // 4. **Load New Grid & Add Player to GridState**\n    await changePlayerLocation(\n      updatedPlayer,\n      originalLocation,   // fromLocation\n      updatedLocation,   // toLocation\n      setCurrentPlayer,\n      setGridId,\n      setGrid,\n      setTileTypes,\n      setResources,\n      TILE_SIZE,\n      closeAllPanels,\n      updateStatus,\n      null, // bulkOperationContext not available\n      null, // masterResources not available\n      null, // strings not available\n      null  // masterTrophies not available\n    );\n\n    // 5. **Ensure HP is properly set in the grid state after teleportation**\n    console.log(`🏥 Ensuring player HP is set to ${restoredHp} in grid state`);\n    const playersInGridManager = await import('../GridState/PlayersInGrid').then(m => m.default);\n    await playersInGridManager.updatePC(updatedPlayer.gridId, updatedPlayer._id, { hp: restoredHp });\n    \n    // Also ensure the currentPlayer state reflects the restored HP\n    setCurrentPlayer(prevPlayer => ({\n      ...prevPlayer,\n      hp: restoredHp\n    }));\n\n  } catch (error) {\n    console.error('Error during player death handling and teleportation:', error);\n  }\n};\n","import API_BASE from '../config';\nimport axios from 'axios';\nimport { refreshPlayerAfterInventoryUpdate, spendIngredients } from '../Utils/InventoryManagement';\nimport { updateGridResource } from '../Utils/GridManagement';\nimport { addResourceToGrid } from '../Utils/worldHelpers';\nimport FloatingTextManager from '../UI/FloatingText';\nimport { trackQuestProgress } from './Quests/QuestGoalTracker';\nimport NPCsInGridManager from '../GridState/GridStateNPCs';\nimport playersInGridManager from '../GridState/PlayersInGrid';\nimport { getCurrentTileCoordinates, enrichResourceFromMaster } from '../Utils/ResourceHelpers';\nimport GlobalGridStateTilesAndResources from '../GridState/GlobalGridStateTilesAndResources';\nimport { incrementFTUEStep } from './FTUE/FTUE';\n\nexport const handleConstructionWithGems = async (params) => {\n  // Wrapper function that uses a modified recipe if provided\n  if (params.modifiedRecipe) {\n    // Replace the selected resource in buildOptions with the modified recipe\n    const modifiedBuildOptions = params.buildOptions.map(item =>\n      item.type === params.modifiedRecipe.type ? params.modifiedRecipe : item\n    );\n    return handleConstruction({\n      ...params,\n      buildOptions: modifiedBuildOptions,\n    });\n  }\n  return handleConstruction(params);\n};\n\nexport const handleConstruction = async ({\n  TILE_SIZE,\n  selectedItem,\n  buildOptions,\n  inventory,\n  setInventory,\n  backpack,\n  setBackpack,\n  resources,\n  setResources,\n  currentPlayer,\n  setCurrentPlayer,\n  gridId,\n  updateStatus,\n}) => {\n  if (!currentPlayer) {\n    console.warn('Current Player not provided; inventory changes will not be saved.');\n    return;\n  }\n  if (!selectedItem) {\n    console.warn('Invalid building selection.');\n    return;\n  }\n  // **Get player position dynamically **\n  const playerId = currentPlayer._id.toString();  // Convert ObjectId to string\n  const playersInGrid = playersInGridManager.getPlayersInGrid(gridId);\n  const player = playersInGrid?.[playerId];\n  const playerPosition = player?.position;  // Use grid-relative coordinates directly (no scaling)\n\n  const coords = getCurrentTileCoordinates(gridId, currentPlayer);\n  if (!coords) return;\n  const { tileX, tileY } = coords;\n  const x = tileX;\n  const y = tileY;\n\n  console.log('playerPosition = ', playerPosition);\n  console.log('x = ',tileX,\" y = \",tileY);\n\n  // Ensure valid player position\n  if (!playerPosition || tileX == null || tileY == null) {\n    console.warn('Player position is invalid.');\n    return;\n  }\n\n  const selectedResource = buildOptions.find((item) => item.type === selectedItem);\n\n  // Check if this is a multi-tile resource\n  const resourceRange = selectedResource.range || 1;\n  console.log(`🏗️ Building ${selectedItem} with range ${resourceRange}`);\n\n  // Skip tile occupation check for NPCs since they don't occupy grid tiles\n  if (selectedResource.category !== 'npc') {\n    // For multi-tile resources, check all required tiles\n    // Using player position as lower-left anchor\n    const tilesToCheck = [];\n    for (let dx = 0; dx < resourceRange; dx++) {\n      for (let dy = 0; dy < resourceRange; dy++) {\n        tilesToCheck.push({ x: x + dx, y: y - dy });\n      }\n    }\n\n    console.log('📍 Tiles to check for placement:', tilesToCheck);\n\n    // Check if any of the required tiles are occupied\n    const occupiedTile = tilesToCheck.find(tile => \n      resources.some(res => res.x === tile.x && res.y === tile.y)\n    );\n\n    if (occupiedTile) {\n      console.warn(`Cannot build ${selectedItem} - tile at (${occupiedTile.x}, ${occupiedTile.y}) is occupied.`);\n      FloatingTextManager.addFloatingText(306, x, y, TILE_SIZE);\n      return; // Exit before deducting inventory\n    }\n  }\n\n  const success = await spendIngredients({\n    playerId: currentPlayer.playerId,\n    recipe: selectedResource,\n    inventory,\n    backpack,\n    setInventory,\n    setBackpack,\n    setCurrentPlayer,\n    updateStatus,\n  });\n  if (!success) {\n    FloatingTextManager.addFloatingText(305, playerPosition.x, playerPosition.y, TILE_SIZE);\n    return;\n  }\n  // refreshPlayerAfterInventoryUpdate is already called inside spendIngredients\n\n  console.log('selectedResource.action=', selectedResource.action);\n\n  // Calculate total cost for status message\n  const costDetails = [];\n  for (let i = 1; i <= 4; i++) {\n    const ingredientType = selectedResource[`ingredient${i}`];\n    const ingredientQty = selectedResource[`ingredient${i}qty`];\n    if (ingredientType && ingredientQty) {\n      costDetails.push(`${ingredientQty} ${ingredientType}`);\n    }\n  }\n  const costString = costDetails.length > 0 ? costDetails.join(', ') : 'free';\n\n  if (selectedResource.category === 'npc') {\n    // Spawning NPC directly at player's tile coordinates\n    NPCsInGridManager.spawnNPC(gridId, selectedResource, playerPosition);\n    console.log('Spawned NPC:', gridId, selectedResource, playerPosition);\n    \n    // Show floating text for NPC purchase\n    FloatingTextManager.addFloatingText(300, playerPosition.x, playerPosition.y, TILE_SIZE);\n    \n    // Show status message with purchase details\n    updateStatus(`${selectedResource.type} purchased for ${costString}.`);\n    \n    // Track quest progress for \"Buy\" actions\n    await trackQuestProgress(currentPlayer, 'Buy', selectedResource.type, 1, setCurrentPlayer);\n    \n    // Check if first-time user bought a cow\n    if (currentPlayer.firsttimeuser === true && selectedResource.type === 'Cow') {\n      console.log('🎓 First-time user purchased first Cow, advancing FTUE step');\n      await incrementFTUEStep(currentPlayer.playerId, currentPlayer, setCurrentPlayer);\n    }\n\n  } else {\n    console.log('Placing resource on the grid:', selectedItem);\n    const debugBefore = resources.find(res => res.x === x && res.y === y);\n    console.log('🔍 Existing resource at location before setResources:', debugBefore);\n\n    const rawResource = { type: selectedItem, x, y };\n    const enriched = enrichResourceFromMaster(rawResource, buildOptions); // buildOptions contains masterResources\n    \n    // Ensure range is included for multi-tile resources\n    if (resourceRange > 1) {\n      enriched.range = resourceRange;\n      enriched.anchorKey = `${selectedItem}_${x}_${y}`;\n    }\n    \n    let finalResources = [...resources, enriched];\n\n    console.log('📦 Preparing resource update with:', enriched);\n    \n    try {\n      // Create shadow placeholders for multi-tile objects in LOCAL STATE ONLY\n      if (resourceRange > 1) {\n        \n        for (let dx = 0; dx < resourceRange; dx++) {\n          for (let dy = 0; dy < resourceRange; dy++) {\n            // Skip the anchor tile (0,0)\n            if (dx === 0 && dy === 0) continue;\n            \n            const shadowX = x + dx;\n            const shadowY = y - dy;\n            const shadowResource = {\n              type: 'shadow',\n              x: shadowX,\n              y: shadowY,\n              parentAnchorKey: enriched.anchorKey,\n              passable: enriched.passable // Inherit passable property from parent\n              // No symbol - renders as empty/invisible\n            };\n            \n            \n            // Add shadow to final resources array (LOCAL STATE ONLY - NOT SAVED TO DB)\n            finalResources.push(shadowResource);\n          }\n        }\n      }\n      \n      // Update local state ONCE with all resources (main + shadows)\n      console.log('🧪 Updating local state with all resources');\n      GlobalGridStateTilesAndResources.setResources(finalResources);\n      setResources(finalResources);\n      \n      // Update ONLY the main resource in DB (NOT shadows)\n      await updateGridResource(gridId, rawResource, true);\n      \n      FloatingTextManager.addFloatingText(300, playerPosition.x, playerPosition.y, TILE_SIZE);\n      \n      // Show status message with purchase details\n      updateStatus(`${selectedItem} purchased for ${costString}.`);\n      \n      // Track quest progress sequentially to avoid conflicts\n      await trackQuestProgress(currentPlayer, 'Build', selectedItem, 1, setCurrentPlayer);\n      await trackQuestProgress(currentPlayer, 'Buy', selectedItem, 1, setCurrentPlayer);\n    } catch (error) {\n      console.error('Error placing resource on grid:', error);\n      return;\n    }\n  }\n};","// governmentUtils.js\nimport axios from 'axios';\nimport API_BASE from '../../config';\n\n/**\n * Fetches the mayor's username for a given settlementId.\n * Returns \"Vacant\" if no mayor is assigned,\n * \"Error\" if something went wrong,\n * or the mayor's username.\n */\nexport async function getMayorUsername(settlementId) {\n  if (!settlementId) {\n    console.warn(\"⚠️ No settlementId provided to getMayorUsername.\");\n    return \"Error\";\n  }\n\n  try {\n    // Step 1: Fetch settlement data\n    const res = await axios.get(`${API_BASE}/api/get-settlement/${settlementId}`);\n    const settlement = res.data;\n\n    // Step 2: Find the role entry for Mayor\n    const mayorRole = settlement.roles?.find(role => role.roleName === \"Mayor\");\n    if (!mayorRole || !mayorRole.playerId || mayorRole.playerId === \"Vacant\") {\n      return \"Vacant\";\n    }\n\n    // Step 3: Fetch player info\n    const playerRes = await axios.get(`${API_BASE}/api/player/${mayorRole.playerId}`);\n    return playerRes.data.username || \"Unknown\";\n    \n  } catch (err) {\n    console.error(\"❌ Failed to fetch mayor username:\", err);\n    return \"Error\";\n  }\n}","import API_BASE from '../../config';\nimport React, { useState, useEffect } from 'react';\nimport Panel from '../../UI/Panel';\nimport axios from 'axios';\nimport ResourceButton from '../../UI/ResourceButton';\nimport { handleConstruction, handleConstructionWithGems } from '../BuildAndBuy';\nimport { getIngredientDetails } from '../../Utils/ResourceHelpers';\nimport { canAfford } from '../../Utils/InventoryManagement';\nimport { usePanelContext } from '../../UI/PanelContext';\nimport '../../UI/ResourceButton.css'; // ✅ Ensure the correct path\nimport { useStrings } from '../../UI/StringsContext';\nimport { getLocalizedString } from '../../Utils/stringLookup';\nimport { getMayorUsername } from '../Government/GovUtils';\n\nconst BuildPanel = ({\n  TILE_SIZE,\n  resources,\n  setResources,\n  inventory,\n  setInventory,\n  backpack,\n  setBackpack,\n  currentPlayer,\n  setCurrentPlayer,\n  gridId,\n  masterResources, // Added for quest tracking\n  masterSkills, // Uncomment if needed for skill checks\n  updateStatus,\n  isDeveloper,\n  currentSeason,\n}) => {\n  const { closePanel } = usePanelContext(); // Use closePanel from context\n  const [buildOptions, setBuildOptions] = useState([]);\n  const [allResources, setAllResources] = useState([]);\n  const [isContentLoading, setIsContentLoading] = useState(false);\n  const [isMayor, setIsMayor] = useState(false);\n  const strings = useStrings();\n\n  // Fetch inventory and build options when the panel initializes\n  useEffect(() => {\n    console.log('🏗️ BuildPanel opened with currentPlayer:', {\n      username: currentPlayer?.username,\n      role: currentPlayer?.role,\n      homeSettlementId: currentPlayer?.settlementId,\n      currentLocation: currentPlayer?.location,\n      isDeveloper\n    });\n    \n    const fetchData = async () => {\n      //setIsContentLoading(true);\n      try {\n        // Check if player is mayor ONLY if we're in a town\n        let isPlayerMayor = false;\n        if (currentPlayer.location.gtype === 'town' && currentPlayer.location.s) {\n          console.log('🏛️ In town, checking if player is mayor...');\n          const mayorUsername = await getMayorUsername(currentPlayer.location.s);\n          isPlayerMayor = mayorUsername === currentPlayer.username;\n          console.log('🏛️ Mayor check:', { mayorUsername, playerUsername: currentPlayer.username, isPlayerMayor });\n        }\n        setIsMayor(isPlayerMayor);\n        \n        // Fetch inventory\n        const inventoryResponse = await axios.get(`${API_BASE}/api/inventory/${currentPlayer.playerId}`);\n        setInventory(inventoryResponse.data.inventory || []);\n        // Fetch all resources and filter for build options\n        const resourcesResponse = await axios.get(`${API_BASE}/api/resources`);\n        const allResourcesData = resourcesResponse.data;\n        setAllResources(allResourcesData);\n        \n        // Debug: Show all BuildTown resources\n        const buildTownResources = allResourcesData.filter(r => r.source === 'BuildTown');\n        console.log('🏢 BuildTown resources found:', buildTownResources.map(r => r.type));\n        // ✅ Filter build options based on the player's location\n        const validBuildOptions = allResourcesData.filter(resource => {\n          // Check if resource is a valid build option based on source and location\n          // Convert to strings for comparison to handle ObjectId vs string issues\n          const currentSettlementStr = String(currentPlayer.location.s || '');\n          const homeSettlementStr = String(currentPlayer.settlementId || '');\n          const settlementsMatch = currentSettlementStr === homeSettlementStr;\n          \n          if (resource.source === 'BuildTown') {\n            console.log(`BuildPanel: Checking ${resource.type}:`, {\n              source: resource.source,\n              gtype: currentPlayer.location.gtype,\n              isPlayerMayor,\n              currentSettlement: currentPlayer.location.s,\n              homeSettlement: currentPlayer.settlementId,\n              currentSettlementStr,\n              homeSettlementStr,\n              settlementsMatch,\n              isDeveloper\n            });\n          }\n          \n          const isValidSource = resource.source === 'Build' || \n            (resource.source === 'BuildTown' && currentPlayer.location.gtype === 'town' && (isPlayerMayor || isDeveloper) && \n             (settlementsMatch || isDeveloper)) ||\n            (resource.source === 'BuildValley' && currentPlayer.location.gtype != 'homestead');\n          \n          if (!isValidSource) return false;\n          \n          // Check seasonal restriction\n          if (resource.season && currentSeason && resource.season !== currentSeason) {\n            return false;\n          }\n          \n          // Pet-specific filtering\n          if (resource.category === 'pet') {\n            console.log(`🐾 Checking pet ${resource.type}...`);\n            \n            // Only allow pets on homesteads (unless isDeveloper)\n            if (currentPlayer.location.gtype !== 'homestead' && !isDeveloper) {\n              console.log(`🐾 Filtering out pet ${resource.type} - not on homestead`);\n              return false;\n            }\n            \n            // Check if player already has this pet type on their homestead\n            // Resources on the grid use layoutkey to identify their type\n            const existingPetOfType = resources.find(r => \n              r.layoutkey === resource.type || r.type === resource.type\n            );\n            \n            if (existingPetOfType && !isDeveloper) {\n              console.log(`🐾 Filtering out pet ${resource.type} - already exists on grid (layoutkey: ${existingPetOfType.layoutkey}, type: ${existingPetOfType.type})`);\n              return false; // Already have one of this pet type\n            }\n            \n            console.log(`🐾 Pet ${resource.type} is available to build`);\n          }\n          \n          return true;\n        });\n        \n        // Debug: Show what will be displayed\n        const buildTownInFinal = validBuildOptions.filter(r => r.source === 'BuildTown');\n        console.log('🏗️ Final BuildPanel options:', {\n          totalOptions: validBuildOptions.length,\n          buildTownIncluded: buildTownInFinal.map(r => r.type),\n          shouldHaveBuildTown: currentPlayer.location.gtype === 'town' && \n                               (isPlayerMayor || isDeveloper) && \n                               (String(currentPlayer.location.s) === String(currentPlayer.settlementId) || isDeveloper)\n        });\n        \n        setBuildOptions(validBuildOptions); \n      } catch (error) {\n        console.error('Error fetching build panel data:', error);\n      } finally {\n        setIsContentLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [currentPlayer, currentPlayer?.location?.s, currentPlayer?.location?.gtype, currentPlayer?.settlementId, isDeveloper, currentSeason]);\n\n  const hasRequiredSkill = (requiredSkill) => {\n    return !requiredSkill || currentPlayer.skills?.some((owned) => owned.type === requiredSkill);\n  };\n\n  const handleGemPurchase = async (modifiedRecipe) => {\n    // This is called by the gem button with a recipe modified to include gems\n    return handleConstructionWithGems({\n      TILE_SIZE,\n      selectedItem: modifiedRecipe.type,\n      buildOptions,\n      inventory,\n      setInventory,\n      backpack,\n      setBackpack,\n      resources,\n      setResources,\n      currentPlayer,\n      setCurrentPlayer,\n      gridId,\n      updateStatus,\n      modifiedRecipe, // Pass the gem-modified recipe\n    });\n  };\n\n\n  \n  return (\n    <Panel onClose={closePanel} descriptionKey=\"1002\" titleKey=\"1102\" panelName=\"BuildPanel\">\n      <div className=\"standard-panel\">\n        {isContentLoading ? (\n          <p>{strings[98]}</p>\n        ) : (\n          <>\n            {buildOptions.map((item) => {\n              const ingredients = getIngredientDetails(item, allResources);\n              const affordable = canAfford(item, inventory, backpack);\n              const requirementsMet = hasRequiredSkill(item.requires);\n\n              const formattedCosts = [1, 2, 3, 4].map((i) => {\n                const type = item[`ingredient${i}`];\n                const qty = item[`ingredient${i}qty`];\n                if (!type || !qty) return '';\n\n                const inventoryQty = inventory?.find(inv => inv.type === type)?.quantity || 0;\n                const backpackQty = backpack?.find(item => item.type === type)?.quantity || 0;\n                const playerQty = inventoryQty + backpackQty;\n                const color = playerQty >= qty ? 'green' : 'red';\n                const symbol = allResources.find(r => r.type === type)?.symbol || '';\n                return `<span style=\"color: ${color}; display: block;\">${symbol} ${getLocalizedString(type, strings)} ${qty} / ${playerQty}</span>`;\n              }).join('');\n\n              const skillColor = requirementsMet ? 'green' : 'red';\n              const details =\n                (item.requires ? `<span style=\"color: ${skillColor};\">${strings[460]}${getLocalizedString(item.requires, strings)}</span><br>` : '') +\n                `${strings[461]}<div>${formattedCosts}</div>`;\n\n              const info = `\n                ${strings[820]}${\n                  allResources\n                    .filter((res) => res.source === item.type)\n                    .map((res) => `${res.symbol || ''} ${getLocalizedString(res.type, strings)}`)\n                    .join(', ') || 'None'\n                }\n              `;\n\n              return (\n                <ResourceButton\n                  key={item.type}\n                  symbol={item.symbol}\n                  name={getLocalizedString(item.type, strings)}\n                  details={details}\n                  info={info}\n                  disabled={!affordable || !requirementsMet}\n                  onClick={() =>\n                    affordable &&\n                    requirementsMet &&\n                    handleConstruction({\n                      TILE_SIZE,\n                      selectedItem: item.type,\n                      buildOptions,\n                      inventory,\n                      setInventory,\n                      backpack,\n                      setBackpack, \n                      resources,\n                      setResources,\n                      setErrorMessage: console.error, // Replace with real error handling if needed\n                      currentPlayer,\n                      setCurrentPlayer,\n                      gridId,\n                      updateStatus,\n                    })\n                  }\n                  onGemPurchase={(item.gemcost && (!affordable || !requirementsMet)) ? handleGemPurchase : null}\n                  resource={item}\n                  inventory={inventory}\n                  backpack={backpack}\n                  masterResources={masterResources || allResources}\n                  currentPlayer={currentPlayer}\n                />\n              );\n            })}\n          </>\n        )}\n      </div>   \n    </Panel>\n  );\n};\n\nexport default React.memo(BuildPanel);","import API_BASE from '../../config'; \nimport React, { useState, useEffect } from 'react';\nimport Panel from '../../UI/Panel';\nimport axios from 'axios';\nimport ResourceButton from '../../UI/ResourceButton';\nimport { handleConstruction, handleConstructionWithGems } from '../BuildAndBuy';\nimport { getIngredientDetails } from '../../Utils/ResourceHelpers';\nimport { canAfford } from '../../Utils/InventoryManagement';\nimport { usePanelContext } from '../../UI/PanelContext';\nimport '../../UI/ResourceButton.css'; // ✅ Ensure the correct path\nimport { useStrings } from '../../UI/StringsContext';\nimport { getLocalizedString } from '../../Utils/stringLookup';\n\nconst BuyPanel = ({\n  TILE_SIZE,\n  resources,\n  setResources,\n  inventory,\n  setInventory, \n  backpack,\n  setBackpack,\n  currentPlayer,\n  setCurrentPlayer,\n  gridId,\n  masterResources, \n  masterSkills, \n  updateStatus,\n  isDeveloper,\n  currentSeason,\n}) => {\n  const { closePanel } = usePanelContext();\n  const [buyOptions, setBuyOptions] = useState([]);\n  const [allResources, setAllResources] = useState([]);\n  const [isContentLoading, setIsContentLoading] = useState(false);\n  const strings = useStrings();\n\n  useEffect(() => {\n    const fetchData = async () => {\n//      setIsContentLoading(true);\n      try { \n        const inventoryResponse = await axios.get(`${API_BASE}/api/inventory/${currentPlayer.playerId}`);\n        setInventory(inventoryResponse.data.inventory || []);\n        const resourcesResponse = await axios.get(`${API_BASE}/api/resources`);\n        const allResourcesData = resourcesResponse.data;\n        setAllResources(allResourcesData);\n        const isHomestead = currentPlayer?.location?.gtype === 'homestead';\n        const purchasableItems = allResourcesData.filter(\n          (resource) => {\n            // Check if resource is a buy item\n            if (resource.source !== 'Buy') return false;\n            \n            // Check passability based on location\n            if (!isDeveloper && !isHomestead && resource.passable === false) return false;\n            \n            // Check seasonal restriction\n            if (resource.season && currentSeason && resource.season !== currentSeason) {\n              return false;\n            }\n            \n            return true;\n          }\n        );\n        setBuyOptions(purchasableItems);\n      } catch (error) {\n        console.error('Error fetching buy panel data:', error);\n      } finally {\n        setIsContentLoading(false);\n      }\n    }; \n\n    fetchData();\n  }, [currentPlayer]);\n\n  const hasRequiredSkill = (requiredSkill) => {\n    return !requiredSkill || currentPlayer.skills?.some((owned) => owned.type === requiredSkill);\n  };\n\n  const handleGemPurchase = async (modifiedRecipe) => {\n    // This is called by the gem button with a recipe modified to include gems\n    return handleConstructionWithGems({\n      TILE_SIZE,\n      selectedItem: modifiedRecipe.type,\n      buildOptions: buyOptions,\n      inventory,\n      setInventory,\n      backpack,\n      setBackpack,\n      resources,\n      setResources,\n      currentPlayer,\n      setCurrentPlayer,\n      gridId,\n      updateStatus,\n      modifiedRecipe, // Pass the gem-modified recipe\n    });\n  };\n\n  return ( \n    <Panel onClose={closePanel} descriptionKey=\"1003\" titleKey=\"1103\" panelName=\"BuyPanel\">\n      <div className=\"standard-panel\">\n        {isContentLoading ? (\n          <p>{strings[98]}</p>\n        ) : (\n          <>\n            {buyOptions.map((item) => {\n              const ingredients = getIngredientDetails(item, allResources);\n              const affordable = canAfford(item, inventory);\n              const requirementsMet = hasRequiredSkill(item.requires);\n\n              const formattedCosts = [1, 2, 3, 4].map((i) => {\n                const type = item[`ingredient${i}`];\n                const qty = item[`ingredient${i}qty`];\n                if (!type || !qty) return '';\n\n                const inventoryQty = inventory?.find(inv => inv.type === type)?.quantity || 0;\n                const backpackQty = backpack?.find(item => item.type === type)?.quantity || 0;\n                const playerQty = inventoryQty + backpackQty;\n                const color = playerQty >= qty ? 'green' : 'red';\n                const symbol = allResources.find(r => r.type === type)?.symbol || '';\n                return `<span style=\"color: ${color}; display: block;\">${symbol} ${getLocalizedString(type, strings)} ${qty} / ${playerQty}</span>`;\n              }).join('');\n\n              const skillColor = requirementsMet ? 'green' : 'red';\n              const details =\n                (item.requires ? `<span style=\"color: ${skillColor};\">${strings[460]}${getLocalizedString(item.requires, strings)}</span><br>` : '') +\n                `${strings[461]}<div>${formattedCosts}</div>`;\n\n              // Create info tooltip content\n              const info = (\n                <div className=\"info-content\">\n                  <div>{strings[820]}{item.output ? `${allResources.find(r => r.type === item.output)?.symbol || ''} ${getLocalizedString(item.output, strings)}` : 'Nothing'}</div>\n                  <div>{strings[821]}{item.qtycollected || 1}</div>\n                </div>\n              );\n\n              return (\n                <ResourceButton\n                  key={item.type}\n                  symbol={item.symbol}\n                  name={getLocalizedString(item.type, strings)}\n                  details={details}\n                  info={info}\n                  disabled={!affordable || !requirementsMet}\n                  onClick={() =>\n                    affordable &&\n                    requirementsMet &&\n                    handleConstruction({\n                      TILE_SIZE,\n                      selectedItem: item.type,\n                      buildOptions: buyOptions,\n                      inventory,\n                      setInventory,\n                      backpack,\n                      setBackpack,\n                      resources,\n                      setResources,\n                      setErrorMessage: console.error,\n                      currentPlayer,\n                      setCurrentPlayer,\n                      gridId,\n                      updateStatus,\n                    })\n                  }\n                  onGemPurchase={(item.gemcost && (!affordable || !requirementsMet)) ? handleGemPurchase : null}\n                  resource={item}\n                  inventory={inventory}\n                  backpack={backpack}\n                  masterResources={masterResources || allResources}\n                  currentPlayer={currentPlayer}\n                />\n              );\n            })}\n          </>\n        )}\n      </div>\n    </Panel>\n  );\n};\n\nexport default React.memo(BuyPanel);","import API_BASE from '../../config'; \nimport React, { useState, useEffect } from 'react';\nimport Panel from '../../UI/Panel';\nimport axios from 'axios';\nimport ResourceButton from '../../UI/ResourceButton';\nimport { handleConstruction, handleConstructionWithGems } from '../BuildAndBuy';\nimport { getIngredientDetails } from '../../Utils/ResourceHelpers';\nimport { canAfford } from '../../Utils/InventoryManagement';\nimport { usePanelContext } from '../../UI/PanelContext';\nimport '../../UI/ResourceButton.css'; // ✅ Ensure the correct path\nimport { useStrings } from '../../UI/StringsContext';\nimport { getLocalizedString } from '../../Utils/stringLookup';\n\nconst BuyDecoPanel = ({\n  TILE_SIZE,\n  resources,\n  setResources,\n  inventory,\n  setInventory, \n  backpack,\n  setBackpack,\n  currentPlayer,\n  setCurrentPlayer,\n  gridId,\n  masterResources, \n  masterSkills, \n  updateStatus,\n  isDeveloper,\n  currentSeason,\n}) => {\n  const { closePanel } = usePanelContext();\n  const [buyOptions, setBuyOptions] = useState([]);\n  const [allResources, setAllResources] = useState([]);\n  const [isContentLoading, setIsContentLoading] = useState(false);\n  const strings = useStrings();\n\n  useEffect(() => {\n    const fetchData = async () => {\n//      setIsContentLoading(true);\n      try { \n        const inventoryResponse = await axios.get(`${API_BASE}/api/inventory/${currentPlayer.playerId}`);\n        setInventory(inventoryResponse.data.inventory || []);\n        const resourcesResponse = await axios.get(`${API_BASE}/api/resources`);\n        const allResourcesData = resourcesResponse.data;\n        setAllResources(allResourcesData);\n        const isHomestead = currentPlayer?.location?.gtype === 'homestead';\n        const purchasableItems = allResourcesData.filter(\n          (resource) => {\n            // Check if resource is a deco item\n            if (resource.source !== 'Deco') return false;\n            \n            // Check passability based on location\n            if (!isDeveloper && !isHomestead && resource.passable === false) return false;\n            \n            // Check seasonal restriction\n            if (resource.season && currentSeason && resource.season !== currentSeason) {\n              return false;\n            }\n            \n            return true;\n          }\n        );\n        setBuyOptions(purchasableItems);\n      } catch (error) {\n        console.error('Error fetching buy panel data:', error);\n      } finally {\n        setIsContentLoading(false);\n      }\n    }; \n\n    fetchData();\n  }, [currentPlayer]);\n\n  const hasRequiredSkill = (requiredSkill) => {\n    return !requiredSkill || currentPlayer.skills?.some((owned) => owned.type === requiredSkill);\n  };\n\n  const handleGemPurchase = async (modifiedRecipe) => {\n    // This is called by the gem button with a recipe modified to include gems\n    return handleConstructionWithGems({\n      TILE_SIZE,\n      selectedItem: modifiedRecipe.type,\n      buildOptions: buyOptions,\n      inventory,\n      setInventory,\n      backpack,\n      setBackpack,\n      resources,\n      setResources,\n      currentPlayer,\n      setCurrentPlayer,\n      gridId,\n      updateStatus,\n      modifiedRecipe, // Pass the gem-modified recipe\n    });\n  };\n\n  return ( \n    <Panel onClose={closePanel} descriptionKey=\"1031\" titleKey=\"1131\" panelName=\"BuyDecoPanel\">\n      <div className=\"standard-panel\">\n        {isContentLoading ? (\n          <p>{strings[98]}</p>\n        ) : (\n          <>\n            {buyOptions.map((item) => {\n              const ingredients = getIngredientDetails(item, allResources);\n              const affordable = canAfford(item, inventory);\n              const requirementsMet = hasRequiredSkill(item.requires);\n\n              const formattedCosts = [1, 2, 3, 4].map((i) => {\n                const type = item[`ingredient${i}`];\n                const qty = item[`ingredient${i}qty`];\n                if (!type || !qty) return '';\n\n                const inventoryQty = inventory?.find(inv => inv.type === type)?.quantity || 0;\n                const backpackQty = backpack?.find(item => item.type === type)?.quantity || 0;\n                const playerQty = inventoryQty + backpackQty;\n                const color = playerQty >= qty ? 'green' : 'red';\n                const symbol = allResources.find(r => r.type === type)?.symbol || '';\n                return `<span style=\"color: ${color}; display: block;\">${symbol} ${getLocalizedString(type, strings)} ${qty} / ${playerQty}</span>`;\n              }).join('');\n\n              const skillColor = requirementsMet ? 'green' : 'red';\n              const details =\n                (item.requires ? `<span style=\"color: ${skillColor};\">${strings[460]}${getLocalizedString(item.requires, strings)}</span><br>` : '') +\n                `${strings[461]}<div>${formattedCosts}</div>`;\n\n              return (\n                <ResourceButton\n                  key={item.type}\n                  symbol={item.symbol}\n                  name={getLocalizedString(item.type, strings)}\n                  details={details}\n                  disabled={!affordable || !requirementsMet}\n                  onClick={() =>\n                    affordable &&\n                    requirementsMet &&\n                    handleConstruction({\n                      TILE_SIZE,\n                      selectedItem: item.type,\n                      buildOptions: buyOptions,\n                      inventory,\n                      setInventory,\n                      backpack,\n                      setBackpack,\n                      resources,\n                      setResources,\n                      setErrorMessage: console.error,\n                      currentPlayer,\n                      setCurrentPlayer,\n                      gridId,\n                      updateStatus,\n                    })\n                  }\n                  gemCost={item.gemcost || null}\n                  onGemPurchase={(item.gemcost && (!affordable || !requirementsMet)) ? handleGemPurchase : null}\n                  resource={item}\n                  inventory={inventory}\n                  backpack={backpack}\n                  masterResources={masterResources || allResources}\n                  currentPlayer={currentPlayer}\n                />\n              );\n            })}\n          </>\n        )}\n      </div>\n    </Panel>\n  );\n};\n\nexport default React.memo(BuyDecoPanel);","// Shared function to format countdown timers consistently across the app\n// ✅ Ensures endTime is a valid Date object before doing calculations.\nexport const formatCountdown = (endTime, now) => {\n    if (!endTime || endTime <= now) return \"0s\"; \n  \n    const timeDiff = endTime - now;\n    const days = Math.floor(timeDiff / (1000 * 60 * 60 * 24));\n    const hours = Math.floor((timeDiff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    const minutes = Math.floor((timeDiff % (1000 * 60 * 60)) / (1000 * 60));\n    const seconds = Math.floor((timeDiff % (1000 * 60)) / 1000);\n  \n    // Build the string dynamically, only showing non-zero values\n    const parts = [];\n    if (days > 0) parts.push(`${days}d`);\n    if (hours > 0) parts.push(`${hours}h`);\n    if (minutes > 0) parts.push(`${minutes}m`);\n    if (seconds > 0 || parts.length === 0) parts.push(`${seconds}s`); // Always show seconds if nothing else\n    \n    return parts.join(' ');\n};\n\n// Shared function to format static durations (e.g., \"Time needed: X\")\n// Only shows non-zero time units, stopping at the smallest non-zero unit\nexport const formatDuration = (seconds) => {\n    if (!seconds || seconds <= 0) return \"0s\";\n    \n    const days = Math.floor(seconds / 86400);\n    const hours = Math.floor((seconds % 86400) / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    const secs = Math.floor(seconds % 60);\n    \n    const parts = [];\n    if (days > 0) parts.push(`${days}d`);\n    if (hours > 0) parts.push(`${hours}h`);\n    if (minutes > 0) parts.push(`${minutes}m`);\n    if (secs > 0 || parts.length === 0) parts.push(`${secs}s`); // Always show seconds if nothing else\n    \n    // For static durations, only show the first 2 most significant units\n    // e.g., \"2d 16h\" instead of \"2d 16h 0m 0s\"\n    return parts.slice(0, 2).join(' ');\n}; ","import API_BASE from '../../config';\nimport React, { useState, useEffect, useContext } from 'react';\nimport Panel from '../../UI/Panel';\nimport axios from 'axios';\nimport ResourceButton from '../../UI/ResourceButton';\nimport { getIngredientDetails } from '../../Utils/ResourceHelpers';\nimport { canAfford } from '../../Utils/InventoryManagement';\nimport { trackQuestProgress } from '../Quests/QuestGoalTracker';\nimport { handleFarmPlotPlacement, handleTerraform } from './Farming';\nimport { useStrings } from '../../UI/StringsContext';\nimport { getLocalizedString } from '../../Utils/stringLookup';\nimport { formatDuration } from '../../UI/Timers';\nimport '../../UI/ResourceButton.css'; // ✅ Ensure the correct path\n\nconst FarmingPanel = ({\n  onClose,\n  TILE_SIZE,\n  inventory,\n  setInventory,\n  backpack,\n  setBackpack,\n  resources,\n  setResources,\n  tiles,\n  tileTypes,\n  setTileTypes,\n  currentPlayer,\n  setCurrentPlayer,\n  gridId,\n  masterResources,\n  masterSkills,\n  updateStatus,\n  currentSeason\n}) => {\n\n  const strings = useStrings();\n  const [farmPlots, setFarmPlots] = useState([]);\n  const [allResources, setAllResources] = useState([]);\n  const [isContentLoading, setIsContentLoading] = useState(false);\n  const [coolingDownItems, setCoolingDownItems] = useState(new Set());\n  const COOLDOWN_DURATION = 450;\n\n \n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    //setIsContentLoading(true);\n    try {\n      const inventoryResponse = await axios.get(`${API_BASE}/api/inventory/${currentPlayer.playerId}`);\n      setInventory(inventoryResponse.data.inventory || []);\n\n      const resourcesResponse = await axios.get(`${API_BASE}/api/resources`);\n      const allResourcesData = resourcesResponse.data;\n      setAllResources(allResourcesData);\n\n      const farmPlotItems = allResourcesData.filter((resource) => {\n        // Check if resource is a farm plot\n        return resource.category === 'farmplot';\n      });\n      \n      // Add isOffSeason flag to each farmplot\n      const farmPlotsWithSeasonInfo = farmPlotItems.map(item => ({\n        ...item,\n        isOffSeason: item.season && currentSeason && item.season !== currentSeason\n      }));\n      \n      setFarmPlots(farmPlotsWithSeasonInfo);\n    } catch (error) {\n      console.error('Error fetching farming panel data:', error);\n    } finally {\n      setIsContentLoading(false);\n    }\n  };\n\n  const hasRequiredSkill = (requiredSkill) => {\n    return !requiredSkill || currentPlayer.skills?.some((owned) => owned.type === requiredSkill);\n  };\n\n\n  // Wrap for Farm Plot Placement\n  const handleFarmPlacementWithCooldown = async (item) => {\n    const itemKey = `plot-${item.type}`;\n    if (coolingDownItems.has(itemKey)) return;\n    \n    // Apply cooldown immediately for instant response\n    setCoolingDownItems(prev => new Set(prev).add(itemKey));\n    \n    // Set timeout immediately (like Bank does) for proper sync\n    const cooldownTimer = setTimeout(() => {\n      setCoolingDownItems(prev => {\n        const newSet = new Set(prev);\n        newSet.delete(itemKey);\n        return newSet;\n      });\n    }, COOLDOWN_DURATION);\n    \n    // Attempt the placement\n    const result = await handleFarmPlotPlacement({\n      selectedItem: item,\n      TILE_SIZE,\n      resources,\n      setResources,\n      currentPlayer,\n      setCurrentPlayer,\n      inventory,\n      setInventory,\n      backpack,\n      setBackpack,\n      gridId,\n      masterResources,\n      masterSkills,\n      updateStatus,\n    });\n    \n    // If placement failed, immediately remove cooldown and cancel timer\n    if (result !== true) {\n      clearTimeout(cooldownTimer);\n      setCoolingDownItems(prev => {\n        const newSet = new Set(prev);\n        newSet.delete(itemKey);\n        return newSet;\n      });\n    }\n  };\n\n\n  return (\n    <Panel onClose={onClose} descriptionKey=\"1004\" titleKey=\"1104\" panelName=\"FarmingPanel\">\n      <div className=\"standard-panel\">\n        {isContentLoading ? (\n          <p>{strings[98]}</p>\n        ) : (\n          <>\n\n            {/* Farm Plot Options */}\n            {farmPlots.map((item) => {\n              const ingredients = getIngredientDetails(item, allResources);\n              const affordable = canAfford(item, inventory, 1);\n              const requirementsMet = hasRequiredSkill(item.requires);\n              const isOffSeason = item.isOffSeason;\n\n              const symbol = item.symbol || '';\n\n              // For off-season items, show simplified information\n              if (isOffSeason) {\n                return (\n                  <ResourceButton\n                    key={item.type}\n                    symbol={symbol}\n                    name={getLocalizedString(item.type, strings)}\n                    details=\"Off season\"\n                    info={null}\n                    disabled={true}\n                    onClick={() => {}}\n                  />\n                );\n              }\n\n              // Regular (in-season) item display\n              const formattedCosts = [1, 2, 3, 4].map((i) => {\n                const type = item[`ingredient${i}`];\n                const qty = item[`ingredient${i}qty`];\n                if (!type || !qty) return '';\n\n                const inventoryQty = inventory?.find(inv => inv.type === type)?.quantity || 0;\n                const backpackQty = backpack?.find(item => item.type === type)?.quantity || 0;\n                const playerQty = inventoryQty + backpackQty;\n                const color = playerQty >= qty ? 'green' : 'red';\n                const symbol = allResources.find(r => r.type === type)?.symbol || '';\n                return `<span style=\"color: ${color}; display: block;\">${symbol} ${getLocalizedString(type, strings)} ${qty} / ${playerQty}</span>`;\n              }).join('');\n\n              const skillColor = requirementsMet ? 'green' : 'red';\n\n              const details =\n                (item.requires ? `<span style=\"color: ${skillColor};\">${strings[460]}${getLocalizedString(item.requires, strings)}</span><br>` : '') +\n                (item.growtime ? `${strings[458]}${formatDuration(item.growtime)}<br>` : '') +\n                `${strings[461]}<div>${formattedCosts}</div>`;\n\n              const info =\n                `${strings[820]}${\n                  allResources\n                    .filter((res) => res.source === item.type)\n                    .map((res) => `${res.symbol || ''} ${getLocalizedString(res.type, strings)}`)\n                    .join(', ') || 'None'\n                }`;\n\n              const itemKey = `plot-${item.type}`;\n              const isCoolingDown = coolingDownItems.has(itemKey);\n              \n              return (\n                <ResourceButton\n                  key={item.type}\n                  symbol={symbol}\n                  name={getLocalizedString(item.type, strings)}\n                  className={isCoolingDown ? 'cooldown' : ''}\n                  style={isCoolingDown ? { '--cooldown-duration': `${COOLDOWN_DURATION / 1000}s` } : {}}\n                  details={details}\n                  info={info}\n                  disabled={isCoolingDown || !affordable || !requirementsMet}\n                  onClick={() =>\n                    affordable &&\n                    requirementsMet &&\n                    handleFarmPlacementWithCooldown(item)\n                  }\n                />\n              );\n            })}\n          </>\n        )}\n      </div>\n    </Panel>\n  );\n}; \n\nexport default React.memo(FarmingPanel);","import API_BASE from '../../config';\nimport axios from 'axios';\nimport { addResourceToGrid } from '../../Utils/worldHelpers';\nimport { convertTileType, updateGridResource } from '../../Utils/GridManagement';\nimport { validateTileType, enrichResourceFromMaster } from '../../Utils/ResourceHelpers';\nimport { refreshPlayerAfterInventoryUpdate, spendIngredients } from '../../Utils/InventoryManagement';\nimport FloatingTextManager from '../../UI/FloatingText';\nimport farmState from '../../FarmState';\nimport { trackQuestProgress } from '../Quests/QuestGoalTracker';\nimport { getCurrentTileCoordinates } from '../../Utils/ResourceHelpers';\nimport GlobalGridStateTilesAndResources from '../../GridState/GlobalGridStateTilesAndResources';\n\nexport const handleFarmPlotPlacement = async ({ \n  selectedItem,\n  TILE_SIZE,\n  resources,\n  setResources,\n  currentPlayer,\n  setCurrentPlayer,\n  inventory,\n  setInventory,\n  backpack,\n  setBackpack,\n  gridId,\n  masterResources,\n  masterSkills,\n  updateStatus,\n}) => {\n  try {\n    console.log(masterResources);\n    \n    const coords = getCurrentTileCoordinates(gridId, currentPlayer);\n    if (!coords) return false;\n    const { tileX, tileY } = coords;\n\n    // Use local tile data instead of async server call for instant response\n    const tiles = GlobalGridStateTilesAndResources.getTiles();\n    const tileType = tiles?.[tileY]?.[tileX];\n    if (!tileType || tileType !== 'd') {\n      FloatingTextManager.addFloatingText(303, tileX, tileY, TILE_SIZE); // \"Must be dirt\"\n      return false;\n    }\n\n    const tileOccupied = resources.find((res) => res.x === tileX && res.y === tileY);\n    if (tileOccupied) {\n      FloatingTextManager.addFloatingText(304, tileX, tileY, TILE_SIZE); // \"Occupied\"\n      return false;\n    }\n\n    const didSpend = await spendIngredients({\n      playerId: currentPlayer.playerId,\n      recipe: selectedItem,\n      inventory,\n      backpack,\n      setInventory,\n      setBackpack,\n      setCurrentPlayer,\n      updateStatus,\n    });\n    if (!didSpend) {\n      FloatingTextManager.addFloatingText(305, tileX, tileY, TILE_SIZE); // \"Missing ingredients\"\n      return false;\n    }\n\n    // Timer setup\n    const growEndTime = Date.now() + (selectedItem.growtime || 0) * 1000;\n    console.log(`⏱️ Planting ${selectedItem.type}: growtime = ${selectedItem.growtime}, growEndTime = ${growEndTime}, secondsFromNow = ${(growEndTime - Date.now()) / 1000}`);\n\n    // Lookup from masterResources for enrichment\n    console.log(\"🌱 Attempting to plant:\", selectedItem.type, \"at\", tileX, tileY);\n    const enrichedNewResource = enrichResourceFromMaster(\n      {\n        type: selectedItem.type,\n        x: tileX,\n        y: tileY,\n        growEnd: growEndTime,\n      },\n      masterResources\n    );\n    console.log(\"🌾 Enriched resource before setResources:\", enrichedNewResource);\n\n    // Optimistically update local client state\n    const existing = GlobalGridStateTilesAndResources.getResources() || [];\n    GlobalGridStateTilesAndResources.setResources([...existing, enrichedNewResource]);\n    console.log(\"🧪 Global resources after planting:\", GlobalGridStateTilesAndResources.getResources());\n    setResources([...existing, enrichedNewResource]);\n\n    // Update server and all clients\n    const gridUpdateResponse = await updateGridResource(\n      gridId,\n      {\n        type: selectedItem.type,\n        x: tileX,\n        y: tileY,\n        growEnd: growEndTime,\n      },\n      true\n    );\n\n    if (gridUpdateResponse?.success) {\n      farmState.addSeed({\n        type: selectedItem.type,\n        x: tileX,\n        y: tileY,\n        growEnd: growEndTime,\n        output: selectedItem.output, // ✅ required for crop conversion\n      });\n\n      FloatingTextManager.addFloatingText(302, tileX, tileY, TILE_SIZE); // \"Planted!\"\n      \n      // Track quest progress for \"Plant\" actions\n      // Use the output (crop) name instead of the plot name for quest tracking\n      const cropName = selectedItem.output || selectedItem.type;\n      await trackQuestProgress(currentPlayer, 'Plant', cropName, 1, setCurrentPlayer);\n      \n      // Check for FTUE step advancement when ANY farm plot is placed\n      if (currentPlayer.firsttimeuser === true && currentPlayer.ftuestep === 6) {\n        console.log('🎓 Player placed a farm plot at FTUE step 6, incrementing step');\n        const { incrementFTUEStep } = await import('../FTUE/FTUE');\n        await incrementFTUEStep(currentPlayer.playerId, currentPlayer, setCurrentPlayer);\n      }\n      return true; // Success!\n    } else {\n      throw new Error('Server update failed.');\n    }\n  } catch (error) {\n    console.error('❌ Error in handleFarmPlotPlacement:', error);\n    return false;\n  }\n};\n\n\n\nexport const handleTerraform = async ({ TILE_SIZE, actionType, gridId, currentPlayer, tileTypes, setTileTypes }) => {\n\n  console.log(\"handleTerraform;  currentPlayer = \",currentPlayer);\n  \n  if (!currentPlayer?.location) {\n    console.error(\"❌ handleTerraform: Missing currentPlayer location.\");\n    return;\n  }\n\n  const coords = getCurrentTileCoordinates(gridId, currentPlayer);\n  if (!coords) return;\n  const { tileX, tileY } = coords;\n  const tile = tileTypes?.[tileY]?.[tileX];\n  console.log(\"tile at \",tileY,\", \",tileX,\" = \",tile);\n\n  if (!tile) {\n    console.error(\"❌ handleTerraform: Could not find tile at given coordinates.\");\n    return;\n  }\n  if (tile === 'l') {\n      FloatingTextManager.addFloatingText(320, tileX, tileY, TILE_SIZE);\n    return;\n  }\n  if (tile === 'w') {\n      FloatingTextManager.addFloatingText(320, tileX, tileY, TILE_SIZE); // Same message as lava for now\n    return;\n  }\n\n  let newType;\n  // Determine the new tile type based on the action\n  switch (actionType) {\n    case \"till\":\n      newType = \"d\";\n      break;\n    case \"plantGrass\":\n      newType = \"g\";\n      break;\n    case \"pave\":\n      newType = \"p\";\n      break;\n    case \"stone\":\n      newType = \"s\";\n      break;\n    case \"water\":\n      newType = \"w\";\n      break;\n    default:\n      console.error(`❌ handleTerraform: Unknown actionType \"${actionType}\"`);\n      return;\n  }\n\n  console.log(`🌱 handleTerraform: Changing tile at (${tileX}, ${tileY}) to \"${newType}\"`);\n\n  // Call convertTileType to update the tile in the database and emit the change\n  await convertTileType(gridId, tileX, tileY, newType, setTileTypes);\n};\n","import API_BASE from '../../config';\nimport React, { useState, useEffect, useContext } from 'react';\nimport Panel from '../../UI/Panel';\nimport axios from 'axios';\nimport ResourceButton from '../../UI/ResourceButton';\nimport { getIngredientDetails } from '../../Utils/ResourceHelpers';\nimport { canAfford } from '../../Utils/InventoryManagement';\nimport { trackQuestProgress } from '../Quests/QuestGoalTracker';\nimport { handleFarmPlotPlacement, handleTerraform } from './Farming';\nimport { useStrings } from '../../UI/StringsContext';\nimport { getLocalizedString } from '../../Utils/stringLookup';\nimport '../../UI/ResourceButton.css'; // ✅ Ensure the correct path\n\nconst ToolsPanel = ({\n  onClose,\n  TILE_SIZE,\n  inventory,\n  setInventory,\n  backpack,\n  setBackpack,\n  resources,\n  setResources,\n  tiles,\n  tileTypes,\n  setTileTypes,\n  currentPlayer,\n  setCurrentPlayer,\n  gridId,\n  masterResources,\n  masterSkills,\n  updateStatus,\n  isDeveloper\n}) => {\n\n  const strings = useStrings();\n  const [farmPlots, setFarmPlots] = useState([]);\n  const [allResources, setAllResources] = useState([]);\n  const [isContentLoading, setIsContentLoading] = useState(false);\n  const [coolingDownItems, setCoolingDownItems] = useState(new Set());\n  const COOLDOWN_DURATION = 500;\n\n \n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    //setIsContentLoading(true);\n    try {\n      const inventoryResponse = await axios.get(`${API_BASE}/api/inventory/${currentPlayer.playerId}`);\n      setInventory(inventoryResponse.data.inventory || []);\n\n      const resourcesResponse = await axios.get(`${API_BASE}/api/resources`);\n      const allResourcesData = resourcesResponse.data;\n      setAllResources(allResourcesData);\n\n      const farmPlotItems = allResourcesData.filter((resource) => resource.category === 'farmplot');\n      setFarmPlots(farmPlotItems);\n    } catch (error) {\n      console.error('Error fetching farming panel data:', error);\n    } finally {\n      setIsContentLoading(false);\n    }\n  };\n\n  const hasRequiredSkill = (requiredSkill) => {\n    return !requiredSkill || currentPlayer.skills?.some((owned) => owned.type === requiredSkill);\n  };\n\n\n  // Wrap for Terraform Actions\n  const handleTerraformWithCooldown = async (actionType) => {\n    const itemKey = `terraform-${actionType}`;\n    if (coolingDownItems.has(itemKey)) return;\n    \n    // Apply cooldown immediately for instant response\n    setCoolingDownItems(prev => new Set(prev).add(itemKey));\n    \n    // Set timeout immediately for proper sync with CSS animation\n    setTimeout(() => {\n      setCoolingDownItems(prev => {\n        const newSet = new Set(prev);\n        newSet.delete(itemKey);\n        return newSet;\n      });\n    }, COOLDOWN_DURATION);\n\n    await handleTerraform({\n      TILE_SIZE,\n      actionType,\n      gridId,\n      currentPlayer,\n      tileTypes,\n      setTileTypes,\n    });\n  };\n\n\n  return (\n    <Panel onClose={onClose} descriptionKey=\"1033\" titleKey=\"1133\" panelName=\"ToolsPanel\">\n      <div className=\"standard-panel\">\n        {isContentLoading ? (\n          <p>{strings[98]}</p>\n        ) : (\n          <>\n            {/* Till Land Button */}\n            <ResourceButton\n              symbol=\"⛏️\"\n              name={getLocalizedString(\"Till Land\", strings)}\n              className={coolingDownItems.has('terraform-till') ? 'cooldown' : ''}\n              style={coolingDownItems.has('terraform-till') ? { '--cooldown-duration': `${COOLDOWN_DURATION / 1000}s` } : {}}\n              details={`${strings[461]} None`}\n              disabled={coolingDownItems.has('terraform-till')}\n              info={strings[310]}\n              onClick={() => handleTerraformWithCooldown(\"till\")}\n            />\n\n            {/* Plant Grass Button */}\n            <ResourceButton\n              symbol=\"🟩\"\n              name={getLocalizedString(\"Plant Grass\", strings)}\n              className={coolingDownItems.has('terraform-plantGrass') ? 'cooldown' : ''}\n              style={coolingDownItems.has('terraform-plantGrass') ? { '--cooldown-duration': `${COOLDOWN_DURATION / 1000}s` } : {}}\n              details={`${strings[461]} None<br>${strings[460]}${getLocalizedString('Grower', strings)}`}\n              disabled={coolingDownItems.has('terraform-plantGrass') || !hasRequiredSkill('Grower')}\n              info={strings[311]}\n              onClick={() => handleTerraformWithCooldown(\"plantGrass\")}\n            />\n\n            {/* Lay Pavement Button */}\n            <ResourceButton\n              symbol=\"🟨\"\n              name={getLocalizedString(\"Lay Pavement\", strings)}\n              className={coolingDownItems.has('terraform-pave') ? 'cooldown' : ''}\n              style={coolingDownItems.has('terraform-pave') ? { '--cooldown-duration': `${COOLDOWN_DURATION / 1000}s` } : {}}\n              details={`${strings[461]} None<br>${strings[460]}${getLocalizedString('Pickaxe', strings)}`}\n              disabled={coolingDownItems.has('terraform-pave') || !hasRequiredSkill('Pickaxe')}\n              info={strings[312]}\n              onClick={() => handleTerraformWithCooldown(\"pave\")}\n            />\n\n            {/* Lay Stone Button */}\n            <ResourceButton\n              symbol=\"⬜️\"\n              name={getLocalizedString(\"Lay Stone\", strings)}\n              className={coolingDownItems.has('terraform-stone') ? 'cooldown' : ''}\n              style={coolingDownItems.has('terraform-stone') ? { '--cooldown-duration': `${COOLDOWN_DURATION / 1000}s` } : {}}\n              details={`${strings[461]} None<br>${strings[460]}${getLocalizedString('Pickaxe', strings)}`}\n              disabled={coolingDownItems.has('terraform-stone') || !hasRequiredSkill('Pickaxe')}\n              info={strings[312]}\n              onClick={() => handleTerraformWithCooldown(\"stone\")}\n            />\n\n            {/* Create Water Button - Developer Only */}\n            {isDeveloper && (\n              <ResourceButton\n                symbol=\"💧\"\n                name={getLocalizedString(\"Create Water\", strings)}\n                className={coolingDownItems.has('terraform-water') ? 'cooldown' : ''}\n                style={coolingDownItems.has('terraform-water') ? { '--cooldown-duration': `${COOLDOWN_DURATION / 1000}s` } : {}}\n                details={`${strings[461]} None<br>Developer Only`}\n                disabled={coolingDownItems.has('terraform-water')}\n                info=\"Creates a water tile (Developer only)\"\n                onClick={() => handleTerraformWithCooldown(\"water\")}\n              />\n            )}\n\n\n          </>\n        )}\n      </div>\n    </Panel>\n  );\n}; \n\nexport default React.memo(ToolsPanel);","import API_BASE from '../config';\nimport axios from 'axios';\nimport { createCollectEffect } from '../VFX/VFX';\nimport GlobalGridStateTilesAndResources from '../GridState/GlobalGridStateTilesAndResources';\nimport { updateGridResource } from './GridManagement';\n\n// Generate unique transaction ID\nfunction generateTransactionId() {\n  return `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n}\n\n// Protected selling function for all panels\nexport async function handleProtectedSelling({\n  currentPlayer,\n  setInventory,\n  setBackpack,\n  setCurrentPlayer,\n  setResources,\n  stationType,\n  currentStationPosition,\n  gridId,\n  TILE_SIZE,\n  updateStatus,\n  onClose\n}) {\n  console.log(`🔒 [PROTECTED SELLING] Starting protected sale for ${stationType} at (${currentStationPosition.x}, ${currentStationPosition.y})`);\n  \n  // Debug: Check what resources exist at this position\n  const allResources = GlobalGridStateTilesAndResources.getResources();\n  const resourcesAtPosition = allResources.filter(res => {\n    // Check exact position\n    if (res.x === currentStationPosition.x && res.y === currentStationPosition.y) {\n      return true;\n    }\n    // Check if this position is covered by a multi-tile resource\n    const range = res.range || 1;\n    if (range > 1) {\n      return currentStationPosition.x >= res.x && currentStationPosition.x < res.x + range &&\n             currentStationPosition.y <= res.y && currentStationPosition.y > res.y - range;\n    }\n    return false;\n  });\n  \n  console.log(`🔍 Resources at/covering position (${currentStationPosition.x}, ${currentStationPosition.y}):`, resourcesAtPosition);\n  \n  // Generate  transaction ID and key\n  const transactionId = generateTransactionId();\n  const transactionKey = `sell-refund-${stationType}-${currentStationPosition.x}-${currentStationPosition.y}-${gridId}`;\n  \n  try {\n    const response = await axios.post(`${API_BASE}/api/sell-for-refund`, {\n      playerId: currentPlayer.playerId,\n      gridId,\n      stationX: currentStationPosition.x,\n      stationY: currentStationPosition.y,\n      stationType,\n      transactionId,\n      transactionKey\n    });\n\n    if (response.data.success) {\n      const { refundIngredients, totalMoneyRefund, inventory, removedStation } = response.data;\n      \n      // Update inventory from server response\n      if (inventory) {\n        setInventory(inventory);\n        setCurrentPlayer(prev => ({ ...prev, inventory }));\n      }\n\n      // Find the resource to check if it has shadows\n      const soldResource = GlobalGridStateTilesAndResources.getResources().find(\n        (res) => res.x === currentStationPosition.x && res.y === currentStationPosition.y\n      );\n      \n      // Remove ONLY the main resource from DB (shadows only exist in local state)\n      await updateGridResource(gridId, {\n        x: currentStationPosition.x,\n        y: currentStationPosition.y,\n        type: null\n      }, true);\n      \n      console.log(`✅ Removed main resource from database`);\n      \n      // Update local state to reflect removal of station and shadows\n      const filteredResources = GlobalGridStateTilesAndResources.getResources().filter(\n        (res) => {\n          // Remove the sold station\n          if (res.x === currentStationPosition.x && res.y === currentStationPosition.y) return false;\n          \n          // Remove any shadows belonging to this station\n          if (soldResource && soldResource.range && soldResource.range > 1 && res.type === 'shadow') {\n            // Generate the anchorKey the same way we do when creating shadows\n            const anchorKey = soldResource.anchorKey || `${soldResource.type}-${soldResource.x}-${soldResource.y}`;\n            if (res.parentAnchorKey === anchorKey) {\n              return false;\n            }\n          }\n          return true;\n        }\n      );\n      GlobalGridStateTilesAndResources.setResources(filteredResources);\n      setResources(filteredResources);\n\n      // Visual feedback\n      createCollectEffect(currentStationPosition.x, currentStationPosition.y, TILE_SIZE);\n      \n      console.log(`✅ Station ${stationType} sold successfully for ${totalMoneyRefund} Money.`);\n      updateStatus(`Sold ${stationType} for ${totalMoneyRefund} Money.`);\n      \n      // Close the panel\n      onClose();\n      \n      return { success: true, totalMoneyRefund };\n    }\n  } catch (error) {\n    console.error('Error in protected station selling:', error);\n    \n    if (error.response?.status === 429) {\n      updateStatus(471);\n    } else if (error.response?.status === 400) {\n      console.error('❌ 400 Error details:', error.response?.data);\n      updateStatus(`❌ Cannot sell: ${error.response?.data?.error || 'Invalid request'}`);\n    } else {\n      updateStatus('❌ Failed to sell station');\n    }\n    \n    return { success: false, error: error.response?.data?.error || 'Unknown error' };\n  }\n}","import API_BASE from '../../config';\nimport React, { useState, useEffect, useContext } from 'react';\nimport Panel from '../../UI/Panel';\nimport axios from 'axios';\nimport ResourceButton from '../../UI/ResourceButton';\nimport { refreshPlayerAfterInventoryUpdate } from '../../Utils/InventoryManagement';\nimport { canAfford } from '../../Utils/InventoryManagement';\nimport { trackQuestProgress } from '../Quests/QuestGoalTracker';\nimport { useStrings } from '../../UI/StringsContext';\nimport { getLocalizedString } from '../../Utils/stringLookup';\nimport '../../UI/ResourceButton.css'; // ✅ Ensure the correct path\nimport { spendIngredients } from '../../Utils/InventoryManagement';\nimport { handleProtectedSelling } from '../../Utils/ProtectedSelling';\nimport TransactionButton from '../../UI/TransactionButton';\nimport { incrementFTUEStep } from '../FTUE/FTUE';\nimport { earnTrophy } from '../Trophies/TrophyUtils';\n\nconst SkillsPanel = ({ \n    onClose,\n    inventory,\n    setInventory,\n    backpack,\n    setBackpack,\n    currentPlayer,\n    setCurrentPlayer,\n    stationType, \n    currentStationPosition,\n    gridId,\n    isDeveloper,\n    TILE_SIZE,\n    updateStatus,\n    masterSkills,\n    setResources,\n    masterResources,\n}) => {\n  const strings = useStrings();\n  const [entryPoint, setEntryPoint] = useState(stationType || \"Skills Panel\"); \n  const [allResources, setAllResources] = useState([]);\n  const [skillsToAcquire, setSkillsToAcquire] = useState([]);\n  const [ownedSkills, setOwnedSkills] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isContentLoading, setIsContentLoading] = useState(false);\n  const [stationEmoji, setStationEmoji] = useState('📘'); // Default emoji for Skills Panel\n\n  // ✅ Update `entryPoint` when `stationType` changes\n  useEffect(() => {\n    if (!stationType) {\n      setEntryPoint(\"Basic Skills\"); // ✅ Ensure default entry point when coming from the UI button\n      // NOTE: This \"Basic Skills\" string comes from resources.json\n    } else if (stationType !== entryPoint) {\n      setEntryPoint(stationType);\n    }\n  }, [stationType]);\n\n  // ✅ Fetch resources when `entryPoint` changes\n  useEffect(() => {\n    const fetchResourcesAndInventory = async () => {\n      setIsContentLoading(true);\n      try {\n        console.log(\"Fetching skills and inventory for:\", entryPoint);\n        \n        const [inventoryResponse, skillsResponse, resourcesResponse] = await Promise.all([\n          axios.get(`${API_BASE}/api/inventory/${currentPlayer.playerId}`),\n          axios.get(`${API_BASE}/api/skills/${currentPlayer.playerId}`),\n          axios.get(`${API_BASE}/api/resources`),\n        ]);\n\n        const serverInventory = inventoryResponse.data.inventory || [];\n        const serverBackpack = inventoryResponse.data.backpack || [];\n        const serverSkills = skillsResponse.data.skills || [];\n        const allResourcesData = resourcesResponse.data;\n\n        setInventory(serverInventory);\n        setBackpack(serverBackpack);\n        setAllResources(allResourcesData);\n\n        const stationResource = allResourcesData.find((resource) => resource.type === stationType);\n        setStationEmoji(stationResource?.symbol || '💪');\n\n        // ✅ Filter owned skills\n        const ownedSkills = serverSkills.filter(skill =>\n          allResourcesData.some(res => res.type === skill.type && (res.category === 'skill' || res.category === 'upgrade'))\n        );\n        setOwnedSkills(ownedSkills);\n\n        // ✅ Filter available skills based on `entryPoint`\n        let availableSkills = allResourcesData.filter(\n          res => (res.category === 'skill' || res.category === 'upgrade') &&\n          res.source === entryPoint && \n          !ownedSkills.some(owned => owned.type === res.type)\n        );\n\n        // ✅ Additional filter for first-time users\n        if (currentPlayer?.firsttimeuser === true) {\n          // Helper function to check if skill can be acquired\n          const canAcquireSkill = (skill) => {\n            // Check if skill has requirements\n            if (skill.requires) {\n              // Check if the player owns the required skill\n              const hasRequirement = ownedSkills.some(owned => owned.type === skill.requires);\n              if (!hasRequirement) return false;\n            }\n            \n            // Check if skill level is appropriate for FTUE step\n            if (currentPlayer.ftuestep != null && skill.level != null) {\n              return skill.level <= currentPlayer.ftuestep;\n            }\n            \n            // If no FTUE step or skill level, can acquire\n            return true;\n          };\n\n          availableSkills = availableSkills.filter(canAcquireSkill);\n        }\n\n        setSkillsToAcquire(availableSkills);\n      } catch (error) {\n        console.error('Error fetching resources, inventory, or skills:', error);\n      } finally {\n        setIsContentLoading(false);\n      }\n    };\n\n    fetchResourcesAndInventory();\n  }, [entryPoint, currentPlayer?.ftuestep, currentPlayer?.playerId]); // ✅ Re-fetch when `entryPoint` changes, FTUE step changes, or player changes\n\n\n  const hasRequiredSkill = (requiredSkill) => {\n    return !requiredSkill || \n        ownedSkills.some((owned) => owned.type === requiredSkill);\n  };\n\n\nconst handleGemPurchase = async (modifiedRecipe) => {\n  // This is called by the gem button with a recipe modified to include gems\n  return handlePurchase(modifiedRecipe.type, modifiedRecipe);\n};\n\nconst handlePurchase = async (resourceType, customRecipe = null) => {\n  const resource = skillsToAcquire.find((item) => item.type === resourceType);\n  const recipeToUse = customRecipe || resource;\n  \n  const spendSuccess = await spendIngredients({\n    playerId: currentPlayer.playerId,\n    recipe: recipeToUse,\n    inventory,\n    backpack,\n    setInventory,\n    setBackpack,\n    setCurrentPlayer,\n    updateStatus,\n  });\n\n  if (!spendSuccess) {\n    console.warn('Failed to spend ingredients.');\n    return;\n  }\n\n  const updatedSkills = [...ownedSkills];\n  // Add the new skill regardless of whether it's skill or upgrade category\n  updatedSkills.push({ type: resource.type, category: resource.category, quantity: 1 });\n  setOwnedSkills(updatedSkills);\n  updateStatus(`💪 ${getLocalizedString(resource.type, strings)} skill acquired.`);\n  \n  try { \n    await axios.post(`${API_BASE}/api/update-skills`, {\n      playerId: currentPlayer.playerId,\n      skills: updatedSkills,\n    });\n    await trackQuestProgress(currentPlayer, 'Gain skill with', resource.type, 1, setCurrentPlayer);\n    await earnTrophy(currentPlayer.playerId, 'Skill Builder', 1, currentPlayer, null, setCurrentPlayer);    \n    await refreshPlayerAfterInventoryUpdate(currentPlayer.playerId, setCurrentPlayer);\n    \n    // Check if the player is a first-time user and just acquired the Axe skill\n    if (currentPlayer.firsttimeuser === true && resource.type === 'Axe') {\n      console.log('🎓 First-time user acquired Axe skill, advancing FTUE step');\n      await incrementFTUEStep(currentPlayer.playerId, currentPlayer, setCurrentPlayer);\n    }\n    \n    // Check if the player is a first-time user and just acquired the Grower skill\n    if (currentPlayer.firsttimeuser === true && resource.type === 'Grower') {\n      console.log('🎓 First-time user acquired Grower skill, advancing FTUE step');\n      await incrementFTUEStep(currentPlayer.playerId, currentPlayer, setCurrentPlayer);\n    }\n\n    // Instead of re-fetching, update the acquire list locally\n    setSkillsToAcquire(prev => prev.filter(skill => skill.type !== resource.type));\n\n  } catch (error) {\n    console.error('Error updating player on server:', error);\n    setErrorMessage('Error updating player on server.');\n  }\n};\n\n  const handleSellStation = async () => {\n    try {\n      const success = await handleProtectedSelling({\n        currentPlayer,\n        stationType,\n        currentStationPosition,\n        gridId,\n        setResources,\n        setInventory,\n        setCurrentPlayer,\n        updateStatus,\n        onClose,\n      });\n      \n      if (success) {\n        onClose();\n      }\n    } catch (error) {\n      console.error('Error selling station:', error);\n      updateStatus('Failed to sell station');\n    }\n  };\n\n  // Check if we should show the sell button\n  const showSellButton = isDeveloper && \n    [\"Adventure Camp\", \"Laboratory\", \"School\", \"Guild\"].includes(entryPoint) &&\n    currentStationPosition && gridId;\n\n  return (\n    <Panel onClose={onClose} descriptionKey=\"1005\" title={`${stationEmoji} ${entryPoint}`} panelName=\"SkillsPanel\">\n      <div className=\"standard-panel\">\n      \n      {showSellButton && (\n        <div className=\"shared-buttons\">\n          <TransactionButton \n            className=\"btn-danger\" \n            onAction={handleSellStation}\n            transactionKey={`sell-refund-${stationType}-${currentStationPosition.x}-${currentStationPosition.y}-${gridId}`}\n          >\n            {strings[490]}\n          </TransactionButton>\n        </div>\n      )}\n      \n      {isContentLoading ? (\n          <p>{strings[98]}</p>\n        ) : (\n          <>\n            {![\"Adventure Camp\", \"Laboratory\", \"School\", \"Guild\"].includes(entryPoint) && (\n              <div className=\"skills-owned\">\n                <h3>{strings[1303]}</h3>\n                {ownedSkills.length > 0 ? (\n                  ownedSkills.map((skill, index) => (\n                    <div key={index}>\n                      {getLocalizedString(skill.type, strings)} \n                    </div>\n                  ))\n                ) : (\n                  <p>{strings[1305]}</p>\n                )}\n              </div>\n            )}\n\n\n            <div className=\"skills-to-acquire\">\n              {skillsToAcquire.length > 0 && <h3>{strings[1301]}</h3>}\n              <div className=\"skills-options\">\n                {skillsToAcquire.map((resource) => {\n                  const affordable = canAfford(resource, inventory, backpack, 1);\n                  const meetsRequirement = hasRequiredSkill(resource.requires);\n\n                  const formattedCosts = [1, 2, 3, 4].map((i) => {\n                    const type = resource[`ingredient${i}`];\n                    const qty = resource[`ingredient${i}qty`];\n                    if (!type || !qty) return '';\n\n                    const inventoryQty = inventory?.find(inv => inv.type === type)?.quantity || 0;\n                    const backpackQty = backpack?.find(item => item.type === type)?.quantity || 0;\n                    const playerQty = inventoryQty + backpackQty;\n                    const color = playerQty >= qty ? 'green' : 'red';\n                    const symbol = allResources.find(r => r.type === type)?.symbol || '';\n                    return `<span style=\"color: ${color}; display: block;\">${symbol} ${getLocalizedString(type, strings)} ${qty} / ${playerQty}</span>`;\n                  }).join('');\n\n                  const skillColor = meetsRequirement ? 'green' : 'red';\n                  const details =\n                    (resource.requires ? `<span style=\"color: ${skillColor};\">${strings[460]}${getLocalizedString(resource.requires, strings)}</span><br>` : '') +\n                    `${strings[461]}<div>${formattedCosts}</div>`;\n\n                  // ✅ **Check if this skill modifies a player attribute**\n                  const attributeModifier = resource.output\n                    ? `+${resource.qtycollected || 1} to ${strings[resource.output] || resource.output}`\n                    : null;\n\n                  // ✅ Check if this skill provides a collection buff\n                  let buffText = '';\n                  const buffedItems = masterSkills[resource.type];\n                  if (buffedItems && typeof buffedItems === 'object') {\n                    const items = Object.keys(buffedItems);\n                    if (items.length > 0) {\n                      const prettyList = items.join(', ');\n                      buffText = `Collection multiplied: ${prettyList}`;\n                    }\n                  }\n\n                  const unlocks = allResources\n                    .filter((res) => res.requires === resource.type)\n                    .map((res) => `${res.symbol || ''} ${getLocalizedString(res.type, strings)}`)\n                    .join(', ') || 'None';\n\n                    const info = (\n                      <div className=\"info-content\">\n                        {attributeModifier && <div>{attributeModifier}</div>}\n                        {unlocks !== 'None' && (\n                          <div style={{ display: 'block', marginBottom: '3px' }}>\n                            <strong>Unlocks:</strong> {unlocks}\n                          </div>\n                        )}\n                        {buffText && <div style={{ color: 'blue' }}>{buffText}</div>}\n                      </div>\n                    );\n\n                  return (\n                    <ResourceButton\n                      key={resource.type}\n                      symbol={resource.symbol}\n                      name={getLocalizedString(resource.type, strings)}\n                      details={details}\n                      info={info}\n                      disabled={!affordable || !meetsRequirement}\n                      onClick={() => handlePurchase(resource.type)}\n                      gemCost={resource.gemcost || null}\n                      onGemPurchase={(resource.gemcost && (!affordable || !meetsRequirement)) ? handleGemPurchase : null}\n                      resource={resource}\n                      inventory={inventory}\n                      backpack={backpack}\n                      masterResources={masterResources || allResources}\n                      currentPlayer={currentPlayer}\n                    />\n                  );\n                })}\n              </div>\n            </div>\n\n          </>\n        )}\n        {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n      </div>\n    </Panel>\n  );\n};\n\nexport default React.memo(SkillsPanel);","/**\n * Calculates settlement population by counting occupied homesteads\n * This is the unified method for determining settlement population across the application\n * @param {Object} settlementData - The settlement data object containing grids\n * @returns {number} The population count based on occupied homesteads\n */\nexport const calculateSettlementPopulation = (settlementData) => {\n  if (!settlementData || !settlementData.grids) {\n    console.warn('calculateSettlementPopulation: No settlement data or grids provided');\n    return 0;\n  }\n\n  const allGrids = settlementData.grids?.flat() || [];\n  const occupiedHomesteads = allGrids.filter(grid => \n    grid.gridType === \"homestead\" && grid.available === false\n  ).length || 0;\n  \n  return occupiedHomesteads;\n};","import API_BASE from '../../config';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Panel from '../../UI/Panel';\nimport { getMayorUsername } from './GovUtils';\nimport GlobalGridStateTilesAndResources from '../../GridState/GlobalGridStateTilesAndResources';\nimport '../../UI/Modal.css';\nimport '../../UI/SharedButtons.css';\nimport { useStrings } from '../../UI/StringsContext';\nimport { calculateSettlementPopulation } from '../../Utils/PopulationUtils';\n\nfunction GovPanel({ onClose, currentPlayer, setModalContent, setIsModalOpen }) {\n  const strings = useStrings();\n  const [isContentLoading, setIsContentLoading] = useState(false);\n  const [settlementData, setSettlementData] = useState(null);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [taxRate, setTaxRate] = useState(0);\n  const [population, setPopulation] = useState(0);\n  const [taxLog, setTaxLog] = useState([]);\n  const [mayor, setMayor] = useState(\"\");\n  // Community Buildings counts\n  const resources = GlobalGridStateTilesAndResources.getResources() || [];\n  const buildingCounts = {\n      School: 0,\n      Hospital: 0,\n      Library: 0\n  };\n  resources.forEach(res => {\n      if (res.type === 'School') buildingCounts.School++;\n      if (res.type === 'Hospital') buildingCounts.Hospital++;\n      if (res.type === 'Library') buildingCounts.Library++;\n  });\n  \n  useEffect(() => {\n    const fetchGovernmentData = async () => {\n      setIsContentLoading(true);\n      if (!currentPlayer || !currentPlayer.settlementId) {\n        console.warn(\"⚠️ currentPlayer or settlementId is not available yet.\");\n        return; \n      }\n  \n      try {\n        console.log(\"🏛️ Fetching full settlement data for ID:\", currentPlayer.settlementId);\n        \n        const settlementResponse = await axios.get(`${API_BASE}/api/get-settlement/${currentPlayer.settlementId}`);\n        const settlement = settlementResponse.data;\n        setSettlementData(settlement);\n        setTaxLog(settlement.taxlog || []);\n        setTaxRate(settlement.taxrate || 0);\n        \n        const population = calculateSettlementPopulation(settlement);\n        setPopulation(population);\n        \n        const mayorName = await getMayorUsername(currentPlayer.settlementId);\n        setMayor(mayorName);\n          \n      } catch (error) {\n        console.error(\"❌ Error fetching government data:\", error);\n      } finally {\n        setIsContentLoading(false);\n      }\n    };\n  \n    fetchGovernmentData();\n  }, [currentPlayer]);\n\n  const handleShowTaxLog = async () => {\n    if (!currentPlayer?.settlementId) {\n      console.warn(\"⚠️ Cannot show tax log: settlementId missing.\");\n      return;\n    }\n\n    console.log(\"📤 Requesting tax log for settlement ID:\", currentPlayer.settlementId);\n \n    try {\n      const response = await axios.get(`${API_BASE}/api/settlement/${currentPlayer.settlementId}/taxlog`);\n      console.log(\"📥 Tax log response:\", response.data);\n      const taxlog = response.data.taxlog || [];\n\n      console.log(\"📊 Parsed taxlog:\", taxlog);\n\n      const taxLogTable = (\n        <table className=\"tax-log-table\" style={{ width: \"100%\", textAlign: \"left\", borderCollapse: \"collapse\" }}>\n          <thead>\n            <tr>\n              <th style={{ padding: \"6px 12px\" }}>{strings[\"5102\"]}</th>\n              <th style={{ padding: \"6px 12px\" }}>{strings[\"5103\"]}</th>\n              <th style={{ padding: \"6px 12px\" }}>{strings[\"5104\"]}</th>\n              <th style={{ padding: \"6px 12px\" }}>{strings[\"5105\"]}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {[...taxlog].reverse().map((entry, i) => (\n              <tr key={i}>\n                <td style={{ padding: \"6px 12px\" }}>{new Date(entry.date).toLocaleDateString()}</td>\n                <td style={{ padding: \"6px 12px\" }}>{entry.totalcollected}</td>\n                <td style={{ padding: \"6px 12px\" }}>{entry.currentmayor}</td>\n                <td style={{ padding: \"6px 12px\" }}>{entry.mayortake}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      );\n\n      setModalContent({\n        title: strings[\"5100\"],\n        size: \"large\",\n        message: taxlog.length === 0\n          ? strings[\"5101\"]\n          : undefined,\n        custom: taxLogTable,\n      });\n      setIsModalOpen(true);\n    } catch (error) {\n      console.error(\"❌ Failed to fetch tax log:\", error);\n      setModalContent({\n        title: \"Error\",\n        message: \"Failed to load tax log.\",\n        size: \"small\",\n      });\n      setIsModalOpen(true);\n    }\n  };\n\n  return (\n    <Panel onClose={onClose} descriptionKey=\"1007\" titleKey=\"1107\" panelName=\"GovPanel\">\n      <div className=\"standard-panel\">\n        {isContentLoading ? (\n          <p>{strings[98]}</p>\n        ) : (\n          <>\n            {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n\n            {/* Settlement Information */}\n            {settlementData && (\n              <>\n                <h3><strong>{strings[\"3001\"]}</strong></h3>  \n                <h3 style={{ color: 'rgb(154, 106, 22)' }}><strong>{settlementData.displayName || settlementData.name || 'Unnamed Settlement'}</strong></h3>\n                <h3>{strings[\"3002\"]} <strong>{population}</strong></h3>\n              </>\n            )}\n\n            {/* Taxes Section */}\n            <h3>{strings[\"3003\"]} {taxRate}%</h3>\n            <div className=\"shared-buttons\">\n              <button className=\"btn-basic btn-success\" onClick={handleShowTaxLog}>{strings[3020]}</button>            \n            </div>\n            <p>{strings[\"3004\"]}</p>\n            \n\n{/* CURRENT MAYOR section */}\n            <h3>{strings[2085]}</h3>\n            <h2 style={{ color: 'rgb(154, 106, 22)' }}><strong>{mayor || \"Vacant\"}</strong></h2>\n\n            <p>{strings[\"3005\"]}</p>\n            <p>{strings[\"3009\"]}</p>\n            <p>{strings[\"3010\"]}</p>\n            <p>{strings[\"3011\"]}</p>\n            <p>{strings[\"3012\"]}</p>\n            <p>{strings[\"3013\"]}</p>\n\n            {/* COMMUNITY BUILDINGS section - only show in towns */}\n            {currentPlayer?.location?.gtype === 'town' && (\n              <>\n                <h3>{strings[\"2090\"]}</h3>\n                <p>{buildingCounts.School > 0 ? `${strings[\"2092\"]}${buildingCounts.School}` : strings[\"2093\"]}</p>\n                <p>{buildingCounts.Hospital > 0 ? `${strings[\"2094\"]}${buildingCounts.Hospital}` : strings[\"2095\"]}</p>\n                <p>{buildingCounts.Library > 0 ? `${strings[\"2098\"]}${buildingCounts.Library}` : strings[\"2099\"]}</p>\n              </>\n            )}\n          </>\n        )}\n      </div>\n    </Panel>\n  );\n}\n\nexport default GovPanel;","import API_BASE from '../../config.js';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Panel from '../../UI/Panel';\nimport ResourceButton from '../../UI/ResourceButton';\nimport { refreshPlayerAfterInventoryUpdate, spendIngredients, gainIngredients, canAfford } from '../../Utils/InventoryManagement';\nimport { trackQuestProgress } from '../Quests/QuestGoalTracker';\nimport '../../UI/ResourceButton.css'; // ✅ Ensure the correct path\nimport { formatCountdown } from '../../UI/Timers.js';\nimport { useStrings } from '../../UI/StringsContext';\n\nfunction BankPanel({ \n    onClose, \n    inventory,\n    setInventory,\n    backpack,\n    setBackpack,\n    currentPlayer, \n    setCurrentPlayer, \n    updateStatus,\n    masterResources,\n    globalTuning, }) \n{\n    const strings = useStrings();\n    const [isContentLoading, setIsContentLoading] = useState(false);\n    const [bankOffers, setBankOffers] = useState([]);\n    const [bankTimer, setBankTimer] = useState(\"\");\n    const [bankPhase, setBankPhase] = useState(\"\");\n    const [coolingDownButtons, setCoolingDownButtons] = useState(new Set());\n    const COOLDOWN_DURATION = 1500; // 3x longer for bank transactions\n\n    // Fetch data - separated from timer logic\n    const fetchBankOffers = async () => {\n       setIsContentLoading(true);\n       try {\n            const response = await axios.get(`${API_BASE}/api/get-frontier/${currentPlayer.frontierId}`);\n            setBankOffers(response.data.bank?.offers || []);\n            setBankPhase(response.data.bank?.phase || \"\");\n        } catch (error) {\n            console.error('❌ Error fetching bank offers:', error);\n        } finally {\n            setIsContentLoading(false);\n        }\n    };\n\n    // Timer + Phase Change Detection\n    useEffect(() => {\n        const updateCountdown = () => {\n            const now = Date.now();\n            const storedTimers = JSON.parse(localStorage.getItem(\"timers\")) || {};\n            const bankTimerData = storedTimers.bank || {};\n            \n            // Check for phase change\n            if (bankTimerData.phase !== bankPhase) {\n                console.log(\"🏦 Bank phase changed, fetching new data...\");\n                fetchBankOffers();\n            }\n            \n            setBankTimer(formatCountdown(bankTimerData.endTime, now));\n        };\n\n        updateCountdown();\n        const interval = setInterval(updateCountdown, 1000);\n        return () => clearInterval(interval);\n    }, [bankPhase, currentPlayer?.frontierId]);\n\n    // Initial load\n    useEffect(() => {\n        if (currentPlayer?.frontierId) {\n            fetchBankOffers();\n        }\n    }, [currentPlayer?.frontierId]);\n\n    // ✅ Handle trade transaction\n    const handleTrade = async (offer) => {\n        if (!offer || !currentPlayer) return;\n\n        // Spend ingredients\n        const success = await spendIngredients({\n          playerId: currentPlayer.playerId,\n          recipe: {\n            ingredient1: offer.itemBought,\n            ingredient1qty: offer.qtyBought,\n          },\n          inventory,\n          backpack,\n          setInventory,\n          setBackpack,\n          setCurrentPlayer,\n          updateStatus,\n        });\n\n        if (!success) return;\n\n        // Gain the given item (usually Money)\n        const gainSuccess = await gainIngredients({\n          playerId: currentPlayer.playerId,\n          currentPlayer,\n          resource: offer.itemGiven,\n          quantity: offer.qtyGiven,\n          inventory,\n          backpack,\n          setInventory,\n          setBackpack,\n          setCurrentPlayer,\n          updateStatus,\n          masterResources,\n          globalTuning,\n        });\n\n        if (!gainSuccess) return;\n\n        await trackQuestProgress(currentPlayer,'Sell',offer.itemBought,offer.qtyBought,setCurrentPlayer);\n\n        updateStatus(`✅ Exchanged ${offer.qtyBought} ${offer.itemBought} for ${offer.qtyGiven} ${offer.itemGiven}.`);\n    };\n\n    // Wrap handleTrade with cooldown to prevent spam clicking\n    const handleTradeWithCooldown = async (offer, buttonIndex) => {\n        if (coolingDownButtons.has(buttonIndex)) return;\n        \n        console.log(`Starting cooldown for button ${buttonIndex}, duration: ${COOLDOWN_DURATION}ms (${COOLDOWN_DURATION / 1000}s)`);\n        \n        // Add this button to cooling down set\n        setCoolingDownButtons(prev => new Set(prev).add(buttonIndex));\n        \n        setTimeout(() => {\n            console.log(`Ending cooldown for button ${buttonIndex}`);\n            // Remove this button from cooling down set\n            setCoolingDownButtons(prev => {\n                const newSet = new Set(prev);\n                newSet.delete(buttonIndex);\n                return newSet;\n            });\n        }, COOLDOWN_DURATION);\n\n        await handleTrade(offer);\n    };\n\n    // ✅ Lookup function for symbols from `masterResources`\n    const getSymbol = (resourceType) => {\n        const resource = masterResources.find(res => res.type === resourceType);\n        return resource?.symbol || \"❓\"; // Default to question mark if no symbol found\n    };\n\n    const handleRefreshOffers = async () => {\n        try {\n            const response = await axios.post(\n                `${API_BASE}/api/debug/refresh-bank-offers/${currentPlayer.location.f}`\n            );\n            if (response.data.success) {\n                fetchBankOffers();\n            }\n        } catch (error) {\n            console.error('Failed to refresh bank offers:', error);\n        }\n    };\n\n    return (\n      <Panel onClose={onClose} descriptionKey=\"1017\" titleKey=\"1117\" panelName=\"BankPanel\">\n        {/* Check if player is in their home settlement */}\n        {(() => {\n          const isInHomeSettlement = String(currentPlayer.location.s) === String(currentPlayer.settlementId);\n          console.log('🏦 Bank access check:', {\n            currentSettlement: currentPlayer.location.s,\n            homeSettlement: currentPlayer.settlementId,\n            isInHomeSettlement\n          });\n          return !isInHomeSettlement;\n        })() ? (\n          <div style={{ textAlign: 'center', padding: '20px' }}>\n            <h2>{strings[2050] || \"This is not your home settlement. You cannot access banking services in any settlement but your own.\"}</h2>\n          </div>\n        ) : isContentLoading ? (\n          <p>{strings[98]}</p>\n        ) : (\n          <>\n            {/* Active phase showing current offers */}\n            {bankPhase === \"active\" ? (\n              <>\n                <h3>{strings[\"1402\"]}</h3> {/* \"These offers good for\" */}\n                <h2>{bankTimer}</h2>\n                {bankOffers.length > 0 ? (\n                  bankOffers.map((offer, index) => {\n                    // Calculate player's total quantity from inventory and backpack\n                    const inventoryQty = inventory?.find(item => item.type === offer.itemBought)?.quantity || 0;\n                    const backpackQty = backpack?.find(item => item.type === offer.itemBought)?.quantity || 0;\n                    const playerQty = inventoryQty + backpackQty;\n                    \n                    return (\n                      <ResourceButton\n                        key={index}\n                        className={coolingDownButtons.has(index) ? 'cooldown' : ''}\n                        style={coolingDownButtons.has(index) ? { '--cooldown-duration': `${COOLDOWN_DURATION / 1000}s` } : {}}\n                        onClick={() => handleTradeWithCooldown(offer, index)}\n                        disabled={coolingDownButtons.has(index) || !canAfford({\n                          ingredient1: offer.itemBought,\n                          ingredient1qty: offer.qtyBought\n                        }, inventory, backpack, 1)}\n                        hideInfo={true}\n                      >\n                        <div className=\"resource-details\">\n                          <span><strong>{strings[\"1403\"]}</strong></span> {/* \"Will buy\" */}\n                          {getSymbol(offer.itemBought)} {offer.itemBought} x{offer.qtyBought} / {playerQty}\n                          <br />\n                          {strings[\"1404\"]} {getSymbol(offer.itemGiven)} {offer.qtyGiven} {/* \"for\" */}\n                        </div>\n                      </ResourceButton>\n                    );\n                  })\n                ) : (\n                  <p>{strings[\"1405\"]}</p>  \n                )}\n              </>\n            ) : (\n              <>\n                <h3>{strings[\"1406\"]}</h3> {/* \"New offers in\" */}\n                <h2>{bankTimer}</h2>\n                <p>{strings[\"1407\"]}</p> {/* \"Generating new orders. Thank you for your patience.\" */}\n              </>\n            )}\n          </>\n        )}\n      </Panel>\n    );\n}\n\nexport default BankPanel;","import API_BASE from '../../config';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Panel from '../../UI/Panel';\nimport ResourceButton from '../../UI/ResourceButton';\nimport { spendIngredients, gainIngredients } from '../../Utils/InventoryManagement';\nimport './Train.css';\nimport FloatingTextManager from '../../UI/FloatingText';\nimport { formatCountdown } from '../../UI/Timers';\nimport { useStrings } from '../../UI/StringsContext';\n\nfunction TrainPanel({ \n  onClose, \n  inventory,\n  setInventory,\n  backpack,\n  setBackpack,\n  currentPlayer, \n  setCurrentPlayer, \n  updateStatus,\n  masterResources,\n  setModalContent,\n  setIsModalOpen,\n  globalTuning\n  }) \n{\n  const strings = useStrings();\n  const [trainOffers, setTrainOffers] = useState([]);\n  const [trainPhase, setTrainPhase] = useState(\"loading\");\n  const [trainTimer, setTrainTimer] = useState(\"⏳\");\n  const [nextOffers, setNextOffers] = useState([]);\n  const [trainRewards, setTrainRewards] = useState([]);\n  const [latestInventory, setLatestInventory] = useState([]);\n  const [playerUsernames, setPlayerUsernames] = useState({}); // Map of playerId -> username\n  const [isContentLoading, setIsContentLoading] = useState(false);\n  const [currentTrainNumber, setCurrentTrainNumber] = useState(null);\n\n  // 1. Initial load for the player\n  useEffect(() => {\n    const fetchInventory = async () => {\n      if (!currentPlayer?.playerId) return;\n      setIsContentLoading(true);\n      try {\n        const response = await axios.get(`${API_BASE}/api/inventory/${currentPlayer.playerId}`);\n        setLatestInventory(response.data.inventory || []);\n      } catch (error) {\n        console.error(\"❌ Error fetching latest inventory:\", error);\n      } finally {\n        setIsContentLoading(false);\n      }\n    };\n    fetchInventory();\n\n    if (currentPlayer?.settlementId) {\n      fetchTrainOffers();\n    }\n  }, [currentPlayer?.playerId, currentPlayer?.settlementId]);\n\n\n  // 2. Fetch fresh train offers on *every* phase change\n  useEffect(() => {\n    if (currentPlayer?.settlementId) {\n      fetchTrainOffers(); // ✅ fixes stale data after phase transitions\n    }\n  }, [trainPhase]);\n\n\n  useEffect(() => {\n    const updateCountdown = () => {\n      const now = Date.now();\n\n      const storedTimers = JSON.parse(localStorage.getItem(\"timers\")) || {};\n      const trainTimerData = storedTimers.train || {};\n\n      const phase = trainTimerData.phase;\n      setTrainPhase(phase || \"unknown\");\n\n      const endTime = trainTimerData.endTime;\n      if (!endTime || isNaN(endTime)) {\n        setTrainTimer(\"N/A\");\n        return;\n      } else {\n        setTrainTimer(formatCountdown(endTime, now));\n      }\n    };\n\n    updateCountdown();\n    const interval = setInterval(updateCountdown, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const fetchTrainOffers = async () => {\n    try {\n      const response = await axios.get(`${API_BASE}/api/get-settlement/${currentPlayer.settlementId}`);\n      const offers = response.data?.currentoffers || [];\n      setTrainOffers(offers);\n      setNextOffers(response.data?.nextoffers || []);\n      // Get current train info from trainlog\n      const trainlog = response.data?.trainlog || [];\n      const currentTrain = trainlog.find(log => log.status === \"Current Train\");\n      if (currentTrain) {\n        // Use rewards from the current train log entry\n        setTrainRewards(currentTrain.rewards || []);\n        if (currentTrain.trainnumber) {\n          setCurrentTrainNumber(currentTrain.trainnumber);\n        }\n      } else {\n        // No current train, clear rewards\n        setTrainRewards([]);\n      }\n      \n      // Fetch usernames for claimed/completed offers\n      await fetchUsernames(offers);\n    } catch (error) {\n      console.error(\"❌ Error fetching train offers:\", error);\n    }\n  };\n\n  const fetchUsernames = async (offers) => {\n    try {\n      // Find all unique player IDs that have claimed or completed offers\n      const playerIds = [...new Set(\n        offers\n          .filter(offer => offer.claimedBy)\n          .map(offer => offer.claimedBy)\n      )];\n\n      if (playerIds.length === 0) return;\n\n      // Fetch usernames for these player IDs\n      const usernamePromises = playerIds.map(async (playerId) => {\n        try {\n          const response = await axios.get(`${API_BASE}/api/player/${playerId}`);\n          return { playerId, username: response.data.username };\n        } catch (error) {\n          console.error(`❌ Error fetching username for player ${playerId}:`, error);\n          return { playerId, username: 'Unknown' };\n        }\n      });\n\n      const usernameResults = await Promise.all(usernamePromises);\n      \n      // Convert to map and update state\n      const usernameMap = usernameResults.reduce((acc, { playerId, username }) => {\n        acc[playerId] = username;\n        return acc;\n      }, {});\n\n      setPlayerUsernames(prev => ({ ...prev, ...usernameMap }));\n    } catch (error) {\n      console.error(\"❌ Error fetching usernames:\", error);\n    }\n  };\n\n  const [showLogicModal, setShowLogicModal] = useState(false);\n  const [logicModalData, setLogicModalData] = useState({ logic: '', trainNumber: null });\n\n  const handleShowLogic = (logicText, trainNumber) => {\n    setLogicModalData({ logic: logicText, trainNumber });\n    setShowLogicModal(true);\n  };\n\n  const handleShowTrainLog = async () => {\n    if (!setModalContent || !setIsModalOpen) {\n      console.warn(\"Modal context functions not available.\");\n      return;\n    }\n\n    if (!currentPlayer?.settlementId) {\n      console.warn(\"⚠️ Cannot show train log: settlementId missing.\");\n      return;\n    }\n\n    try {\n      const response = await axios.get(`${API_BASE}/api/settlement/${currentPlayer.settlementId}/trainlog`);\n      const trainlog = response.data.trainlog || [];\n\n      const trainLogTable = (\n        <table className=\"train-log-table\" style={{ width: \"100%\", textAlign: \"left\", borderCollapse: \"collapse\" }}>\n          <thead>\n            <tr>\n              <th style={{ padding: \"6px 12px\" }}>Train #</th>\n              <th style={{ padding: \"6px 12px\" }}>Date</th>\n              <th style={{ padding: \"6px 12px\" }}>Status</th>\n              <th style={{ padding: \"6px 12px\" }}>Offers Filled</th>\n              <th style={{ padding: \"6px 12px\" }}>Total Winners</th>\n              <th style={{ padding: \"6px 12px\" }}>Reward Summary</th>\n              <th style={{ padding: \"6px 12px\" }}>Logic</th>\n            </tr>\n          </thead>\n          <tbody>\n            {[...trainlog].reverse().map((entry, i) => (\n              <tr key={i}>\n                <td style={{ padding: \"6px 12px\" }}>{entry.trainnumber || '-'}</td>\n                <td style={{ padding: \"6px 12px\" }}>{new Date(entry.date).toLocaleDateString()}</td>\n                <td style={{ padding: \"6px 12px\" }}>{entry.status || ''}</td>\n                <td style={{ padding: \"6px 12px\" }}>\n                  {entry.status === 'Next Train' || entry.status === 'Current Train' ? 'n/a' : entry.alloffersfilled ? '✅' : '❌'}\n                </td>\n                <td style={{ padding: \"6px 12px\" }}>\n                  {entry.status === 'Next Train' || entry.status === 'Current Train' ? 'n/a' : entry.totalwinners}\n                </td>\n                <td style={{ padding: \"6px 12px\" }}>\n                  {(() => {\n                    // Combine rewards of the same type for display\n                    const combinedRewards = {};\n                    (entry.rewards || []).forEach((reward) => {\n                      if (combinedRewards[reward.item]) {\n                        combinedRewards[reward.item] += reward.qty;\n                      } else {\n                        combinedRewards[reward.item] = reward.qty;\n                      }\n                    });\n                    return Object.entries(combinedRewards).map(([item, totalQty]) => `${totalQty} ${item}`).join(', ');\n                  })()}\n                </td>\n                <td style={{ padding: \"6px 12px\" }}>\n                  {entry.logic ? (\n                    <button \n                      onClick={() => handleShowLogic(entry.logic, entry.trainnumber)}\n                      className=\"train-logic-button\"\n                    >\n                      Logic\n                    </button>\n                  ) : (\n                    '-'\n                  )}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      );\n\n      setModalContent({\n        title: \"Train Log\",\n        size: \"large\",\n        message: trainlog.length === 0 ? \"No recent train activity.\" : undefined,\n        custom: trainLogTable,\n      });\n      setIsModalOpen(true);\n    } catch (error) {\n      console.error(\"❌ Failed to fetch train log:\", error);\n      setModalContent({\n        title: \"Error\",\n        message: \"Failed to load train log.\",\n        size: \"small\",\n      });\n      setIsModalOpen(true);\n    }\n  };\n\n  const getSymbol = (type) => {\n    return masterResources.find(r => r.type === type)?.symbol || \"❓\";\n  };\n\n  const handleClaim = async (offer) => {\n    if (!offer || offer.claimedBy) return;\n\n    // ⛔️ Check if player already has a claimed offer\n    const alreadyClaimed = trainOffers.some(\n      (o) => o.claimedBy === currentPlayer.playerId && !o.filled\n    );\n    if (alreadyClaimed) {\n      updateStatus(2014); // ⚠️ Already claimed an offer\n      return;\n    }\n\n    try {\n      // Find the exact index of the offer to ensure uniqueness\n      const offerIndex = trainOffers.findIndex(\n        (o) => o.itemBought === offer.itemBought &&\n              o.qtyBought === offer.qtyBought &&\n              !o.claimedBy &&\n              !o.filled\n      );\n      if (offerIndex === -1) {\n        console.warn(\"⚠️ No matching unclaimed offer found to claim.\");\n        return;\n      }\n\n      const updatedOffer = {\n        ...trainOffers[offerIndex],\n        claimedBy: currentPlayer.playerId,\n      };\n\n      const response = await axios.post(`${API_BASE}/api/update-train-offer/${currentPlayer.settlementId}`, {\n        updateOffer: updatedOffer,\n      });\n\n      if (response.status === 200) {\n        setTrainOffers(prev => {\n          const newOffers = [...prev];\n          newOffers[offerIndex] = updatedOffer;\n          return newOffers;\n        });\n        \n        // Add current player's username to the map immediately\n        setPlayerUsernames(prev => ({\n          ...prev,\n          [currentPlayer.playerId]: currentPlayer.username\n        }));\n      }\n    } catch (err) {\n      console.error(\"❌ Error claiming train offer:\", err);\n      \n      // Handle case where offer was already claimed\n      if (err.response?.status === 409) {\n        updateStatus(2017); // This order has already been claimed.\n        // Refresh offers to get latest state\n        fetchTrainOffers();\n      } else {\n        updateStatus(505); // Generic error\n      }\n    }\n  };\n\n  const handleFulfill = async (offer) => {\n    if (!offer || offer.claimedBy !== currentPlayer.playerId) return;\n\n    // Spend the ingredients (the item being delivered)\n    const success = await spendIngredients({\n      playerId: currentPlayer.playerId,\n      recipe: { \n        type: offer.itemBought, \n        ingredient1: offer.itemBought, \n        ingredient1qty: offer.qtyBought \n      },\n      inventory,\n      backpack,\n      setInventory,\n      setBackpack,\n      setCurrentPlayer,\n      updateStatus,\n    });\n    if (!success) return;\n\n    try {\n      // First update the train offer\n      await axios.post(`${API_BASE}/api/update-train-offer/${currentPlayer.settlementId}`, {\n        updateOffer: {\n          ...offer,\n          filled: true,\n        },\n      });\n\n    // Award Money for fulfillment\n    await gainIngredients({\n      playerId: currentPlayer.playerId,\n      currentPlayer,\n      resource: \"Money\",\n      quantity: offer.qtyGiven,\n      inventory,\n      backpack,\n      setInventory,\n      setBackpack,\n      setCurrentPlayer,\n      updateStatus,\n      masterResources,\n      globalTuning,\n    });\n\n      // Update local state in correct order\n      setTrainOffers(prev => {\n        const index = prev.findIndex(o =>\n          o.itemBought === offer.itemBought &&\n          o.qtyBought === offer.qtyBought &&\n          o.claimedBy === currentPlayer.playerId &&\n          !o.filled\n        );\n        if (index === -1) return prev;\n        const newOffers = [...prev];\n        newOffers[index] = { ...newOffers[index], filled: true };\n        return newOffers;\n      });\n\n      updateStatus(`✅ Delivered ${offer.qtyBought} ${offer.itemBought}.`);\n\n    } catch (error) {\n      console.error(\"❌ Error fulfilling offer:\", error);\n      fetchTrainOffers(); // Refresh offers on error to ensure sync\n    }\n  };\n\n  const renderNextShipment = () => {\n    if (![\"loading\", \"departing\"].includes(trainPhase)) return null;\n    if (!nextOffers.length) return null;\n  \n    // ✅ Deduplicate by itemBought\n    const seen = new Set();\n    const uniqueOffers = nextOffers.filter((offer) => {\n      if (seen.has(offer.itemBought)) return false;\n      seen.add(offer.itemBought);\n      return true;\n    });\n  \n    return (\n      <div className=\"next-shipment-preview\">\n        <h4>{strings[2003]}</h4>\n        <div className=\"next-shipment-container\">\n          {uniqueOffers.map((offer, index) => (\n            <div key={index} className=\"next-shipment-item\">\n              {getSymbol(offer.itemBought)} {offer.itemBought}\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  const renderRewardSection = () => {\n    if (!trainRewards.length || trainPhase !== \"loading\") return null;\n  \n    // ✅ Combine rewards of the same type\n    const combinedRewards = {};\n    trainRewards.forEach((reward) => {\n      if (combinedRewards[reward.item]) {\n        combinedRewards[reward.item] += reward.qty;\n      } else {\n        combinedRewards[reward.item] = reward.qty;\n      }\n    });\n  \n    return (\n      <div className=\"reward-section\">\n        <h4>{strings[2004]}</h4>\n        <div className=\"train-rewards-container\">\n          {Object.entries(combinedRewards).map(([item, totalQty], index) => (\n            <div key={index} className=\"train-reward-item\">\n              {getSymbol(item)} {totalQty} {item}\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  const renderOfferSection = (title, offers) => {\n    if (!offers.length) return null;\n    return (\n      <div className=\"offer-section\">\n        <h4>{title}</h4>\n        {offers.map((offer, index) => {\n          const isYours = offer.claimedBy === currentPlayer.playerId;\n          const isCompleted = offer.filled;\n          const affordable = latestInventory?.some(\n            (item) => item.type === offer.itemBought && item.quantity >= offer.qtyBought\n          ) || false;\n\n          const playerQty = latestInventory?.find(inv => inv.type === offer.itemBought)?.quantity || 0;\n          const costColor = playerQty >= offer.qtyBought ? 'green' : 'red';\n          const costDisplay = `<span style=\"color: ${costColor};\">${getSymbol(offer.itemBought)} ${offer.itemBought} ${offer.qtyBought} / ${playerQty}</span>`;\n          const rewardDisplay = `+${getSymbol(offer.itemGiven)} ${offer.itemGiven} ${offer.qtyGiven.toLocaleString()}`;\n          const details = `Offer:<div>${costDisplay}</div><br>Reward:<div>${rewardDisplay}</div>`;\n\n          let buttonText = '';\n          if (isCompleted) {\n            const username = playerUsernames[offer.claimedBy] || 'Unknown';\n            buttonText = username;\n          } else if (isYours && affordable) {\n            buttonText = strings[2005];\n          } else if (isYours) {\n            buttonText = strings[2006];\n          } else if (offer.claimedBy) {\n            const username = playerUsernames[offer.claimedBy] || 'Unknown';\n            buttonText = `${strings[2007]} (${username})`;\n          } else {\n            buttonText = strings[2008];\n          }\n\n          return (\n            <ResourceButton\n              key={index}\n              name={isCompleted || offer.claimedBy ? (playerUsernames[offer.claimedBy] || 'Unknown') : ''}\n              className={`train-offer-card ${\n                !offer.claimedBy ? 'unclaimed' : \n                'resource-button'\n              }`}\n              onClick={() =>\n                isCompleted ? null :\n                isYours ? handleFulfill(offer) :\n                !offer.claimedBy ? handleClaim(offer) : null\n              }\n              disabled={isCompleted || (!isYours && offer.claimedBy) || (isYours && !affordable)}\n              details={details}\n            >\n              {!isCompleted && !offer.claimedBy ? buttonText : \n               !isCompleted && offer.claimedBy ? strings[2007] : ''}\n            </ResourceButton>\n          );\n        })}\n      </div>\n    );\n  };\n\n  const claimedByYou = trainOffers.filter(o => o.claimedBy === currentPlayer.playerId && !o.filled);\n  const available = trainOffers.filter(o => !o.claimedBy);\n  const claimedByOthers = trainOffers.filter(o => o.claimedBy && o.claimedBy !== currentPlayer.playerId && !o.filled);\n  const completed = trainOffers.filter(o => o.filled);\n\n  const allOrdersFilled = trainPhase === 'departing' || trainPhase === 'arriving'\n  ? trainOffers.length > 0 && trainOffers.every(o => o.filled)\n  : false;\n\n\n  return (\n    <>\n    <Panel onClose={onClose} descriptionKey=\"1022\" titleKey=\"1122\" panelName=\"TrainPanel\">\n      {/* Check if player is in their home settlement */}\n      {(() => {\n        const isInHomeSettlement = String(currentPlayer.location.s) === String(currentPlayer.settlementId);\n        console.log('🚂 Train access check:', {\n          currentSettlement: currentPlayer.location.s,\n          homeSettlement: currentPlayer.settlementId,\n          isInHomeSettlement\n        });\n        return !isInHomeSettlement;\n      })() ? (\n        <div style={{ textAlign: 'center', padding: '20px' }}>\n          <h2>{strings[2050] || \"This is not your home settlement.\"}</h2>\n        </div>\n      ) : isContentLoading ? (\n        <p>{strings[98]}</p>\n      ) : (\n        <>\n          <h3>{strings[2020]} {trainPhase} {currentTrainNumber ? `(Train #${currentTrainNumber})` : ''}</h3>\n          <h2>⏳ {trainTimer}</h2>\n\n          {trainPhase === \"loading\" && (\n            <>\n              {renderRewardSection()}\n              {renderOfferSection(strings[2009], claimedByYou)}\n              {renderOfferSection(strings[2010], available)}\n              {renderOfferSection(strings[2011], claimedByOthers)}\n              {renderOfferSection(strings[2012], completed)}\n            </>\n          )}\n\n          {allOrdersFilled && (\n            <div className=\"train-rewards-banner\">\n              {strings[2016]}\n            </div>\n          )}\n\n          {(trainPhase === \"loading\" || trainPhase === \"departing\") && renderNextShipment()}\n\n          <button className=\"standard-button\" onClick={() => handleShowTrainLog()}>\n            {strings[2015]}\n          </button>\n        </>\n      )}\n    </Panel>\n    \n    {showLogicModal && (\n      <div className=\"train-logic-modal-overlay\">\n        <div className=\"train-logic-modal\">\n          <button \n            onClick={() => setShowLogicModal(false)}\n            className=\"train-logic-modal-close\"\n          >\n            ×\n          </button>\n          <h3>\n            Train #{logicModalData.trainNumber || '?'} Logic\n          </h3>\n          <pre>\n            {logicModalData.logic || 'No logic information available'}\n          </pre>\n        </div>\n      </div>\n    )}\n    </>\n  );\n}\n\nexport default TrainPanel;","import API_BASE from '../../config';\nimport { trackQuestProgress } from '../Quests/QuestGoalTracker';\nimport React, { useState, useEffect, useContext } from 'react';\nimport Panel from '../../UI/Panel';\nimport Modal from '../../UI/Modal';\nimport axios from 'axios';\nimport { StatusBarContext } from '../../UI/StatusBar/StatusBar';\nimport './Courthouse.css';\nimport '../../UI/Panel.css';\nimport { useStrings } from '../../UI/StringsContext';\nimport '../../UI/Modal.css';\nimport '../../UI/SharedButtons.css';\nimport { getMayorUsername } from './GovUtils';\nimport { calculateSettlementPopulation } from '../../Utils/PopulationUtils';\nimport { formatCountdown } from '../../UI/Timers';\n\nconst CourthousePanel = ({ onClose, currentPlayer, setCurrentPlayer }) => {\n\n    const strings = useStrings();\n    const [settlement, setSettlement] = useState(null);\n    const [taxRate, setTaxRate] = useState(0);\n    const [isMayor, setIsMayor] = useState(false);\n    const [electionPhase, setElectionPhase] = useState('');\n    const [countdown, setCountdown] = useState('');\n    const { updateStatus } = useContext(StatusBarContext);\n    const [campaignPromises, setCampaignPromises] = useState([]);\n    const [newPromise, setNewPromise] = useState('');\n    const [selectedCandidate, setSelectedCandidate] = useState(null);\n    const [hasVoted, setHasVoted] = useState(false);\n    const [votedFor, setVotedFor] = useState('');\n    const [candidateList, setCandidateList] = useState([]);\n    const [tempTaxRate, setTempTaxRate] = useState(0); // Temporary UI state for the slider\n    const [hoveredCandidate, setHoveredCandidate] = useState(null);\n    const [tooltipPosition, setTooltipPosition] = useState({ x: 0, y: 0 });\n    const [tempSettlementName, setTempSettlementName] = useState('');\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [modalContent, setModalContent] = useState(null);\n    const [mayor, setMayor] = useState(\"\");\n    const [population, setPopulation] = useState(0);\n\n    \n    const handleViewElectionLog = async () => {\n        if (!currentPlayer?.settlementId) {\n          console.warn(\"⚠️ Cannot show election log: settlementId missing.\");\n          return;\n        }\n\n        console.log(\"🗳️ Show Election Log clicked\");\n        console.log(\"📤 Fetching election log for settlement:\", currentPlayer.settlementId);\n\n        try {\n          const response = await axios.get(`${API_BASE}/api/settlement/${currentPlayer.settlementId}/electionlog`);\n          console.log(\"📥 Election log API response:\", response.data);\n\n          const electionlog = response.data.electionlog || [];\n\n          const electionLogTable = (\n            <table className=\"election-log-table\" style={{ width: \"100%\", textAlign: \"left\", borderCollapse: \"collapse\" }}>\n              <thead>\n                <tr>\n                  <th style={{ padding: \"6px 12px\" }}>Date</th>\n                  <th style={{ padding: \"6px 12px\" }}>Candidates</th>\n                  <th style={{ padding: \"6px 12px\" }}>Elected Mayor</th>\n                </tr>\n              </thead>\n              <tbody>\n                {[...electionlog].reverse().map((entry, i) => (\n                  <tr key={i}>\n                    <td style={{ padding: \"6px 12px\" }}>{new Date(entry.date).toLocaleDateString()}</td>\n                    <td style={{ padding: \"6px 12px\" }}>\n                      {entry.candidates?.length > 0 ? (\n                        entry.candidates.map((c, j) => (\n                          <div key={j}>{c.username}: {c.votes} votes</div>\n                        ))\n                      ) : (\n                        <em>No candidates</em>\n                      )}\n                    </td>\n                    <td style={{ padding: \"6px 12px\" }}>{entry.electedmayor || 'None'}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          );\n\n          setModalContent({\n            title: \"Recent Election Results\",\n            size: \"large\",\n            message: electionlog.length === 0\n              ? \"No election results recorded yet.\"\n              : undefined,\n            custom: electionLogTable,\n          });\n          setIsModalOpen(true);\n        } catch (error) {\n          console.error(\"❌ Failed to fetch election log:\", error);\n          setModalContent({\n            title: \"Error\",\n            message: \"Failed to load election log.\",\n            size: \"small\",\n          });\n          setIsModalOpen(true);\n        }\n    };\n\n    // Effect for initial data load only\n    useEffect(() => {\n        fetchElectionData();\n    }, [currentPlayer.settlementId]);\n\n    // Combined countdown and phase monitor effect\n    useEffect(() => {\n        const updateTimerAndPhase = () => {\n            const now = Date.now();\n            const storedTimers = JSON.parse(localStorage.getItem(\"timers\")) || {};\n            const electionData = storedTimers.elections || {};\n            \n            // Update phase first\n            const newPhase = electionData.phase || \"Administration\";\n            if (newPhase !== electionPhase) {\n                console.log(\"🗳️ Election phase changing to:\", newPhase);\n                setElectionPhase(newPhase);\n            }\n\n            // Then update countdown using shared formatCountdown function\n            const endTime = electionData.endTime;\n            if (!endTime || isNaN(endTime)) {\n                setCountdown(\"N/A\");\n                return;\n            }\n\n            setCountdown(formatCountdown(endTime, now));\n        };\n\n        updateTimerAndPhase(); // Initial run\n        const interval = setInterval(updateTimerAndPhase, 1000);\n        return () => clearInterval(interval);\n    }, []); // No dependencies needed\n\n    // Effect to fetch fresh data on phase changes\n    useEffect(() => {\n        console.log(\"🗳️ Phase changed to:\", electionPhase);\n        if (electionPhase === \"Counting\") {\n            setCampaignPromises([]);\n            setCandidateList([]);\n        }\n        fetchElectionData();\n    }, [electionPhase]);\n\n    const fetchElectionData = async () => {\n        try {\n            const settlementResponse = await axios.get(\n                `${API_BASE}/api/get-settlement/${currentPlayer.settlementId}`\n            );\n            const settlementData = settlementResponse.data;\n            \n            setSettlement(settlementData);\n            setTaxRate(settlementData.taxrate || 0);\n            setTempTaxRate(settlementData.taxrate || 0);\n            setCampaignPromises(settlementData.campaignPromises || []);\n            setTempSettlementName(settlementData.displayName || '');\n            \n            // Update mayor status\n            const mayorRole = settlementData.roles.find(role => role.roleName === 'Mayor');\n            setIsMayor(mayorRole && mayorRole.playerId.toString() === currentPlayer._id.toString());\n            \n            // Fetch mayor username\n            const mayorName = await getMayorUsername(currentPlayer.settlementId);\n            setMayor(mayorName);\n            \n            // Calculate population\n            const populationCount = calculateSettlementPopulation(settlementData);\n            setPopulation(populationCount);\n\n            // Always reset hasVoted and votedFor before checking\n            setHasVoted(false);\n            setVotedFor('');\n            if (settlementData.votes) {\n                const playerVote = settlementData.votes.find(v => String(v.voterId) === String(currentPlayer._id));\n                if (playerVote) {\n                    setHasVoted(true);\n                    const votedCandidate = settlementData.campaignPromises?.find(p => \n                        String(p.playerId) === String(playerVote.candidateId)\n                    );\n                    setVotedFor(votedCandidate?.username || 'Unknown');\n                }\n            }\n\n            // Only update candidates list if in voting phase and haven't voted\n            if (electionPhase === \"Voting\" && !hasVoted) {\n                const uniqueCandidates = settlementData.campaignPromises?.reduce((acc, promise) => {\n                    if (!acc.find((c) => c.playerId === promise.playerId)) {\n                        acc.push({ playerId: promise.playerId, username: promise.username });\n                    }\n                    return acc;\n                }, []) || [];\n                setCandidateList(uniqueCandidates);\n            }\n        } catch (error) {\n            console.error('❌ Error fetching election data:', error);\n        }\n    };\n\n    const handleAddCampaignPromise = async () => {\n        if (!newPromise.trim()) return;\n        if (newPromise.length > 200) {\n            updateStatus('Campaign promises cannot exceed 200 characters.');\n            return;\n        }\n        try {\n            const response = await axios.post(`${API_BASE}/api/save-campaign-promise`, {\n                settlementId: currentPlayer.settlementId,\n                playerId: currentPlayer._id,\n                username: currentPlayer.username,\n                text: newPromise,\n            });\n\n            if (response.data.message) {\n                console.log(`📢 ${response.data.message}`);\n                updateStatus('🏛️ Campaign promise submitted.');\n                setCampaignPromises(response.data.campaignPromises);\n                setNewPromise('');\n            }\n        } catch (error) {\n            console.error('❌ Error submitting campaign promise:', error);\n            updateStatus('❌ Failed to submit campaign promise.');\n        }\n    };\n\n    const handleVote = async () => {\n        if (!selectedCandidate) return;\n\n        try {\n            const response = await axios.post(`${API_BASE}/api/cast-vote`, {\n                settlementId: currentPlayer.settlementId,\n                voterId: currentPlayer._id,\n                candidateId: selectedCandidate,\n            });\n\n            if (response.data.message) {\n                console.log(`🗳️ ${response.data.message}`);\n                updateStatus('🏛️ Vote successfully cast.');\n                setHasVoted(true);\n                // Store the username of the voted candidate\n                const votedCandidate = candidateList.find(c => c.playerId === selectedCandidate);\n                setVotedFor(votedCandidate?.username || 'Unknown');\n                await trackQuestProgress(currentPlayer, 'Vote', 'Election', 1);\n                fetchElectionData();\n            }\n        } catch (error) {\n            console.error('❌ Error casting vote:', error);\n            if (error.response.data.error === \"Already voted.\") {\n                updateStatus('❌ You already voted.');\n            } else {\n                updateStatus('❌ Failed to cast vote.');\n            }\n        }\n    };\n\n    const handleSaveTaxRate = async () => {\n        if (!isMayor) return;\n    \n        try {\n            console.log(`💾 Saving new tax rate: ${tempTaxRate}%`);\n    \n            const response = await axios.post(`${API_BASE}/api/update-settlement`, {\n                settlementId: currentPlayer.settlementId,\n                updates: { taxrate: tempTaxRate }, // ✅ Save the new tax rate\n            });\n    \n            if (response.data.success) {\n                console.log(`✅ Tax rate updated successfully.`);\n                updateStatus(`💰 Tax rate set to ${tempTaxRate}%`);\n                // ✅ Sync stored tax rate with UI slider\n                setTaxRate(tempTaxRate);\n            } else {\n                console.error(`❌ Failed to update tax rate:`, response.data.error);\n                updateStatus(\"❌ Error updating tax rate.\");\n            }\n        } catch (error) {\n            console.error('❌ Error saving tax rate:', error);\n            updateStatus(\"❌ Failed to save tax rate.\");\n        }\n    };\n\n    const handleSaveSettlementName = async () => {\n        if (!isMayor || !tempSettlementName.trim()) return;\n\n        try {\n            const response = await axios.post(`${API_BASE}/api/update-settlement`, {\n                settlementId: currentPlayer.settlementId,\n                updates: { displayName: tempSettlementName } // Changed from name to displayName\n            });\n\n            if (response.data.success) {\n                updateStatus(`Settlement renamed to ${tempSettlementName}`);\n                setSettlement(prev => ({ ...prev, displayName: tempSettlementName }));\n            } else {\n                updateStatus(\"❌ Error updating settlement name.\");\n            }\n        } catch (error) {\n            console.error('❌ Error saving settlement name:', error);\n            updateStatus(\"❌ Failed to save settlement name.\");\n        }\n    };\n\n    const getCandidatePromise = (candidateId) => {\n        return campaignPromises.find(promise => \n            promise.playerId === candidateId\n        )?.text || \"No campaign promise made.\";\n    };\n\n    console.log(\"hasVoted:\", hasVoted);\n    console.log(\"electionPhase:\", electionPhase);\n\n\n\n\n    return (\n        <Panel onClose={onClose} descriptionKey=\"1012\" titleKey=\"1112\" panelName=\"Courthouse\">\n            <div className=\"panel-content courthouse-panel\">\n            {/* Check if player is in their home settlement */}\n            {(() => {\n                const isInHomeSettlement = String(currentPlayer.location.s) === String(currentPlayer.settlementId);\n                console.log('🏛️ Courthouse access check:', {\n                    currentSettlement: currentPlayer.location.s,\n                    homeSettlement: currentPlayer.settlementId,\n                    isInHomeSettlement\n                });\n                return !isInHomeSettlement;\n            })() ? (\n                <div style={{ textAlign: 'center', padding: '20px' }}>\n                    <h2>{strings[2050] || \"This is not your home settlement.\"}</h2>\n                </div>\n            ) : (\n                <>\n                {isMayor && <h2>{strings[2080]}</h2>}\n                \n                <div className=\"debug-buttons\">\n\n\n{/* Settlement name section */}\n                    <h3>{strings[2082]}</h3>\n                    {isMayor ? (\n                        <div className=\"settlement-name-editor\">\n                            <input\n                                type=\"text\"\n                                value={tempSettlementName}\n                                onChange={(e) => setTempSettlementName(e.target.value)}\n                                placeholder={strings[2081]}\n                            />\n                            <div className=\"shared-buttons\" style={{ display: 'inline-block', marginLeft: '8px' }}>\n                                <button \n                                    className=\"btn-basic btn-success btn-modal-small\" \n                                    onClick={handleSaveSettlementName}\n                                    disabled={!tempSettlementName.trim()}\n                                    style={{ width: 'auto' }}\n                                >\n                                    {strings[2083]}\n                                </button>\n                            </div>\n                        </div>\n                    ) : (\n                        <h3 style={{ color: 'rgb(154, 106, 22)' }}><strong>{settlement?.displayName || 'Unnamed'}</strong></h3>\n                    )}\n \n{/* POPULATION section */}\n                    <h3>{strings[\"3002\"]} <strong>{population}</strong></h3>\n\n{/* TAX RATE section */} \n \n                    <h3>{strings[2041]} {taxRate}%</h3>\n                    {isMayor && (\n                        <div className=\"tax-rate-editor\">\n                            <input\n                                type=\"range\" min=\"0\" max=\"20\" value={tempTaxRate}\n                                onChange={(e) => setTempTaxRate(Number(e.target.value))}\n                            />\n                            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginTop: '8px' }}>\n                            <span style={{ flex: 1 }}>{strings[2042]} {tempTaxRate}%</span>\n                            <button\n                                className=\"btn-basic btn-success btn-modal-small\"\n                                onClick={handleSaveTaxRate}\n                                style={{\n                                width: 'auto',\n                                maxWidth: '100px',\n                                flexShrink: 0\n                                }}\n                            >\n                                {strings[\"2043\"]}\n                            </button>\n                            </div>\n                        </div>\n                    )}\n\n{/* CURRENT MAYOR section - only show if player is not the mayor */}\n                    {!isMayor && (\n                        <>\n                            <h3>{strings[2085]}</h3>\n                            <h2 style={{ color: 'rgb(154, 106, 22)' }}><strong>{mayor || \"Vacant\"}</strong></h2>\n                        </>\n                    )}\n\n                    {!isMayor && <h2>{strings[2079]}</h2>}\n\n                    <p>{strings[2084]}</p>\n\n\n{/* ELECTIONS section */} \n\n                    <br></br> \n                    <h2>{strings[2045]}</h2>\n                    <div className=\"shared-buttons\">\n                        <button className=\"btn-basic btn-success\" onClick={handleViewElectionLog}>Recent Election Results</button>\n                    </div>\n                    <p><strong>\n                        {electionPhase === \"Counting\" && strings[\"2062\"]}\n                        {electionPhase === \"Voting\" && strings[\"2061\"]}\n                        {electionPhase === \"Campaigning\" && strings[\"2060\"]}\n                        {electionPhase === \"Administration\" && strings[\"2063\"]}\n                    </strong></p>\n                    <p>{countdown}</p>\n\n{/* ✅ Campaigning Phase */}\n\n                    {electionPhase === \"Campaigning\" && (\n                        <>\n                            <h3>{strings[2048]}</h3>\n                            \n                            {/* ✅ Scrollable List of Promises */}\n                            <div className=\"campaign-promises\">\n                                {campaignPromises.length > 0 ? (\n                                    campaignPromises.map((promise, index) => (\n                                        <div key={index} className=\"campaign-entry\">\n                                            <strong>{promise.username}:</strong> {promise.text}\n                                        </div>\n                                    ))\n                                ) : (\n                                    <p>{strings[2071]}</p>\n                                )}\n                            </div>\n\n                            {/* ✅ Player Can Submit a Promise */}\n                            {!campaignPromises.some(p => p.playerId === currentPlayer._id) && (\n                                <>\n                                    <textarea\n                                        value={newPromise}\n                                        onChange={(e) => setNewPromise(e.target.value)}\n                                        placeholder={strings[2072]}\n                                    />\n                                    <div className=\"shared-buttons\">\n                                        <button className=\"btn-basic btn-success\" onClick={handleAddCampaignPromise}>Submit Campaign Promise</button>\n                                    </div>\n                                </>\n                            )}\n                        </>\n                    )}\n\n{/* Voting Phase UI */}\n\n                <div className=\"voting-section\">\n                </div>\n                    {electionPhase === 'Voting' && (\n                        <div className=\"voting-section\">\n                            {hasVoted ? (\n                                <p>{strings[2077]}</p>\n                            ) : candidateList.length > 0 ? (\n                                <>\n                                    <h3>Cast Your Vote</h3>\n                                    {candidateList.map((candidate, index) => (\n                                        <div \n                                            key={candidate.playerId || index}\n                                            className=\"candidate-row\"\n                                            onMouseEnter={(e) => {\n                                                setHoveredCandidate(candidate.playerId);\n                                                setTooltipPosition({\n                                                    x: e.clientX + 10,\n                                                    y: e.clientY - 40\n                                                });\n                                            }}\n                                            onMouseLeave={() => setHoveredCandidate(null)}\n                                        >\n                                            <input \n                                                type=\"radio\" \n                                                name=\"vote\" \n                                                value={candidate.playerId}\n                                                onChange={() => {\n                                                    setSelectedCandidate(candidate.playerId);\n                                                }}\n                                            />\n                                            {candidate.username}\n                                        </div>\n                                    ))}\n                                    <div className=\"shared-buttons\">\n                                        <button \n                                            className=\"btn-basic btn-success\"\n                                            onClick={handleVote} \n                                            disabled={!selectedCandidate}\n                                        >\n                                            {strings[2074]}\n                                        </button>\n                                    </div>\n\n                                    {/* Tooltip */}\n                                    {hoveredCandidate && (\n                                        <div \n                                            className=\"candidate-tooltip\"\n                                            style={{\n                                                left: tooltipPosition.x,\n                                                top: tooltipPosition.y,\n                                            }}\n                                        >\n                                            <strong>{strings[2076]}</strong><br />\n                                            \"{getCandidatePromise(hoveredCandidate)}\"\n                                        </div>\n                                    )}\n                                </>\n                            ) : (\n                                <p>{strings[2078]}</p>\n                            )}\n\n\n                            {/* ✅ Extra message if no one ran */}\n                            {candidateList.length === 0 && (\n                                <p><em>No one ran for mayor this election cycle.</em></p>\n                            )}\n                            \n                        </div>\n                    )}\n                </div>\n                </>\n            )}\n            </div>\n            {isModalOpen && (\n                <Modal\n                    isOpen={isModalOpen}\n                    onClose={() => setIsModalOpen(false)}\n                    title={modalContent?.title}\n                    size={modalContent?.size}\n                    message={modalContent?.message}\n                    custom={modalContent?.custom}\n                />\n            )}\n        </Panel>\n    );\n};\n\nexport default CourthousePanel;","import API_BASE from '../../config';\nimport React, { useState, useEffect, useContext } from 'react';\nimport Panel from '../../UI/Panel';\nimport axios from 'axios';\nimport '../../UI/ResourceButton.css'; \nimport ResourceButton from '../../UI/ResourceButton';\nimport FloatingTextManager from '../../UI/FloatingText';\nimport { getIngredientDetails, calculateGemSpeedupCost } from '../../Utils/ResourceHelpers';\nimport { updateGridResource } from '../../Utils/GridManagement';\nimport { canAfford, calculateSkillMultiplier, applySkillMultiplier } from '../../Utils/InventoryManagement';\nimport { refreshPlayerAfterInventoryUpdate } from '../../Utils/InventoryManagement';\nimport { StatusBarContext } from '../../UI/StatusBar/StatusBar';\nimport { trackQuestProgress } from '../Quests/QuestGoalTracker';\nimport GlobalGridStateTilesAndResources from '../../GridState/GlobalGridStateTilesAndResources';\nimport NPCsInGridManager from '../../GridState/GridStateNPCs';\nimport { useStrings } from '../../UI/StringsContext';\nimport { getLocalizedString } from '../../Utils/stringLookup';\nimport { spendIngredients, gainIngredients } from '../../Utils/InventoryManagement';\nimport { formatSingleCollection } from '../../UI/StatusBar/CollectionFormatters';\nimport '../../UI/SharedButtons.css';\nimport { handleProtectedSelling } from '../../Utils/ProtectedSelling';\nimport TransactionButton from '../../UI/TransactionButton';\nimport { formatCountdown, formatDuration } from '../../UI/Timers';\nimport './ScrollStation.css'; // Import for shared station panel styles\n\nconst CraftingStation = ({\n  onClose,\n  inventory,\n  setInventory,\n  backpack,\n  setBackpack,\n  currentPlayer,\n  setCurrentPlayer,\n  setResources,\n  stationType,\n  currentStationPosition,\n  gridId,\n  masterResources,\n  masterSkills,\n  TILE_SIZE,\n  isDeveloper,\n  currentSeason,\n  globalTuning,\n}) => {\n  const strings = useStrings();\n  const [recipes, setRecipes] = useState([]);\n  const [allResources, setAllResources] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [stationEmoji, setStationEmoji] = useState('🛖');\n  const { updateStatus } = useContext(StatusBarContext);\n  const [stationDetails, setStationDetails] = useState(null);\n  const [activeTimer, setActiveTimer] = useState(false);\n  const [craftedItem, setCraftedItem] = useState(null);\n  const [craftingCountdown, setCraftingCountdown] = useState(null);\n  const [isCrafting, setIsCrafting] = useState(false);\n  const [isReadyToCollect, setIsReadyToCollect] = useState(false);\n  const [npcRefreshKey, setNpcRefreshKey] = useState(0);\n  const [stationRefreshKey, setStationRefreshKey] = useState(0);\n\n   // ✅ Check for active crafting timers\n   useEffect(() => {\n    if (!stationType || !currentStationPosition) return;\n\n    console.log('🔄 Checking GlobalGridStateTilesAndResources for active crafting timers...');\n    \n    const station = GlobalGridStateTilesAndResources.getResources()?.find(\n      (res) => res.x === currentStationPosition.x && res.y === currentStationPosition.y\n    );\n\n    if (station && station.craftEnd) {\n        \n        setCraftedItem(station.craftedItem);\n        setIsCrafting(true);\n        setActiveTimer(true);  // ✅ Ensure UI treats this as an active timer\n\n        const updateCountdown = () => {\n          const remainingTime = Math.max(0, Math.floor((station.craftEnd - Date.now()) / 1000));\n          setCraftingCountdown(remainingTime);\n\n          if (remainingTime === 0) {\n              console.log('✅ Crafting complete! Ready to collect.');\n              setIsCrafting(false);\n              setIsReadyToCollect(true);\n          }\n      };\n\n        updateCountdown();\n        const timer = setInterval(updateCountdown, 1000);\n        return () => clearInterval(timer);\n    } else {\n        console.log('❌ No active crafting timer found.');\n        setCraftedItem(null);\n        setIsCrafting(false);\n        setIsReadyToCollect(false);\n        setCraftingCountdown(null);\n        setActiveTimer(false);\n    }\n  }, [stationType, currentStationPosition, GlobalGridStateTilesAndResources.getResources(), craftingCountdown]); // ✅ Ensure state triggers re-render\n\n\n  // Sync inventory with local storage and server\n  useEffect(() => {\n    const syncInventory = async () => {\n      try {\n        const storedInventory = JSON.parse(localStorage.getItem('inventory')) || [];\n        setInventory(storedInventory);\n\n        const serverResponse = await axios.get(`${API_BASE}/api/inventory/${currentPlayer.playerId}`);\n        const serverInventory = serverResponse.data.inventory || [];\n        if (JSON.stringify(storedInventory) !== JSON.stringify(serverInventory)) {\n          setInventory(serverInventory);\n          localStorage.setItem('inventory', JSON.stringify(serverInventory));\n        }\n      } catch (error) {\n        console.error('Error syncing inventory:', error);\n      }\n    };\n    syncInventory();\n  }, [currentPlayer]);\n\n  // Fetch recipes and resources (refactored: use masterResources directly)\n  useEffect(() => {\n    try {\n      let filteredRecipes = masterResources.filter((resource) => {\n        // Check if resource source matches station type\n        if (resource.source !== stationType) return false;\n        \n        // Check seasonal restriction\n        if (resource.season && currentSeason && resource.season !== currentSeason) {\n          return false;\n        }\n        \n        return true;\n      });\n      \n      // Filter out non-repeatable resources that already exist on the grid\n      const npcsInGrid = NPCsInGridManager.getNPCsInGrid(gridId);\n      if (npcsInGrid) {\n        // Get all NPC types currently on the grid\n        // NPCs are stored directly under NPCsInGrid with their ID as the key\n        const existingNPCTypes = Object.values(npcsInGrid)\n          .filter(npc => npc && npc.type) // Filter out any null/undefined entries\n          .map(npc => npc.type);\n        \n        console.log('Existing NPC types on grid:', existingNPCTypes);\n        \n        // Filter out non-repeatable recipes that already exist\n        filteredRecipes = filteredRecipes.filter(recipe => {\n          // If it's not repeatable and already exists, filter it out\n          if (recipe.repeatable === false && existingNPCTypes.includes(recipe.type)) {\n            console.log(`Filtering out non-repeatable ${recipe.type} - already exists on grid`);\n            return false;\n          }\n          return true;\n        });\n      }\n      \n      setRecipes(filteredRecipes);\n      const stationResource = masterResources.find((resource) => resource.type === stationType);\n      setStationEmoji(stationResource?.symbol || '🛖');\n      setStationDetails(stationResource);\n      setAllResources(masterResources || []);\n    } catch (error) {\n      console.error('Error processing masterResources:', error);\n    }\n  }, [stationType, masterResources, gridId, npcRefreshKey]);\n  \n  // Periodically refresh to check for NPC changes\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setNpcRefreshKey(prev => prev + 1);\n    }, 2000); // Check every 2 seconds\n    \n    return () => clearInterval(interval);\n  }, []);\n\n\n  const hasRequiredSkill = (requiredSkill) => {\n    return !requiredSkill || currentPlayer.skills?.some((owned) => owned.type === requiredSkill);\n  };\n\n\n  // Protected function to start crafting using transaction system\n  const handleCraft = async (transactionId, transactionKey, recipe) => {\n    console.log(`🔒 [PROTECTED CRAFTING] Starting protected craft for ${recipe.type}`);\n    console.log('Current station state:', { craftedItem, isCrafting, isReadyToCollect, craftingCountdown });\n    setErrorMessage('');\n    \n    if (!recipe) { \n      setErrorMessage('Invalid recipe selected.'); \n      return; \n    }\n\n    try {\n      const response = await axios.post(`${API_BASE}/api/crafting/start-craft`, {\n        playerId: currentPlayer.playerId,\n        gridId,\n        stationX: currentStationPosition.x,\n        stationY: currentStationPosition.y,\n        recipe,\n        transactionId,\n        transactionKey\n      });\n\n      if (response.data.success) {\n        // Update local state with server response\n        const { craftEnd, craftedItem, inventory, backpack } = response.data;\n        \n        // Update inventory from server response\n        if (inventory) {\n          setInventory(inventory);\n          setCurrentPlayer(prev => ({ ...prev, inventory }));\n        }\n        if (backpack) {\n          setBackpack(backpack);\n          setCurrentPlayer(prev => ({ ...prev, backpack }));\n        }\n\n        // Update only the specific station resource in global state\n        const updatedGlobalResources = GlobalGridStateTilesAndResources.getResources().map(res =>\n          res.x === currentStationPosition.x && res.y === currentStationPosition.y\n            ? { ...res, craftEnd, craftedItem }\n            : res\n        );\n        GlobalGridStateTilesAndResources.setResources(updatedGlobalResources);\n        setResources(updatedGlobalResources);\n\n        // Update UI state immediately\n        setCraftedItem(craftedItem);\n        setCraftingCountdown(Math.max(0, Math.floor((craftEnd - Date.now()) / 1000)));\n        setActiveTimer(true);\n        setIsCrafting(true);\n        setIsReadyToCollect(false);\n\n        // Refresh player data to ensure consistency\n        await refreshPlayerAfterInventoryUpdate(currentPlayer.playerId, setCurrentPlayer);\n\n        FloatingTextManager.addFloatingText(404, currentStationPosition.x, currentStationPosition.y, TILE_SIZE);\n        updateStatus(`${strings[440]} ${getLocalizedString(recipe.type, strings)}`);\n\n        console.log(`✅ ${recipe.type} crafting started using protected endpoint.`);\n      }\n    } catch (error) {\n      console.error('Error in protected crafting start:', error);\n      if (error.response?.status === 429) {\n        updateStatus(451);\n      } else if (error.response?.status === 400) {\n        updateStatus(450);\n      } else {\n        updateStatus(452);\n      }\n    }\n  };\n\n\n  // Protected function to collect crafted items using transaction system\n  const handleCollect = async (transactionId, transactionKey, recipe) => {\n    console.log(`🔒 [PROTECTED CRAFTING] Starting protected collection for ${recipe.type}`);\n    \n    if (!recipe) { \n      console.error(\"❌ No valid crafted item to collect.\"); \n      return; \n    }\n\n    try {\n      const response = await axios.post(`${API_BASE}/api/crafting/collect-item`, {\n        playerId: currentPlayer.playerId,\n        gridId,\n        stationX: currentStationPosition.x,\n        stationY: currentStationPosition.y,\n        craftedItem,\n        transactionId,\n        transactionKey\n      });\n\n      if (response.data.success) {\n        // Update local state with server response\n        const { collectedItem, isNPC, inventory, updatedStation } = response.data;\n\n        // ✅ Apply skill buffs to crafted collection (station-based)\n        console.log('MasterSkills:', masterSkills);\n        console.log('Station Type:', stationType);\n\n        // Use shared skill calculation utility\n        const skillInfo = calculateSkillMultiplier(stationType, currentPlayer.skills || [], masterSkills);\n\n        // Apply multiplier to quantity (default to 1 if not provided by backend)\n        const baseQtyCollected = 1;\n        const finalQtyCollected = applySkillMultiplier(baseQtyCollected, skillInfo.multiplier);\n\n        console.log('[DEBUG] qtyCollected after multiplier:', finalQtyCollected);\n\n        // Handle NPC spawning client-side\n        if (isNPC) {\n          const craftedResource = allResources.find(res => res.type === collectedItem);\n          if (craftedResource) {\n            NPCsInGridManager.spawnNPC(gridId, craftedResource, { x: currentStationPosition.x, y: currentStationPosition.y });\n            // Trigger refresh to update available recipes\n            setNpcRefreshKey(prev => prev + 1);\n          }\n          // Show floating text for NPCs immediately since they don't need inventory space\n          FloatingTextManager.addFloatingText(`+${finalQtyCollected} ${getLocalizedString(collectedItem, strings)}`, currentStationPosition.x, currentStationPosition.y, TILE_SIZE);\n        } else {\n          // Only add non-NPC items to inventory\n          // Update inventory with buffed quantity\n          const gained = await gainIngredients({\n            playerId: currentPlayer.playerId,\n            currentPlayer,\n            resource: collectedItem,\n            quantity: finalQtyCollected,\n            inventory: currentPlayer.inventory,\n            backpack: currentPlayer.backpack,\n            setInventory,\n            setBackpack,\n            setCurrentPlayer,\n            updateStatus,\n            masterResources,\n            globalTuning,\n          });\n\n          if (!gained) {\n            console.error('❌ Failed to add buffed crafted item to inventory.');\n            return; // Exit early - don't clear crafting state if we couldn't collect\n          }\n          \n          // Show floating text only after successful collection\n          FloatingTextManager.addFloatingText(`+${finalQtyCollected} ${getLocalizedString(collectedItem, strings)}`, currentStationPosition.x, currentStationPosition.y, TILE_SIZE);\n        }\n\n        // Only clear crafting state if we successfully collected (or it's an NPC)\n        \n        // Track quest progress for all crafted items (both NPCs and regular items)\n        await trackQuestProgress(currentPlayer, 'Craft', collectedItem, finalQtyCollected, setCurrentPlayer);\n\n        // Update grid resources to remove crafting state\n        const updatedGlobalResources = GlobalGridStateTilesAndResources.getResources().map(res =>\n          res.x === currentStationPosition.x && res.y === currentStationPosition.y\n            ? { ...res, craftEnd: undefined, craftedItem: undefined }\n            : res\n        );\n        GlobalGridStateTilesAndResources.setResources(updatedGlobalResources);\n        setResources(updatedGlobalResources);\n\n        // Reset UI state\n        setActiveTimer(false);\n        setCraftedItem(null);\n        setCraftingCountdown(null);\n        setIsReadyToCollect(false);\n\n        // Force a refresh of the station state\n        setStationRefreshKey(prev => prev + 1);\n\n        // Refresh player data to ensure consistency\n        await refreshPlayerAfterInventoryUpdate(currentPlayer.playerId, setCurrentPlayer);\n\n        // Use shared formatter for status message\n        const statusMessage = formatSingleCollection('craft', collectedItem, finalQtyCollected, \n          skillInfo.hasSkills ? skillInfo : null, strings, getLocalizedString);\n        updateStatus(statusMessage);\n\n        console.log(`${recipe.type} collected successfully using protected endpoint.`);\n      }\n    } catch (error) {\n      console.error('Error in protected crafting collection:', error);\n      if (error.response?.status === 429) {\n        updateStatus(471);\n      } else {\n        updateStatus('❌ Failed to collect item');\n      }\n    }\n  };\n\n\n  const handleSellStation = async (transactionId, transactionKey) => {\n    await handleProtectedSelling({\n      currentPlayer,\n      setInventory,\n      setBackpack,\n      setCurrentPlayer,\n      setResources,\n      stationType,\n      currentStationPosition,\n      gridId,\n      TILE_SIZE,\n      updateStatus,\n      onClose\n    });\n  };\n\n  // Handle gem speedup for crafting\n  const handleGemSpeedup = async (recipe) => {\n    if (!isCrafting || !craftingCountdown) {\n      console.error('❌ No active crafting to speed up');\n      return;\n    }\n\n    const remainingTimeMs = craftingCountdown * 1000;\n    const gemCost = calculateGemSpeedupCost(remainingTimeMs);\n    \n    // Check if player has enough gems\n    const currentGems = (currentPlayer.inventory?.find(item => item.type === 'Gem')?.quantity || 0) +\n                       (currentPlayer.backpack?.find(item => item.type === 'Gem')?.quantity || 0);\n    \n    if (currentGems < gemCost) {\n      updateStatus(`Need ${gemCost} gems to speed up crafting`);\n      return;\n    }\n\n    try {\n      // Spend gems to complete crafting instantly\n      const spentResult = await spendIngredients({\n        playerId: currentPlayer.playerId,\n        recipe: { \n          ingredient1: 'Gem',\n          ingredient1qty: gemCost,\n        },\n        inventory,\n        backpack,\n        setInventory,\n        setBackpack,\n        setCurrentPlayer,\n        updateStatus,\n      });\n\n      if (!spentResult) {\n        console.error('❌ Failed to spend gems for speedup');\n        return;\n      }\n\n      // Update the station in the database to mark crafting as complete\n      const updateResponse = await updateGridResource(\n        gridId,\n        {\n          type: stationType,\n          x: currentStationPosition.x,\n          y: currentStationPosition.y,\n          craftEnd: Date.now(), // Set to current time to complete immediately\n          craftedItem\n        },\n        true\n      );\n\n      if (updateResponse?.success) {\n        // Update global state to reflect the database change\n        const updatedGlobalResources = GlobalGridStateTilesAndResources.getResources().map(res =>\n          res.x === currentStationPosition.x && res.y === currentStationPosition.y\n            ? { ...res, craftEnd: Date.now(), craftedItem }\n            : res\n        );\n        GlobalGridStateTilesAndResources.setResources(updatedGlobalResources);\n        setResources(updatedGlobalResources);\n\n        // Update UI state\n        setCraftingCountdown(0);\n        setIsCrafting(false);\n        setIsReadyToCollect(true);\n\n        updateStatus(`Used ${gemCost} gems to complete crafting instantly`);\n        FloatingTextManager.addFloatingText(`-${gemCost} 💎`, currentStationPosition.x, currentStationPosition.y, TILE_SIZE);\n        \n        console.log(`✅ Crafting completed instantly using ${gemCost} gems`);\n      } else {\n        throw new Error('Failed to update crafting station in database');\n      }\n    } catch (error) {\n      console.error('❌ Error in gem speedup:', error);\n      updateStatus('❌ Failed to speed up crafting');\n    }\n  };\n\n  // Handle gem purchase for instant crafting\n  const handleGemPurchase = async (modifiedRecipe) => {\n    console.log('🔍 [GEM DEBUG] handleGemPurchase called with:', modifiedRecipe);\n    \n    // This is called by the gem button with a recipe modified to include gems\n    // First spend the ingredients (including gems)\n    const spendSuccess = await spendIngredients({\n      playerId: currentPlayer.playerId,\n      recipe: modifiedRecipe,\n      inventory,\n      backpack,\n      setInventory,\n      setBackpack,\n      setCurrentPlayer,\n      updateStatus,\n    });\n\n    if (!spendSuccess) {\n      console.warn('Failed to spend ingredients for gem purchase.');\n      return;\n    }\n    \n    console.log('🔍 [GEM DEBUG] Ingredients spent successfully');\n\n    // For regular crafting items, add them to inventory immediately\n    const craftedResource = allResources.find(res => res.type === modifiedRecipe.type);\n    if (craftedResource) {\n      // Add the item to inventory\n      const gained = await gainIngredients({\n        playerId: currentPlayer.playerId,\n        currentPlayer,\n        resource: modifiedRecipe.type,\n        quantity: 1,\n        inventory: currentPlayer.inventory,\n        backpack: currentPlayer.backpack,\n        setInventory,\n        setBackpack,\n        setCurrentPlayer,\n        updateStatus,\n        masterResources,\n        globalTuning,\n      });\n\n      if (gained) {\n        // Track quest progress\n        await trackQuestProgress(currentPlayer, 'Craft', modifiedRecipe.type, 1, setCurrentPlayer);\n        \n        // Update status and effects\n        updateStatus(`💎 ${getLocalizedString(modifiedRecipe.type, strings)} crafted instantly!`);\n        FloatingTextManager.addFloatingText(`+1 ${getLocalizedString(modifiedRecipe.type, strings)}`, currentStationPosition.x, currentStationPosition.y, TILE_SIZE);\n        \n        // Refresh player data\n        await refreshPlayerAfterInventoryUpdate(currentPlayer.playerId, setCurrentPlayer);\n      } else {\n        updateStatus('❌ Failed to add crafted item to inventory');\n      }\n    } else {\n      updateStatus('Gem purchase not supported for this item type');\n    }\n  };\n  \n  // Generate skill bonus message\n  const getSkillBonusMessage = () => {\n    // Find all skills that apply to this station\n    const applicableSkills = Object.entries(masterSkills || {})\n      .filter(([skillName, stations]) => {\n        return stations && typeof stations === 'object' && stations[stationType] > 1;\n      })\n      .map(([skillName, stations]) => ({\n        skillName,\n        multiplier: stations[stationType],\n        hasSkill: currentPlayer.skills?.some(item => item.type === skillName)\n      }));\n    \n    if (applicableSkills.length === 0) return null;\n    \n    // Separate owned and unowned skills\n    const ownedSkills = applicableSkills.filter(skill => skill.hasSkill);\n    const unownedSkills = applicableSkills.filter(skill => !skill.hasSkill);\n    \n    // Calculate combined multiplier for owned skills\n    const combinedMultiplier = ownedSkills.reduce((total, skill) => total * skill.multiplier, 1);\n    \n    let messages = [];\n    \n    // Message for owned skills\n    if (ownedSkills.length > 0) {\n      if (ownedSkills.length === 1) {\n        // Single skill: \"Your [skill] Skill increases the base output of this station by [X].\"\n        messages.push(`${strings[805]}${getLocalizedString(ownedSkills[0].skillName, strings)}${strings[806]}${ownedSkills[0].multiplier}x.`);\n      } else {\n        // Multiple skills: list them with their multipliers and show combined effect\n        const skillsList = ownedSkills\n          .map(skill => `${getLocalizedString(skill.skillName, strings)} (${skill.multiplier}x)`)\n          .join(' & ');\n        messages.push(`Your ${skillsList} skills combine to increase output by ${combinedMultiplier}x.`);\n      }\n    }\n    \n    // Message for unowned skills\n    if (unownedSkills.length > 0) {\n      unownedSkills.forEach(skill => {\n        const skillResource = allResources.find(res => res.type === skill.skillName);\n        const skillSource = skillResource?.source || 'Skill Shop';\n        // \"Acquire the [skill] Skill at the [source] to increase the output of this station by [X]x.\"\n        messages.push(`${strings[801]}${getLocalizedString(skill.skillName, strings)}${strings[802]}${getLocalizedString(skillSource, strings)}${strings[803]}${skill.multiplier}x.`);\n      });\n    }\n    \n    return messages.join(' ');\n  };\n\n  const skillMessage = getSkillBonusMessage();\n\n  return (\n    <Panel onClose={onClose} title={`${stationEmoji} ${getLocalizedString(stationType, strings)}`} panelName=\"CraftingStation\">\n      <div className=\"station-panel-container\">\n        {/* Check if Library or Hospital requires home settlement */}\n        {(stationType === 'Library' || stationType === 'Hospital') && \n         String(currentPlayer.location.s) !== String(currentPlayer.settlementId) ? (\n          <div style={{ textAlign: 'center', padding: '20px' }}>\n            <h2>{strings[2050] || \"This is not your home settlement. You cannot access community services in any settlement but your own.\"}</h2>\n          </div>\n        ) : (\n          <>\n            {skillMessage && (\n              <div className=\"station-panel-header\" style={{ \n                padding: '10px', \n                backgroundColor: '#f0f0f0', \n                borderRadius: '5px',\n                fontStyle: 'italic',\n                marginBottom: '10px'\n              }}>\n                {skillMessage}\n              </div>\n            )}\n            <div className=\"station-panel-content\">\n        \n          {recipes?.length > 0 ? (\n            recipes.map((recipe) => {\n              const ingredients = getIngredientDetails(recipe, allResources || []);\n              const affordable = canAfford(recipe, inventory, Array.isArray(backpack) ? backpack : [], 1);\n              const requirementsMet = hasRequiredSkill(recipe.requires);\n              const skillColor = requirementsMet ? 'green' : 'red';\n              const isCrafting = craftedItem === recipe.type && craftingCountdown > 0;\n              const isReadyToCollect = craftedItem === recipe.type && craftingCountdown === 0;\n              \n              // Calculate gem speedup cost for this crafting item\n              // craftingCountdown is already in seconds, so we don't multiply by 1000\n              const gemSpeedupCost = isCrafting ? calculateGemSpeedupCost(craftingCountdown * 1000) : 0;\n\n              \n              const craftTimeText = isCrafting\n              ? `${strings[441]} ${formatCountdown(Date.now() + craftingCountdown * 1000, Date.now())}`\n              : isReadyToCollect\n              ? strings[457] \n              : recipe.crafttime\n              ? `${strings[458]} ${formatDuration(recipe.crafttime)}`\n              : strings[459];\n              \n              const info = (\n                <div className=\"info-content\">\n                  <div>\n                    <strong>{strings[421]}</strong>{' '}\n                    {allResources\n                      .filter((res) =>\n                        [res.ingredient1, res.ingredient2, res.ingredient3, res.ingredient4].includes(recipe.type)\n                      )\n                      .map((res) => `${res.symbol || ''} ${getLocalizedString(res.type, strings)}`)\n                      .join(', ') || 'None'}\n                  </div>\n                  <div><strong>{strings[422]}</strong> 💰 {recipe.minprice || 'n/a'}</div>\n                </div>\n              );\n              \n              // Format costs with color per ingredient (now using display: block and no <br>)\n              const formattedCosts = [1, 2, 3, 4].map((i) => {\n                const type = recipe[`ingredient${i}`];\n                const qty = recipe[`ingredient${i}qty`];\n                if (!type || !qty) return '';\n\n                const inventoryQty = inventory?.find(item => item.type === type)?.quantity || 0;\n                const backpackQty = backpack?.find(item => item.type === type)?.quantity || 0;\n                const playerQty = inventoryQty + backpackQty;\n                const color = playerQty >= qty ? 'green' : 'red';\n                const symbol = allResources.find(r => r.type === type)?.symbol || '';\n                return `<span style=\"color: ${color}; display: block;\">${symbol} ${getLocalizedString(type, strings)} ${qty} / ${playerQty}</span>`;\n              }).join('');\n\n              return (\n                <ResourceButton\n                  key={recipe.type}\n                  symbol={recipe.symbol}\n                  name={getLocalizedString(recipe.type, strings)}\n                  className={`resource-button ${isCrafting ? 'in-progress' : isReadyToCollect ? 'ready btn-sell' : ''}`}\n                  details={\n                    isCrafting ? craftTimeText :\n                    (\n                      (recipe.requires ? `<span style=\"color: ${skillColor};\">${strings[460]}${getLocalizedString(recipe.requires, strings)}</span><br>` : '') +\n                      `${craftTimeText}<br>` +\n                      (isReadyToCollect ? '' : `${strings[461]}<div>${formattedCosts}</div>`)\n                    )\n                  }\n                  info={info}\n                  disabled={!isReadyToCollect && (craftedItem !== null || !affordable || !requirementsMet)}\n                  onClick={undefined} // Remove direct onClick since we're using transaction mode\n                  // Transaction mode props for both craft start and collect\n                  isTransactionMode={true}\n                  transactionKey={isReadyToCollect ? \n                    `crafting-collect-${recipe.type}-${currentStationPosition.x}-${currentStationPosition.y}` : \n                    `crafting-start-${recipe.type}-${currentStationPosition.x}-${currentStationPosition.y}`}\n                  onTransactionAction={isReadyToCollect ? \n                    (transactionId, transactionKey) => handleCollect(transactionId, transactionKey, recipe) :\n                    (transactionId, transactionKey) => handleCraft(transactionId, transactionKey, recipe)}\n                  // Gem purchase props (for instant purchase) or speedup props (for active crafting)\n                  gemCost={isCrafting ? gemSpeedupCost : null}\n                  onGemPurchase={isCrafting ? \n                    () => handleGemSpeedup(recipe) : \n                    ((recipe.gemcost && (!affordable || !requirementsMet) && craftedItem === null) ? handleGemPurchase : null)}\n                  resource={isCrafting ? { \n                    type: 'CraftingSpeedup', \n                    gemcost: gemSpeedupCost // Main gem cost, no ingredients\n                  } : recipe}\n                  inventory={inventory}\n                  backpack={backpack}\n                  masterResources={masterResources}\n                  currentPlayer={currentPlayer}\n                  // Hide gem button logic:\n                  // - If ready to collect: hide\n                  // - If this item is crafting: show speedup button\n                  // - If another item is crafting: hide\n                  // - If nothing is crafting and no gem cost: hide\n                  // - If nothing is crafting and has gem cost: show purchase button\n                  hideGem={isReadyToCollect || \n                           (!isCrafting && craftedItem !== null) || \n                           (!isCrafting && !recipe.gemcost)}\n                >\n                </ResourceButton>\n              );\n            })\n          ) : <p>{strings[424]}</p>}\n\n          {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n        </div>\n        \n            {(currentPlayer.location.gtype === 'homestead' || isDeveloper) && (\n              <div className=\"station-panel-footer\">\n                <div className=\"shared-buttons\">\n                  <TransactionButton \n                    className=\"btn-basic btn-success\" \n                    onAction={handleSellStation}\n                    transactionKey={`sell-refund-${stationType}-${currentStationPosition.x}-${currentStationPosition.y}-${gridId}`}\n                  >\n                    {strings[425]}\n                  </TransactionButton>\n                </div>\n              </div>\n            )}\n          </>\n        )}\n      </div>\n    </Panel>\n  );\n};\n\nexport default React.memo(CraftingStation);","import API_BASE from '../../config';\nimport React, { useState, useEffect, useContext } from 'react';\nimport Panel from '../../UI/Panel';\nimport axios from 'axios';\nimport '../../UI/ResourceButton.css'; \nimport ResourceButton from '../../UI/ResourceButton';\nimport FloatingTextManager from '../../UI/FloatingText';\nimport { getIngredientDetails, calculateGemSpeedupCost } from '../../Utils/ResourceHelpers';\nimport { updateGridResource } from '../../Utils/GridManagement';\nimport { canAfford } from '../../Utils/InventoryManagement';\nimport { refreshPlayerAfterInventoryUpdate } from '../../Utils/InventoryManagement';\nimport { StatusBarContext } from '../../UI/StatusBar/StatusBar';\nimport { trackQuestProgress } from '../Quests/QuestGoalTracker';\nimport GlobalGridStateTilesAndResources from '../../GridState/GlobalGridStateTilesAndResources';\nimport NPCsInGridManager from '../../GridState/GridStateNPCs';\nimport playersInGridManager from '../../GridState/PlayersInGrid';\nimport { createCollectEffect } from '../../VFX/VFX';\nimport { useStrings } from '../../UI/StringsContext';\nimport { getLocalizedString } from '../../Utils/stringLookup';\nimport { spendIngredients, gainIngredients } from '../../Utils/InventoryManagement';\nimport '../../UI/SharedButtons.css';\nimport workerPlacementData from './WorkerPlacement.json';\nimport { handleProtectedSelling } from '../../Utils/ProtectedSelling';\nimport TransactionButton from '../../UI/TransactionButton';\nimport { formatCountdown, formatDuration } from '../../UI/Timers';\nimport { earnTrophy } from '../Trophies/TrophyUtils';\n\nconst FarmHouse = ({\n  onClose,\n  inventory,\n  setInventory,\n  backpack,\n  setBackpack,\n  currentPlayer,\n  setCurrentPlayer,\n  setResources,\n  stationType,\n  currentStationPosition,\n  gridId,\n  masterResources,\n  masterSkills,\n  masterTrophies,\n  TILE_SIZE,\n  isDeveloper,\n  globalTuning,\n}) => {\n  const strings = useStrings();\n  const [recipes, setRecipes] = useState([]);\n  const [allResources, setAllResources] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [stationEmoji, setStationEmoji] = useState('🛖');\n  const { updateStatus } = useContext(StatusBarContext);\n  const [stationDetails, setStationDetails] = useState(null);\n  const [activeTimer, setActiveTimer] = useState(false);\n  const [craftedItem, setCraftedItem] = useState(null);\n  const [craftingCountdown, setCraftingCountdown] = useState(null);\n  const [isCrafting, setIsCrafting] = useState(false);\n  const [isReadyToCollect, setIsReadyToCollect] = useState(false);\n  const [npcRefreshKey, setNpcRefreshKey] = useState(0);\n\n   // ✅ Check for active crafting timers\n   useEffect(() => {\n    if (!stationType || !currentStationPosition) return;\n    \n    const station = GlobalGridStateTilesAndResources.getResources()?.find(\n      (res) => res.x === currentStationPosition.x && res.y === currentStationPosition.y\n    );\n\n    if (station && station.craftEnd) {\n        console.log(`⏳ Active crafting found: ${station.craftedItem} until ${new Date(station.craftEnd).toLocaleTimeString()}`);\n        \n        setCraftedItem(station.craftedItem);\n        setIsCrafting(true);\n        setActiveTimer(true);  // ✅ Ensure UI treats this as an active timer\n\n        const updateCountdown = () => {\n          const remainingTime = Math.max(0, Math.floor((station.craftEnd - Date.now()) / 1000));\n          setCraftingCountdown(remainingTime);\n\n          if (remainingTime === 0) {\n              setIsCrafting(false);\n              setIsReadyToCollect(true);\n          }\n      };\n\n        updateCountdown();\n        const timer = setInterval(updateCountdown, 1000);\n        return () => clearInterval(timer);\n    } else {\n        console.log('❌ No active crafting timer found.');\n        setCraftedItem(null);\n        setIsCrafting(false);\n        setIsReadyToCollect(false);\n        setCraftingCountdown(null);\n        setActiveTimer(false);\n    }\n  }, [stationType, currentStationPosition, GlobalGridStateTilesAndResources.getResources(), craftingCountdown]); // ✅ Ensure state triggers re-render\n\n\n  // Sync inventory with local storage and server\n  useEffect(() => {\n    const syncInventory = async () => {\n      try {\n        const storedInventory = JSON.parse(localStorage.getItem('inventory')) || [];\n        setInventory(storedInventory);\n\n        const serverResponse = await axios.get(`${API_BASE}/api/inventory/${currentPlayer.playerId}`);\n        const serverInventory = serverResponse.data.inventory || [];\n        if (JSON.stringify(storedInventory) !== JSON.stringify(serverInventory)) {\n          setInventory(serverInventory);\n          localStorage.setItem('inventory', JSON.stringify(serverInventory));\n        }\n      } catch (error) {\n        console.error('Error syncing inventory:', error);\n      }\n    };\n    syncInventory();\n  }, [currentPlayer]);\n\n  // Fetch recipes and resources (refactored: use masterResources directly)\n  useEffect(() => {\n    try {\n      let filteredRecipes = masterResources.filter((resource) => resource.source === stationType);\n      \n      // Filter by FTUE step only if player is a first-time user\n      if (currentPlayer.firsttimeuser === true && currentPlayer.ftuestep != null) {\n        console.log(`🎓 Filtering FarmHouse recipes by FTUE step: ${currentPlayer.ftuestep}`);\n        filteredRecipes = filteredRecipes.filter((recipe) => {\n          // Only show recipes with level <= current FTUE step\n          return recipe.level == null || recipe.level <= currentPlayer.ftuestep;\n        });\n      }\n      \n      // Filter out non-repeatable resources that already exist on the grid\n      const npcsInGrid = NPCsInGridManager.getNPCsInGrid(gridId);\n      if (npcsInGrid) {\n        // Get all NPC types currently on the grid\n        // NPCs are stored directly under NPCsInGrid with their ID as the key\n        const existingNPCTypes = Object.values(npcsInGrid)\n          .filter(npc => npc && npc.type) // Filter out any null/undefined entries\n          .map(npc => npc.type);\n        \n        console.log('Existing NPC types on grid:', existingNPCTypes);\n        \n        // Filter out non-repeatable recipes that already exist\n        filteredRecipes = filteredRecipes.filter(recipe => {\n          // If it's not repeatable and already exists, filter it out\n          if (recipe.repeatable === false && existingNPCTypes.includes(recipe.type)) {\n            console.log(`Filtering out non-repeatable ${recipe.type} - already exists on grid`);\n            return false;\n          }\n          return true;\n        });\n      }\n      \n      setRecipes(filteredRecipes);\n      const stationResource = masterResources.find((resource) => resource.type === stationType);\n      setStationEmoji(stationResource?.symbol || '🛖');\n      setStationDetails(stationResource);\n      setAllResources(masterResources || []);\n    } catch (error) {\n      console.error('Error processing masterResources:', error);\n    }\n  }, [stationType, masterResources, gridId, npcRefreshKey]);\n  \n  // Periodically refresh to check for NPC changes\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setNpcRefreshKey(prev => prev + 1);\n    }, 2000); // Check every 2 seconds\n    \n    return () => clearInterval(interval);\n  }, []);\n\n\n  const hasRequiredSkill = (requiredSkill) => {\n    return !requiredSkill || currentPlayer.skills?.some((owned) => owned.type === requiredSkill);\n  };\n\n\n  // Protected function to start crafting using transaction system\n  const handleCraft = async (transactionId, transactionKey, recipe) => {\n    console.log(`🔒 [PROTECTED CRAFTING] Starting protected craft for ${recipe.type}`);\n    setErrorMessage('');\n    \n    if (!recipe) { \n      setErrorMessage('Invalid recipe selected.'); \n      return; \n    }\n\n    try {\n      const payload = {\n        playerId: currentPlayer.playerId,\n        gridId,\n        stationX: currentStationPosition.x,\n        stationY: currentStationPosition.y,\n        recipe,\n        transactionId,\n        transactionKey,\n        // Add flag to indicate if this is a gem purchase (ingredients already paid)\n        isGemPurchase: transactionKey && transactionKey.includes('crafting-gem-')\n      };\n      \n      console.log('🔍 [CRAFT DEBUG] Sending to server:', payload);\n      \n      const response = await axios.post(`${API_BASE}/api/crafting/start-craft`, payload);\n\n      if (response.data.success) {\n        // Update local state with server response\n        const { craftEnd, craftedItem, inventory, backpack } = response.data;\n        \n        // Update inventory from server response\n        if (inventory) {\n          setInventory(inventory);\n          setCurrentPlayer(prev => ({ ...prev, inventory }));\n        }\n        if (backpack) {\n          setBackpack(backpack);\n          setCurrentPlayer(prev => ({ ...prev, backpack }));\n        }\n\n        // Update only the specific station resource in global state\n        const updatedGlobalResources = GlobalGridStateTilesAndResources.getResources().map(res =>\n          res.x === currentStationPosition.x && res.y === currentStationPosition.y\n            ? { ...res, craftEnd, craftedItem }\n            : res\n        );\n        GlobalGridStateTilesAndResources.setResources(updatedGlobalResources);\n        setResources(updatedGlobalResources);\n\n        // Update UI state immediately\n        setCraftedItem(craftedItem);\n        setCraftingCountdown(Math.max(0, Math.floor((craftEnd - Date.now()) / 1000)));\n        setActiveTimer(true);\n        setIsCrafting(true);\n        setIsReadyToCollect(false);\n\n        // Refresh player data to ensure consistency\n        await refreshPlayerAfterInventoryUpdate(currentPlayer.playerId, setCurrentPlayer);\n\n        FloatingTextManager.addFloatingText(404, currentStationPosition.x, currentStationPosition.y, TILE_SIZE);\n        updateStatus(`${strings[440]} ${getLocalizedString(recipe.type, strings)}`);\n\n      }\n    } catch (error) {\n      console.error('Error in protected crafting start:', error);\n      console.error('Error response data:', error.response?.data);\n      if (error.response?.status === 429) {\n        updateStatus(451);\n      } else if (error.response?.status === 400) {\n        updateStatus(450);\n      } else {\n        updateStatus(452);\n      }\n    }\n  };\n\n\n  // Protected function to collect crafted items using transaction system\n  const handleCollect = async (transactionId, transactionKey, recipe) => {\n    \n    if (!recipe) { console.error(\"❌ No valid crafted item to collect.\"); return; }\n\n    console.log('🔍 [COLLECT DEBUG] Starting collection:', {\n      craftedItem,\n      recipeType: recipe?.type,\n      ftuestep: currentPlayer.ftuestep,\n      firsttimeuser: currentPlayer.firsttimeuser,\n      stationType\n    });\n\n    try {\n      const response = await axios.post(`${API_BASE}/api/crafting/collect-item`, {\n        playerId: currentPlayer.playerId,\n        gridId,\n        stationX: currentStationPosition.x,\n        stationY: currentStationPosition.y,\n        craftedItem,\n        transactionId,\n        transactionKey\n      });\n\n      if (response.data.success) {\n        // Update local state with server response\n        const { collectedItem, isNPC, inventory, updatedStation } = response.data;\n        \n        console.log('🔍 [COLLECT DEBUG] Server response:', {\n          collectedItem,\n          isNPC,\n          hasInventory: !!inventory\n        });\n\n        // ✅ Apply skill buffs to crafted collection\n        console.log('MasterSkills:', masterSkills);\n\n        // Extract player skills and upgrades\n        const playerBuffs = (currentPlayer.skills || [])\n          .filter((item) => {\n            const resourceDetails = allResources.find((res) => res.type === item.type);\n            const isSkill = resourceDetails?.category === 'skill' || resourceDetails?.category === 'upgrade';\n            const appliesToResource = (masterSkills?.[item.type]?.[collectedItem] || 1) > 1;\n            return isSkill && appliesToResource;\n          })\n          .map((buffItem) => buffItem.type);\n\n        // Calculate skill multiplier\n        const skillMultiplier = playerBuffs.reduce((multiplier, buff) => {\n          const buffValue = masterSkills?.[buff]?.[collectedItem] || 1;\n          return multiplier * buffValue;\n        }, 1);\n\n        // Apply multiplier to quantity (default to 1 if not provided by backend)\n        const baseQtyCollected = 1;\n        const finalQtyCollected = baseQtyCollected * skillMultiplier;\n\n        console.log('[DEBUG] qtyCollected after multiplier:', finalQtyCollected);\n        FloatingTextManager.addFloatingText(`+${finalQtyCollected} ${getLocalizedString(collectedItem, strings)}`, currentStationPosition.x, currentStationPosition.y, TILE_SIZE);\n\n        // Handle NPC spawning client-side\n        if (isNPC) {\n          const craftedResource = allResources.find(res => res.type === collectedItem);\n          if (craftedResource) {\n            // Get placement offset from WorkerPlacement.json\n            const placementData = workerPlacementData.find(data => data.workerType === collectedItem);\n            const offsetX = placementData?.offsetX || 0;\n            const offsetY = placementData?.offsetY || 0;\n            \n            const spawnPosition = {\n              x: currentStationPosition.x + offsetX,\n              y: currentStationPosition.y + offsetY\n            };\n            \n            console.log(`Spawning ${collectedItem} at offset (${offsetX}, ${offsetY}) from Farm House, final position: (${spawnPosition.x}, ${spawnPosition.y})`);\n            NPCsInGridManager.spawnNPC(gridId, craftedResource, spawnPosition);\n            \n            // Check for First Farm Worker trophy\n            if (craftedResource.action === 'worker') {\n              await earnTrophy(currentPlayer.playerId, 'First Farm Worker', 1, currentPlayer, masterTrophies, setCurrentPlayer);\n            }\n            \n            // Trigger refresh to update available recipes\n            setNpcRefreshKey(prev => prev + 1);\n          }\n        } else {\n          // Only add non-NPC items to inventory\n          // Update inventory with buffed quantity\n          const gained = await gainIngredients({\n            playerId: currentPlayer.playerId,\n            currentPlayer,\n            resource: collectedItem,\n            quantity: finalQtyCollected,\n            inventory: currentPlayer.inventory,\n            backpack: currentPlayer.backpack,\n            setInventory,\n            setBackpack,\n            setCurrentPlayer,\n            updateStatus,\n            masterResources,\n            globalTuning,\n          });\n\n          if (!gained) {\n            console.error('❌ Failed to add buffed crafted item to inventory.');\n          }\n        }\n\n        // Track quest progress for all crafted items (both NPCs and regular items)\n        await trackQuestProgress(currentPlayer, 'Craft', collectedItem, finalQtyCollected, setCurrentPlayer);\n        // Update grid resources to remove crafting state\n        const updatedGlobalResources = GlobalGridStateTilesAndResources.getResources().map(res =>\n          res.x === currentStationPosition.x && res.y === currentStationPosition.y\n            ? { ...res, craftEnd: undefined, craftedItem: undefined }\n            : res\n        );\n        GlobalGridStateTilesAndResources.setResources(updatedGlobalResources);\n        setResources(updatedGlobalResources);\n\n        // Reset UI state\n        setActiveTimer(false);\n        setCraftedItem(null);\n        setCraftingCountdown(null);\n        setIsReadyToCollect(false);\n\n        // Refresh player data to ensure consistency\n        await refreshPlayerAfterInventoryUpdate(currentPlayer.playerId, setCurrentPlayer);\n\n      }\n    } catch (error) {\n      console.error('Error in protected crafting collection:', error);\n      if (error.response?.status === 429) {\n        updateStatus(471);\n      } else {\n        updateStatus(454);\n      }\n    }\n  };\n\n\n  const handleSellStation = async (transactionId, transactionKey) => {\n    await handleProtectedSelling({\n      currentPlayer,\n      setInventory,\n      setBackpack,\n      setCurrentPlayer,\n      setResources,\n      stationType,\n      currentStationPosition,\n      gridId,\n      TILE_SIZE,\n      updateStatus,\n      onClose\n    });\n  };\n\n  // Handle gem speedup for crafting\n  const handleGemSpeedup = async (recipe) => {\n    if (!isCrafting || !craftingCountdown) {\n      console.error('❌ No active crafting to speed up');\n      return;\n    }\n\n    const remainingTimeMs = craftingCountdown * 1000;\n    const gemCost = calculateGemSpeedupCost(remainingTimeMs);\n    \n    // Check if player has enough gems\n    const currentGems = (currentPlayer.inventory?.find(item => item.type === 'Gem')?.quantity || 0) +\n                       (currentPlayer.backpack?.find(item => item.type === 'Gem')?.quantity || 0);\n    \n    if (currentGems < gemCost) {\n      updateStatus(`Need ${gemCost} gems to speed up crafting`);\n      return;\n    }\n\n    try {\n      // Spend gems to complete crafting instantly\n      const spentResult = await spendIngredients({\n        playerId: currentPlayer.playerId,\n        recipe: { \n          ingredient1: 'Gem',\n          ingredient1qty: gemCost,\n        },\n        inventory,\n        backpack,\n        setInventory,\n        setBackpack,\n        setCurrentPlayer,\n        updateStatus,\n      });\n\n      if (!spentResult) {\n        console.error('❌ Failed to spend gems for speedup');\n        return;\n      }\n\n      // Update the station in the database to mark crafting as complete\n      const updateResponse = await updateGridResource(\n        gridId,\n        {\n          type: stationType,\n          x: currentStationPosition.x,\n          y: currentStationPosition.y,\n          craftEnd: Date.now(), // Set to current time to complete immediately\n          craftedItem\n        },\n        true\n      );\n\n      if (updateResponse?.success) {\n        // Update global state to reflect the database change\n        const updatedGlobalResources = GlobalGridStateTilesAndResources.getResources().map(res =>\n          res.x === currentStationPosition.x && res.y === currentStationPosition.y\n            ? { ...res, craftEnd: Date.now(), craftedItem }\n            : res\n        );\n        GlobalGridStateTilesAndResources.setResources(updatedGlobalResources);\n        setResources(updatedGlobalResources);\n\n        // Update UI state\n        setCraftingCountdown(0);\n        setIsCrafting(false);\n        setIsReadyToCollect(true);\n\n        updateStatus(`Used ${gemCost} gems to complete crafting instantly`);\n        FloatingTextManager.addFloatingText(`-${gemCost} 💎`, currentStationPosition.x, currentStationPosition.y, TILE_SIZE);\n        \n        console.log(`✅ Crafting completed instantly using ${gemCost} gems`);\n      } else {\n        throw new Error('Failed to update crafting station in database');\n      }\n    } catch (error) {\n      console.error('❌ Error in gem speedup:', error);\n      updateStatus('❌ Failed to speed up crafting');\n    }\n  };\n  \n  // Handle gem purchase\n  const handleGemPurchase = async (modifiedRecipe) => {\n    console.log('🔍 [GEM DEBUG] handleGemPurchase called with:', modifiedRecipe);\n    \n    // This is called by the gem button with a recipe modified to include gems\n    // First spend the ingredients (including gems)\n    const spendSuccess = await spendIngredients({\n      playerId: currentPlayer.playerId,\n      recipe: modifiedRecipe,\n      inventory,\n      backpack,\n      setInventory,\n      setBackpack,\n      setCurrentPlayer,\n      updateStatus,\n    });\n\n    if (!spendSuccess) {\n      console.warn('Failed to spend ingredients for gem purchase.');\n      return;\n    }\n    \n    console.log('🔍 [GEM DEBUG] Ingredients spent successfully');\n\n    // For gem purchases with NPCs, spawn them immediately\n    const craftedResource = allResources.find(res => res.type === modifiedRecipe.type);\n    if (craftedResource && craftedResource.category === 'npc') {\n      // Get placement offset from WorkerPlacement.json\n      const placementData = workerPlacementData.find(data => data.workerType === modifiedRecipe.type);\n      const offsetX = placementData?.offsetX || 0;\n      const offsetY = placementData?.offsetY || 0;\n      \n      const spawnPosition = {\n        x: currentStationPosition.x + offsetX,\n        y: currentStationPosition.y + offsetY\n      };\n      \n      console.log(`Spawning ${modifiedRecipe.type} at offset (${offsetX}, ${offsetY}) from Farm House`);\n      NPCsInGridManager.spawnNPC(gridId, craftedResource, spawnPosition);\n      \n      // Check for First Farm Worker trophy\n      if (craftedResource.action === 'worker') {\n        await earnTrophy(currentPlayer.playerId, 'First Farm Worker', 1, currentPlayer, masterTrophies, setCurrentPlayer);\n      }\n      \n      // Track quest progress\n      await trackQuestProgress(currentPlayer, 'Craft', modifiedRecipe.type, 1, setCurrentPlayer);\n      \n      \n      // Update status and effects\n      updateStatus(`💎 ${getLocalizedString(modifiedRecipe.type, strings)} hired instantly!`);\n      FloatingTextManager.addFloatingText(`+1 ${getLocalizedString(modifiedRecipe.type, strings)}`, currentStationPosition.x, currentStationPosition.y, TILE_SIZE);\n      \n      // Trigger refresh\n      setNpcRefreshKey(prev => prev + 1);\n      \n      // Refresh player data\n      await refreshPlayerAfterInventoryUpdate(currentPlayer.playerId, setCurrentPlayer);\n    } else {\n      // For non-NPC items, we would need different handling\n      updateStatus('Gem purchase not supported for this item type');\n    }\n  };\n\n  return (\n    <Panel onClose={onClose} descriptionKey=\"1032\" titleKey=\"1132\" panelName=\"FarmHouse\">\n      <div className=\"standard-panel\">\n        \n          {recipes?.length > 0 ? (\n            recipes.map((recipe) => {\n              const ingredients = getIngredientDetails(recipe, allResources || []);\n              const affordable = canAfford(recipe, inventory, Array.isArray(backpack) ? backpack : [], 1);\n              const requirementsMet = hasRequiredSkill(recipe.requires);\n              const skillColor = requirementsMet ? 'green' : 'red';\n              const isCrafting = craftedItem === recipe.type && craftingCountdown > 0;\n              const isReadyToCollect = craftedItem === recipe.type && craftingCountdown === 0;\n              \n              // Calculate gem speedup cost for this crafting item\n              const remainingTimeMs = isCrafting ? craftingCountdown * 1000 : 0;\n              const gemSpeedupCost = isCrafting ? calculateGemSpeedupCost(remainingTimeMs) : 0;\n\n              \n              const craftTimeText = isCrafting\n              ? `${strings[441]} ${formatCountdown(Date.now() + craftingCountdown * 1000, Date.now())}`\n              : isReadyToCollect\n              ? strings[457] \n              : recipe.crafttime\n              ? `${strings[458]} ${formatDuration(recipe.crafttime)}`\n              : strings[459];\n              \n              // Custom tooltips for workers\n              let info;\n              if (recipe.type === 'Farm Hand') {\n                info = (\n                  <div className=\"info-content\">\n                    <div>{strings[350]}</div>\n                  </div>\n                );\n              } else if (recipe.type === 'Rancher') {\n                info = (\n                  <div className=\"info-content\">\n                    <div>{strings[351]}</div>\n                  </div>\n                );\n              } else if (recipe.type === 'Lumberjack') {\n                info = (\n                  <div className=\"info-content\">\n                    <div>{strings[352]}</div>\n                  </div>\n                );\n              } else if (recipe.type === 'Crafter') {\n                info = (\n                  <div className=\"info-content\">\n                    <div>{strings[353]}</div>\n                  </div>\n                );\n              } else if (recipe.type === 'Kent') {\n                info = (\n                  <div className=\"info-content\">\n                    <div>{strings[354]}</div>\n                  </div>\n                );\n              } else if (recipe.type === 'The Shepherd') {\n                info = (\n                  <div className=\"info-content\">\n                    <div>{strings[355]}</div>\n                  </div>\n                );\n              } else {\n                // Default info for non-worker recipes\n                info = (\n                  <div className=\"info-content\">\n                    <div>\n                      <strong>{strings[421]}</strong>{' '}\n                      {allResources\n                        .filter((res) =>\n                          [res.ingredient1, res.ingredient2, res.ingredient3, res.ingredient4].includes(recipe.type)\n                        )\n                        .map((res) => `${res.symbol || ''} ${getLocalizedString(res.type, strings)}`)\n                        .join(', ') || 'None'}\n                    </div>\n                    <div><strong>{strings[422]}</strong> 💰 {recipe.minprice || 'n/a'}</div>\n                  </div>\n                );\n              }\n              \n              // Format costs with color per ingredient (now using display: block and no <br>)\n              const formattedCosts = [1, 2, 3, 4].map((i) => {\n                const type = recipe[`ingredient${i}`];\n                const qty = recipe[`ingredient${i}qty`];\n                if (!type || !qty) return '';\n\n                const inventoryQty = inventory?.find(item => item.type === type)?.quantity || 0;\n                const backpackQty = backpack?.find(item => item.type === type)?.quantity || 0;\n                const playerQty = inventoryQty + backpackQty;\n                const color = playerQty >= qty ? 'green' : 'red';\n                const symbol = allResources.find(r => r.type === type)?.symbol || '';\n                return `<span style=\"color: ${color}; display: block;\">${symbol} ${getLocalizedString(type, strings)} ${qty} / ${playerQty}</span>`;\n              }).join('');\n\n              return (\n                <ResourceButton\n                  key={recipe.type}\n                  symbol={recipe.symbol}\n                  name={getLocalizedString(recipe.type, strings)}\n                  className={`resource-button ${isCrafting ? 'in-progress' : isReadyToCollect ? 'ready btn-sell' : ''}`}\n                  details={\n                    isCrafting ? craftTimeText :\n                    (\n                      (recipe.requires ? `<span style=\"color: ${skillColor};\">${strings[460]}${getLocalizedString(recipe.requires, strings)}</span><br>` : '') +\n                      `${craftTimeText}<br>` +\n                      (isReadyToCollect ? '' : `${strings[461]}<div>${formattedCosts}</div>`)\n                    )\n                  }\n                  info={info}\n                  disabled={!isReadyToCollect && (craftedItem !== null || !affordable || !requirementsMet)}\n                  onClick={undefined} // Remove direct onClick since we're using transaction mode\n                  // Transaction mode props for both craft start and collect\n                  isTransactionMode={true}\n                  transactionKey={isReadyToCollect ? \n                    `crafting-collect-${recipe.type}-${currentStationPosition.x}-${currentStationPosition.y}` : \n                    `crafting-start-${recipe.type}-${currentStationPosition.x}-${currentStationPosition.y}`}\n                  onTransactionAction={isReadyToCollect ? \n                    (transactionId, transactionKey) => handleCollect(transactionId, transactionKey, recipe) :\n                    (transactionId, transactionKey) => handleCraft(transactionId, transactionKey, recipe)}\n                  // Gem purchase props (for instant purchase) or speedup props (for active crafting)\n                  gemCost={isCrafting ? gemSpeedupCost : null}\n                  onGemPurchase={isCrafting ? \n                    () => handleGemSpeedup(recipe) : \n                    ((recipe.gemcost && (!affordable || !requirementsMet) && craftedItem === null) ? handleGemPurchase : null)}\n                  resource={isCrafting ? { \n                    type: 'CraftingSpeedup', \n                    gemcost: gemSpeedupCost // Main gem cost, no ingredients\n                  } : recipe}\n                  inventory={inventory}\n                  backpack={backpack}\n                  masterResources={masterResources || allResources}\n                  currentPlayer={currentPlayer}\n                  // Hide gem button logic:\n                  // - If ready to collect: hide\n                  // - If this item is crafting: show speedup button\n                  // - If another item is crafting: hide\n                  // - If nothing is crafting and no gem cost: hide\n                  // - If nothing is crafting and has gem cost: show purchase button\n                  hideGem={isReadyToCollect || \n                           (!isCrafting && craftedItem !== null) || \n                           (!isCrafting && !recipe.gemcost)}\n                >\n                </ResourceButton>\n              );\n            })\n          ) : <p>{strings[456]}</p>}\n\n        {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n\n        {(isDeveloper) && (\n          <>\n            <hr />\n              <div className=\"shared-buttons\">\n                <TransactionButton \n                  className=\"btn-danger\" \n                  onAction={handleSellStation}\n                  transactionKey={`sell-refund-${stationType}-${currentStationPosition.x}-${currentStationPosition.y}-${gridId}`}\n                >\n                  {strings[490]}\n                </TransactionButton>\n              </div>\n\n          </>\n        )}\n      </div>\n    </Panel>\n  );\n};\n\nexport default React.memo(FarmHouse);","import React, { useState, useEffect } from 'react';\nimport Modal from './Modal';\nimport './ProgressModal.css';\n\nfunction ProgressModal({ isOpen, title, message }) {\n  const [frame, setFrame] = useState(0);\n  const hourglassFrames = ['⏳', '⌛'];\n  \n  useEffect(() => {\n    if (!isOpen) {\n      setFrame(0);\n      return;\n    }\n    \n    // Animate hourglass every 500ms\n    const timer = setInterval(() => {\n      setFrame(prev => (prev + 1) % hourglassFrames.length);\n    }, 500);\n    \n    return () => clearInterval(timer);\n  }, [isOpen]);\n  \n  if (!isOpen) return null;\n  \n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={() => {}} // No close button during operation\n      title={title}\n      size=\"small\"\n      className=\"progress-modal\"\n    >\n      <div className=\"progress-modal-content\">\n        <div className=\"progress-message\">{message}</div>\n        \n        <div className=\"progress-hourglass\">\n          {hourglassFrames[frame]}\n        </div>\n      </div>\n    </Modal>\n  );\n}\n\nexport default ProgressModal;","import React, { useState } from 'react';\nimport axios from 'axios';\nimport API_BASE from '../../config';\nimport Modal from '../../UI/Modal';\nimport { calculateBulkHarvestCapacity, buildBulkHarvestOperations } from './BulkHarvestUtils';\nimport { calculateSkillMultiplier } from '../../Utils/InventoryManagement';\nimport { formatCollectionResults } from '../../UI/StatusBar/CollectionFormatters';\nimport { trackQuestProgress } from '../Quests/QuestGoalTracker';\nimport { getLocalizedString } from '../../Utils/stringLookup';\nimport GlobalGridStateTilesAndResources from '../../GridState/GlobalGridStateTilesAndResources';\nimport { isACrop, calculateBulkWarehouseDrops, aggregateWarehouseDrops } from '../../Utils/ResourceHelpers';\nimport { gainIngredients } from '../../Utils/InventoryManagement';\nimport { selectWeightedRandomItem } from '../../Utils/DropRates';\nimport '../../UI/SharedButtons.css';\n\n// Component for the bulk harvest selection modal\nexport function BulkHarvestModal({ \n  isOpen, \n  onClose, \n  crops, \n  getFreshCrops,\n  onExecute,\n  showBulkReplant,\n  hasRequiredSkill,\n  strings,\n  currentSeason,\n  masterResources\n}) {\n  const [selectedCropTypes, setSelectedCropTypes] = useState({});\n  const [selectedReplantTypes, setSelectedReplantTypes] = useState({});\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  // Initialize selections when modal opens\n  React.useEffect(() => {\n    if (isOpen && crops.length > 0) {\n      // Select all crops by default\n      const defaultSelection = {};\n      crops.forEach(crop => {\n        defaultSelection[crop.type] = true;\n      });\n      setSelectedCropTypes(defaultSelection);\n      \n      // Select replant options if available\n      if (showBulkReplant) {\n        const defaultReplantSelection = {};\n        crops.forEach(crop => {\n          // Check if player has required skill\n          const hasSkill = hasRequiredSkill(crop.replantRequires);\n          \n          // Check if crop is in season\n          let isInSeason = true;\n          if (currentSeason && masterResources) {\n            const farmplot = masterResources.find(r => \n              r.category === 'farmplot' && r.output === crop.type\n            );\n            if (farmplot && farmplot.season) {\n              isInSeason = farmplot.season === currentSeason;\n            }\n          }\n          \n          if (hasSkill && isInSeason) {\n            defaultReplantSelection[crop.type] = true;\n          }\n        });\n        setSelectedReplantTypes(defaultReplantSelection);\n      }\n    }\n  }, [isOpen, crops, showBulkReplant, hasRequiredSkill, currentSeason, masterResources]);\n\n  const handleToggleCrop = (cropType) => {\n    setSelectedCropTypes(prev => {\n      const newValue = !prev[cropType];\n      // If unchecking harvest, also uncheck replant\n      if (!newValue) {\n        setSelectedReplantTypes(replantPrev => ({\n          ...replantPrev,\n          [cropType]: false\n        }));\n      }\n      return {\n        ...prev,\n        [cropType]: newValue\n      };\n    });\n  };\n\n  const handleToggleReplant = (cropType) => {\n    setSelectedReplantTypes(prev => {\n      const newValue = !prev[cropType];\n      // If checking replant, also check harvest\n      if (newValue) {\n        setSelectedCropTypes(cropPrev => ({\n          ...cropPrev,\n          [cropType]: true\n        }));\n      }\n      return {\n        ...prev,\n        [cropType]: newValue\n      };\n    });\n  };\n\n  const handleExecute = async () => {\n    if (isProcessing) return;\n    \n    setIsProcessing(true);\n    try {\n      // If getFreshCrops is provided, validate selections against fresh data\n      if (getFreshCrops) {\n        const freshCrops = await getFreshCrops();\n        \n        // Filter selections to only include crops that still exist\n        const validCropTypes = {};\n        const validReplantTypes = {};\n        \n        freshCrops.forEach(crop => {\n          if (selectedCropTypes[crop.type]) {\n            validCropTypes[crop.type] = true;\n          }\n          if (selectedReplantTypes[crop.type]) {\n            validReplantTypes[crop.type] = true;\n          }\n        });\n        \n        onExecute(validCropTypes, validReplantTypes);\n      } else {\n        onExecute(selectedCropTypes, selectedReplantTypes);\n      }\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} title={strings[315] || \"Select Crops to Harvest\"} size=\"medium\">\n      <div style={{ padding: '20px', fontSize: '16px' }}>\n        <div style={{ marginBottom: '15px', display: 'flex', gap: '10px' }}>\n          <div className=\"shared-buttons\" style={{ display: 'flex', gap: '10px' }}>\n            <button \n              className=\"btn-basic btn-success btn-modal-small\"\n              onClick={() => {\n                const allSelected = {};\n                crops.forEach(crop => {\n                  allSelected[crop.type] = true;\n                });\n                setSelectedCropTypes(allSelected);\n              }}\n            >\n              {strings[316] || 'Select All'}\n            </button>\n            <button \n              className=\"btn-basic btn-neutral btn-modal-small\"\n              onClick={() => {\n                setSelectedCropTypes({});\n                // When deselecting all harvest, also deselect all replant\n                setSelectedReplantTypes({});\n              }}\n            >\n              {strings[317] || 'Deselect All'}\n            </button>\n          </div>\n          \n          {showBulkReplant && (\n            <div className=\"shared-buttons\" style={{ display: 'flex', gap: '10px', marginLeft: 'auto' }}>\n              <button \n                className=\"btn-basic btn-success btn-modal-small\"\n                onClick={() => {\n                  const allReplantSelected = {};\n                  const allHarvestSelected = {};\n                  crops.forEach(crop => {\n                    // Check if player has required skill\n                    const hasSkill = hasRequiredSkill(crop.replantRequires);\n                    \n                    // Check if crop is in season\n                    let isInSeason = true;\n                    if (currentSeason && masterResources) {\n                      const farmplot = masterResources.find(r => \n                        r.category === 'farmplot' && r.output === crop.type\n                      );\n                      if (farmplot && farmplot.season) {\n                        isInSeason = farmplot.season === currentSeason;\n                      }\n                    }\n                    \n                    if (hasSkill && isInSeason) {\n                      allReplantSelected[crop.type] = true;\n                      // When selecting replant, also select harvest\n                      allHarvestSelected[crop.type] = true;\n                    } else {\n                      // Keep existing harvest selection for crops that can't be replanted\n                      allHarvestSelected[crop.type] = selectedCropTypes[crop.type] || false;\n                    }\n                  });\n                  setSelectedReplantTypes(allReplantSelected);\n                  setSelectedCropTypes(prev => ({\n                    ...prev,\n                    ...allHarvestSelected\n                  }));\n                }}\n              >\n                {strings[316] || 'Select All'}\n              </button>\n              <button \n                className=\"btn-basic btn-neutral btn-modal-small\"\n                onClick={() => setSelectedReplantTypes({})}\n              >\n                {strings[317] || 'Deselect All'}\n              </button>\n            </div>\n          )}\n        </div>\n        \n        {showBulkReplant && (\n          <div style={{ display: 'flex', marginBottom: '10px', fontSize: '14px', fontWeight: 'bold' }}>\n            <div style={{ width: '30px', paddingLeft: '5px' }}>{strings[342] || 'Harvest?'}</div>\n            <div style={{ flex: 1 }}></div>\n            <div style={{ width: '140px', textAlign: 'center' }}>{strings[343] || 'Replant?'}</div>\n          </div>\n        )}\n        \n        <div style={{ maxHeight: '400px', overflowY: 'auto' }}>\n          {crops.map(crop => {\n            // Check if player has required skill\n            const hasSkill = hasRequiredSkill(crop.replantRequires);\n            \n            // Check if crop is in season\n            let isInSeason = true;\n            if (currentSeason && masterResources) {\n              // Find the farmplot that produces this crop to check its season\n              const farmplot = masterResources.find(r => \n                r.category === 'farmplot' && r.output === crop.type\n              );\n              if (farmplot && farmplot.season) {\n                isInSeason = farmplot.season === currentSeason;\n              }\n            }\n            \n            const canReplant = hasSkill && isInSeason;\n            return (\n              <div key={crop.type} style={{ display: 'flex', alignItems: 'center', marginBottom: '8px', padding: '5px', borderBottom: '1px solid #eee' }}>\n                <div style={{ width: '30px' }}>\n                  <input\n                    type=\"checkbox\"\n                    checked={selectedCropTypes[crop.type] || false}\n                    onChange={() => handleToggleCrop(crop.type)}\n                    style={{ width: '20px' }}\n                  />\n                </div>\n                <div style={{ flex: 1, textAlign: 'left' }}>\n                  {crop.symbol} {getLocalizedString(crop.type, strings)} ({crop.count})\n                </div>\n                {showBulkReplant && (() => {\n                  return (\n                    <div style={{ marginLeft: '60px', width: '100px', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                      {!isInSeason && (\n                        <span style={{ fontSize: '12px', color: '#888', marginRight: '5px' }}>off season</span>\n                      )}\n                      <input\n                        type=\"checkbox\"\n                        checked={selectedReplantTypes[crop.type] || false}\n                        onChange={() => canReplant && handleToggleReplant(crop.type)}\n                        disabled={!canReplant}\n                        style={{ \n                          width: '20px',\n                          opacity: canReplant ? 1 : 0.5,\n                          cursor: canReplant ? 'pointer' : 'not-allowed'\n                        }}\n                        title={canReplant ? '' : (!isInSeason ? `${crop.type} is not available in current season` : `Requires ${crop.replantRequires || 'unknown skill'} to replant ${crop.type}`)}\n                      />\n                    </div>\n                  );\n                })()}\n              </div>\n            );\n          })}\n        </div>\n        \n        <div className=\"shared-buttons\" style={{ display: 'flex', justifyContent: 'center' }}>\n          <button \n            className={`btn-basic ${isProcessing ? 'btn-neutral' : 'btn-success'} btn-modal`}\n            onClick={handleExecute}\n            disabled={isProcessing || Object.values(selectedCropTypes).every(selected => !selected)}\n          >\n            {isProcessing ? 'Processing...' : (strings[318] || 'Harvest Selected')}\n          </button>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n\n// Main function to execute bulk harvest\nexport async function executeBulkHarvest({\n  selectedCropTypes,\n  selectedReplantTypes,\n  resources,\n  masterResources,\n  masterSkills,\n  currentPlayer,\n  setCurrentPlayer,\n  setInventory,\n  setBackpack,\n  setResources,\n  gridId,\n  showBulkReplant,\n  strings,\n  refreshPlayerAfterInventoryUpdate,\n  globalTuning\n}) {\n  // Get selected crop types\n  const selectedTypes = Object.keys(selectedCropTypes).filter(type => selectedCropTypes[type]);\n  \n  if (selectedTypes.length === 0) {\n    return { success: false, error: strings[449] || 'No crops selected for harvest.' };\n  }\n  \n  // Sync FarmState before proceeding to ensure client/server consistency\n  const farmState = await import('../../FarmState').then(m => m.default);\n  \n  await farmState.forceProcessPendingSeeds({ gridId, setResources, masterResources });\n  \n  // Get fresh resources after initial sync\n  const GlobalGridStateTilesAndResources = await import('../../GridState/GlobalGridStateTilesAndResources').then(m => m.default);\n  let currentResources = GlobalGridStateTilesAndResources.getResources();\n  \n  // Find all farmplots that might still be converting to crops\n  const pendingFarmplots = currentResources.filter(res => {\n    if (res.category === 'farmplot' && res.growEnd) {\n      const now = Date.now();\n      return res.growEnd <= now; // Should have converted but might not be synced yet\n    }\n    return false;\n  });\n  \n  if (pendingFarmplots.length > 0) {\n    // Wait up to 5 seconds for conversions to complete\n    let attempts = 0;\n    const maxAttempts = 50;\n    \n    while (attempts < maxAttempts) {\n      await new Promise(resolve => setTimeout(resolve, 100));\n      attempts++;\n      \n      // Get fresh resources\n      currentResources = GlobalGridStateTilesAndResources.getResources();\n      \n      // Check if all pending farmplots have been converted\n      const stillPending = pendingFarmplots.filter(farmplot => {\n        const resourceAtPosition = currentResources.find(res => \n          res.x === farmplot.x && res.y === farmplot.y\n        );\n        \n        if (!resourceAtPosition) return false;\n        \n        if (resourceAtPosition.category === 'farmplot' && resourceAtPosition.growEnd) {\n          return true; // Still a farmplot waiting to convert\n        }\n        \n        return false;\n      });\n      \n      if (stillPending.length === 0) {\n        break;\n      }\n    }\n    \n    if (attempts === maxAttempts) {\n      // One more force sync attempt\n      await farmState.forceProcessPendingSeeds({ gridId, setResources, masterResources });\n      await new Promise(resolve => setTimeout(resolve, 200));\n    }\n  }\n  \n  // Final sync to catch any last-minute conversions\n  await farmState.forceProcessPendingSeeds({ gridId, setResources, masterResources });\n  await new Promise(resolve => setTimeout(resolve, 100));\n  \n  // Final resource fetch\n  const freshResources = GlobalGridStateTilesAndResources.getResources();\n  \n\n  // First, calculate capacity to check if we can harvest\n  const capacityCheck = await calculateBulkHarvestCapacity(\n    selectedTypes,\n    freshResources,  // Use the fresh resources we just validated\n    masterResources,\n    masterSkills,\n    currentPlayer\n  );\n  \n\n  // Check if we have enough space\n  if (!capacityCheck.canHarvest) {\n    const spaceNeeded = capacityCheck.totalCapacityNeeded;\n    const spaceAvailable = capacityCheck.availableSpace;\n    return { \n      success: false, \n      error: `${strings[447] || 'Not enough space'}: ${spaceNeeded} needed, ${spaceAvailable} available` \n    };\n  }\n\n  // If replanting, check seeds\n  if (showBulkReplant && !capacityCheck.canReplantAll) {\n    const missingSeeds = Object.entries(capacityCheck.hasEnoughSeeds)\n      .filter(([_, data]) => !data.enough)\n      .map(([type, data]) => `${getLocalizedString(type, strings)}: ${data.needed - data.has} more needed`)\n      .join(', ');\n    \n    // Still proceed with harvest, but warn about replanting\n    console.log(`⚠️ Not enough seeds for replanting: ${missingSeeds}`);\n  }\n\n  // Build operations for API call\n  const operations = buildBulkHarvestOperations(capacityCheck, selectedReplantTypes);\n  \n  // Generate transaction ID for idempotency\n  const transactionId = `bulk-harvest-${currentPlayer._id}-${Date.now()}`;\n  const transactionKey = `bulk-harvest-${gridId}`;\n\n  // Make the bulk harvest API call\n  try {\n    const response = await axios.post(`${API_BASE}/api/bulk-harvest`, {\n      playerId: currentPlayer._id,\n      gridId: gridId,\n      operations: operations,\n      transactionId: transactionId,\n      transactionKey: transactionKey\n    });\n\n\n    if (response.data.success) {\n      const results = response.data.results;\n    \n    // Update local inventory state\n    if (response.data.inventory) {\n      setInventory(response.data.inventory.warehouse || []);\n      setBackpack(response.data.inventory.backpack || []);\n      \n      // Update player state with new inventory\n      setCurrentPlayer(prev => ({\n        ...prev,\n        inventory: response.data.inventory.warehouse || [],\n        backpack: response.data.inventory.backpack || []\n      }));\n    }\n\n    // Remove harvested resources from local state\n    const harvestedPositions = new Set();\n    if (results.harvested) {\n      Object.values(results.harvested).forEach(data => {\n        if (data && data.positions && Array.isArray(data.positions)) {\n          data.positions.forEach(pos => harvestedPositions.add(`${pos.x},${pos.y}`));\n        }\n      });\n    }\n    \n    \n    const updatedResources = freshResources.filter(res => \n      !harvestedPositions.has(`${res.x},${res.y}`)\n    );\n    \n    // Add replanted resources\n    if (results.replanted) {\n      Object.entries(results.replanted).forEach(([cropType, data]) => {\n        \n        // Find the farmplot that produces this crop\n        const farmplot = masterResources.find(r => \n          r.category === 'farmplot' && r.output === cropType\n        );\n        \n        if (farmplot && data.positions && Array.isArray(data.positions)) {\n          data.positions.forEach((pos, index) => {\n            // Calculate growEnd from current time + growtime\n            // The server gives us growtime in seconds, but we need milliseconds\n            const growTimeMs = (data.growtime || farmplot.growtime || 300) * 1000;\n            const growEnd = Date.now() + growTimeMs;\n            \n            \n            // Create the farmplot resource with all necessary properties\n            updatedResources.push({\n              ...farmplot, // Include all properties from the farmplot template\n              x: pos.x,\n              y: pos.y,\n              type: farmplot.type, // This will be \"Wheat Plot\", not \"Wheat\"\n              growEnd: growEnd,\n              stage: 1,\n              category: 'farmplot', // Ensure category is set\n              output: farmplot.output // Ensure output is set for crop conversion\n            });\n          });\n        }\n      });\n    }\n    \n    GlobalGridStateTilesAndResources.setResources(updatedResources);\n    setResources(updatedResources);\n    \n    // Re-initialize FarmState with the updated resources\n    farmState.initializeFarmState(updatedResources);\n\n    // Calculate which skills were applied for each harvested type using shared utility\n    const harvestSkillsInfo = {};\n    if (results.harvested && typeof results.harvested === 'object') {\n      Object.entries(results.harvested).forEach(([cropType, data]) => {\n        if (data) {\n          const skillInfo = calculateSkillMultiplier(cropType, currentPlayer.skills || [], masterSkills);\n          if (skillInfo.hasSkills) {\n            harvestSkillsInfo[cropType] = skillInfo;\n          }\n        }\n      });\n    }\n    \n    // Transform harvest results to simple format for shared formatter\n    const harvestResults = {};\n    if (results.harvested && typeof results.harvested === 'object') {\n      Object.entries(results.harvested).forEach(([type, data]) => {\n        if (data && typeof data.quantity !== 'undefined') {\n          harvestResults[type] = data.quantity;\n        }\n      });\n    }\n    \n    \n    // Transform replant info\n    const replantInfo = {};\n    if (results.replanted) {\n      Object.entries(results.replanted).forEach(([type, data]) => {\n        replantInfo[type] = data.count;\n      });\n    }\n\n    // Calculate warehouse ingredient drops based on number of plots harvested (not skill-modified quantities)\n    const numPlotsHarvested = harvestedPositions.size;\n    console.log('🎁 Calculating warehouse drops for', numPlotsHarvested, 'plots harvested');\n    const warehouseDropsArray = calculateBulkWarehouseDrops(numPlotsHarvested, {\n      masterResources,\n      globalTuning,\n      selectWeightedRandomItem,\n      playerId: currentPlayer.playerId\n    });\n    \n    // Aggregate warehouse drops by type\n    const aggregatedWarehouseDrops = aggregateWarehouseDrops(warehouseDropsArray);\n    console.log('🎁 Aggregated warehouse drops:', aggregatedWarehouseDrops);\n\n    // Add warehouse ingredients to inventory if any were found\n    if (warehouseDropsArray.length > 0) {\n      try {\n        for (const drop of warehouseDropsArray) {\n          const warehouseGained = await gainIngredients({\n            playerId: currentPlayer.playerId,\n            currentPlayer,\n            resource: drop.type,\n            quantity: drop.quantity,\n            inventory: response.data.inventory?.warehouse || [],\n            backpack: response.data.inventory?.backpack || [],\n            setInventory,\n            setBackpack,\n            setCurrentPlayer,\n            updateStatus: () => {}, // No status updates during bulk operation\n            masterResources,\n            globalTuning,\n          });\n\n          if (warehouseGained) {\n            console.log(`✅ Added warehouse ingredient: ${drop.type} x${drop.quantity}`);\n            \n            // Track quest progress for warehouse ingredients\n            await trackQuestProgress(currentPlayer, 'Collect', drop.type, drop.quantity, setCurrentPlayer);\n          } else {\n            console.warn(`⚠️ Failed to add warehouse ingredient: ${drop.type} x${drop.quantity} (inventory full?)`);\n          }\n        }\n      } catch (error) {\n        console.error('❌ Error adding warehouse ingredients to inventory:', error);\n      }\n    }\n\n    // Track quest progress for harvested items\n    if (results.harvested && typeof results.harvested === 'object') {\n      Object.entries(results.harvested).forEach(([type, data]) => {\n        if (data && data.quantity) {\n          trackQuestProgress({\n            questProgressCategory: 'collect',\n            itemName: type,\n            quantity: data.quantity,\n            currentPlayer,\n            setCurrentPlayer,\n            masterResources\n          });\n        }\n      });\n    }\n\n    // Track quest progress for seeds used in replanting\n    Object.entries(results.seedsUsed || {}).forEach(([type, quantity]) => {\n      trackQuestProgress({\n        questProgressCategory: 'spend',\n        itemName: type,\n        quantity: quantity,\n        currentPlayer,\n        setCurrentPlayer,\n        masterResources\n      });\n    });\n    \n    // Return results object for modal display instead of status message\n    return {\n      success: true,\n      harvestResults,\n      replantInfo,\n      harvestSkillsInfo,\n      warehouseDrops: aggregatedWarehouseDrops,\n      seedsUsed: results.seedsUsed || {},\n      statusMessage: formatCollectionResults('harvest', harvestResults, harvestSkillsInfo, replantInfo, strings, getLocalizedString)\n    };\n  } else {\n    return { success: false, error: strings[448] || 'Bulk harvest failed' };\n  }\n  } catch (error) {\n    console.error('🌾 Bulk harvest error:', error);\n    return { \n      success: false, \n      error: error.response?.data?.message || error.message || 'Bulk harvest failed' \n    };\n  }\n}\n\n// Function to prepare crops for the modal\nexport function prepareBulkHarvestData(resources, masterResources) {\n  // Group crops by type\n  const cropCounts = {};\n  \n  const readyCrops = resources.filter(res => {\n    // Check if this resource is a crop\n    const isCrop = isACrop(res.type, masterResources);\n    \n    \n    return isCrop;\n  });\n\n  readyCrops.forEach((crop) => {\n    if (!cropCounts[crop.type]) {\n      const baseCrop = masterResources.find(r => r.type === crop.type);\n      const farmplot = masterResources.find(r => \n        r.category === 'farmplot' && r.output === crop.type\n      );\n      cropCounts[crop.type] = {\n        count: 0,\n        symbol: baseCrop?.symbol || '🌾',\n        replantRequires: farmplot?.requires\n      };\n    }\n    cropCounts[crop.type].count++;\n  });\n\n  // Convert to array format\n  const result = Object.entries(cropCounts).map(([type, data]) => ({\n    type,\n    count: data.count,\n    symbol: data.symbol,\n    replantRequires: data.replantRequires\n  }));\n  \n  return result;\n}","import { deriveWarehouseAndBackpackCapacity, calculateSkillMultiplier } from '../../Utils/InventoryManagement';\n\n/**\n * Calculate total capacity needed for bulk harvest operation\n * @param {Array} selectedTypes - Array of crop types to harvest\n * @param {Array} resources - Current grid resources\n * @param {Array} masterResources - Master resource definitions\n * @param {Object} masterSkills - Master skill definitions\n * @param {Object} currentPlayer - Current player data\n * @returns {Object} Capacity check results\n */\nexport async function calculateBulkHarvestCapacity(\n  selectedTypes, \n  resources, \n  masterResources, \n  masterSkills, \n  currentPlayer\n) {\n  let totalCapacityNeeded = 0;\n  const harvestDetails = [];\n  \n  // Get player's current inventory usage (exclude Money and Gem from capacity calculations)\n  const currentWarehouseUsage = (currentPlayer.inventory || [])\n    .filter(item => item.type !== 'Money' && item.type !== 'Gem')\n    .reduce((sum, item) => sum + (item.quantity || 0), 0);\n  const currentBackpackUsage = (currentPlayer.backpack || [])\n    .filter(item => item.type !== 'Money' && item.type !== 'Gem')\n    .reduce((sum, item) => sum + (item.quantity || 0), 0);\n  \n  // Get total capacities with skills using the existing function\n  const capacities = deriveWarehouseAndBackpackCapacity(currentPlayer, masterResources);\n  const warehouseCapacity = capacities.warehouse || 0;\n  const backpackCapacity = capacities.backpack || 0;\n  \n  const totalCapacity = warehouseCapacity + backpackCapacity;\n  const currentTotalUsage = currentWarehouseUsage + currentBackpackUsage;\n  const availableSpace = totalCapacity - currentTotalUsage;\n  \n  \n  // Calculate yield for each crop type\n  for (const cropType of selectedTypes) {\n    const crops = resources.filter(res => res.type === cropType);\n    if (crops.length === 0) continue;\n    \n    const baseCrop = masterResources.find(r => r.type === cropType);\n    if (!baseCrop) continue;\n    \n    // Use shared utility for skill calculations\n    const skillInfo = calculateSkillMultiplier(cropType, currentPlayer.skills || [], masterSkills);\n    \n    const baseYield = baseCrop.qtycollected || 1;\n    const yieldPerCrop = Math.floor(baseYield * skillInfo.multiplier);\n    const totalYield = crops.length * yieldPerCrop;\n    \n    harvestDetails.push({\n      type: cropType,\n      count: crops.length,\n      baseYield,\n      skillMultiplier: skillInfo.multiplier,\n      skillInfo,\n      yieldPerCrop,\n      totalYield,\n      positions: crops.map(c => ({ x: c.x, y: c.y })),\n      symbol: baseCrop.symbol || '🌾'\n    });\n    \n    totalCapacityNeeded += totalYield;\n  }\n  \n  // Calculate seeds needed for replanting\n  const replantDetails = [];\n  const seedsNeeded = {};\n  \n  for (const detail of harvestDetails) {\n    // Find the farmplot that produces this crop\n    const farmplot = masterResources.find(r => \n      r.category === 'farmplot' && r.output === detail.type\n    );\n    \n    if (farmplot) {\n      // Check if this farmplot requires seeds (has ingredient cost)\n      for (let i = 1; i <= 4; i++) {\n        const ingredientType = farmplot[`ingredient${i}`];\n        const ingredientQty = farmplot[`ingredient${i}qty`];\n        \n        if (ingredientType && ingredientQty) {\n          const totalNeeded = ingredientQty * detail.count;\n          seedsNeeded[ingredientType] = (seedsNeeded[ingredientType] || 0) + totalNeeded;\n        }\n      }\n      \n      replantDetails.push({\n        farmplotType: farmplot.type,\n        cropType: detail.type,\n        count: detail.count,\n        positions: detail.positions,\n        growtime: farmplot.growtime || 60\n      });\n    }\n  }\n  \n  // Check if player has enough seeds\n  const hasEnoughSeeds = {};\n  let canReplantAll = true;\n  \n  Object.entries(seedsNeeded).forEach(([seedType, needed]) => {\n    const inInventory = currentPlayer.inventory?.find(item => item.type === seedType)?.quantity || 0;\n    const inBackpack = currentPlayer.backpack?.find(item => item.type === seedType)?.quantity || 0;\n    const totalHas = inInventory + inBackpack;\n    \n    hasEnoughSeeds[seedType] = {\n      needed,\n      has: totalHas,\n      enough: totalHas >= needed\n    };\n    \n    if (totalHas < needed) {\n      canReplantAll = false;\n    }\n  });\n  \n  return {\n    canHarvest: availableSpace >= totalCapacityNeeded,\n    totalCapacityNeeded,\n    availableSpace,\n    currentTotalUsage,\n    totalCapacity,\n    warehouseCapacity,\n    backpackCapacity,\n    harvestDetails,\n    replantDetails,\n    seedsNeeded,\n    hasEnoughSeeds,\n    canReplantAll\n  };\n}\n\n/**\n * Build operations array for bulk harvest API call\n * @param {Object} capacityCheck - Results from calculateBulkHarvestCapacity\n * @param {Object} selectedReplantTypes - Which crops to replant\n * @returns {Array} Operations array for API\n */\nexport function buildBulkHarvestOperations(capacityCheck, selectedReplantTypes) {\n  const operations = [];\n  \n  // Group by crop type for efficiency\n  capacityCheck.harvestDetails.forEach(detail => {\n    const shouldReplant = selectedReplantTypes[detail.type] || false;\n    \n    operations.push({\n      cropType: detail.type,\n      positions: detail.positions,\n      replant: shouldReplant,\n      expectedYield: detail.totalYield\n    });\n  });\n  \n  return operations;\n}\n\n","import React from 'react';\nimport Modal from '../../UI/Modal';\nimport { getLocalizedString } from '../../Utils/stringLookup';\nimport '../../UI/SharedButtons.css';\nimport './BulkHarvestResultsModal.css';\n\n/**\n * Modal to display results of bulk harvest operation\n * Shows harvested crops, replanted seeds, warehouse ingredients, and skills applied\n */\nexport function BulkHarvestResultsModal({ \n  isOpen, \n  onClose, \n  results,\n  strings,\n  masterResources\n}) {\n  if (!isOpen || !results) return null;\n\n  const { \n    harvestResults = {}, \n    replantInfo = {}, \n    harvestSkillsInfo = {}, \n    warehouseDrops = {},\n    seedsUsed = {}\n  } = results;\n\n  // Check if we have any content to show\n  const hasHarvestResults = Object.keys(harvestResults).length > 0;\n  const hasReplantInfo = Object.keys(replantInfo).length > 0;\n  const hasWarehouseDrops = Object.keys(warehouseDrops).length > 0;\n  const hasSkillsApplied = Object.keys(harvestSkillsInfo).length > 0;\n\n  return (\n    <Modal \n      isOpen={isOpen} \n      onClose={onClose} \n      title={strings[356] || \"Bulk Harvest Results\"} \n      size=\"medium\"\n      className=\"bulk-harvest-results-modal\"\n    >\n      <div className=\"bulk-harvest-results-content\">\n        \n        {/* Harvested Crops Section */}\n        {hasHarvestResults && (\n          <div className=\"results-section\">\n            <h3 className=\"results-section-header crops\">\n              🚜 {strings[357] || \"Crops Harvested\"}\n            </h3>\n            <div className=\"crop-rows\">\n              {Object.entries(harvestResults).map(([cropType, quantity]) => {\n                const skillInfo = harvestSkillsInfo[cropType];\n                const hasSkillBonus = skillInfo && skillInfo.hasSkills;\n                \n                // Find the crop symbol from masterResources\n                const cropResource = masterResources?.find(r => r.type === cropType);\n                const cropSymbol = cropResource?.symbol || '🌾';\n                \n                return (\n                  <div key={cropType} className=\"crop-row\">\n                    <span className=\"crop-symbol\">{cropSymbol}</span>\n                    <span className=\"crop-name\">{getLocalizedString(cropType, strings)}</span>\n                    <span className=\"crop-quantity\">+{quantity}</span>\n                    {hasSkillBonus && (\n                      <span className=\"crop-skills\">\n                        Skills applied ({skillInfo.multiplier}x): {skillInfo.skills.join(', ')}\n                      </span>\n                    )}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        )}\n\n        {/* Replanted Seeds Section */}\n        {hasReplantInfo && (\n          <div className=\"results-section\">\n            <h3 className=\"results-section-header replanting\">\n              🌱 {strings[358] || \"Crops Replanted\"}\n            </h3>\n            <div className=\"replant-rows\">\n              {Object.entries(replantInfo).map(([cropType, count]) => {\n                // Find the crop symbol from masterResources\n                const cropResource = masterResources?.find(r => r.type === cropType);\n                const cropSymbol = cropResource?.symbol || '🌱';\n                const seedsUsedForCrop = seedsUsed[cropType];\n                \n                return (\n                  <div key={cropType} className=\"replant-row\">\n                    <span className=\"replant-symbol\">{cropSymbol}</span>\n                    <span className=\"replant-name\">{getLocalizedString(cropType, strings)}</span>\n                    <span className=\"replant-quantity\">{count} plots</span>\n                    {seedsUsedForCrop && (\n                      <span className=\"replant-seeds-used\">\n                        {strings[361] || \"Seeds used\"}: -{seedsUsedForCrop}\n                      </span>\n                    )}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        )}\n\n        {/* Warehouse Ingredients Section */}\n        {hasWarehouseDrops && (\n          <div className=\"results-section\">\n            <h3 className=\"results-section-header warehouse\">\n              📦 {strings[359] || \"Warehouse Ingredients Found\"}\n            </h3>\n            <div className=\"results-grid-warehouse\">\n              {Object.entries(warehouseDrops).map(([ingredientType, data]) => (\n                <div key={ingredientType} className=\"result-item warehouse\">\n                  <div className=\"result-item-label\">\n                    <span className=\"result-item-name\">\n                      {data.symbol} {getLocalizedString(ingredientType, strings)}\n                    </span>\n                  </div>\n                  <span className=\"result-item-quantity warehouse\">+{data.quantity}</span>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Close Button - using shared button styles */}\n        <div className=\"shared-buttons\" style={{ display: 'flex', justifyContent: 'center', marginTop: '20px' }}>\n          <button \n            onClick={onClose}\n            className=\"btn-success\"\n            style={{ fontSize: '16px', padding: '10px 20px' }}\n          >\n            {strings[360] || \"Continue\"}\n          </button>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n\nexport default BulkHarvestResultsModal;","import React, { useState } from 'react';\nimport Modal from '../../UI/Modal';\nimport { handleNPCClick } from '../NPCs/NPCUtils';\nimport { calculateSkillMultiplier } from '../../Utils/InventoryManagement';\nimport { formatCollectionResults } from '../../UI/StatusBar/CollectionFormatters';\nimport { refreshPlayerAfterInventoryUpdate } from '../../Utils/InventoryManagement';\nimport { getLocalizedString } from '../../Utils/stringLookup';\nimport NPCsInGridManager from '../../GridState/GridStateNPCs';\nimport '../../UI/SharedButtons.css';\n\n// Component for the bulk animal collection selection modal\nexport function BulkAnimalModal({ \n  isOpen, \n  onClose, \n  animals, \n  onExecute,\n  strings \n}) {\n  const [selectedAnimalTypes, setSelectedAnimalTypes] = useState({});\n\n  // Initialize selections when modal opens\n  React.useEffect(() => {\n    if (isOpen && animals.length > 0) {\n      // Select all animals by default\n      const defaultSelection = {};\n      animals.forEach(animal => {\n        defaultSelection[animal.type] = true;\n      });\n      setSelectedAnimalTypes(defaultSelection);\n    }\n  }, [isOpen, animals]);\n\n  const handleToggleAnimal = (animalType) => {\n    setSelectedAnimalTypes(prev => ({\n      ...prev,\n      [animalType]: !prev[animalType]\n    }));\n  };\n\n  const handleExecute = () => {\n    onExecute();\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} title={strings[319] || \"Select Animals to Collect\"} size=\"medium\">\n      <div style={{ padding: '20px', fontSize: '16px' }}>           \n        <div className=\"shared-buttons\" style={{ marginBottom: '15px', display: 'flex', gap: '10px' }}>\n          <button \n            className=\"btn-basic btn-success btn-modal-small\"\n            onClick={() => {\n              const allSelected = {};\n              animals.forEach(animal => {\n                allSelected[animal.type] = true;\n              });\n              setSelectedAnimalTypes(allSelected);\n            }}\n          >\n            {strings[316] || 'Select All'}\n          </button>\n          <button \n            className=\"btn-basic btn-danger btn-modal-small\"\n            onClick={() => setSelectedAnimalTypes({})}\n          >\n            {strings[317] || 'Deselect All'}\n          </button>\n        </div>\n        \n        <div style={{ marginBottom: '20px' }}>\n          {animals.map((animal, index) => (\n            <div key={animal.type} style={{ \n              display: 'flex', \n              alignItems: 'center', \n              marginBottom: '10px',\n              padding: '5px',\n              backgroundColor: index % 2 === 0 ? 'transparent' : '#f0f0f0'\n            }}>\n              <input\n                type=\"checkbox\"\n                checked={selectedAnimalTypes[animal.type] || false}\n                onChange={(e) => {\n                  setSelectedAnimalTypes(prev => ({\n                    ...prev,\n                    [animal.type]: e.target.checked\n                  }));\n                }}\n                style={{ marginRight: '10px' }}\n              />\n              <span>{animal.symbol} {getLocalizedString(animal.type, strings)} ({animal.count})</span>\n            </div>\n          ))}\n        </div>\n        \n        <div className=\"shared-buttons\" style={{ display: 'flex', justifyContent: 'center' }}>\n          <button \n            className=\"btn-basic btn-success btn-modal\"\n            onClick={handleExecute}\n            disabled={Object.values(selectedAnimalTypes).every(selected => !selected)}\n          >\n            {strings[318] || 'Collect Selected'}\n          </button>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n\n// Main function to execute bulk animal collection\nexport async function executeBulkAnimalCollect({\n  selectedAnimalTypes,\n  gridId,\n  currentPlayer,\n  setCurrentPlayer,\n  setInventory,\n  setBackpack,\n  setResources,\n  updateStatus,\n  TILE_SIZE,\n  masterResources,\n  masterSkills,\n  strings\n}) {\n  // Get selected animal types\n  const selectedTypes = Object.keys(selectedAnimalTypes).filter(type => selectedAnimalTypes[type]);\n  \n  if (selectedTypes.length === 0) {\n    return 'No animals selected for collection.';\n  }\n\n  const npcs = Object.values(NPCsInGridManager.getNPCsInGrid(gridId) || {});\n  const animalsToCollect = npcs.filter(npc => \n    npc.state === 'processing' && selectedTypes.includes(npc.type)\n  );\n\n  const wait = (ms) => new Promise(resolve => setTimeout(resolve, ms));\n  const successfulCollects = {};\n  const animalSkillsInfo = {};\n\n  // Process each animal\n  for (const npc of animalsToCollect) {\n    const result = await handleNPCClick(\n      npc,\n      npc.position.y,\n      npc.position.x,\n      setInventory,\n      setBackpack,  \n      setResources,\n      currentPlayer,\n      setCurrentPlayer,\n      TILE_SIZE,\n      masterResources,\n      masterSkills,\n      gridId,\n      () => {}, // setModalContent (not used here)\n      () => {}, // setIsModalOpen (not used here)\n      updateStatus,\n      () => {}, // openPanel (not used here)\n      () => {}, // setActiveStation (not used here)\n      strings\n    );\n\n    // Check if collection was successful\n    if (result && result.type === 'success' && result.collectedItem) {\n      const { collectedItem, collectedQuantity, skillsApplied } = result;\n      \n      // Track successful collects\n      successfulCollects[collectedItem] = (successfulCollects[collectedItem] || 0) + collectedQuantity;\n      \n      // Track skill info for this item type - use what server provided\n      if (!animalSkillsInfo[collectedItem] && skillsApplied && skillsApplied.length > 0) {\n        // The server already tells us which skills were applied\n        // We need to calculate the multiplier from the quantity\n        // Each animal gives base 1, so multiplier = collectedQuantity / 1\n        const multiplier = collectedQuantity;\n        \n        animalSkillsInfo[collectedItem] = {\n          skills: skillsApplied,\n          multiplier: multiplier,\n          hasSkills: true\n        };\n      }\n    }\n    \n    await wait(100); // avoid overloading server\n  }\n\n  // Small delay to ensure all state updates have propagated\n  await wait(100);\n  \n  // Refresh player data from server, including fresh inventory\n  await refreshPlayerAfterInventoryUpdate(currentPlayer.playerId, setCurrentPlayer, false);\n\n  // Use shared formatter for status message\n  if (Object.keys(successfulCollects).length > 0) {\n    const statusMessage = formatCollectionResults('animal', successfulCollects, animalSkillsInfo, null, strings, getLocalizedString);\n    return statusMessage;\n  } else {\n    return 'Failed to collect from any animals.';\n  }\n}\n\n// Function to prepare animal data for the modal\nexport function prepareBulkAnimalData(gridId, masterResources) {\n  const npcs = Object.values(NPCsInGridManager.getNPCsInGrid(gridId) || {});\n  const processingAnimals = npcs.filter(npc => npc.state === 'processing');\n  \n  // Count how many of each animal type is ready\n  const animalCounts = {};\n  processingAnimals.forEach((npc) => {\n    animalCounts[npc.type] = (animalCounts[npc.type] || 0) + 1;\n  });\n\n  // Create array of available animals with counts and symbols\n  return Object.entries(animalCounts).map(([animalType, count]) => {\n    const resourceDef = masterResources.find(res => res.type === animalType);\n    return {\n      type: animalType,\n      count,\n      symbol: resourceDef?.symbol || '🐮'\n    };\n  });\n}","import React, { useState } from 'react';\nimport axios from 'axios';\nimport API_BASE from '../../config';\nimport Modal from '../../UI/Modal';\nimport { canAfford, spendIngredients, gainIngredients, calculateSkillMultiplier } from '../../Utils/InventoryManagement';\nimport { formatCollectionResults, formatRestartResults } from '../../UI/StatusBar/CollectionFormatters';\nimport { trackQuestProgress } from '../Quests/QuestGoalTracker';\nimport { getLocalizedString } from '../../Utils/stringLookup';\nimport { refreshPlayerAfterInventoryUpdate } from '../../Utils/InventoryManagement';\nimport GlobalGridStateTilesAndResources from '../../GridState/GlobalGridStateTilesAndResources';\nimport NPCsInGridManager from '../../GridState/GridStateNPCs';\nimport '../../UI/SharedButtons.css';\n\n// Component for the bulk crafting selection modal\nexport function BulkCraftingModal({ \n  isOpen, \n  onClose, \n  stationGroups, \n  onExecute,\n  hasBulkRestartCraft,\n  strings,\n  masterResources,\n  inventory,\n  backpack \n}) {\n  const [selectedGroups, setSelectedGroups] = useState([]);\n  const [selectedRestartStations, setSelectedRestartStations] = useState({});\n\n  // Initialize selections when modal opens\n  React.useEffect(() => {\n    if (isOpen && stationGroups.length > 0) {\n      // Select all station groups by default\n      setSelectedGroups(stationGroups);\n      \n      // Select all restart options by default (if bulk restart skill is available)\n      if (hasBulkRestartCraft) {\n        const defaultRestartSelection = {};\n        stationGroups.forEach(group => {\n          if (group.canRestart) {\n            const key = `${group.stationType}-${group.craftedItem}`;\n            defaultRestartSelection[key] = true;\n          }\n        });\n        setSelectedRestartStations(defaultRestartSelection);\n      }\n    }\n  }, [isOpen, stationGroups, hasBulkRestartCraft]);\n\n  const handleToggleGroup = (group) => {\n    setSelectedGroups(prev => {\n      const isSelected = prev.some(g => \n        g.stationType === group.stationType && g.craftedItem === group.craftedItem\n      );\n      \n      if (isSelected) {\n        // If unchecking collect, also uncheck restart\n        const key = `${group.stationType}-${group.craftedItem}`;\n        setSelectedRestartStations(restartPrev => ({\n          ...restartPrev,\n          [key]: false\n        }));\n        \n        return prev.filter(g => \n          !(g.stationType === group.stationType && g.craftedItem === group.craftedItem)\n        );\n      } else {\n        return [...prev, group];\n      }\n    });\n  };\n\n  const handleToggleRestart = (group) => {\n    const key = `${group.stationType}-${group.craftedItem}`;\n    setSelectedRestartStations(prev => {\n      const newValue = !prev[key];\n      // If checking restart, also check collect\n      if (newValue) {\n        setSelectedGroups(groupsPrev => {\n          const isAlreadySelected = groupsPrev.some(g => \n            g.stationType === group.stationType && g.craftedItem === group.craftedItem\n          );\n          if (!isAlreadySelected) {\n            return [...groupsPrev, group];\n          }\n          return groupsPrev;\n        });\n      }\n      return {\n        ...prev,\n        [key]: newValue\n      };\n    });\n  };\n\n  const handleExecute = () => {\n    onExecute(selectedGroups, selectedRestartStations);\n  };\n\n  const isGroupSelected = (group) => {\n    return selectedGroups.some(g => \n      g.stationType === group.stationType && g.craftedItem === group.craftedItem\n    );\n  };\n\n  if (!isOpen) return null;\n\n  const getRestartLabel = (group) => {\n    if (!hasBulkRestartCraft) {\n      return strings[345] || 'Requires skill';\n    }\n    if (!group.canRestart) {\n      return strings[346] || 'Locked';\n    }\n    if (!group.affordable) {\n      return null;  // Don't show text for insufficient ingredients\n    }\n    return null;\n  };\n\n  const isRestartDisabled = (group) => {\n    return !hasBulkRestartCraft || !group.canRestart || !group.affordable;\n  };\n\n  // Calculate total ingredient needs for a group\n  const calculateGroupNeeds = (group) => {\n    if (!group.recipe || !group.stationCount) return null;\n    \n    const needs = {};\n    \n    // Calculate needs for each ingredient\n    for (let i = 1; i <= 4; i++) {\n      const ingredientType = group.recipe[`ingredient${i}`];\n      const ingredientQty = group.recipe[`ingredient${i}qty`];\n      \n      if (ingredientType && ingredientQty) {\n        const totalNeeded = ingredientQty * group.stationCount;\n        const inventoryQty = inventory?.find(item => item.type === ingredientType)?.quantity || 0;\n        const backpackQty = backpack?.find(item => item.type === ingredientType)?.quantity || 0;\n        const totalAvailable = inventoryQty + backpackQty;\n        \n        needs[ingredientType] = {\n          needed: totalNeeded,\n          available: totalAvailable,\n          symbol: masterResources.find(r => r.type === ingredientType)?.symbol || ''\n        };\n      }\n    }\n    \n    return needs;\n  };\n\n  const selectAll = () => {\n    setSelectedGroups(stationGroups);\n  };\n\n  const selectNone = () => {\n    setSelectedGroups([]);\n    // When deselecting all collections, also deselect all restarts\n    setSelectedRestartStations({});\n  };\n\n  const selectAllRestarts = () => {\n    const allRestartSelection = {};\n    const groupsToSelect = [];\n    stationGroups.forEach(group => {\n      if (group.canRestart && group.affordable) {\n        const key = `${group.stationType}-${group.craftedItem}`;\n        allRestartSelection[key] = true;\n        // Also select the group for collection\n        if (!isGroupSelected(group)) {\n          groupsToSelect.push(group);\n        }\n      }\n    });\n    setSelectedRestartStations(prev => ({\n      ...prev,\n      ...allRestartSelection\n    }));\n    setSelectedGroups(prev => [...prev, ...groupsToSelect]);\n  };\n\n  const selectNoneRestarts = () => {\n    setSelectedRestartStations({});\n  };\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} title={strings[341] || \"Select Crafting Stations to Collect:\"} size=\"large\">\n      <div style={{ padding: '20px', fontSize: '16px' }}>\n        <div style={{ marginBottom: '15px', display: 'flex', gap: '10px' }}>\n          <div className=\"shared-buttons\" style={{ display: 'flex', gap: '10px' }}>\n            <button \n              className=\"btn-basic btn-success btn-modal-small\"\n              onClick={selectAll}\n            >\n              {strings[316] || 'Select All'}\n            </button>\n            <button \n              className=\"btn-basic btn-neutral btn-modal-small\"\n              onClick={selectNone}\n            >\n              {strings[317] || 'Deselect All'}\n            </button>\n          </div>\n          \n          {hasBulkRestartCraft && (\n            <div className=\"shared-buttons\" style={{ display: 'flex', gap: '10px', marginLeft: 'auto', marginRight: '20px' }}>\n              <button \n                className=\"btn-basic btn-success btn-modal-small\"\n                onClick={selectAllRestarts}\n              >\n                {strings[316] || 'Select All'}\n              </button>\n              <button \n                className=\"btn-basic btn-neutral btn-modal-small\"\n                onClick={selectNoneRestarts}\n              >\n                {strings[317] || 'Deselect All'}\n              </button>\n            </div>\n          )}\n        </div>\n        \n        <div style={{ display: 'flex', marginBottom: '10px', fontSize: '14px', fontWeight: 'bold' }}>\n          <div style={{ width: '60px', textAlign: 'center' }}>{strings[346] || 'Collect?'}</div>\n          <div style={{ width: '200px', textAlign: 'left', paddingLeft: '10px' }}>{strings[476] || 'Station'}</div>\n          <div style={{ width: '270px', textAlign: 'left' }}>{strings[161] || 'Item'}</div>\n          {hasBulkRestartCraft && (\n            <div style={{ width: '80px', textAlign: 'center' }}>{strings[475]}</div>\n          )}\n          <div style={{ width: '150px', textAlign: 'center' }}>{strings[177]}</div>\n        </div>\n        \n        <div style={{ maxHeight: '400px', overflowY: 'auto' }}>\n          {stationGroups.map((group, index) => {\n            const key = `${group.stationType}-${group.craftedItem}`;\n            const needs = calculateGroupNeeds(group);\n            return (\n              <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '8px', padding: '5px', borderBottom: '1px solid #eee' }}>\n                <div style={{ width: '60px', textAlign: 'center' }}>\n                  <input\n                    type=\"checkbox\"\n                    checked={isGroupSelected(group)}\n                    onChange={() => handleToggleGroup(group)}\n                    style={{ width: '20px' }}\n                  />\n                </div>\n                <div style={{ width: '200px', textAlign: 'left', fontWeight: 'bold', paddingLeft: '10px' }}>\n                  {group.stationSymbol} {getLocalizedString(group.stationType, strings)}\n                </div>\n                <div style={{ width: '270px', textAlign: 'left' }}>\n                  {group.craftedSymbol} {getLocalizedString(group.craftedItem, strings)} ({group.stationCount})\n                </div>\n                {hasBulkRestartCraft ? (() => {\n                  const restartLabel = getRestartLabel(group);\n                  return (\n                    <div style={{ marginLeft: '0px', width: '80px', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n                      <input\n                        type=\"checkbox\"\n                        checked={selectedRestartStations[key] || false}\n                        onChange={() => !isRestartDisabled(group) && handleToggleRestart(group)}\n                        disabled={isRestartDisabled(group)}\n                        style={{ \n                          width: '20px',\n                          opacity: isRestartDisabled(group) ? 0.5 : 1,\n                          cursor: isRestartDisabled(group) ? 'not-allowed' : 'pointer'\n                        }}\n                        title={restartLabel || ''}\n                      />\n                      {restartLabel && (\n                        <span style={{ fontSize: '11px', color: 'red', marginTop: '2px' }}>\n                          {restartLabel}\n                        </span>\n                      )}\n                    </div>\n                  );\n                })() : null}\n                {/* Needs column */}\n                <div style={{ width: '150px', textAlign: 'center', fontSize: '12px' }}>\n                  {needs && Object.entries(needs).map(([type, data], idx) => {\n                    const color = data.available >= data.needed ? 'green' : 'red';\n                    return (\n                      <div key={idx} style={{ color }}>\n                        {data.symbol} {data.needed}/{data.available}\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        \n        <div className=\"shared-buttons\" style={{ display: 'flex', justifyContent: 'center' }}>\n          <button \n            className=\"btn-basic btn-success btn-modal\"\n            onClick={handleExecute}\n            disabled={selectedGroups.length === 0}\n          >\n            {strings[318] || 'Collect'}\n          </button>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n\n// Main function to execute bulk crafting collection\nexport async function executeBulkCrafting({\n  selectedGroups,\n  selectedRestartStations,\n  hasBulkRestartCraft,\n  currentPlayer,\n  setCurrentPlayer,\n  inventory,\n  setInventory,\n  backpack,\n  setBackpack,\n  setResources,\n  gridId,\n  masterResources,\n  masterSkills,\n  strings,\n  updateStatus,\n  globalTuning\n}) {\n  if (selectedGroups.length === 0) {\n    return 'No crafting stations selected for collection.';\n  }\n\n  // Flatten all selected stations\n  const stationsToCollect = selectedGroups.flatMap(group => group.stations);\n  \n  // Prepare batch data for all stations\n  const batchStations = stationsToCollect.map(station => {\n    const key = `${station.type}-${station.craftedItem}`;\n    const shouldRestart = hasBulkRestartCraft && selectedRestartStations[key];\n    \n    // Find the recipe if we need to restart\n    let restartRecipe = null;\n    if (shouldRestart) {\n      const stationGroup = selectedGroups.find(g => \n        g.stationType === station.type && g.craftedItem === station.craftedItem\n      );\n      if (stationGroup && stationGroup.recipe && stationGroup.affordable) {\n        restartRecipe = stationGroup.recipe;\n      }\n    }\n    \n    return {\n      x: station.x,\n      y: station.y,\n      type: station.type,\n      craftedItem: station.craftedItem,\n      transactionId: `bulk-craft-collect-${Date.now()}-${Math.random()}`,\n      shouldRestart: shouldRestart && restartRecipe !== null,\n      restartRecipe: restartRecipe\n    };\n  });\n  \n  const transactionId = `bulk-craft-collect-${currentPlayer._id}-${Date.now()}`;\n  const transactionKey = `bulk-craft-collect-${gridId}`;\n  \n  // Make single API call for both collection and restart\n  \n  try {\n    const response = await axios.post(`${API_BASE}/api/crafting/collect-bulk`, {\n      playerId: currentPlayer.playerId || currentPlayer._id,\n      gridId,\n      stations: batchStations,\n      transactionId,\n      transactionKey\n    });\n    \n    if (response.data.success && response.data.results) {\n      const results = response.data.results;\n      let updatedResources = [...GlobalGridStateTilesAndResources.getResources()];\n      \n      // Track successful collections and applied skills\n      const successfulCollects = {};\n      const successfulRestarts = {};\n      const appliedSkillsInfo = {};\n      \n      // Process each result and build a map of station updates\n      const stationUpdates = {};\n      \n      for (const result of results) {\n        if (result.collected || result.success) {\n          const { station, collectedItem, craftedItem, isNPC } = result;\n          const itemCollected = collectedItem || craftedItem;\n          const key = `${station.x}-${station.y}`;\n          \n          if (result.restarted && result.newCraftEnd) {\n            // Restarted - update with new craft state\n            stationUpdates[key] = { \n              craftEnd: result.newCraftEnd, \n              craftedItem: result.newCraftedItem || itemCollected \n            };\n          } else {\n            // Just collected - clear craft state\n            stationUpdates[key] = { \n              craftEnd: undefined, \n              craftedItem: undefined \n            };\n          }\n          \n          // Calculate skill info\n          const stationType = station.stationType || station.type;\n          const playerBuffs = (currentPlayer.skills || [])\n            .filter((item) => {\n              const resourceDetails = masterResources.find((res) => res.type === item.type);\n              const isSkill = resourceDetails?.category === 'skill' || resourceDetails?.category === 'upgrade';\n              const appliesToStation = (masterSkills?.[item.type]?.[stationType] || 1) > 1;\n              return isSkill && appliesToStation;\n            })\n            .map((buffItem) => buffItem.type);\n          \n          // Calculate skill multiplier\n          const skillMultiplier = playerBuffs.reduce((multiplier, buff) => {\n            const buffValue = masterSkills?.[buff]?.[stationType] || 1;\n            return multiplier * buffValue;\n          }, 1);\n          \n          // Base quantity is 1 per crafting station (matching individual crafting)\n          const baseQtyCollected = 1;\n          const finalQtyCollected = baseQtyCollected * skillMultiplier;\n          \n          // Handle NPC spawning\n          if (isNPC) {\n            const craftedResource = masterResources.find(res => res.type === itemCollected);\n            if (craftedResource) {\n              NPCsInGridManager.spawnNPC(gridId, craftedResource, { x: station.x, y: station.y });\n            }\n          } else {\n            // Server doesn't add items - client handles with skill buffs\n            // Track successful collects with skill bonuses\n            successfulCollects[itemCollected] = (successfulCollects[itemCollected] || 0) + finalQtyCollected;\n            \n            // Track skills applied for this item type (only need to do once per item type)\n            if (!appliedSkillsInfo[itemCollected] && playerBuffs.length > 0) {\n              appliedSkillsInfo[itemCollected] = {\n                skills: playerBuffs,\n                multiplier: skillMultiplier,\n                hasSkills: true\n              };\n            }\n          }\n          \n          // Track restart info\n          if (result.restarted) {\n            const restartedItem = result.newCraftedItem || result.restartedItem || itemCollected;\n            if (restartedItem) {\n              successfulRestarts[restartedItem] = (successfulRestarts[restartedItem] || 0) + 1;\n            }\n          }\n        }\n      }\n      \n      // Now apply all station updates in one pass using map pattern (like single crafting)\n      updatedResources = updatedResources.map(res => {\n        const key = `${res.x}-${res.y}`;\n        if (stationUpdates[key]) {\n          return { ...res, ...stationUpdates[key] };\n        }\n        return res;\n      });\n      \n      // Update inventory from server response if provided\n      if (response.data.inventory) {\n        // Update local inventory with what server says we have after spending for restarts\n        setInventory(response.data.inventory.warehouse || response.data.inventory);\n        setBackpack(response.data.inventory.backpack || []);\n        setCurrentPlayer(prev => ({\n          ...prev,\n          inventory: response.data.inventory.warehouse || response.data.inventory,\n          backpack: response.data.inventory.backpack || []\n        }));\n      }\n      \n      // NOW update global resources with all changes (collections + restarts) - ONLY ONCE\n      // Just like single crafting does it - simple and clean\n      GlobalGridStateTilesAndResources.setResources(updatedResources);\n      setResources(updatedResources);\n      \n      // Use fresh inventory state from server response\n      const currentInventory = response.data.inventory?.warehouse || inventory;\n      const currentBackpack = response.data.inventory?.backpack || backpack;\n      \n      // Add collected items to inventory with skills applied\n      for (const [collectedItem, quantity] of Object.entries(successfulCollects)) {\n        await gainIngredients({\n          playerId: currentPlayer.playerId,\n          currentPlayer: {\n            ...currentPlayer,\n            inventory: currentInventory,\n            backpack: currentBackpack\n          },\n          resource: collectedItem,\n          quantity: quantity,\n          inventory: currentInventory,\n          backpack: currentBackpack,\n          setInventory,\n          setBackpack,\n          setCurrentPlayer,\n          updateStatus,\n          masterResources,\n          globalTuning,\n        });\n        \n        // Track quest progress\n        await trackQuestProgress(currentPlayer, 'Craft', collectedItem, quantity, setCurrentPlayer);\n      }\n      \n      // Refresh player state to ensure everything is in sync\n      await refreshPlayerAfterInventoryUpdate(currentPlayer.playerId, setCurrentPlayer, false);\n      \n      // Check if we have any successful operations\n      const hasCollections = Object.keys(successfulCollects).length > 0;\n      const hasRestarts = Object.keys(successfulRestarts).length > 0;\n      const totalProcessed = results.filter(r => r.collected || r.success).length;\n      \n      if (hasCollections || hasRestarts) {\n        const parts = [];\n        \n        if (hasCollections) {\n          parts.push(formatCollectionResults('craft', successfulCollects, appliedSkillsInfo, null, strings, getLocalizedString));\n        }\n        \n        if (hasRestarts) {\n          parts.push(formatRestartResults(successfulRestarts, 'craft', strings, getLocalizedString));\n        }\n        \n        return parts.join(' | ');\n      } else if (totalProcessed > 0) {\n        // Items were processed but maybe all were NPCs\n        return `Collected from ${totalProcessed} crafting station${totalProcessed > 1 ? 's' : ''}.`;\n      } else {\n        return 'Failed to collect any crafted items.';\n      }\n    } else {\n      return 'Failed to collect crafted items.';\n    }\n  } catch (error) {\n    console.error('🏭 Bulk crafting error:', error);\n    return error.response?.data?.message || error.message || 'Bulk crafting failed';\n  }\n}\n\n// Function to prepare crafting station data for the modal\nexport function prepareBulkCraftingData(masterResources, inventory, backpack, currentPlayer, hasRequiredSkill) {\n  const now = Date.now();\n  const resources = GlobalGridStateTilesAndResources.getResources() || [];\n  \n  // Find all crafting stations with completed crafts\n  const readyStations = resources.filter(res => {\n    // Check if this is a crafting station\n    const stationDef = masterResources.find(r => r.type === res.type);\n    if (!stationDef || stationDef.category !== 'crafting') return false;\n    \n    // Check if it has a completed craft\n    return res.craftEnd && res.craftEnd <= now && res.craftedItem;\n  });\n\n  // Group stations by type and crafted item\n  const stationGroups = {};\n  readyStations.forEach(station => {\n    const key = `${station.type}-${station.craftedItem}`;\n    if (!stationGroups[key]) {\n      const stationResource = masterResources.find(r => r.type === station.type);\n      const craftedResource = masterResources.find(r => r.type === station.craftedItem);\n      // Find the recipe that produces this item from this station\n      const recipe = masterResources.find(r => \n        r.source === station.type && r.type === station.craftedItem\n      );\n      stationGroups[key] = {\n        stationType: station.type,\n        stationSymbol: stationResource?.symbol || '🏭',\n        craftedItem: station.craftedItem,\n        craftedSymbol: craftedResource?.symbol || '📦',\n        stations: [],\n        recipe: recipe,\n        canRestart: !!recipe && hasRequiredSkill(recipe?.requires),\n        affordable: recipe ? canAfford(recipe, inventory, backpack, 1) : false\n      };\n    }\n    stationGroups[key].stations.push(station);\n  });\n\n  // Convert to array and add counts\n  return Object.values(stationGroups).map(group => ({\n    ...group,\n    stationCount: group.stations.length\n  }));\n}","import API_BASE from '../../config';\nimport React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport Panel from '../../UI/Panel';\nimport Modal from '../../UI/Modal';\nimport ProgressModal from '../../UI/ProgressModal';\nimport '../../UI/ResourceButton.css';\nimport ResourceButton from '../../UI/ResourceButton';\nimport { canAfford } from '../../Utils/InventoryManagement';\nimport { refreshPlayerAfterInventoryUpdate, gainIngredients, spendIngredients } from '../../Utils/InventoryManagement';\nimport { trackQuestProgress } from '../Quests/QuestGoalTracker';\nimport { useStrings } from '../../UI/StringsContext';\nimport { getLocalizedString } from '../../Utils/stringLookup';\nimport { handleDooberClick, handleSourceConversion } from '../../ResourceClicking'; // adjust path if necessary\nimport FloatingTextManager from '../../UI/FloatingText';\nimport NPCsInGridManager from \"../../GridState/GridStateNPCs\";\nimport playersInGridManager from '../../GridState/PlayersInGrid';\nimport { useNPCOverlay } from '../../UI/NPCOverlayContext';\nimport { useBulkOperation } from '../../UI/BulkOperationContext';\nimport GlobalGridStateTilesAndResources from '../../GridState/GlobalGridStateTilesAndResources';\nimport { BulkHarvestModal, executeBulkHarvest, prepareBulkHarvestData } from './BulkHarvest';\nimport BulkHarvestResultsModal from './BulkHarvestResultsModal';\nimport { BulkAnimalModal, executeBulkAnimalCollect, prepareBulkAnimalData } from './BulkAnimalCollect';\nimport { BulkCraftingModal, executeBulkCrafting, prepareBulkCraftingData } from './BulkCrafting';\n\nconst FarmHandPanel = ({\n  onClose,\n  npc,\n  inventory,\n  setInventory,\n  backpack,\n  setBackpack,\n  currentPlayer,\n  setCurrentPlayer,\n  resources,\n  setResources,\n  stationType,\n  currentStationPosition,\n  gridId,\n  TILE_SIZE,\n  updateStatus,\n  masterResources,\n  masterSkills, // Added as prop\n  currentSeason,\n  globalTuning,\n}) => {\n  const strings = useStrings();\n  const [recipes, setRecipes] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [stationEmoji, setStationEmoji] = useState('🛖');\n  const [stationDetails, setStationDetails] = useState(null);\n  const [workerSkills, setFarmhandSkills] = useState([]);\n  const [workerUpgrades, setFarmhandUpgrades] = useState([]);\n  const [isHarvestModalOpen, setIsHarvestModalOpen] = useState(false);\n  const [availableCrops, setAvailableCrops] = useState([]);\n  const [bulkHarvestResults, setBulkHarvestResults] = useState(null);\n  const [isResultsModalOpen, setIsResultsModalOpen] = useState(false);\n  const [isAnimalModalOpen, setIsAnimalModalOpen] = useState(false);\n  const [selectedAnimalTypes, setSelectedAnimalTypes] = useState({});\n  const [availableAnimals, setAvailableAnimals] = useState([]);\n  const [isCraftingModalOpen, setIsCraftingModalOpen] = useState(false);\n  const [selectedCraftingStations, setSelectedCraftingStations] = useState({});\n  const [selectedRestartStations, setSelectedRestartStations] = useState({});\n  const [availableCraftingStations, setAvailableCraftingStations] = useState([]);\n  const skills = currentPlayer.skills || [];\n  const hasBulkReplant = skills.some(skill => skill.type === 'Bulk Replant');\n  const hasBulkRestartCraft = skills.some(skill => skill.type === 'Bulk Restart Craft');\n  const [bulkProgressModal, setBulkProgressModal] = useState({ isOpen: false, message: '' });\n  const { setBusyOverlay, clearNPCOverlay } = useNPCOverlay();\n  const { startBulkOperation, endBulkOperation } = useBulkOperation();\n  \n  // Shared function for executing bulk operations with progress modal\n  async function executeBulkOperation(operationName, operationId, workerNPC, asyncOperation) {\n    let pendingStatusMessage = null;\n    \n    // Show progress modal\n    setBulkProgressModal({ \n      isOpen: true, \n      message: strings[477] || 'Processing...'\n    });\n    \n    try {\n      // Run the async operation\n      pendingStatusMessage = await asyncOperation();\n    } catch (error) {\n      console.error(`${operationName} failed:`, error);\n      pendingStatusMessage = error.message || `Failed to complete ${operationName}.`;\n    } finally {\n      // Close modal and cleanup\n      setBulkProgressModal({ isOpen: false, message: '' });\n      if (workerNPC) clearNPCOverlay(workerNPC.id);\n      endBulkOperation(operationId);\n      \n      // Show the status message\n      if (pendingStatusMessage) {\n        updateStatus(pendingStatusMessage);\n      }\n    }\n  }\n  \n  // Determine which features to show based on NPC type\n  const npcType = npc?.type || stationType; // Use NPC type from the npc object, fallback to stationType\n  const showBulkHarvest = ['Farmer', 'Farm Hand'].includes(npcType);\n  const showBulkReplant = ['Farmer', 'Farm Hand'].includes(npcType) && hasBulkReplant;\n  const showBulkAnimalCollect = ['Farmer', 'Rancher'].includes(npcType);\n  const showLogging = ['Farmer', 'Lumberjack'].includes(npcType);\n  const showCropPurchase = ['Farmer', 'Farm Hand'].includes(npcType);\n  const showBulkCrafting = ['Farmer', 'Crafter'].includes(npcType);\n  \n  // Helper function to check if player has required skill (same logic as FarmingPanel)\n  const hasRequiredSkill = (requiredSkill) => {\n    return !requiredSkill || currentPlayer.skills?.some((owned) => owned.type === requiredSkill);\n  };\n  \n  // Sync inventory with local storage and server\n  useEffect(() => {\n    const syncInventory = async () => {\n      try {\n        const storedInventory = JSON.parse(localStorage.getItem('inventory')) || [];\n        setInventory(storedInventory);\n\n        const serverResponse = await axios.get(`${API_BASE}/api/inventory/${currentPlayer.playerId}`);\n        const serverInventory = serverResponse.data.inventory || [];\n        if (JSON.stringify(storedInventory) !== JSON.stringify(serverInventory)) {\n          setInventory(serverInventory);\n          localStorage.setItem('inventory', JSON.stringify(serverInventory));\n        }\n      } catch (error) {\n        console.error('Error syncing inventory:', error);\n      }\n    };\n    syncInventory();\n  }, [currentPlayer]);\n\n  useEffect(() => {\n    try {\n      const farmOutputs = masterResources\n        .filter((res) => res.category === 'farmplot')\n        .map((res) => res.output)\n        .filter(Boolean);\n\n      const filteredRecipes = masterResources.filter((res) => {\n        // Check if resource is in farmOutputs and not Oak Tree\n        if (!farmOutputs.includes(res.type) || res.type === 'Oak Tree') return false;\n        \n        // Check seasonal restriction\n        if (res.season && currentSeason && res.season !== currentSeason) {\n          return false;\n        }\n        \n        return true;\n      });\n      setRecipes(filteredRecipes);\n\n      const stationResource = masterResources.find((res) => res.type === stationType);\n      setStationEmoji(stationResource?.symbol || '🛖');\n      setStationDetails(stationResource);\n    } catch (error) {\n      console.error('Error loading worker offers:', error);\n    }\n  }, [stationType, masterResources]);\n\n  useEffect(() => {\n    const ownedTypes = currentPlayer.skills?.map(skill => skill.type) || [];\n    \n    // Get skills from multiple sources based on NPC type\n    let validSources = ['Farm Hand']; // Always include Farm Hand skills\n    if (npcType === 'Crafter' || npcType === 'Farmer') {\n      validSources.push('Crafter'); // Include Crafter skills for Crafter and Farmer NPCs\n    }\n    if (npcType === 'Rancher' || npcType === 'Farmer') {\n      validSources.push('Rancher'); // Include Rancher skills for Rancher and Farmer NPCs\n    }\n    \n    let skills = masterResources.filter(res =>\n      (res.category === 'skill' || res.category === 'upgrade') &&\n      validSources.includes(res.source) &&\n      !ownedTypes.includes(res.type)\n    );\n    \n    // Filter skills based on NPC type\n    if (npcType === 'Farm Hand') {\n      skills = skills.filter(res => ['Bulk Harvest', 'Bulk Replant'].includes(res.type));\n    } else if (npcType === 'Rancher') {\n      skills = skills.filter(res => res.type === 'Bulk Animal Collect');\n    } else if (npcType === 'Lumberjack') {\n      skills = skills.filter(res => ['Logging', 'Better Logging'].includes(res.type));\n    } else if (npcType === 'Crafter') {\n      skills = skills.filter(res => ['Bulk Crafting', 'Bulk Restart Craft'].includes(res.type));\n    }\n    // For 'Farmer', show all skills from all valid sources\n    \n    setFarmhandSkills(skills.filter(res => res.category === 'skill'));\n    setFarmhandUpgrades(skills.filter(res => res.category === 'upgrade'));\n  }, [masterResources, currentPlayer, npcType]);\n\n  const handleTrade = async (resource) => {\n    setErrorMessage('');\n    const cost = (resource.maxprice || 100) * 10;\n\n    const recipe = {\n      ingredient1: 'Money',\n      ingredient1qty: cost,\n      type: resource.type,\n    };\n\n    const safeInventory = Array.isArray(inventory) ? inventory : [];\n    const safeBackpack = Array.isArray(backpack) ? backpack : [];\n\n    const spent = await spendIngredients({\n      playerId: currentPlayer.playerId,\n      recipe,\n      inventory: safeInventory,\n      backpack: safeBackpack,\n      setInventory,\n      setBackpack,\n      setCurrentPlayer,\n      updateStatus,\n    });\n\n    if (!spent) {\n      setErrorMessage('Not enough money.');\n      return;\n    }\n\n    const gained = await gainIngredients({\n      playerId: currentPlayer.playerId,\n      currentPlayer,\n      resource: resource.type,\n      quantity: 1,\n      inventory: safeInventory,\n      backpack: safeBackpack,\n      setInventory,\n      setBackpack,\n      setCurrentPlayer,\n      updateStatus,\n      masterResources,\n      globalTuning,\n    });\n\n    if (!gained) {\n      setErrorMessage('Not enough space to carry that item.');\n      return;\n    }\n\n    updateStatus(`Bought 1 ${resource.type} for ${cost} Money.`);\n  };\n\n  const handlePurchaseSkill = async (resource) => {\n    setErrorMessage('');\n    const safeInventory = Array.isArray(inventory) ? inventory : [];\n    const safeBackpack = Array.isArray(backpack) ? backpack : [];\n\n    const spent = await spendIngredients({\n      playerId: currentPlayer.playerId,\n      recipe: resource,\n      inventory: safeInventory,\n      backpack: safeBackpack,\n      setInventory,\n      setBackpack,\n      setCurrentPlayer,\n      updateStatus,\n    });\n\n    if (!spent) {\n      setErrorMessage('Not enough ingredients.');\n      return;\n    }\n\n    const updatedSkills = [...(currentPlayer.skills || []), { type: resource.type, category: resource.category, quantity: 1 }];\n    await axios.post(`${API_BASE}/api/update-skills`, {\n      playerId: currentPlayer.playerId,\n      skills: updatedSkills,\n    });\n\n    await trackQuestProgress(currentPlayer, 'Gain skill with', resource.type, 1, setCurrentPlayer);\n    await refreshPlayerAfterInventoryUpdate(currentPlayer.playerId, setCurrentPlayer);\n    updateStatus(`${resource.type} acquired.`);\n  };\n\n  function handleBulkAnimalCollect() {\n    \n    const npcs = Object.values(NPCsInGridManager.getNPCsInGrid(gridId) || {});\n    const processingAnimals = npcs.filter(npc => npc.state === 'processing');\n    \n\n    if (processingAnimals.length === 0) {\n      updateStatus('No animals are ready to collect.');\n      return;\n    }\n    \n    // Find the appropriate worker NPC to apply busy overlay (Farmer or Rancher)\n    const workerNPC = npcs.find(npc => npc.action === 'worker' && ['Farmer', 'Rancher'].includes(npc.type));\n    if (workerNPC) {\n      setBusyOverlay(workerNPC.id);\n    }\n\n    // Count how many of each animal type is ready\n    const animalCounts = {};\n    processingAnimals.forEach((npc) => {\n      animalCounts[npc.type] = (animalCounts[npc.type] || 0) + 1;\n    });\n\n    // Create array of available animals with counts and symbols\n    const animalsWithDetails = Object.entries(animalCounts).map(([animalType, count]) => {\n      const resourceDef = masterResources.find(res => res.type === animalType);\n      return {\n        type: animalType,\n        count,\n        symbol: resourceDef?.symbol || '🐮'\n      };\n    });\n\n    setAvailableAnimals(animalsWithDetails);\n    \n    // Select all animals by default\n    const defaultSelection = {};\n    animalsWithDetails.forEach(animal => {\n      defaultSelection[animal.type] = true;\n    });\n    setSelectedAnimalTypes(defaultSelection);\n    \n    setIsAnimalModalOpen(true);\n  }\n\n  async function executeSelectiveAnimalCollect() {\n    setIsAnimalModalOpen(false);\n    onClose();\n    setErrorMessage('');\n    \n    // Find the appropriate worker NPC to apply busy overlay (Farmer or Rancher)\n    const npcs = Object.values(NPCsInGridManager.getNPCsInGrid(gridId) || {});\n    const workerNPC = npcs.find(npc => npc.action === 'worker' && ['Farmer', 'Rancher'].includes(npc.type));\n    if (workerNPC) {\n      setBusyOverlay(workerNPC.id);\n    }\n\n    // Start bulk operation tracking\n    const operationId = `bulk-animal-collect-${Date.now()}`;\n    startBulkOperation('bulk-animal-collect', operationId);\n\n    // Execute bulk operation with shared function\n    await executeBulkOperation('bulk-animal-collect', operationId, workerNPC, async () => {\n      return await executeBulkAnimalCollect({\n        selectedAnimalTypes,\n        gridId,\n        currentPlayer,\n        setCurrentPlayer,\n        setInventory,\n        setBackpack,\n        setResources,\n        updateStatus,\n        TILE_SIZE,\n        masterResources,\n        masterSkills,\n        strings\n      });\n    });\n    \n    onClose();\n  }\n\n\n\n  async function handleLogging() {\n    console.log('🪓🪓🪓🪓🪓 Logging initiated 🪓🪓🪓🪓🪓🪓');\n    onClose();\n    setErrorMessage('');\n\n    const safeInventory = Array.isArray(inventory) ? inventory : [];\n    const safeBackpack = Array.isArray(backpack) ? backpack : [];\n    \n    // Find the appropriate worker NPC to apply busy overlay (Lumberjack or Farmer)\n    let npcs = Object.values(NPCsInGridManager.getNPCsInGrid(gridId) || {});\n    const workerNPC = npcs.find(npc => npc.action === 'worker' && ['Farmer', 'Lumberjack'].includes(npc.type));\n    if (workerNPC) {\n      setBusyOverlay(workerNPC.id);\n    }\n\n    // Start bulk operation tracking\n    const operationId = `bulk-logging-${Date.now()}`;\n    startBulkOperation('bulk-logging', operationId);\n\n    try {\n      // Step 1: Determine how many trees we can chop\n      const loggingSkills = (currentPlayer.skills || []).filter(\n        (skill) => ['Logging', 'Better Logging'].includes(skill.type)\n      );\n      const maxTrees = loggingSkills.reduce((sum, skill) => {\n        const resourceDef = masterResources.find(res => res.type === skill.type);\n        return sum + (resourceDef?.qtycollected || 0);\n      }, 0);\n\n      if (maxTrees === 0) {\n        updateStatus(\"No logging skills available.\");\n        return;\n      }\n\n      // Step 2: Find the center position for tree selection (Lumberjack → Farmer → Player)\n      const npcs = Object.values(NPCsInGridManager.getNPCsInGrid(gridId) || {});\n      const lumberjackNPC = npcs.find(npc => npc.type === 'Lumberjack');\n      const farmerNPC = npcs.find(npc => npc.type === 'Farmer' || npc.type === 'Farm Hand');\n      \n      let centerPos;\n      let centerType;\n      \n      if (lumberjackNPC) {\n        centerPos = lumberjackNPC.position;\n        centerType = \"Lumberjack\";\n      } else if (farmerNPC) {\n        centerPos = farmerNPC.position;\n        centerType = \"Farmer\";\n      } else {\n        // Use player position as fallback\n        const playerData = playersInGridManager.getPlayersInGrid(gridId)?.[currentPlayer.playerId];\n        if (playerData && playerData.position) {\n          centerPos = playerData.position;\n          centerType = \"Player\";\n        } else {\n          // Ultimate fallback to (0,0) if no player position found\n          centerPos = { x: 0, y: 0 };\n          centerType = \"Default\";\n        }\n      }\n      \n      console.log(`🪓 Using ${centerType} position as center: (${centerPos.x}, ${centerPos.y})`);\n\n      // Step 3: Get all trees from resources and calculate distances from center position\n      const treeResources = resources\n        .filter(res => res.type === 'Oak Tree')\n        .map(tree => ({\n          ...tree,\n          distance: Math.sqrt(\n            Math.pow(tree.x - centerPos.x, 2) + \n            Math.pow(tree.y - centerPos.y, 2)\n          )\n        }))\n        .sort((a, b) => a.distance - b.distance); // Sort by distance from center\n\n      if (treeResources.length === 0) {\n        updateStatus(strings[437] || 'No trees available to chop.');\n        return;\n      }\n\n      // Select the closest trees up to maxTrees limit\n      const treesToChop = treeResources.slice(0, maxTrees);\n      console.log(`🌲 Found ${treeResources.length} trees, will chop ${treesToChop.length} closest to Lumberjack`);\n      const wait = (ms) => new Promise(resolve => setTimeout(resolve, ms));\n\n      // ---- Two-phase processing ----\n      const choppedTreePositions = [];\n\n      // Phase 1: Chop trees and remember positions\n      for (const tree of treesToChop) {\n        await handleSourceConversion(\n          tree,\n          tree.y,\n          tree.x,\n          resources,\n          setResources,\n          safeInventory,\n          setInventory,\n          safeBackpack,\n          setBackpack,\n          gridId,\n          FloatingTextManager.addFloatingText,\n          TILE_SIZE,\n          currentPlayer,\n          setCurrentPlayer,\n          masterResources,\n          () => {}, // setModalContent\n          () => {}, // setIsModalOpen\n          updateStatus,\n          strings\n        );\n        choppedTreePositions.push({ x: tree.x, y: tree.y });\n        await wait(100);\n      }\n\n      await wait(300); // give state time to update\n\n      // Phase 2: Click doobers at chopped positions\n      setTimeout(async () => {\n        for (const pos of choppedTreePositions) {\n          // Get the most up-to-date resources state\n          const latestResources = typeof setResources === 'function'\n            ? await new Promise(resolve => {\n                setResources(prev => {\n                  resolve(prev);\n                  return prev;\n                });\n              })\n            : resources;\n          const wood = latestResources.find(\n            res => res.x === pos.x && res.y === pos.y && res.category === 'doober'\n          );\n          console.log('🪵🪵🪵 Found wood doober at', pos, ':', wood);\n          if (wood) {\n            console.log('Calling handleDooberClick');\n            await handleDooberClick(\n              wood,\n              wood.y,\n              wood.x,\n              resources,\n              setResources,\n              setInventory,\n              setBackpack,\n              safeInventory,\n              safeBackpack,\n              currentPlayer.skills,\n              gridId,\n              FloatingTextManager.addFloatingText,\n              TILE_SIZE,\n              currentPlayer,\n              setCurrentPlayer,\n              updateStatus,\n              masterResources,\n              masterSkills,\n              strings,\n              null, // openPanel\n              globalTuning\n            );\n            await wait(100);\n          } else {\n            console.warn('⚠️ No doober found at position:', pos);\n          }\n        }\n        updateStatus(`🪵 Logging complete: ${treesToChop.length} trees chopped and collected.`);\n      }, 50);\n\n      await refreshPlayerAfterInventoryUpdate(currentPlayer.playerId, setCurrentPlayer);\n    } catch (error) {\n      console.error('Logging failed:', error);\n      setErrorMessage('Failed to auto-chop trees.');\n    } finally {\n      // End bulk operation tracking\n      endBulkOperation(operationId);\n      \n      // Clear busy overlay when operation completes\n      const npcsCleanup = Object.values(NPCsInGridManager.getNPCsInGrid(gridId) || {});\n      const workerNPCCleanup = npcsCleanup.find(npc => npc.action === 'worker' && ['Farmer', 'Lumberjack'].includes(npc.type));\n      if (workerNPCCleanup) {\n        clearNPCOverlay(workerNPCCleanup.id);\n      }\n    }\n  }\n\n\n  async function handleBulkHarvest() {\n    // First, force FarmState to process any pending seeds\n    const farmState = await import('../../FarmState').then(m => m.default);\n    await farmState.forceProcessPendingSeeds({ gridId, setResources, masterResources });\n    \n    // Stop FarmState timer to prevent conversions during modal\n    farmState.stopSeedTimer();\n    \n    // Wait a moment for state updates to propagate\n    await new Promise(resolve => setTimeout(resolve, 200));\n    \n    // Now get fresh resources from global state\n    const freshResources = GlobalGridStateTilesAndResources.getResources();\n    const crops = prepareBulkHarvestData(freshResources, masterResources);\n\n    if (crops.length === 0) {\n      updateStatus(strings[344] || 'No crops ready for harvest.');\n      // Restart FarmState timer if no crops\n      farmState.initializeFarmState(freshResources);\n      farmState.startSeedTimer({ gridId, setResources, masterResources });\n      return;\n    }\n    \n    setAvailableCrops(crops);\n    setIsHarvestModalOpen(true);\n  }\n  \n  // Function to get fresh crop data at any time\n  const getFreshCropData = React.useCallback(async () => {\n    // Force sync before getting data\n    const farmState = await import('../../FarmState').then(m => m.default);\n    await farmState.forceProcessPendingSeeds({ gridId, setResources, masterResources });\n    await new Promise(resolve => setTimeout(resolve, 100));\n    \n    const freshResources = GlobalGridStateTilesAndResources.getResources();\n    return prepareBulkHarvestData(freshResources, masterResources);\n  }, [gridId, setResources, masterResources]);\n \n  async function executeSelectiveHarvest(selectedCropTypes, selectedReplantTypes) {\n    setIsHarvestModalOpen(false);\n    setErrorMessage('');\n\n    // Find the Farmer NPC to apply busy overlay\n    const npcs = Object.values(NPCsInGridManager.getNPCsInGrid(gridId) || {});\n    const farmerNPC = npcs.find(npc => npc.action === 'worker');\n    if (farmerNPC) {\n      setBusyOverlay(farmerNPC.id);\n    }\n\n    // Start bulk operation tracking\n    const operationId = `bulk-harvest-${Date.now()}`;\n    startBulkOperation('bulk-harvest', operationId);\n\n    try {\n      // Execute bulk operation with shared function\n      await executeBulkOperation('bulk-harvest', operationId, farmerNPC, async () => {\n        const result = await executeBulkHarvest({\n          selectedCropTypes,\n          selectedReplantTypes,\n          resources: GlobalGridStateTilesAndResources.getResources(),  // Always use fresh resources\n          masterResources,\n          masterSkills,\n          currentPlayer,\n          setCurrentPlayer,\n          setInventory,\n          setBackpack,\n          setResources,\n          gridId,\n          showBulkReplant,\n          strings,\n          refreshPlayerAfterInventoryUpdate,\n          globalTuning\n        });\n\n        // Handle the new results format\n        if (result.success) {\n          // Store results for modal display\n          setBulkHarvestResults(result);\n          // Show results modal after a brief delay\n          setTimeout(() => {\n            setIsResultsModalOpen(true);\n          }, 500);\n          // Return status message for any fallback displays\n          return result.statusMessage;\n        } else {\n          // Return error message\n          return result.error;\n        }\n      });\n    } finally {\n      // Always restart FarmState timer after harvest\n      const farmState = await import('../../FarmState').then(m => m.default);\n      const currentResources = GlobalGridStateTilesAndResources.getResources();\n      farmState.initializeFarmState(currentResources);\n      farmState.startSeedTimer({ gridId, setResources, masterResources });\n    }\n  }\n\n\n  function handleBulkCrafting() {\n    console.log('🛖 Opening selective crafting modal');\n    \n    const stationGroups = prepareBulkCraftingData(masterResources, inventory, backpack, currentPlayer, hasRequiredSkill);\n    \n    if (stationGroups.length === 0) {\n      updateStatus(strings[466] || 'No crafting stations ready to collect.');\n      return;\n    }\n    \n    const stationsWithDetails = stationGroups;\n    setAvailableCraftingStations(stationsWithDetails);\n    \n    // Select all stations by default\n    const defaultSelection = {};\n    stationsWithDetails.forEach(group => {\n      defaultSelection[`${group.stationType}-${group.craftedItem}`] = true;\n    });\n    setSelectedCraftingStations(defaultSelection);\n    \n    // If player has Bulk Restart Craft skill, pre-select restart options only if player has enough ingredients\n    if (hasBulkRestartCraft) {\n      const defaultRestartSelection = {};\n      const playerInventory = {};\n      \n      // Combine inventory and backpack\n      [...(inventory || []), ...(backpack || [])].forEach(item => {\n        playerInventory[item.type] = (playerInventory[item.type] || 0) + item.quantity;\n      });\n      \n      stationsWithDetails.forEach(group => {\n        const craftedResource = masterResources.find(r => r.type === group.craftedItem);\n        if (craftedResource) {\n          // Check if player has all ingredients\n          let hasAllIngredients = true;\n          for (let i = 1; i <= 5; i++) {\n            const ingredientType = craftedResource[`ingredient${i}`];\n            const ingredientQty = craftedResource[`ingredient${i}qty`] || 1;\n            if (ingredientType) {\n              const needed = ingredientQty * group.count;\n              const has = playerInventory[ingredientType] || 0;\n              if (has < needed) {\n                hasAllIngredients = false;\n                break;\n              }\n            }\n          }\n          \n          // Only pre-select if player has all ingredients\n          if (hasAllIngredients) {\n            defaultRestartSelection[`${group.stationType}-${group.craftedItem}`] = true;\n          }\n        }\n      });\n      setSelectedRestartStations(defaultRestartSelection);\n    } else {\n      setSelectedRestartStations({});\n    }\n    \n    setIsCraftingModalOpen(true);\n  }\n\n  async function executeSelectiveCrafting(selectedGroups, selectedRestartStations) {\n    setIsCraftingModalOpen(false);\n    setErrorMessage('');\n    \n    // Find the appropriate worker NPC to apply busy overlay\n    const npcs = Object.values(NPCsInGridManager.getNPCsInGrid(gridId) || {});\n    const workerNPC = npcs.find(npc => npc.action === 'worker' && ['Farmer', 'Crafter'].includes(npc.type));\n    if (workerNPC) {\n      setBusyOverlay(workerNPC.id);\n    }\n\n    // Start bulk operation tracking\n    const operationId = `bulk-crafting-${Date.now()}`;\n    startBulkOperation('bulk-crafting', operationId);\n\n    // Execute bulk operation with shared function\n    await executeBulkOperation('bulk-crafting', operationId, workerNPC, async () => {\n      return await executeBulkCrafting({\n        selectedGroups,\n        selectedRestartStations,\n        hasBulkRestartCraft,\n        currentPlayer,\n        setCurrentPlayer,\n        inventory,\n        setInventory,\n        backpack,\n        setBackpack,\n        setResources,\n        gridId,\n        masterResources,\n        masterSkills,\n        strings,\n        updateStatus,\n        globalTuning\n      });\n    });\n    \n    onClose();\n  }\n\n  async function restartCrafting(station, recipe, strings) {\n    if (!recipe) {\n      console.log(`No recipe found for restarting craft at station (${station.x}, ${station.y})`);\n      return false;\n    }\n\n    // Check affordability using the same logic as CraftingStation\n    const affordable = canAfford(recipe, inventory, Array.isArray(backpack) ? backpack : [], 1);\n    if (!affordable) {\n      console.log(`Cannot afford to restart ${recipe.type} at station (${station.x}, ${station.y})`);\n      return false;\n    }\n\n    // Check skill requirements\n    const requirementsMet = !recipe.requires || currentPlayer.skills?.some((owned) => owned.type === recipe.requires);\n    if (!requirementsMet) {\n      console.log(`Missing required skill ${recipe.requires} to restart ${recipe.type}`);\n      return false;\n    }\n\n    // Call crafting API directly\n    const transactionId = `bulk-restart-${Date.now()}-${Math.random()}`;\n    const transactionKey = `crafting-start-${recipe.type}-${station.x}-${station.y}`;\n    \n    try {\n      const response = await axios.post(`${API_BASE}/api/crafting/start-craft`, {\n        playerId: currentPlayer.playerId,\n        gridId,\n        stationX: station.x,\n        stationY: station.y,\n        recipe,\n        transactionId,\n        transactionKey\n      });\n      \n      if (response.data.success) {\n        // Update global state with new craft\n        const { craftEnd, craftedItem, inventory: newInventory, backpack: newBackpack } = response.data;\n        \n        // Update inventory from server response\n        if (newInventory) {\n          setInventory(newInventory);\n          setCurrentPlayer(prev => ({ ...prev, inventory: newInventory }));\n        }\n        if (newBackpack) {\n          setBackpack(newBackpack);\n          setCurrentPlayer(prev => ({ ...prev, backpack: newBackpack }));\n        }\n        \n        // Update the specific station resource in global state\n        const updatedResources = GlobalGridStateTilesAndResources.getResources().map(res =>\n          res.x === station.x && res.y === station.y\n            ? { ...res, craftEnd, craftedItem }\n            : res\n        );\n        GlobalGridStateTilesAndResources.setResources(updatedResources);\n        setResources(updatedResources);\n        \n        FloatingTextManager.addFloatingText(404, station.x, station.y, TILE_SIZE);\n        // Status update will be handled in bulk after all operations complete\n        console.log(`✅ Restarted crafting ${recipe.type} at station (${station.x}, ${station.y})`);\n        return true;\n      }\n    } catch (error) {\n      console.error(`Failed to restart crafting at station (${station.x}, ${station.y}):`, error);\n      if (error.response?.status === 400) {\n        console.log('Not enough ingredients to restart crafting');\n      }\n    }\n    \n    return false;\n  }\n\n  const getSkillTooltip = (skillType) => {\n    switch (skillType) {\n      case 'Bulk Harvest':\n        return strings[427]; // \"Purchase the Farm Hand's Bulk Harvest skill in order to harvest all crops at once.\"\n      case 'Bulk Animal Collect':\n        return strings[431]; // Add a new string in your strings file if needed\n      case 'Logging':\n        return strings[432]; // Add a new string in your strings file if needed\n      case 'Better Logging':\n        return strings[433]; // Add a new string in your strings file if needed\n      case 'Bulk Crafting':\n        return strings[464]; // Add a new string in your strings file if needed\n      case 'Bulk Restart Craft':\n        return strings[468] || 'Automatically restart crafting after collection'; // Add a new string in your strings file if needed\n      default:\n        return '';\n    }\n  };\n\n  return (\n    <Panel onClose={onClose} descriptionKey=\"1023\" title={npc?.symbol ? `${npc.symbol} ${npcType}` : npcType} panelName=\"FarmHandPanel\">\n      <div className=\"standard-panel\">\n\n        {showBulkHarvest && skills?.some(item => item.type === 'Bulk Harvest') && (\n          <div>\n            <ResourceButton\n              symbol=\"🚜\"\n              name={getLocalizedString('Bulk Harvest', strings)}\n              className=\"resource-button bulk-skill\"\n              details={strings[428]}\n              onClick={handleBulkHarvest}\n            />\n          </div>\n        )}\n        {showBulkAnimalCollect && skills?.some(item => item.type === 'Bulk Animal Collect') && (\n          <div>\n            <ResourceButton\n              symbol=\"🐮\"\n              name={getLocalizedString('Bulk Animal Collect', strings)}\n              className=\"resource-button bulk-skill\"\n              details={strings[434]}\n              onClick={handleBulkAnimalCollect}\n            />\n          </div>\n        )}\n        {showLogging && skills?.some(item => item.type === 'Logging') && (\n          <div>\n            <ResourceButton\n              symbol=\"🪓\"\n              name={getLocalizedString('Logging', strings)}\n              className=\"resource-button bulk-skill\"\n              details={strings[435]}\n              onClick={handleLogging}\n            />\n          </div>\n        )}\n        {showBulkCrafting && skills?.some(item => item.type === 'Bulk Crafting') && (\n          <div>\n            <ResourceButton\n              symbol=\"🛖\"\n              name={getLocalizedString('Bulk Crafting', strings)}\n              className=\"resource-button bulk-skill\"\n              details={strings[465]}\n              onClick={handleBulkCrafting}\n            />\n          </div>\n        )}\n\n        {workerSkills.length > 0 && (\n          <>\n            <h3>{strings[430]}</h3>\n\n            {workerSkills.map((resource) => {\n              const affordable = canAfford(resource, inventory, 1, backpack);\n              const formattedCosts = [1, 2, 3, 4].map((i) => {\n                const type = resource[`ingredient${i}`];\n                const qty = resource[`ingredient${i}qty`];\n                if (!type || !qty) return '';\n                const playerQty = (inventory.find((item) => item.type === type)?.quantity || 0) +\n                                  (backpack.find((item) => item.type === type)?.quantity || 0);\n                const color = playerQty >= qty ? 'green' : 'red';\n                const symbol = masterResources.find(r => r.type === type)?.symbol || '';\n                return `<span style=\"color: ${color}; display: block;\">${symbol} ${type} ${qty} / ${playerQty}</span>`;\n              }).join('');\n\n              const details = `Costs:<div>${formattedCosts}</div>`;\n\n              return (\n                <ResourceButton\n                  key={resource.type}\n                  symbol={resource.symbol}\n                  name={resource.type}\n                  className=\"resource-button\"\n                  details={details}\n                  onClick={() => handlePurchaseSkill(resource)}\n                  disabled={!affordable}\n                  info={getSkillTooltip(resource.type) ? <div>{getSkillTooltip(resource.type)}</div> : undefined}\n                />\n              );\n            })}\n          </>\n        )}\n\n        {showCropPurchase && (\n          <>\n            <h3>{strings[426]}</h3>\n            {recipes?.length > 0 ? (\n              recipes.map((resource) => {\n                const cost = (resource.maxprice || 100) * 10;\n                const playerMoney = (inventory.find((item) => item.type === 'Money')?.quantity || 0) +\n                                    (backpack.find((item) => item.type === 'Money')?.quantity || 0);\n                const affordable = playerMoney >= cost;\n                const details = `${strings[347]} 💰 ${cost}`;\n                return (\n                  <ResourceButton\n                    key={resource.type}\n                    symbol={resource.symbol}\n                    name={resource.type}\n                    className=\"resource-button\"\n                    details={details}\n                    disabled={!affordable}\n                    onClick={() => handleTrade(resource)}\n                  />\n                );\n              })\n            ) : <p>{strings[423]}</p>}\n          </>\n        )}\n\n        {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n\n      </div>\n      \n      {/* Selective Harvest Modal */}\n\n      <BulkHarvestModal\n        isOpen={isHarvestModalOpen}\n        onClose={async () => {\n          setIsHarvestModalOpen(false);\n          // Clear busy overlay when modal is closed\n          const npcs = Object.values(NPCsInGridManager.getNPCsInGrid(gridId) || {});\n          const workerNPC = npcs.find(npc => npc.action === 'worker');\n          if (workerNPC) {\n            clearNPCOverlay(workerNPC.id);\n          }\n          \n          // Restart FarmState timer\n          const farmState = await import('../../FarmState').then(m => m.default);\n          const currentResources = GlobalGridStateTilesAndResources.getResources();\n          farmState.initializeFarmState(currentResources);\n          farmState.startSeedTimer({ gridId, setResources, masterResources });\n        }}\n        crops={availableCrops}\n        getFreshCrops={getFreshCropData}\n        onExecute={executeSelectiveHarvest}\n        showBulkReplant={showBulkReplant}\n        hasRequiredSkill={hasRequiredSkill}\n        strings={strings}\n        currentSeason={currentSeason}\n        masterResources={masterResources}\n      />\n      \n      {/* Selective Animal Collect Modal */}\n\n      <BulkAnimalModal\n        isOpen={isAnimalModalOpen}\n        onClose={() => {\n          setIsAnimalModalOpen(false);\n          // Clear busy overlay when modal is closed\n          const npcs = Object.values(NPCsInGridManager.getNPCsInGrid(gridId) || {});\n          const workerNPC = npcs.find(npc => npc.action === 'worker' && ['Farmer', 'Rancher'].includes(npc.type));\n          if (workerNPC) {\n            clearNPCOverlay(workerNPC.id);\n          }\n        }}\n        animals={availableAnimals}\n        onExecute={() => executeSelectiveAnimalCollect()}\n        strings={strings}\n      />\n      \n      {/* Selective Crafting Modal */}\n\n      <BulkCraftingModal\n        isOpen={isCraftingModalOpen}\n        onClose={() => {\n          setIsCraftingModalOpen(false);\n          // Clear busy overlay when modal is closed\n          const npcs = Object.values(NPCsInGridManager.getNPCsInGrid(gridId) || {});\n          const workerNPC = npcs.find(npc => npc.action === 'worker' && ['Farmer', 'Crafter'].includes(npc.type));\n          if (workerNPC) {\n            clearNPCOverlay(workerNPC.id);\n          }\n        }}\n        stationGroups={availableCraftingStations}\n        onExecute={executeSelectiveCrafting}\n        hasBulkRestartCraft={hasBulkRestartCraft}\n        strings={strings}\n        masterResources={masterResources}\n        inventory={inventory}\n        backpack={backpack}\n      />\n      \n      {/* Bulk Operation Progress Modal */}\n\n      <ProgressModal\n        isOpen={bulkProgressModal.isOpen}\n        title={strings[478] || \"Processing...\"}\n        message={bulkProgressModal.message}\n      />\n\n      {/* Bulk Harvest Results Modal */}\n      <BulkHarvestResultsModal\n        isOpen={isResultsModalOpen}\n        onClose={() => {\n          setIsResultsModalOpen(false);\n          setBulkHarvestResults(null);\n        }}\n        results={bulkHarvestResults}\n        strings={strings}\n        masterResources={masterResources}\n      />\n    </Panel>\n  );\n\n\n};\n\nexport default React.memo(FarmHandPanel);","import API_BASE from '../../config';\nimport React, { useState, useEffect, useContext } from 'react';\nimport Panel from '../../UI/Panel';\nimport axios from 'axios';\nimport '../../UI/ResourceButton.css';\nimport ResourceButton from '../../UI/ResourceButton';\nimport { canAfford, hasRoomFor } from '../../Utils/InventoryManagement';\nimport { spendIngredients, gainIngredients, refreshPlayerAfterInventoryUpdate } from '../../Utils/InventoryManagement';\nimport { trackQuestProgress } from '../Quests/QuestGoalTracker';\nimport playersInGridManager from '../../GridState/PlayersInGrid';\nimport { useStrings } from '../../UI/StringsContext';\nimport { handleProtectedSelling } from '../../Utils/ProtectedSelling';\nimport TransactionButton from '../../UI/TransactionButton';\nimport '../../UI/SharedButtons.css';\nimport { earnTrophy } from '../Trophies/TrophyUtils';\nimport { showNotification } from '../../UI/Notifications/Notifications';\nimport './ScrollStation.css'; // Import for shared station panel styles\n\nconst ShopStation = ({\n  onClose,\n  inventory,\n  setInventory,\n  backpack,\n  setBackpack,\n  currentPlayer,\n  setCurrentPlayer,\n  setResources,\n  stationType,\n  currentStationPosition,\n  gridId,\n  TILE_SIZE,\n  updateStatus,\n  masterResources,\n  masterTrophies,\n  isDeveloper,\n  globalTuning,\n}) => {\n  const strings = useStrings();\n  const [recipes, setRecipes] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [stationEmoji, setStationEmoji] = useState('🛖');\n  const [stationDetails, setStationDetails] = useState(null);\n  const [fetchTrigger, setFetchTrigger] = useState(0);\n\n  const hasRequirement = (requirement) => {\n    return (\n      !requirement ||\n      currentPlayer.skills?.some(skill => skill.type === requirement) ||\n      currentPlayer.powers?.some(power => power.type === requirement)\n    );\n  };\n\n  // Sync inventory with local storage and server\n  useEffect(() => {\n    const syncInventory = async () => {\n      try {\n        const storedInventory = JSON.parse(localStorage.getItem('inventory')) || [];\n        setInventory(storedInventory);\n\n        const serverResponse = await axios.get(`${API_BASE}/api/inventory/${currentPlayer.playerId}`);\n        const serverInventory = serverResponse.data.inventory || [];\n        if (JSON.stringify(storedInventory) !== JSON.stringify(serverInventory)) {\n          setInventory(serverInventory);\n          localStorage.setItem('inventory', JSON.stringify(serverInventory));\n        }\n      } catch (error) {\n        console.error('Error syncing inventory:', error);\n      }\n    };\n    syncInventory();\n  }, [currentPlayer]);\n\n  useEffect(() => {\n    if (!masterResources || !stationType) return;\n\n    const filteredRecipes = masterResources.filter((resource) =>\n      resource.source === stationType &&\n      (!currentPlayer.powers || !currentPlayer.powers.some(p => p.type === resource.type))\n    );\n    setRecipes(filteredRecipes);\n\n    const stationResource = masterResources.find((resource) => resource.type === stationType);\n    setStationEmoji(stationResource?.symbol || '🛖');\n    setStationDetails(stationResource);\n  }, [stationType, fetchTrigger, masterResources]);\n\n\n  const handleGemPurchase = async (modifiedRecipe) => {\n    // This is called by the gem button with a recipe modified to include gems\n    return handlePurchase(modifiedRecipe);\n  };\n\n  const handlePurchase = async (recipe) => {\n    setErrorMessage('');\n    if (!recipe) {\n      setErrorMessage('Invalid recipe selected.');\n      return;\n    }\n\n    // For non-power items, check if there's room before spending money\n    if (recipe.category !== \"power\") {\n      const quantity = recipe.qtycollected || 1;\n      const hasRoom = hasRoomFor({\n        resource: recipe.type,\n        quantity: quantity,\n        currentPlayer,\n        inventory: inventory,\n        backpack: backpack,\n        masterResources,\n        globalTuning\n      });\n      \n      if (!hasRoom) {\n        const isHomestead = currentPlayer?.location?.gtype === 'homestead';\n        const isMoney = recipe.type === \"Money\";\n        const isGem = recipe.type === \"Gem\";\n        \n        if (!isMoney && !isGem && !isHomestead) {\n          // Check if player has backpack skill\n          const hasBackpackSkill = currentPlayer?.skills?.some((item) => item.type === 'Backpack' && item.quantity > 0);\n          if (!hasBackpackSkill) {\n            updateStatus(19); // Missing backpack\n          } else {\n            updateStatus(21); // Backpack full\n          }\n        } else {\n          updateStatus(20); // Warehouse full\n        }\n        return;\n      }\n    }\n\n    const success = await spendIngredients({\n      playerId: currentPlayer.playerId,\n      recipe,\n      inventory,\n      backpack,\n      setInventory,\n      setBackpack,\n      setCurrentPlayer,\n      updateStatus,\n    });\n    if (!success) return;\n\n    // Refresh player to update money display after any purchase\n    await refreshPlayerAfterInventoryUpdate(currentPlayer.playerId, setCurrentPlayer);\n\n    const tradedQty = 1;\n\n    if (recipe.category === \"power\") {\n      const updatedPowers = [...(currentPlayer.powers || [])];\n      const powerIndex = updatedPowers.findIndex(p => p.type === recipe.type);\n      if (powerIndex >= 0) {\n        updatedPowers[powerIndex].quantity += tradedQty;\n      } else {\n        updatedPowers.push({ type: recipe.type, quantity: tradedQty });\n      }\n      await axios.post(`${API_BASE}/api/update-powers`, {\n        playerId: currentPlayer.playerId,\n        powers: updatedPowers,\n      });\n      setCurrentPlayer(prev => ({\n        ...prev,\n        powers: updatedPowers,\n      }));\n      // Helper functions to categorize powers\n      const isWeapon = (resource) => resource.passable === true && typeof resource.damage === 'number' && resource.damage > 0;\n      const isArmor = (resource) => resource.passable === true && typeof resource.armorclass === 'number' && resource.armorclass > 0;\n      const isMagicEnhancement = (resource) => !isWeapon(resource) && !isArmor(resource);\n      \n      // Only update combat stats for magic enhancements (not weapons/armor)\n      if (isMagicEnhancement(recipe)) {\n        const gridPlayer = playersInGridManager.getAllPCs(gridId)?.[currentPlayer.playerId];\n        if (gridPlayer) {\n          const combatAttributes = ['hp', 'maxhp', 'damage', 'armorclass', 'attackbonus', 'attackrange', 'speed'];\n          const statUpdates = {};\n          \n          // Check for combat attributes on this power\n          combatAttributes.forEach(attr => {\n            if (typeof recipe[attr] === 'number') {\n              const oldValue = gridPlayer[attr] || 0;\n              const newValue = oldValue + recipe[attr];\n              statUpdates[attr] = newValue;\n              console.log(`🧠 Updated ${attr} for player ${currentPlayer.playerId}: ${oldValue} -> ${newValue}`);\n            }\n          });\n          \n          // Update all modified stats at once\n          if (Object.keys(statUpdates).length > 0) {\n            await playersInGridManager.updatePC(gridId, currentPlayer.playerId, statUpdates);\n          }\n        }\n      } else {\n        // Weapons and armor don't update combat stats until equipped\n        console.log(`${recipe.type} added to inventory - equip in Combat Panel to apply stats`);\n        \n        // Send notification for newly purchased equipment\n        showNotification('Message', {\n          title: strings[7004] || 'Note:',\n          message: strings[7017] || 'Equip in Combat Panel to use'\n        });\n      }\n    }\n    else {\n      const gainSuccess = await gainIngredients({\n        playerId: currentPlayer.playerId,\n        currentPlayer,\n        resource: recipe.type,\n        quantity: recipe.qtycollected || 1,\n        inventory,\n        backpack,\n        setInventory,\n        setBackpack,\n        setCurrentPlayer,\n        updateStatus,\n        masterResources,\n        globalTuning,\n      });\n\n      if (!gainSuccess) {\n        console.warn(`Failed to gain ${recipe.type}`);\n        return;\n      }\n    }\n\n    await trackQuestProgress(currentPlayer, 'Buy', recipe.type, tradedQty, setCurrentPlayer);\n\n    updateStatus(`${strings[80]} ${recipe.type}.`);\n    \n    // Award Mariner trophy if purchased a Boat\n    if (recipe.type === 'Boat' && currentPlayer?.playerId) {\n      earnTrophy(currentPlayer.playerId, 'Mariner', 1, currentPlayer, masterTrophies, setCurrentPlayer);\n    }\n    \n    setFetchTrigger(prev => prev + 1);\n  };\n\n  const handleSellStation = async () => {\n    try {\n      const success = await handleProtectedSelling({\n        currentPlayer,\n        stationType,\n        currentStationPosition,\n        gridId,\n        setResources,\n        setInventory,\n        setCurrentPlayer,\n        updateStatus,\n        onClose,\n      });\n      \n      if (success) {\n        onClose();\n      }\n    } catch (error) {\n      console.error('Error selling station:', error);\n      updateStatus('Failed to sell station');\n    }\n  };\n\n  return (\n    <Panel onClose={onClose} descriptionKey=\"1025\" title={`${stationEmoji} ${stationType}`} panelName=\"ShopStation\">\n      <div className=\"station-panel-container\">\n        <div className=\"station-panel-content\">\n          {/* ✅ Conditional TENT text for the Store */}\n          {stationType === \"Store\" && (\n            <p style={{ fontWeight: \"bold\", color: \"#4CAF50\" }}>\n              {strings[\"410\"]}\n            </p>\n          )}\n          {recipes?.length > 0 ? (\n            recipes.map((recipe) => {\n              const affordable = canAfford(recipe, inventory, backpack, 1);\n              const meetsRequirement = hasRequirement(recipe.requires);\n              \n              // Handle multiple combat attributes for powers\n              let outputSummary = null;\n              if (recipe.category === 'power') {\n                const combatAttributes = ['hp', 'maxhp', 'damage', 'armorclass', 'attackbonus', 'attackrange', 'speed'];\n                const effects = [];\n                \n                combatAttributes.forEach(attr => {\n                  if (typeof recipe[attr] === 'number') {\n                    const label = strings[attr] || attr;\n                    effects.push(`${recipe[attr] > 0 ? '+' : ''}${recipe[attr]} ${label}`);\n                  }\n                });\n                \n                \n                if (effects.length > 0) {\n                  outputSummary = <span style={{ color: 'blue' }}>{effects.join(', ')}</span>;\n                }\n              }\n\n              // Format costs in UI standard style\n              const formattedCosts = [1, 2, 3, 4].map((i) => {\n                const type = recipe[`ingredient${i}`];\n                const qty = recipe[`ingredient${i}qty`];\n                if (!type || !qty) return '';\n                const inventoryQty = inventory?.find(inv => inv.type === type)?.quantity || 0;\n                const backpackQty = backpack?.find(item => item.type === type)?.quantity || 0;\n                const playerQty = inventoryQty + backpackQty;\n                const color = playerQty >= qty ? 'green' : 'red';\n                const symbol = masterResources.find(r => r.type === type)?.symbol || '';\n                return `<span style=\"color: ${color}; display: block;\">${symbol} ${type} ${qty} / ${playerQty}</span>`;\n              }).join('');\n\n              const skillColor = meetsRequirement ? 'green' : 'red';\n\n              // Build details string with multiple combat attributes for powers\n              let effectsHtml = '';\n              if (recipe.category === 'power') {\n                const combatAttributes = ['hp', 'maxhp', 'damage', 'armorclass', 'attackbonus', 'attackrange', 'speed'];\n                const effects = [];\n                \n                combatAttributes.forEach(attr => {\n                  if (typeof recipe[attr] === 'number') {\n                    const label = strings[attr] || attr;\n                    effects.push(`${recipe[attr] > 0 ? '+' : ''}${recipe[attr]} ${label}`);\n                  }\n                });\n                \n                \n                if (effects.length > 0) {\n                  effectsHtml = `<span style=\"color: blue;\">${effects.join(', ')}</span><br>`;\n                }\n              }\n\n              const details =\n                effectsHtml +\n                (recipe.requires ? `<span style=\"color: ${skillColor};\">Requires: ${recipe.requires}</span><br>` : '') +\n                `Costs:<div>${formattedCosts}</div>`;\n\n              let infoContent = null;\n              \n              // Special tooltip content for Tent and Boat at General Store\n              if (stationType === \"Store\" || stationType === \"General Store\") {\n                if (recipe.type === \"Tent\") {\n                  infoContent = <div>{strings[81]}</div>; // \"Pitching a tent in Town or the Valley prevents you from being attacked.\"\n                } else if (recipe.type === \"Boat\") {\n                  infoContent = <div>{strings[82]}</div>; // \"A boat will allow you to travel by water.\"\n                }\n              }\n              \n              // For other items (like powers), show combat attributes\n              if (!infoContent && outputSummary) {\n                infoContent = (\n                  <div style={{ marginBottom: '4px' }}>\n                    <strong>{outputSummary}</strong>\n                  </div>\n                );\n              }\n              \n              const info = infoContent ? (\n                <div className=\"info-content\">\n                  {infoContent}\n                </div>\n              ) : null;\n              \n              return (\n                <ResourceButton\n                  key={recipe.type}\n                  symbol={recipe.symbol}\n                  name={recipe.type}\n                  className=\"resource-button\"\n                  details={details}\n                  info={info} \n                  disabled={!affordable || !meetsRequirement}\n                  onClick={() => handlePurchase(recipe)}\n                  // Gem purchase props - don't pass gemCost to allow dynamic calculation\n                  gemCost={null}\n                  onGemPurchase={(recipe.gemcost && (!affordable || !meetsRequirement)) ? handleGemPurchase : null}\n                  resource={recipe}\n                  inventory={inventory}\n                  backpack={backpack}\n                  masterResources={masterResources}\n                  currentPlayer={currentPlayer}\n                >\n                </ResourceButton>\n              );\n            })\n          ) : <p>{strings[423]}</p>}\n\n          {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n        </div>\n        \n        {(currentPlayer.location.gtype === 'homestead' || isDeveloper) && (\n          <div className=\"station-panel-footer\">\n            <div className=\"shared-buttons\">\n              <TransactionButton \n                className=\"btn-basic btn-danger\" \n                onAction={handleSellStation}\n                transactionKey={`sell-refund-${stationType}-${currentStationPosition.x}-${currentStationPosition.y}-${gridId}`}\n              >\n                {strings[490]}\n              </TransactionButton>\n            </div>\n          </div>\n        )}\n      </div>\n    </Panel>\n  );\n};\n\nexport default React.memo(ShopStation);","import API_BASE from '../../config';\nimport React, { useState, useEffect, useContext } from 'react';\nimport Panel from '../../UI/Panel';\nimport axios from 'axios';\nimport '../../UI/ResourceButton.css'; \nimport ResourceButton from '../../UI/ResourceButton';\nimport FloatingTextManager from '../../UI/FloatingText';\nimport { refreshPlayerAfterInventoryUpdate } from '../../Utils/InventoryManagement';\nimport { StatusBarContext } from '../../UI/StatusBar/StatusBar';\nimport { trackQuestProgress } from '../Quests/QuestGoalTracker';\nimport GlobalGridStateTilesAndResources from '../../GridState/GlobalGridStateTilesAndResources';\nimport NPCsInGridManager from '../../GridState/GridStateNPCs';\nimport playersInGridManager from '../../GridState/PlayersInGrid';\nimport { useStrings } from '../../UI/StringsContext';\nimport { getLocalizedString } from '../../Utils/stringLookup';\nimport { spendIngredients, gainIngredients } from '../../Utils/InventoryManagement';\nimport '../../UI/SharedButtons.css';\nimport { handleProtectedSelling } from '../../Utils/ProtectedSelling';\nimport TransactionButton from '../../UI/TransactionButton';\nimport { formatCountdown, formatDuration } from '../../UI/Timers';\nimport { getRandomScrollReveal, getRevealDisplayString, canAffordReveal } from './ScrollReveal';\nimport { gainSkillOrPower } from '../../Utils/SkillPowerManagement';\nimport { showNotification } from '../../UI/Notifications/Notifications';\nimport { earnTrophy } from '../Trophies/TrophyUtils';\nimport './ScrollStation.css';\n\nconst ScrollStation = ({\n  onClose,\n  inventory,\n  setInventory,\n  backpack,\n  setBackpack,\n  currentPlayer,\n  setCurrentPlayer,\n  setResources,\n  stationType,\n  currentStationPosition,\n  gridId,\n  masterResources,\n  masterSkills,\n  masterTrophies,\n  TILE_SIZE,\n  isDeveloper,\n  currentSeason,\n  globalTuning,\n}) => {\n  const strings = useStrings();\n  const [recipes, setRecipes] = useState([]);\n  const [allResources, setAllResources] = useState([]);\n  const [stationEmoji, setStationEmoji] = useState('🛖');\n  const { updateStatus } = useContext(StatusBarContext);\n  const [stationDetails, setStationDetails] = useState(null);\n  const [activeTimer, setActiveTimer] = useState(false);\n  const [craftedItem, setCraftedItem] = useState(null);\n  const [craftingCountdown, setCraftingCountdown] = useState(null);\n  const [isCrafting, setIsCrafting] = useState(false);\n  const [isReadyToCollect, setIsReadyToCollect] = useState(false);\n  const [npcRefreshKey, setNpcRefreshKey] = useState(0);\n  const [scrollCount, setScrollCount] = useState(0);\n  const [revealedItemQty, setRevealedItemQty] = useState(1);\n  const [isCollecting, setIsCollecting] = useState(false);\n\n   // ✅ Check for active crafting timers or revealed items\n   useEffect(() => {\n    if (!stationType || !currentStationPosition) return;\n\n    const checkStation = () => {\n      const station = GlobalGridStateTilesAndResources.getResources()?.find(\n        (res) => res.x === currentStationPosition.x && res.y === currentStationPosition.y\n      );\n      \n\n      if (station && station.craftEnd && station.craftedItem) {\n          // Check if this is a revealed item (craftEnd in the past)\n          const now = Date.now();\n          const isRevealed = station.craftEnd < now;\n          \n          setCraftedItem(station.craftedItem);\n          setRevealedItemQty(station.qty || 1);\n          \n          if (isRevealed) {\n              setIsCrafting(false);\n              setIsReadyToCollect(true);\n              setCraftingCountdown(0);\n              setActiveTimer(false);\n          } else {\n              // Normal crafting timer\n              setIsCrafting(true);\n              setActiveTimer(true);\n              \n              const remainingTime = Math.max(0, Math.floor((station.craftEnd - now) / 1000));\n              setCraftingCountdown(remainingTime);\n              \n              if (remainingTime === 0) {\n                  setIsCrafting(false);\n                  setIsReadyToCollect(true);\n              }\n          }\n      } else {\n          // Only reset if we actually had something before\n          if (craftedItem || isCrafting || isReadyToCollect) {\n            setCraftedItem(null);\n            setIsCrafting(false);\n            setIsReadyToCollect(false);\n            setCraftingCountdown(null);\n            setActiveTimer(false);\n            setRevealedItemQty(1);\n          }\n      }\n    };\n\n    // Initial check\n    checkStation();\n\n    // Set up interval to check for updates\n    const timer = setInterval(checkStation, 1000);\n    return () => clearInterval(timer);\n  }, [stationType, currentStationPosition, craftedItem, isCrafting, isReadyToCollect]); // Include state to ensure fresh closures\n\n\n  // Sync inventory with local storage and server\n  useEffect(() => {\n    const syncInventory = async () => {\n      try {\n        const storedInventory = JSON.parse(localStorage.getItem('inventory')) || [];\n        setInventory(storedInventory);\n\n        const serverResponse = await axios.get(`${API_BASE}/api/inventory/${currentPlayer.playerId}`);\n        const serverInventory = serverResponse.data.inventory || [];\n        if (JSON.stringify(storedInventory) !== JSON.stringify(serverInventory)) {\n          setInventory(serverInventory);\n          localStorage.setItem('inventory', JSON.stringify(serverInventory));\n        }\n      } catch (error) {\n        console.error('Error syncing inventory:', error);\n      }\n    };\n    syncInventory();\n  }, [currentPlayer]);\n\n  // Calculate scroll count from inventory and backpack\n  useEffect(() => {\n    const allItems = [...(inventory || []), ...(backpack || [])];\n    const scrolls = allItems.find(item => item.type === 'Scroll');\n    setScrollCount(scrolls?.quantity || 0);\n  }, [inventory, backpack]);\n\n  // Fetch recipes and resources (refactored: use masterResources directly)\n  useEffect(() => {\n    try {\n      let filteredRecipes = masterResources.filter((resource) => {\n        // Check if resource source matches station type\n        if (resource.source !== stationType) return false;\n        \n        // Check seasonal restriction\n        if (resource.season && currentSeason && resource.season !== currentSeason) {\n          return false;\n        }\n        \n        return true;\n      });\n      \n      // Filter out non-repeatable resources that already exist on the grid\n      const npcsInGrid = NPCsInGridManager.getNPCsInGrid(gridId);\n      if (npcsInGrid) {\n        // Get all NPC types currently on the grid\n        // NPCs are stored directly under NPCsInGrid with their ID as the key\n        const existingNPCTypes = Object.values(npcsInGrid)\n          .filter(npc => npc && npc.type) // Filter out any null/undefined entries\n          .map(npc => npc.type);\n        \n        console.log('Existing NPC types on grid:', existingNPCTypes);\n        \n        // Filter out non-repeatable recipes that already exist\n        filteredRecipes = filteredRecipes.filter(recipe => {\n          // If it's not repeatable and already exists, filter it out\n          if (recipe.repeatable === false && existingNPCTypes.includes(recipe.type)) {\n            console.log(`Filtering out non-repeatable ${recipe.type} - already exists on grid`);\n            return false;\n          }\n          return true;\n        });\n      }\n      \n      setRecipes(filteredRecipes);\n      const stationResource = masterResources.find((resource) => resource.type === stationType);\n      setStationEmoji(stationResource?.symbol || '🛖');\n      setStationDetails(stationResource);\n      setAllResources(masterResources || []);\n    } catch (error) {\n      console.error('Error processing masterResources:', error);\n    }\n  }, [stationType, masterResources, gridId, npcRefreshKey]);\n  \n  // Periodically refresh to check for NPC changes\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setNpcRefreshKey(prev => prev + 1);\n    }, 2000); // Check every 2 seconds\n    \n    return () => clearInterval(interval);\n  }, []);\n\n\n  const handleSellStation = async (transactionId, transactionKey) => {\n    await handleProtectedSelling({\n      currentPlayer,\n      setInventory,\n      setBackpack,\n      setCurrentPlayer,\n      setResources,\n      stationType,\n      currentStationPosition,\n      gridId,\n      TILE_SIZE,\n      updateStatus,\n      onClose\n    });\n  };\n  \n  // Generate skill bonus message\n  const getSkillBonusMessage = () => {\n    // Find all skills that apply to this station\n    const applicableSkills = Object.entries(masterSkills || {})\n      .filter(([skillName, stations]) => {\n        return stations && typeof stations === 'object' && stations[stationType] > 1;\n      })\n      .map(([skillName, stations]) => ({\n        skillName,\n        multiplier: stations[stationType],\n        hasSkill: currentPlayer.skills?.some(item => item.type === skillName)\n      }));\n    \n    if (applicableSkills.length === 0) return null;\n    \n    // Separate owned and unowned skills\n    const ownedSkills = applicableSkills.filter(skill => skill.hasSkill);\n    const unownedSkills = applicableSkills.filter(skill => !skill.hasSkill);\n    \n    // Calculate combined multiplier for owned skills\n    const combinedMultiplier = ownedSkills.reduce((total, skill) => total * skill.multiplier, 1);\n    \n    let messages = [];\n    \n    // Message for owned skills\n    if (ownedSkills.length > 0) {\n      if (ownedSkills.length === 1) {\n        // Single skill: \"Your [skill] Skill increases the base output of this station by [X].\"\n        messages.push(`${strings[805]}${getLocalizedString(ownedSkills[0].skillName, strings)}${strings[806]}${ownedSkills[0].multiplier}x.`);\n      } else {\n        // Multiple skills: list them with their multipliers and show combined effect\n        const skillsList = ownedSkills\n          .map(skill => `${getLocalizedString(skill.skillName, strings)} (${skill.multiplier}x)`)\n          .join(' & ');\n        messages.push(`Your ${skillsList} skills combine to increase output by ${combinedMultiplier}x.`);\n      }\n    }\n    \n    // Message for unowned skills\n    if (unownedSkills.length > 0) {\n      unownedSkills.forEach(skill => {\n        const skillResource = allResources.find(res => res.type === skill.skillName);\n        const skillSource = skillResource?.source || 'Skill Shop';\n        // \"Acquire the [skill] Skill at the [source] to increase the output of this station by [X]x.\"\n        messages.push(`${strings[801]}${getLocalizedString(skill.skillName, strings)}${strings[802]}${getLocalizedString(skillSource, strings)}${strings[803]}${skill.multiplier}x.`);\n      });\n    }\n    \n    return messages.join(' ');\n  };\n\n  const skillMessage = getSkillBonusMessage();\n\n\n  // Handle reveal scroll - spend scroll and start crafting random item\n  const handleRevealScroll = async (transactionId, transactionKey) => {\n    \n    if (scrollCount === 0) {\n      updateStatus(strings[820] || 'You need at least 1 scroll to reveal');\n      return;\n    }\n\n    try {\n      // First, spend the scroll\n      const spentSuccess = await spendIngredients({\n        playerId: currentPlayer.playerId,\n        currentPlayer,\n        recipe: { ingredient1: 'Scroll', ingredient1qty: 1 },\n        inventory: currentPlayer.inventory,  \n        backpack: currentPlayer.backpack,\n        setInventory,\n        setBackpack,\n        setCurrentPlayer,\n        updateStatus,\n        masterResources,\n      });\n\n      if (!spentSuccess) {\n        updateStatus(strings[820] || 'Failed to spend scroll');\n        return;\n      }\n\n      // Generate random reward\n      const reward = getRandomScrollReveal(masterResources);\n      const rewardDisplay = getRevealDisplayString(reward, masterResources);\n      \n      // Get the Reveal Scroll resource to get crafttime\n      const revealScrollResource = masterResources.find(r => r.type === 'Reveal Scroll');\n      const craftTime = revealScrollResource?.crafttime || 30; // Default 30 seconds\n\n      // Now start crafting the revealed item using standard craft API\n      const response = await axios.post(`${API_BASE}/api/crafting/start-craft`, {\n        playerId: currentPlayer.playerId,\n        gridId,\n        stationX: currentStationPosition.x,\n        stationY: currentStationPosition.y,\n        recipe: {\n          type: reward.type,\n          crafttime: craftTime,\n          // No ingredients since we already spent the scroll\n        },\n        qty: reward.quantity,\n        transactionId,\n        transactionKey\n      });\n\n      if (response.data.success) {\n        // Update local state with server response\n        const { craftEnd, craftedItem, inventory, backpack } = response.data;\n        \n        // Update inventory from server response if provided\n        if (inventory) {\n          setInventory(inventory);\n          setCurrentPlayer(prev => ({ ...prev, inventory }));\n        }\n        if (backpack) {\n          setBackpack(backpack);\n          setCurrentPlayer(prev => ({ ...prev, backpack }));\n        }\n\n        // Update station resource in global state with qty\n        const updatedGlobalResources = GlobalGridStateTilesAndResources.getResources().map(res =>\n          res.x === currentStationPosition.x && res.y === currentStationPosition.y\n            ? { ...res, craftEnd, craftedItem, qty: reward.quantity }\n            : res\n        );\n        GlobalGridStateTilesAndResources.setResources(updatedGlobalResources);\n        setResources(updatedGlobalResources);\n\n        // Update UI state\n        setCraftedItem(craftedItem);\n        setRevealedItemQty(reward.quantity);\n        setCraftingCountdown(Math.max(0, Math.floor((craftEnd - Date.now()) / 1000)));\n        setActiveTimer(true);\n        setIsCrafting(true);\n        setIsReadyToCollect(false);\n\n        // Refresh player data to ensure consistency\n        await refreshPlayerAfterInventoryUpdate(currentPlayer.playerId, setCurrentPlayer);\n\n        // Update status\n        FloatingTextManager.addFloatingText(strings[829], currentStationPosition.x, currentStationPosition.y, TILE_SIZE);\n\n        // Track quest progress for scroll spending\n        await trackQuestProgress(currentPlayer, 'Spend', 'Scroll', 1, setCurrentPlayer);\n\n      }\n    } catch (error) {\n      console.error('Error in scroll reveal process:', error);\n      updateStatus(strings[830]);\n    }\n  };\n\n  // Handle collection of revealed items (reuse standard collect logic)\n  const handleCollectReveal = async (transactionId, transactionKey) => {\n    \n    if (!craftedItem || isCollecting) { \n      console.error(\"❌ No revealed item to collect or already collecting.\"); \n      return; \n    }\n\n    setIsCollecting(true);\n    \n    try {\n      const response = await axios.post(`${API_BASE}/api/crafting/collect-item`, {\n        playerId: currentPlayer.playerId,\n        gridId,\n        stationX: currentStationPosition.x,\n        stationY: currentStationPosition.y,\n        craftedItem,\n        transactionId,\n        transactionKey\n      });\n\n      if (response.data.success) {\n        const { collectedItem, isNPC } = response.data;\n        const collectedQty = revealedItemQty || 1;\n\n        // Find the revealed item in master resources to check its category\n        const revealedResource = allResources.find(res => res.type === collectedItem);\n        \n        // Handle collection based on item category\n        if (isNPC) {\n          // Spawn NPC\n          const craftedResource = allResources.find(res => res.type === collectedItem);\n          if (craftedResource) {\n            NPCsInGridManager.spawnNPC(gridId, craftedResource, { x: currentStationPosition.x, y: currentStationPosition.y });\n          }\n          FloatingTextManager.addFloatingText(`+${collectedQty} ${getLocalizedString(collectedItem, strings)}`, currentStationPosition.x, currentStationPosition.y, TILE_SIZE);\n        } else if (revealedResource && (revealedResource.category === 'skill' || revealedResource.category === 'power' || revealedResource.category === 'upgrade')) {\n          // Check if player already has this skill/power/upgrade\n          const alreadyOwned = revealedResource.category === 'skill' \n            ? currentPlayer.skills?.some(skill => skill.type === collectedItem)\n            : currentPlayer.powers?.some(power => power.type === collectedItem);\n          \n          if (alreadyOwned) {\n            // Player already has this item - show special message\n            updateStatus(strings[828] || 'You already have this');\n            \n            // Still create floating text to show what was attempted\n            const displayName = getLocalizedString(collectedItem, strings);\n            const categoryEmoji = revealedResource.category === 'skill' ? '💪' : \n                                revealedResource.category === 'power' ? '⚡' : '🔧';\n            FloatingTextManager.addFloatingText(`${categoryEmoji} ${displayName} (Already Owned)`, currentStationPosition.x, currentStationPosition.y, TILE_SIZE);\n          } else {\n            // Handle skills, powers, and upgrades\n            const success = await gainSkillOrPower({\n              item: revealedResource,\n              currentPlayer,\n              setCurrentPlayer,\n              updateStatus,\n              strings,\n              gridId,\n              quantity: collectedQty\n            });\n            \n            if (!success) {\n              console.error('❌ Failed to add skill/power to player.');\n              setIsCollecting(false);\n              return;\n            }\n            \n            // Create floating text\n            const displayName = getLocalizedString(collectedItem, strings);\n            const categoryEmoji = revealedResource.category === 'skill' ? '💪' : \n                                revealedResource.category === 'power' ? '⚡' : '🔧';\n            FloatingTextManager.addFloatingText(`${categoryEmoji} ${displayName}`, currentStationPosition.x, currentStationPosition.y, TILE_SIZE);\n            \n            // Handle combat stats updates for powers (mimic ShopStation logic)\n            if (revealedResource.category === 'power') {\n              // Helper functions to categorize powers\n              const isWeapon = (resource) => resource.passable === true && typeof resource.damage === 'number' && resource.damage > 0;\n              const isArmor = (resource) => resource.passable === true && typeof resource.armorclass === 'number' && resource.armorclass > 0;\n              const isMagicEnhancement = (resource) => !isWeapon(resource) && !isArmor(resource);\n              \n              if (isMagicEnhancement(revealedResource)) {\n                // Update combat stats for magic enhancements\n                const gridPlayer = playersInGridManager.getAllPCs(gridId)?.[currentPlayer._id];\n                if (gridPlayer) {\n                  const combatAttributes = ['hp', 'maxhp', 'damage', 'armorclass', 'attackbonus', 'attackrange', 'speed'];\n                  const statUpdates = {};\n                  \n                  // Check for combat attributes on this power\n                  combatAttributes.forEach(attr => {\n                    if (typeof revealedResource[attr] === 'number') {\n                      const oldValue = gridPlayer[attr] || 0;\n                      const newValue = oldValue + revealedResource[attr];\n                      statUpdates[attr] = newValue;\n                      console.log(`🧠 Updated ${attr} for player ${currentPlayer._id}: ${oldValue} -> ${newValue}`);\n                    }\n                  });\n                  \n                  // Update all modified stats at once\n                  if (Object.keys(statUpdates).length > 0) {\n                    await playersInGridManager.updatePC(gridId, currentPlayer._id, statUpdates);\n                  }\n                }\n              } else {\n                // Weapons and armor require equipping - send notification\n                showNotification('Message', {\n                  title: strings[7001] || 'Tip',\n                  message: strings[7017] || 'Equip in Combat Panel to use'\n                });\n              }\n            }\n          }\n        } else {\n          // Handle regular doobers - add to inventory\n          const gained = await gainIngredients({\n            playerId: currentPlayer.playerId,\n            currentPlayer,\n            resource: collectedItem,\n            quantity: collectedQty,\n            inventory: currentPlayer.inventory,\n            backpack: currentPlayer.backpack,\n            setInventory,\n            setBackpack,\n            setCurrentPlayer,\n            updateStatus,\n            masterResources,\n            globalTuning,\n          });\n\n          if (!gained) {\n            console.error('❌ Failed to add revealed item to inventory.');\n            setIsCollecting(false);\n            return;\n          }\n          \n          FloatingTextManager.addFloatingText(`+${collectedQty} ${getLocalizedString(collectedItem, strings)}`, currentStationPosition.x, currentStationPosition.y, TILE_SIZE);\n        }\n\n        // Track quest progress\n        await trackQuestProgress(currentPlayer, 'Collect', collectedItem, collectedQty, setCurrentPlayer);\n\n        // Clear station state\n        const updatedGlobalResources = GlobalGridStateTilesAndResources.getResources().map(res =>\n          res.x === currentStationPosition.x && res.y === currentStationPosition.y\n            ? { ...res, craftEnd: undefined, craftedItem: undefined, qty: 1 }\n            : res\n        );\n        GlobalGridStateTilesAndResources.setResources(updatedGlobalResources);\n        setResources(updatedGlobalResources);\n\n        // Reset UI state\n        setActiveTimer(false);\n        setCraftedItem(null);\n        setCraftingCountdown(null);\n        setIsReadyToCollect(false);\n        setRevealedItemQty(1);\n\n        // Update status - only if we're not dealing with already owned skills/powers\n        if (!(revealedResource && (revealedResource.category === 'skill' || revealedResource.category === 'power' || revealedResource.category === 'upgrade') && \n            (revealedResource.category === 'skill' \n              ? currentPlayer.skills?.some(skill => skill.type === collectedItem)\n              : currentPlayer.powers?.some(power => power.type === collectedItem)))) {\n          updateStatus(`${strings[469] || 'Collected'} ${collectedQty}x ${getLocalizedString(collectedItem, strings)}`);\n        }\n\n        // Refresh player data\n        await refreshPlayerAfterInventoryUpdate(currentPlayer.playerId, setCurrentPlayer);\n\n        // Award Scroll Revealer trophy for successful scroll reveals\n        if (currentPlayer?.playerId) {\n          earnTrophy(currentPlayer.playerId, 'Scroll Revealer', 1, currentPlayer, masterTrophies, setCurrentPlayer);\n        }\n\n        // Clear collecting state after a brief delay\n        setTimeout(() => {\n          setIsCollecting(false);\n        }, 100);\n      } else {\n        setIsCollecting(false);\n      }\n    } catch (error) {\n      console.error('Error collecting revealed item:', error);\n      updateStatus('❌ Failed to collect item');\n      setIsCollecting(false);\n    }\n  };\n\n  return (\n    <Panel onClose={onClose} descriptionKey=\"1036\" title={strings[1136] || 'Ancient Temple'} panelName=\"ScrollStation\">\n      <div className=\"station-panel-container\">\n        <div className=\"station-panel-content\">\n\n        {/* Scroll count display */}\n\n        <div style={{\n          padding: '10px',\n          textAlign: 'center',\n          fontSize: '16px',\n          fontWeight: 'bold',\n         }}>\n          {strings[825]}: <br></br>{scrollCount} 📜 {scrollCount > 1 ? strings[826] : strings[827]}\n        </div>\n\n\n        {skillMessage && (\n          <div style={{ \n            marginBottom: '15px', \n            padding: '10px', \n            backgroundColor: '#f0f0f0', \n            borderRadius: '5px',\n            fontStyle: 'italic'\n          }}>\n            {skillMessage}\n          </div>\n        )}\n\n        {/* Show crafting item if active, otherwise show Reveal Scroll button */}\n\n        {craftedItem && (isCrafting || isReadyToCollect) ? (\n          // Show animated scroll reveal or dramatic collect interface\n          isCrafting ? (\n            // Animated scroll emoji during crafting\n            <div className=\"scroll-reveal-animation\">\n              <div className=\"scroll-emoji\">📜</div>\n              <div className=\"scroll-revealing-text\">Revealing Scroll...</div>\n              <div className=\"scroll-countdown-text\">{formatCountdown(Date.now() + craftingCountdown * 1000, Date.now())}</div>\n            </div>\n          ) : (\n            // Use standard ResourceButton for collect state\n            (() => {\n              const revealedResource = masterResources.find(r => r.type === craftedItem);\n              const rarity = revealedResource?.scrollchance || 'common';\n              const rarityText = typeof rarity === 'string' ? rarity.toUpperCase() : 'COMMON';\n              \n              return (\n                <ResourceButton\n                  symbol={revealedResource?.symbol || '📦'}\n                  name={`\\n${getLocalizedString(craftedItem, strings)}${revealedItemQty > 1 ? ` (${revealedItemQty})` : ''}`}\n                  className={`resource-button scroll-collect-button rarity-${typeof rarity === 'string' ? rarity : 'common'} ${isCollecting ? 'collecting' : 'ready'}`}\n                  details={rarityText} \n                  disabled={!isReadyToCollect || isCollecting}\n                  isTransactionMode={isReadyToCollect && !isCollecting}\n                  transactionKey={isReadyToCollect ? `scroll-collect-${craftedItem}-${currentStationPosition.x}-${currentStationPosition.y}` : undefined}\n                  onTransactionAction={isReadyToCollect ? handleCollectReveal : undefined}\n                />\n              );\n            })()\n          )\n        ) : scrollCount > 0 && !isCollecting ? (\n          // Show reveal scroll button when not crafting and not collecting\n          <ResourceButton\n            name={strings[831]}\n            className=\"resource-button\"\n            details={`${strings[461]} 1x 📜 ${strings[827]}`}\n            disabled={false}\n            isTransactionMode={true}\n            transactionKey={`scroll-reveal-${currentStationPosition.x}-${currentStationPosition.y}`}\n            onTransactionAction={handleRevealScroll}\n          />\n        ) : null}\n        \n        {/* Show message when no scrolls */}\n        {scrollCount === 0 && !craftedItem && (\n          <p style={{ textAlign: 'center', padding: '20px', color: '#666' }}>\n            {strings[832]}\n          </p>\n        )}\n\n        </div>\n        \n        {(currentPlayer.location.gtype === 'homestead' || isDeveloper) && (\n          <div className=\"station-panel-footer\">\n            <div className=\"shared-buttons\">\n              <TransactionButton \n                className=\"btn-basic btn-danger\" \n                onAction={handleSellStation}\n                transactionKey={`sell-refund-${stationType}-${currentStationPosition.x}-${currentStationPosition.y}-${gridId}`}\n              >\n                {strings[425]}\n              </TransactionButton>\n            </div>\n          </div>\n        )}\n      </div>\n    </Panel>\n  );\n};\n\nexport default React.memo(ScrollStation);","import axios from 'axios';\nimport API_BASE from '../config';\nimport { refreshPlayerAfterInventoryUpdate } from './InventoryManagement';\nimport { trackQuestProgress } from '../GameFeatures/Quests/QuestGoalTracker';\nimport { earnTrophy } from '../GameFeatures/Trophies/TrophyUtils';\nimport { incrementFTUEStep } from '../GameFeatures/FTUE/FTUE';\nimport playersInGridManager from '../GridState/PlayersInGrid';\nimport { getLocalizedString } from './stringLookup';\n\n/**\n * Shared utility for adding skills, upgrades, or powers to a player\n * Handles all the necessary API calls and state updates\n * \n * @param {Object} params - Parameters object\n * @param {Object} params.item - The skill/upgrade/power resource object to add\n * @param {Object} params.currentPlayer - Current player object\n * @param {Function} params.setCurrentPlayer - Function to update player state\n * @param {Function} params.updateStatus - Function to update status bar\n * @param {Object} params.strings - Localized strings object\n * @param {string} params.gridId - Current grid ID (needed for combat stats)\n * @param {number} params.quantity - Quantity to add (default 1)\n * @returns {Promise<boolean>} - Success status\n */\nexport async function gainSkillOrPower({\n  item,\n  currentPlayer,\n  setCurrentPlayer,\n  updateStatus,\n  strings,\n  gridId,\n  quantity = 1\n}) {\n  try {\n    if (!item || !item.type || !item.category) {\n      console.error('Invalid item provided to gainSkillOrPower:', item);\n      return false;\n    }\n\n    console.log(`🎯 Adding ${item.category}: ${item.type} x${quantity}`);\n\n    // Handle different categories\n    if (item.category === 'skill' || item.category === 'upgrade') {\n      // Skills and upgrades are stored together in the skills array\n      const currentSkills = currentPlayer.skills || [];\n      const updatedSkills = [...currentSkills];\n      \n      // Check if already owned\n      const existingIndex = updatedSkills.findIndex(s => s.type === item.type);\n      if (existingIndex >= 0) {\n        // Update quantity if already owned\n        updatedSkills[existingIndex].quantity = (updatedSkills[existingIndex].quantity || 1) + quantity;\n      } else {\n        // Add new skill/upgrade\n        updatedSkills.push({ \n          type: item.type, \n          category: item.category, \n          quantity: quantity \n        });\n      }\n\n      // Update on server\n      await axios.post(`${API_BASE}/api/update-skills`, {\n        playerId: currentPlayer.playerId,\n        skills: updatedSkills\n      });\n\n      // Update local state\n      setCurrentPlayer(prev => ({\n        ...prev,\n        skills: updatedSkills\n      }));\n\n      // Track quest progress\n      await trackQuestProgress(currentPlayer, 'Gain skill with', item.type, quantity, setCurrentPlayer);\n      \n      // Earn trophy for skills\n      if (item.category === 'skill') {\n        await earnTrophy(currentPlayer.playerId, 'Skill Builder', 1, currentPlayer, null, setCurrentPlayer);\n      }\n\n      // Check for FTUE progress (Axe skill)\n      if (currentPlayer.firsttimeuser === true && item.type === 'Axe') {\n        console.log('🎓 First-time user acquired Axe skill, advancing FTUE step');\n        await incrementFTUEStep(currentPlayer.playerId, currentPlayer, setCurrentPlayer);\n      }\n\n    } else if (item.category === 'power') {\n      // Powers are stored separately\n      const currentPowers = currentPlayer.powers || [];\n      const updatedPowers = [...currentPowers];\n      \n      // Check if already owned\n      const existingIndex = updatedPowers.findIndex(p => p.type === item.type);\n      if (existingIndex >= 0) {\n        updatedPowers[existingIndex].quantity = (updatedPowers[existingIndex].quantity || 1) + quantity;\n      } else {\n        updatedPowers.push({ \n          type: item.type, \n          quantity: quantity \n        });\n      }\n\n      // Update on server\n      await axios.post(`${API_BASE}/api/update-powers`, {\n        playerId: currentPlayer.playerId,\n        powers: updatedPowers\n      });\n\n      // Update local state\n      setCurrentPlayer(prev => ({\n        ...prev,\n        powers: updatedPowers\n      }));\n\n      // Handle combat stat modifications if the power has output\n      if (item.output && typeof item.qtycollected === 'number') {\n        if (item.output === 'range') {\n          // Range is stored on the player document\n          const updatedRange = (currentPlayer.range || 0) + item.qtycollected;\n          \n          await axios.post(`${API_BASE}/api/update-profile`, {\n            playerId: currentPlayer.playerId,\n            updates: { range: updatedRange }\n          });\n\n          // Update local player state and localStorage\n          const updatedPlayer = {\n            ...currentPlayer,\n            range: updatedRange\n          };\n          setCurrentPlayer(updatedPlayer);\n          localStorage.setItem('player', JSON.stringify(updatedPlayer));\n          \n          console.log(`🎯 Updated range on player document: ${updatedRange}`);\n        } else {\n          // Other combat stats updated in playersInGrid\n          const gridPlayer = playersInGridManager.getAllPCs(gridId)?.[currentPlayer.playerId];\n          if (gridPlayer) {\n            const oldValue = gridPlayer[item.output] || 0;\n            const newValue = oldValue + item.qtycollected;\n            \n            await playersInGridManager.updatePC(gridId, currentPlayer.playerId, {\n              [item.output]: newValue\n            });\n            \n            console.log(`🧠 Updated ${item.output} for player ${currentPlayer.playerId}: ${oldValue} -> ${newValue}`);\n          }\n        }\n      }\n\n    } else {\n      console.error('Unknown item category:', item.category);\n      return false;\n    }\n\n    // Refresh player data to ensure consistency\n    await refreshPlayerAfterInventoryUpdate(currentPlayer.playerId, setCurrentPlayer);\n\n    return true;\n\n  } catch (error) {\n    console.error('Error in gainSkillOrPower:', error);\n    updateStatus(`Failed to acquire ${item.type}`);\n    return false;\n  }\n}\n\n/**\n * Check if player has a specific skill, upgrade, or power\n * @param {Object} player - Player object\n * @param {string} requirementType - Type of skill/upgrade/power to check for\n * @returns {boolean}\n */\nexport function hasSkillOrPower(player, requirementType) {\n  if (!requirementType) return true;\n  \n  return (\n    player.skills?.some(skill => skill.type === requirementType) ||\n    player.powers?.some(power => power.type === requirementType)\n  );\n}","/**\n * ScrollReveal.js\n * Helper functions for determining random scroll reveal outcomes\n */\n\nimport { selectWeightedRandomItem } from '../../Utils/DropRates';\n\n/**\n * Determines the random doober reward from revealing a scroll\n * @param {Array} masterResources - Master resource list\n * @param {Object} playerStats - Optional player stats for future scaling\n * @param {number} rollCount - Number of internal rolls to make (default: 3)\n * @returns {Object} { type: string, quantity: number }\n */\nexport function getRandomScrollReveal(masterResources, playerStats = null, rollCount = 3) {\n  // Filter resources that can be obtained from scrolls - any item with scrollchance defined\n  const scrollableItems = masterResources.filter(item => item.scrollchance);\n\n  if (scrollableItems.length === 0) {\n    console.warn('No scrollable items found in masterResources, using fallback');\n    return { type: 'Wood', quantity: 10 };\n  }\n\n  // Use the shared utility to select a weighted random item\n  // Scrolls are always level 1 for now (no level multiplier)\n  const selectedItem = selectWeightedRandomItem(scrollableItems, 1);\n  \n  if (selectedItem) {\n    const quantity = selectedItem.scrollqty || 1;\n    console.log(`🎲 Scroll reveal: ${selectedItem.type} x${quantity} (rarity: ${selectedItem.scrollchance})`);\n    \n    return {\n      type: selectedItem.type,\n      quantity: quantity\n    };\n  }\n  \n  // Fallback (shouldn't reach here)\n  const fallbackItem = scrollableItems[0];\n  return { \n    type: fallbackItem.type, \n    quantity: fallbackItem.scrollqty || 1 \n  };\n}\n\n/**\n * Get display name for scroll reveal result\n * @param {Object} reveal - The reveal result from getRandomScrollReveal\n * @param {Array} masterResources - Master resource list\n * @returns {string} Display string like \"5x Wood\"\n */\nexport function getRevealDisplayString(reveal, masterResources) {\n  const resource = masterResources.find(r => r.type === reveal.type);\n  const symbol = resource?.symbol || '📦';\n  return `${reveal.quantity}x ${symbol} ${reveal.type}`;\n}\n\n/**\n * Check if player can afford to reveal a scroll\n * @param {Object} recipe - The Reveal Scroll recipe\n * @param {Array} inventory - Player inventory\n * @param {Array} backpack - Player backpack\n * @returns {boolean}\n */\nexport function canAffordReveal(recipe, inventory, backpack) {\n  const playerItems = [...(inventory || []), ...(backpack || [])];\n  \n  // Check each ingredient requirement\n  for (let i = 1; i <= 5; i++) {\n    const ingredientType = recipe[`ingredient${i}`];\n    const ingredientQty = recipe[`ingredient${i}qty`] || 1;\n    \n    if (ingredientType) {\n      const playerQty = playerItems\n        .filter(item => item.type === ingredientType)\n        .reduce((sum, item) => sum + item.quantity, 0);\n        \n      if (playerQty < ingredientQty) {\n        return false;\n      }\n    }\n  }\n  \n  return true;\n}","import API_BASE from '../../config';\nimport React, { useState, useEffect, useContext } from 'react';\nimport Panel from '../../UI/Panel';\nimport axios from 'axios';\nimport ResourceButton from '../../UI/ResourceButton';\nimport FloatingTextManager from '../../UI/FloatingText';\nimport { refreshPlayerAfterInventoryUpdate } from '../../Utils/InventoryManagement';\nimport { StatusBarContext } from '../../UI/StatusBar/StatusBar';\nimport { trackQuestProgress } from '../Quests/QuestGoalTracker';\nimport GlobalGridStateTilesAndResources from '../../GridState/GlobalGridStateTilesAndResources';\nimport { useStrings } from '../../UI/StringsContext';\nimport { getLocalizedString } from '../../Utils/stringLookup';\nimport { spendIngredients, gainIngredients, canAfford } from '../../Utils/InventoryManagement';\nimport { getIngredientDetails } from '../../Utils/ResourceHelpers';\nimport TransactionButton from '../../UI/TransactionButton';\nimport { formatCountdown } from '../../UI/Timers';\nimport { showNotification } from '../../UI/Notifications/Notifications';\nimport { earnTrophy } from '../Trophies/TrophyUtils';\nimport { selectWeightedRandomItem, getDropQuantity } from '../../Utils/DropRates';\nimport { handleProtectedSelling } from '../../Utils/ProtectedSelling';\nimport { getPersonalizedPetRewards } from '../../Utils/ResourceHelpers';\nimport '../../UI/SharedButtons.css';\nimport '../../UI/ResourceButton.css'; \nimport './PetPanel.css';\n\n// Helper function to get a random reward from pets source with rarity weighting\nconst getRandomPetReward = (masterResources, petLevel = 1, playerId) => {\n  // Get all resources with source === 'pets'\n  const petRewards = masterResources.filter(res => res.source === 'pets');\n  \n  if (petRewards.length === 0) {\n    console.warn('No pet rewards found in masterResources');\n    return null;\n  }\n  \n  // Apply personalized rarity to warehouse ingredients\n  const personalizedRewards = getPersonalizedPetRewards(petRewards, playerId);\n  \n  // Use the shared drop rate utility with pet level multiplier\n  // Higher level pets have better drop rates (level 2 = 2x rates, level 5 = 5x rates)\n  const selectedReward = selectWeightedRandomItem(personalizedRewards, petLevel);\n  \n  if (!selectedReward) {\n    return null;\n  }\n  \n  // Determine quantity based on rarity using shared utility\n  const quantity = getDropQuantity(selectedReward.scrollchance || 'common');\n  \n  return {\n    type: selectedReward.type,\n    quantity,\n    rarity: selectedReward.scrollchance || 'common'\n  };\n};\n\nconst PetPanel = ({\n  onClose,\n  inventory,\n  setInventory,\n  backpack,\n  setBackpack,\n  currentPlayer,\n  setCurrentPlayer,\n  setResources,\n  petResource, // The specific pet resource that was clicked\n  currentPetPosition,\n  gridId,\n  masterResources,\n  masterSkills,\n  masterTrophies,\n  TILE_SIZE,\n  isDeveloper,\n  globalTuning,\n}) => {\n  const strings = useStrings();\n  const { updateStatus } = useContext(StatusBarContext);\n  const [activeTimer, setActiveTimer] = useState(false);\n  const [rewardItem, setRewardItem] = useState(null);\n  const [feedingCountdown, setFeedingCountdown] = useState(null);\n  const [isFeeding, setIsFeeding] = useState(false);\n  const [isReadyToCollect, setIsReadyToCollect] = useState(false);\n  const [revealedRewardQty, setRevealedRewardQty] = useState(1);\n  const [revealedRewardRarity, setRevealedRewardRarity] = useState('common');\n  const [isCollecting, setIsCollecting] = useState(false);\n  const [canAffordFeeding, setCanAffordFeeding] = useState(false);\n\n  // Get pet details from the resource\n  const petName = petResource?.type || 'Pet';\n  const petSymbol = petResource?.symbol || '=\u0015';\n  const feedIngredient = petResource?.output || 'Milk'; // What the pet needs to be fed\n  const feedQuantity = petResource?.qtycollected || 1; // How much of the ingredient is needed\n  const feedingTime = petResource?.crafttime || 60; // How long the pet takes to find rewards\n\n  // Check if we can afford to feed the pet\n  useEffect(() => {\n    const checkAffordability = () => {\n      const affordable = canAfford(\n        { ingredient1: feedIngredient, ingredient1qty: feedQuantity },\n        [...(inventory || []), ...(backpack || [])]\n      );\n      setCanAffordFeeding(affordable);\n    };\n    \n    checkAffordability();\n  }, [inventory, backpack, feedIngredient, feedQuantity]);\n\n  // Check for active feeding timer or ready rewards\n  useEffect(() => {\n    if (!petResource || !currentPetPosition) return;\n\n    const checkPetState = () => {\n      const pet = GlobalGridStateTilesAndResources.getResources()?.find(\n        (res) => res.x === currentPetPosition.x && res.y === currentPetPosition.y\n      );\n      \n      if (pet && pet.craftEnd && pet.craftedItem) {\n        // Check if this is a revealed reward (craftEnd in the past)\n        const now = Date.now();\n        const isRevealed = pet.craftEnd < now;\n        \n        setRewardItem(pet.craftedItem);\n        setRevealedRewardQty(pet.qty || 1);\n        setRevealedRewardRarity(pet.rarity || 'common');\n        \n        if (isRevealed) {\n          setIsFeeding(false);\n          setIsReadyToCollect(true);\n          setFeedingCountdown(0);\n          setActiveTimer(false);\n        } else {\n          // Pet is still searching for rewards\n          setIsFeeding(true);\n          setActiveTimer(true);\n          \n          const remainingTime = Math.max(0, Math.floor((pet.craftEnd - now) / 1000));\n          setFeedingCountdown(remainingTime);\n          \n          if (remainingTime === 0) {\n            setIsFeeding(false);\n            setIsReadyToCollect(true);\n          }\n        }\n      } else {\n        // Only reset if we actually had something before\n        if (rewardItem || isFeeding || isReadyToCollect) {\n          setRewardItem(null);\n          setIsFeeding(false);\n          setIsReadyToCollect(false);\n          setFeedingCountdown(null);\n          setActiveTimer(false);\n          setRevealedRewardQty(1);\n          setRevealedRewardRarity('common');\n        }\n      }\n    };\n\n    // Initial check\n    checkPetState();\n\n    // Set up interval to check for updates\n    const timer = setInterval(checkPetState, 1000);\n    return () => clearInterval(timer);\n  }, [petResource, currentPetPosition, rewardItem, isFeeding, isReadyToCollect]);\n\n  // Handle feeding the pet\n  const handleFeedPet = async (transactionId, transactionKey) => {\n    if (!canAffordFeeding) {\n      updateStatus(`You need ${feedQuantity}x ${getLocalizedString(feedIngredient, strings)} to feed ${getLocalizedString(petName, strings)}`);\n      return;\n    }\n\n    try {\n      // First, spend the feed ingredients\n      const spentSuccess = await spendIngredients({\n        playerId: currentPlayer.playerId,\n        currentPlayer,\n        recipe: { ingredient1: feedIngredient, ingredient1qty: feedQuantity },\n        inventory: currentPlayer.inventory,\n        backpack: currentPlayer.backpack,\n        setInventory,\n        setBackpack,\n        setCurrentPlayer,\n        updateStatus,\n        masterResources,\n      });\n\n      if (!spentSuccess) {\n        updateStatus(`Failed to feed ${getLocalizedString(petName, strings)}`);\n        return;\n      }\n\n      // Generate random reward using pet's level for better drop rates\n      const petLevel = petResource?.level || 1; // Default to level 1 if not specified\n      const reward = getRandomPetReward(masterResources, petLevel, currentPlayer.playerId);\n      \n      if (!reward) {\n        console.error('Failed to generate pet reward');\n        updateStatus('Something went wrong while feeding the pet');\n        return;\n      }\n\n      // Start the feeding timer using standard craft API\n      const response = await axios.post(`${API_BASE}/api/crafting/start-craft`, {\n        playerId: currentPlayer.playerId,\n        gridId,\n        stationX: currentPetPosition.x,\n        stationY: currentPetPosition.y,\n        recipe: {\n          type: reward.type,\n          crafttime: feedingTime,\n          // No ingredients since we already spent them\n        },\n        qty: reward.quantity,\n        rarity: reward.rarity, // Store rarity for display\n        transactionId,\n        transactionKey\n      });\n\n      if (response.data.success) {\n        // Update local state with server response\n        const { craftEnd, craftedItem, inventory, backpack } = response.data;\n        \n        // Update inventory from server response if provided\n        if (inventory) {\n          setInventory(inventory);\n          setCurrentPlayer(prev => ({ ...prev, inventory }));\n        }\n        if (backpack) {\n          setBackpack(backpack);\n          setCurrentPlayer(prev => ({ ...prev, backpack }));\n        }\n\n        // Update pet resource in global state with qty and rarity\n        const updatedGlobalResources = GlobalGridStateTilesAndResources.getResources().map(res =>\n          res.x === currentPetPosition.x && res.y === currentPetPosition.y\n            ? { ...res, craftEnd, craftedItem, qty: reward.quantity, rarity: reward.rarity }\n            : res\n        );\n        GlobalGridStateTilesAndResources.setResources(updatedGlobalResources);\n        setResources(updatedGlobalResources);\n\n        // Update UI state\n        setRewardItem(craftedItem);\n        setRevealedRewardQty(reward.quantity);\n        setRevealedRewardRarity(reward.rarity);\n        setFeedingCountdown(Math.max(0, Math.floor((craftEnd - Date.now()) / 1000)));\n        setActiveTimer(true);\n        setIsFeeding(true);\n        setIsReadyToCollect(false);\n\n        // Refresh player data to ensure consistency\n        await refreshPlayerAfterInventoryUpdate(currentPlayer.playerId, setCurrentPlayer);\n\n        // Update status\n        const feedMessage = `Fed ${getLocalizedString(petName, strings)} ${feedQuantity}x ${getLocalizedString(feedIngredient, strings)}`;\n        FloatingTextManager.addFloatingText(feedMessage, currentPetPosition.x, currentPetPosition.y, TILE_SIZE);\n        updateStatus(`${getLocalizedString(petName, strings)}${strings[8014] || ' is searching for treasures...'}`);\n\n        // Track quest progress for feeding pets\n        await trackQuestProgress(currentPlayer, 'Feed', petName, 1, setCurrentPlayer);\n      }\n    } catch (error) {\n      console.error('Error in pet feeding process:', error);\n      updateStatus(`Failed to feed ${getLocalizedString(petName, strings)}`);\n    }\n  };\n\n  // Handle collection of pet rewards\n  const handleCollectReward = async (transactionId, transactionKey) => {\n    if (!rewardItem || isCollecting) {\n      console.error(\"L No reward to collect or already collecting.\");\n      return;\n    }\n\n    setIsCollecting(true);\n    \n    try {\n      const response = await axios.post(`${API_BASE}/api/crafting/collect-item`, {\n        playerId: currentPlayer.playerId,\n        gridId,\n        stationX: currentPetPosition.x,\n        stationY: currentPetPosition.y,\n        craftedItem: rewardItem,\n        transactionId,\n        transactionKey\n      });\n\n      if (response.data.success) {\n        const { collectedItem, isNPC } = response.data;\n        const collectedQty = revealedRewardQty || 1;\n\n        // Find the reward item in master resources to check its category\n        const rewardResource = masterResources.find(res => res.type === collectedItem);\n        \n        const gained = await gainIngredients({\n            playerId: currentPlayer.playerId,\n            currentPlayer,\n            resource: collectedItem,\n            quantity: collectedQty,\n            inventory: currentPlayer.inventory,\n            backpack: currentPlayer.backpack,\n            setInventory,\n            setBackpack,\n            setCurrentPlayer,\n            updateStatus,\n            masterResources,\n            globalTuning,\n        });\n\n        if (!gained) {\n            console.error('L Failed to add pet reward to inventory.');\n            setIsCollecting(false);\n            return;\n        }\n        \n        FloatingTextManager.addFloatingText(`+${collectedQty} ${getLocalizedString(collectedItem, strings)}`, currentPetPosition.x, currentPetPosition.y, TILE_SIZE);\n\n        // Track quest progress\n        await trackQuestProgress(currentPlayer, 'Collect', collectedItem, collectedQty, setCurrentPlayer);\n\n        // Clear pet state\n        const updatedGlobalResources = GlobalGridStateTilesAndResources.getResources().map(res =>\n          res.x === currentPetPosition.x && res.y === currentPetPosition.y\n            ? { ...res, craftEnd: undefined, craftedItem: undefined, qty: 1, rarity: undefined }\n            : res\n        );\n        GlobalGridStateTilesAndResources.setResources(updatedGlobalResources);\n        setResources(updatedGlobalResources);\n\n        // Reset UI state\n        setActiveTimer(false);\n        setRewardItem(null);\n        setFeedingCountdown(null);\n        setIsReadyToCollect(false);\n        setRevealedRewardQty(1);\n        setRevealedRewardRarity('common');\n\n        // Update status - only if we're not dealing with already owned skills/powers\n        if (!(rewardResource && (rewardResource.category === 'skill' || rewardResource.category === 'power' || rewardResource.category === 'upgrade') && \n            (rewardResource.category === 'skill' \n              ? currentPlayer.skills?.some(skill => skill.type === collectedItem)\n              : currentPlayer.powers?.some(power => power.type === collectedItem)))) {\n          updateStatus(`${getLocalizedString(petName, strings)} found ${collectedQty}x ${getLocalizedString(collectedItem, strings)}!`);\n        }\n\n        // Refresh player data\n        await refreshPlayerAfterInventoryUpdate(currentPlayer.playerId, setCurrentPlayer);\n\n        // Clear collecting state after a brief delay\n        setTimeout(() => {\n          setIsCollecting(false);\n        }, 100);\n      } else {\n        setIsCollecting(false);\n      }\n    } catch (error) {\n      console.error('Error collecting pet reward:', error);\n      updateStatus('L Failed to collect reward');\n      setIsCollecting(false);\n    }\n  };\n\n  // Handle selling the pet for a refund\n  const handleSellPet = async (transactionId, transactionKey) => {\n    await handleProtectedSelling({\n      currentPlayer,\n      setInventory,\n      setBackpack,\n      setCurrentPlayer,\n      setResources,\n      stationType: petResource?.type || petName, // Use pet resource type\n      currentStationPosition: currentPetPosition,\n      gridId,\n      TILE_SIZE,\n      updateStatus,\n      onClose\n    });\n  };\n\n  return (\n    <Panel onClose={onClose} title={getLocalizedString(petName, strings)} panelName=\"PetPanel\">\n      <div className=\"pet-panel-container\">\n        <div className=\"pet-panel-content\">\n\n          {/* Pet display */}\n          <div className=\"pet-display\">{petSymbol}</div>\n\n          {/* Pet info */}\n          <div className=\"pet-info\">\n\n            <p className=\"pet-status\">\n              {isFeeding ? (\n                `${getLocalizedString(petName, strings)}${strings[8014] || ' is searching for treasures...'}`\n              ) : isReadyToCollect ? (\n                `${getLocalizedString(petName, strings)}${strings[8016] || ' has found something!'}`\n              ) : (\n                <>\n                  {strings[8010] || 'This pet is hungry.'}<br/>\n                  {strings[8011] || 'Feed'} {feedQuantity}x {getLocalizedString(feedIngredient, strings)}{strings[8012] || ' to send it searching.'}\n                </>\n              )}\n            </p>\n          </div>\n\n          {/* Show feeding/collection state */}\n          {rewardItem && (isFeeding || isReadyToCollect) ? (\n            // Show animated pet searching or reward collection interface\n            isFeeding ? (\n              // Animated pet searching\n              <div className=\"pet-searching\">\n                <div className=\"pet-searching-countdown\">{formatCountdown(Date.now() + feedingCountdown * 1000, Date.now())}</div>\n              </div>\n            ) : (\n              // Use standard ResourceButton for collect state\n              (() => {\n                const rewardResource = masterResources.find(r => r.type === rewardItem);\n                \n                return (\n                  <ResourceButton\n                    symbol={rewardResource?.symbol || '📦'}\n                    name={`${getLocalizedString(rewardItem, strings)}${revealedRewardQty > 1 ? ` (${revealedRewardQty})` : ''}`}\n                    className={`resource-button pet-collect-button scroll-collect-button rarity-${revealedRewardRarity} ${isCollecting ? 'collecting' : 'ready'}`}\n                    disabled={!isReadyToCollect || isCollecting}\n                    isTransactionMode={isReadyToCollect && !isCollecting}\n                    transactionKey={isReadyToCollect ? `pet-collect-${rewardItem}-${currentPetPosition.x}-${currentPetPosition.y}` : undefined}\n                    onTransactionAction={isReadyToCollect ? handleCollectReward : undefined}\n                  />\n                );\n              })()\n            )\n          ) : !isCollecting ? (\n            // Show feed pet button when not feeding and not collecting\n            <ResourceButton\n              name={`${strings[8011] || 'Feed'} ${getLocalizedString(petName, strings)}`}\n              className=\"resource-button\"\n              details={`${strings[461] || 'Requires'} ${feedQuantity}x ${getLocalizedString(feedIngredient, strings)}`}\n              ingredientDetails={getIngredientDetails(\n                { ingredient1: feedIngredient, ingredient1qty: feedQuantity },\n                masterResources\n              )}\n              disabled={!canAffordFeeding}\n              isValid={canAffordFeeding}\n              isTransactionMode={canAffordFeeding}\n              transactionKey={canAffordFeeding ? `pet-feed-${petName}-${currentPetPosition.x}-${currentPetPosition.y}` : undefined}\n              onTransactionAction={canAffordFeeding ? handleFeedPet : undefined}\n            />\n          ) : null}\n\n        </div>\n        \n        {/* Sell/refund button - only on homesteads */}\n        {currentPlayer.location.gtype === 'homestead' && (\n          <div className=\"pet-panel-footer\">\n            <hr />\n            <div className=\"shared-buttons\">\n              <TransactionButton \n                className=\"btn-success\" \n                onAction={handleSellPet}\n                transactionKey={`sell-refund-${petName}-${currentPetPosition.x}-${currentPetPosition.y}-${gridId}`}\n              >\n                {strings[425] || 'Sell for refund'}\n              </TransactionButton>\n            </div>\n          </div>\n        )}\n      </div>\n    </Panel>\n  );\n};\n\nexport default React.memo(PetPanel);","import API_BASE from '../../config';\nimport axios from 'axios';\nimport { gainIngredients } from '../../Utils/InventoryManagement';\nimport React, { useState, useEffect, useContext } from 'react';\nimport Panel from '../../UI/Panel';\nimport FloatingTextManager from '../../UI/FloatingText';\nimport { updateGridResource } from '../../Utils/GridManagement';\nimport { refreshPlayerAfterInventoryUpdate } from '../../Utils/InventoryManagement';\nimport { StatusBarContext } from '../../UI/StatusBar/StatusBar';\nimport { trackQuestProgress } from '../Quests/QuestGoalTracker';\nimport { createCollectEffect } from '../../VFX/VFX';\nimport '../../UI/SharedButtons.css';\nimport { useStrings } from '../../UI/StringsContext';\nimport { handleProtectedSelling } from '../../Utils/ProtectedSelling';\nimport TransactionButton from '../../UI/TransactionButton';\nimport './AnimalStall.css';\n\nconst AnimalStall = ({\n  onClose,\n  inventory,\n  setInventory,\n  backpack,\n  setBackpack,\n  currentPlayer,\n  setCurrentPlayer,\n  setResources,\n  stationType,\n  currentStationPosition,\n  gridId,\n  TILE_SIZE,\n  updateStatus,\n  masterResources,\n  isDeveloper,\n}) => {\n\n  const [stallDetails, setStallDetails] = useState(null);\n  const [outputDetails, setOutputDetails] = useState(null);\n  const strings = useStrings();\n\n  console.log('Inside Animal Stall:', { stationType, currentStationPosition });\n\n  useEffect(() => {\n    const stallResource = masterResources.find((res) => res.type === stationType);\n    setStallDetails(stallResource);\n  }, [stationType, masterResources]);\n\n  useEffect(() => {\n    const syncInventory = async () => {\n      try {\n        const storedInventory = JSON.parse(localStorage.getItem('inventory')) || [];\n        setInventory(storedInventory);\n  \n        const serverResponse = await axios.get(`${API_BASE}/api/inventory/${currentPlayer.playerId}`);\n        const serverInventory = serverResponse.data.inventory || [];\n        if (JSON.stringify(storedInventory) !== JSON.stringify(serverInventory)) {\n          setInventory(serverInventory);\n          localStorage.setItem('inventory', JSON.stringify(serverInventory));\n        }\n      } catch (error) {\n        console.error('Error syncing inventory:', error);\n      }\n    };\n    syncInventory();\n  }, [currentPlayer]);\n\n  const handleSellStation = async (transactionId, transactionKey) => {\n    await handleProtectedSelling({\n      currentPlayer,\n      setInventory,\n      setBackpack,\n      setCurrentPlayer,\n      setResources,\n      stationType,\n      currentStationPosition,\n      gridId,\n      TILE_SIZE,\n      updateStatus,\n      onClose\n    });\n  };\n  \n\n  return (\n    <Panel onClose={onClose} descriptionKey=\"1011\" titleKey=\"1111\" panelName=\"AnimalStall\" >\n      <div className=\"animalstall-panel-container\">\n        <div className=\"animalstall-panel-content\">\n          <h2>\n              {stallDetails?.symbol || '🛖'} {stationType}\n          </h2>\n        </div>\n\n        {(currentPlayer.location.gtype === 'homestead' || isDeveloper) && (\n          <div className=\"animalstall-panel-footer\">\n            <hr />\n            <div className=\"shared-buttons\">\n              <TransactionButton \n                className=\"btn-basic btn-success\" \n                onAction={handleSellStation}\n                transactionKey={`sell-refund-${stationType}-${currentStationPosition.x}-${currentStationPosition.y}-${gridId}`}\n              >\n                {strings[425]}\n              </TransactionButton>\n            </div>\n          </div>\n        )}\n      </div>\n    </Panel>\n  );\n  \n};\n\nexport default React.memo(AnimalStall);\n","import API_BASE from '../../config';\nimport axios from 'axios';\nimport { gainIngredients } from '../../Utils/InventoryManagement';\nimport React, { useState, useEffect, useContext } from 'react';\nimport Panel from '../../UI/Panel';\nimport FloatingTextManager from '../../UI/FloatingText';\nimport { updateGridResource } from '../../Utils/GridManagement';\nimport { createCollectEffect } from '../../VFX/VFX';\nimport '../../UI/SharedButtons.css';\nimport { useStrings } from '../../UI/StringsContext';\n\nconst CropPanel = ({\n  onClose,\n  inventory,\n  setInventory,\n  backpack,\n  setBackpack,\n  currentPlayer,\n  setCurrentPlayer,\n  setResources,\n  stationType,\n  currentStationPosition,\n  gridId,\n  currentResource,\n  TILE_SIZE,\n  updateStatus,\n  masterResources,\n  globalTuning,\n}) => {\n  const [isActionCoolingDown, setIsActionCoolingDown] = useState(false);\n  const COOLDOWN_DURATION = 2000;\n  const [cropDetails, setCropDetails] = useState(null);\n  const [currentTime, setCurrentTime] = useState(Date.now());\n  const strings = useStrings();\n\n  console.log('--------Inside Crop Panel:', { stationType, currentStationPosition, currentResource });\n\n  useEffect(() => {\n    const cropResource = masterResources.find((res) => res.type === stationType);\n    setCropDetails(cropResource);\n  }, [stationType, masterResources]);\n\n  // Update current time every second for live countdown\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentTime(Date.now());\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, []);\n\n  // Function to generate countdown text like the tooltip\n  const getCropStatusText = () => {\n    if (!currentResource || !currentResource.growEnd) return \"Unknown status\";\n    \n    const remainingTime = Math.max(0, currentResource.growEnd - currentTime);\n    \n    if (remainingTime <= 0) {\n      return \"Ready for harvest!\";\n    }\n    \n    const days = Math.floor(remainingTime / (1000 * 60 * 60 * 24));\n    const hours = Math.floor((remainingTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    const minutes = Math.floor((remainingTime % (1000 * 60 * 60)) / (1000 * 60));\n    const seconds = Math.floor((remainingTime % (1000 * 60)) / 1000);\n    \n    const parts = [];\n    if (days > 0) parts.push(`${days}d`);\n    if (hours > 0) parts.push(`${hours}h`);\n    if (minutes > 0) parts.push(`${minutes}m`);\n    if (seconds > 0 || parts.length === 0) parts.push(`${seconds}s`);\n    \n    return `${parts.join(' ')} remaining`;\n  };\n\n  useEffect(() => {\n    const syncInventory = async () => {\n      try {\n        const storedInventory = JSON.parse(localStorage.getItem('inventory')) || [];\n        setInventory(storedInventory);\n  \n        const serverResponse = await axios.get(`${API_BASE}/api/inventory/${currentPlayer.playerId}`);\n        const serverInventory = serverResponse.data.inventory || [];\n        if (JSON.stringify(storedInventory) !== JSON.stringify(serverInventory)) {\n          setInventory(serverInventory);\n          localStorage.setItem('inventory', JSON.stringify(serverInventory));\n        }\n      } catch (error) {\n        console.error('Error syncing inventory:', error);\n      }\n    };\n    syncInventory();\n  }, [currentPlayer]);\n\n  const handleSellStation = async () => {\n    if (isActionCoolingDown) return;\n    setIsActionCoolingDown(true);\n    setTimeout(() => {\n      setIsActionCoolingDown(false);\n    }, COOLDOWN_DURATION);\n\n    const ingredients = [];\n    for (let i = 1; i <= 3; i++) {\n      const ingredientType = cropDetails[`ingredient${i}`];\n      const ingredientQty = cropDetails[`ingredient${i}qty`];\n      if (ingredientType && ingredientQty) {\n        ingredients.push({ type: ingredientType, quantity: ingredientQty });\n      }\n    }\n    if (!ingredients.length) { console.error('No ingredients found for refund.'); return; }\n\n    try {\n      for (const { type, quantity } of ingredients) {\n        const success = await gainIngredients({\n          playerId: currentPlayer.playerId,\n          currentPlayer,\n          resource: type,\n          quantity,\n          inventory,\n          backpack,\n          setInventory,\n          setBackpack,\n          setCurrentPlayer,\n          updateStatus,\n          masterResources,\n          globalTuning,\n        });\n        if (!success) return;\n      }\n\n      // Remove the crop resource from the grid\n      await updateGridResource(\n        gridId,\n        { type: null, x: currentStationPosition.x, y: currentStationPosition.y },\n        setResources,\n        true\n      );\n\n      setResources(prevResources =>\n        prevResources.filter(res => !(res.x === currentStationPosition.x && res.y === currentStationPosition.y))\n      );\n\n      const totalRefund = ingredients\n        .filter((item) => item.type === \"Money\")\n        .reduce((sum, item) => sum + item.quantity, 0);\n\n      console.log(`Sold ${stationType} successfully for ${totalRefund} Money.`);\n      updateStatus(439);\n      onClose();\n    } catch (error) {\n      console.error('Error selling the stall:', error);\n    }\n  };\n  \n\n  return (\n    <Panel onClose={onClose} descriptionKey=\"1030\" titleKey=\"1130\" panelName=\"CropPanel\" >\n      <div className=\"standard-panel\">\n        <h2>\n            {cropDetails?.symbol || '🌱'} {stationType}\n        </h2>\n\n        {/* Show crop growth status */}\n        <p>\n          {getCropStatusText()}\n        </p>\n\n        {currentPlayer.location.gtype === 'homestead' && (\n          <>\n            <hr />\n              <div className=\"shared-buttons\">\n                <button className=\"btn-success\" onClick={handleSellStation} disabled={isActionCoolingDown}>\n                  {strings[438]}\n                </button>\n              </div>\n          </>\n        )}\n      </div>\n    </Panel>\n  );\n  \n};\n\nexport default React.memo(CropPanel);\n","import API_BASE from '../../config';\nimport axios from 'axios';\nimport { gainIngredients } from '../../Utils/InventoryManagement';\nimport React, { useState, useEffect, useContext } from 'react';\nimport Panel from '../../UI/Panel';\nimport { updateGridResource } from '../../Utils/GridManagement';\nimport { StatusBarContext } from '../../UI/StatusBar/StatusBar';\nimport { createCollectEffect } from '../../VFX/VFX';\nimport '../../UI/SharedButtons.css';\nimport { useStrings } from '../../UI/StringsContext';\nimport { getLocalizedString } from '../../Utils/stringLookup';\nimport { handleProtectedSelling } from '../../Utils/ProtectedSelling';\nimport TransactionButton from '../../UI/TransactionButton';\nimport './DecoPanel.css';\n\nconst DecoPanel = ({\n  onClose,\n  inventory,\n  setInventory,\n  backpack,\n  setBackpack,\n  currentPlayer,\n  setCurrentPlayer,\n  setResources,\n  stationType,\n  currentStationPosition,\n  gridId,\n  TILE_SIZE,\n  updateStatus,\n  masterResources,\n  isDeveloper,\n}) => {\n  const [resourceDetails, setResourceDetails] = useState(null);\n  const isHomestead = currentPlayer?.location?.gtype === 'homestead';\n  const strings = useStrings();\n\n  console.log('Inside Deco Panel:', { stationType, currentStationPosition });\n\n  useEffect(() => {\n    const availableResource = masterResources.find((res) =>\n      res.type === stationType &&\n      (isHomestead || res.passable !== false)\n    );\n    setResourceDetails(availableResource);\n  }, [stationType, masterResources, isHomestead]);\n\n  useEffect(() => {\n    const syncInventory = async () => {\n      try {\n        const storedInventory = JSON.parse(localStorage.getItem('inventory')) || [];\n        setInventory(storedInventory);\n  \n        const serverResponse = await axios.get(`${API_BASE}/api/inventory/${currentPlayer.playerId}`);\n        const serverInventory = serverResponse.data.inventory || [];\n        if (JSON.stringify(storedInventory) !== JSON.stringify(serverInventory)) {\n          setInventory(serverInventory);\n          localStorage.setItem('inventory', JSON.stringify(serverInventory));\n        }\n      } catch (error) {\n        console.error('Error syncing inventory:', error);\n      }\n    };\n    syncInventory();\n  }, [currentPlayer]);\n\n  const handleSellStation = async (transactionId, transactionKey) => {\n    await handleProtectedSelling({\n      currentPlayer,\n      setInventory,\n      setBackpack,\n      setCurrentPlayer,\n      setResources,\n      stationType,\n      currentStationPosition,\n      gridId,\n      TILE_SIZE,\n      updateStatus,\n      onClose\n    });\n  };\n  \n\n  return (\n    <Panel onClose={onClose} titleKey=\"1128\" panelName=\"DecoPanel\" >\n      <div className=\"deco-panel-container\">\n        <div className=\"deco-panel-content\">\n          <h2>\n              {resourceDetails?.symbol || '🛖'} {getLocalizedString(stationType, strings)}\n          </h2>\n        </div>\n\n        {(currentPlayer.location.gtype === 'homestead' || isDeveloper) && (\n          <div className=\"deco-panel-footer\">\n            <hr />\n            <div className=\"shared-buttons\">\n              <TransactionButton \n                className=\"btn-basic btn-success\" \n                onAction={handleSellStation}\n                transactionKey={`sell-refund-${stationType}-${currentStationPosition.x}-${currentStationPosition.y}-${gridId}`}\n              >\n                {strings[425]}\n              </TransactionButton>\n            </div>\n          </div>\n        )}\n      </div>\n    </Panel>\n  );\n  \n};\n\nexport default React.memo(DecoPanel);\n","import React, { useState, useEffect } from 'react';\nimport Modal from '../../UI/Modal';\nimport TransactionButton from '../../UI/TransactionButton';\nimport axios from 'axios';\nimport API_BASE from '../../config';\nimport { useStrings } from '../../UI/StringsContext';\nimport { getLocalizedString } from '../../Utils/stringLookup';\nimport '../../UI/SharedButtons.css';\nimport './GlobalMarketModal.css';\n\n/**\n * Global Market Modal - Shows all players in settlement with items for sale\n * Displays one user per row with their tradestall slots and buy buttons\n */\nfunction GlobalMarketModal({ \n  isOpen, \n  onClose, \n  currentPlayer, \n  onBuyItem,\n  masterResources,\n  globalTuning \n}) {\n  const strings = useStrings();\n  const [settlementPlayers, setSettlementPlayers] = useState([]);\n  const [playerTradeStalls, setPlayerTradeStalls] = useState({});\n  const [resourceData, setResourceData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Fetch all players and their trade stalls when modal opens\n  useEffect(() => {\n    if (!isOpen || !currentPlayer?.location?.s) return;\n\n    const fetchGlobalMarketData = async () => {\n      setIsLoading(true);\n      try {\n        // Fetch players in settlement\n        const settlementResponse = await axios.get(`${API_BASE}/api/players-in-settlement`, {\n          params: { settlementId: currentPlayer.location.s },\n        });\n        const players = settlementResponse.data.players || [];\n        setSettlementPlayers(players);\n\n        // Fetch resource data for symbols\n        const resourcesResponse = await axios.get(`${API_BASE}/api/resources`);\n        setResourceData(resourcesResponse.data);\n\n        // Fetch trade stalls for all players in parallel\n        const tradeStallPromises = players.map(player => \n          axios.get(`${API_BASE}/api/player-trade-stall`, {\n            params: { playerId: player.playerId },\n          }).then(response => ({\n            playerId: player.playerId,\n            tradeStall: response.data.tradeStall || []\n          })).catch(error => ({\n            playerId: player.playerId,\n            tradeStall: []\n          }))\n        );\n\n        const tradeStallResults = await Promise.all(tradeStallPromises);\n        const tradeStallsData = {};\n        tradeStallResults.forEach(result => {\n          tradeStallsData[result.playerId] = result.tradeStall;\n        });\n\n        setPlayerTradeStalls(tradeStallsData);\n      } catch (error) {\n        console.error('Error fetching global market data:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchGlobalMarketData();\n  }, [isOpen, currentPlayer?.location?.s]);\n\n  // Filter players who have items for sale (excluding current player)\n  const getPlayersWithItems = () => {\n    return settlementPlayers.filter(player => {\n      // Exclude current player from the list\n      if (player.playerId === currentPlayer.playerId) {\n        return false;\n      }\n      \n      const stall = playerTradeStalls[player.playerId];\n      return stall && stall.some(slot => \n        slot?.resource && \n        slot?.amount > 0 && \n        !slot?.boughtBy // Not sold - that's all we need to check\n      );\n    }).sort((a, b) => {\n      // Sort by username alphabetically\n      return a.username.localeCompare(b.username);\n    });\n  };\n\n  // Get symbol for a resource type\n  const getSymbol = (resourceType) => {\n    const resource = resourceData.find((res) => res.type === resourceType);\n    return resource?.symbol || '';\n  };\n\n  // Handle buying an item - delegates to parent component\n  const handleBuyItem = async (playerId, slotIndex, transactionId, transactionKey) => {\n    try {\n      await onBuyItem(playerId, slotIndex, transactionId, transactionKey);\n      \n      // Refresh the trade stall data for this player after purchase\n      const response = await axios.get(`${API_BASE}/api/player-trade-stall`, {\n        params: { playerId },\n      });\n      \n      setPlayerTradeStalls(prev => ({\n        ...prev,\n        [playerId]: response.data.tradeStall || []\n      }));\n    } catch (error) {\n      console.error('Error in global market buy:', error);\n    }\n  };\n\n  if (!isOpen) return null;\n\n  const playersWithItems = getPlayersWithItems();\n\n  return (\n    <Modal \n      isOpen={isOpen} \n      onClose={onClose} \n      title={strings[362] || \"Global Market\"} \n      size=\"large\"\n      className=\"global-market-modal\"\n    >\n      <div className=\"global-market-content\">\n        {isLoading ? (\n          <div className=\"loading-container\">\n            <div className=\"loading-text\">{strings[98] || \"Loading...\"}</div>\n          </div>\n        ) : playersWithItems.length === 0 ? (\n          <div className=\"no-items-container\">\n            <div className=\"no-items-text\">{strings[363] || \"No items currently available for purchase\"}</div>\n          </div>\n        ) : (\n          <div className=\"players-list\">\n            {playersWithItems.map(player => {\n              const stall = playerTradeStalls[player.playerId] || [];\n              const availableSlots = stall.filter(slot => \n                slot?.resource && \n                slot?.amount > 0 && \n                !slot?.boughtBy // Show all unsold items, regardless of timer\n              );\n\n              return (\n                <div key={player.playerId} className=\"player-row\">\n                  <div className=\"player-info\">\n                    <div className=\"player-username\">{player.username}</div>\n                    <div className=\"player-items-count\">\n                      {availableSlots.length} {strings[364] || \"items available\"}\n                    </div>\n                  </div>\n                  \n                  <div className=\"player-slots\">\n                    {availableSlots.map((slot, slotIndex) => {\n                      // Find the actual slot index in the full stall\n                      const actualSlotIndex = stall.findIndex(s => s === slot);\n                      const totalCost = slot.amount * slot.price;\n                      \n                      return (\n                        <div key={actualSlotIndex} className=\"slot-item\">\n                          <div className=\"slot-info\">\n                            <div className=\"slot-item-name\">\n                              {slot.amount}x {getSymbol(slot.resource)} {getLocalizedString(slot.resource, strings)}\n                            </div>\n                          </div>\n                          \n                          <div className=\"slot-button\">\n                            <div className=\"shared-buttons\">\n                              <TransactionButton\n                                className=\"btn-basic btn-success\"\n                                transactionKey={`global-market-buy-${player.playerId}-${actualSlotIndex}`}\n                                onAction={(transactionId, transactionKey) => \n                                  handleBuyItem(player.playerId, actualSlotIndex, transactionId, transactionKey)\n                                }\n                              >\n                                {strings[365] || \"Buy\"} 💰{totalCost}\n                              </TransactionButton>\n                            </div>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </div>\n      \n      <div className=\"global-market-footer\">\n        <div className=\"shared-buttons\">\n          <button \n            onClick={onClose}\n            className=\"btn-basic btn-neutral\"\n          >\n            {strings[366] || \"Close\"}\n          </button>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n\nexport default GlobalMarketModal;","import API_BASE from '../../config';\nimport { useStrings } from '../../UI/StringsContext';\nimport { getLocalizedString } from '../../Utils/stringLookup';\nimport React, { useState, useEffect, useContext } from 'react';\nimport Panel from '../../UI/Panel'; // Use Panel instead of Modal\nimport TransactionButton from '../../UI/TransactionButton';\nimport axios from 'axios';\nimport './TradeStall.css';\nimport '../../UI/Modal.css';\nimport '../../UI/SharedButtons.css';\nimport { spendIngredients, gainIngredients, refreshPlayerAfterInventoryUpdate } from '../../Utils/InventoryManagement';\nimport { StatusBarContext } from '../../UI/StatusBar/StatusBar';\nimport { trackQuestProgress } from '../Quests/QuestGoalTracker';\nimport { formatCountdown, formatDuration } from '../../UI/Timers';\nimport { incrementFTUEStep } from '../FTUE/FTUE';\nimport { isACrop } from '../../Utils/ResourceHelpers';\nimport { handlePurchase } from '../../Store/Store';\nimport GlobalMarketModal from './GlobalMarketModal';\n\nfunction TradeStall({ onClose, inventory, setInventory, backpack, setBackpack, currentPlayer, setCurrentPlayer, globalTuning, setModalContent, setIsModalOpen, masterResources }) {\n\n  const strings = useStrings();\n  const [tradeSlots, setTradeSlots] = useState([]);\n  const [selectedSlotIndex, setSelectedSlotIndex] = useState(null);\n  const [amounts, setAmounts] = useState({}); // Store amounts per resource\n  const [totalSellValue, setTotalSellValue] = useState(0);\n  const [resourceData, setResourceData] = useState([]); // Store resource data\n  const { updateStatus } = useContext(StatusBarContext);\n  const [isLoadingInitial, setIsLoadingInitial] = useState(true); // Loading state for initial data fetch\n  const [isGlobalMarketOpen, setIsGlobalMarketOpen] = useState(false); // Global Market modal state\n\n  const tradeStallHaircut = globalTuning?.tradeStallHaircut || 0.25;\n  const tradeStallSlotConfig = globalTuning?.tradeStallSlots || [];\n  \n  // Get slot-specific configuration\n  const getSlotConfig = (slotIndex) => {\n    const config = tradeStallSlotConfig.find(slot => slot.slotIndex === slotIndex);\n    return config || {\n      maxAmount: 50,\n      sellWaitTime: currentPlayer.firsttimeuser ? 5000 : 300000,\n      unlocked: slotIndex === 0,\n      unlockCost: 0,\n      requiresGoldPass: false\n    };\n  };\n  \n  const isSlotUnlocked = (slotIndex) => {\n    const slot = tradeSlots[slotIndex];\n    const config = getSlotConfig(slotIndex);\n    \n    // If slot doesn't exist\n    if (!slot) {\n      return false;\n    }\n    \n    // Handle backward compatibility - if locked field is undefined\n    if (slot.locked === undefined) {\n      // For backward compatibility: slots with items are considered unlocked\n      if (slot.resource && slot.amount > 0) {\n        return true;\n      }\n      // Otherwise, only first slot is unlocked by default\n      return slotIndex === 0;\n    }\n    \n    // If slot is explicitly locked\n    if (slot.locked === true) {\n      // Check if it's a Gold Pass slot and user has Gold Pass\n      if (config.requiresGoldPass && currentPlayer.accountStatus === 'Gold') {\n        return true; // Gold Pass overrides the locked state\n      }\n      return false;\n    }\n    \n    return true; // If not locked, it's unlocked\n  };\n  \n  const handleUnlockSlot = async (slotIndex) => {\n    const config = getSlotConfig(slotIndex);\n    if (!config || config.requiresGoldPass) return;\n    \n    try {\n      // First, use spendIngredients to handle the wood cost properly\n      const tempRecipe = { \n        ingredient1: 'Wood', \n        ingredient1qty: config.unlockCost \n      };\n      \n      const success = await spendIngredients({\n        playerId: currentPlayer.playerId,\n        recipe: tempRecipe,\n        inventory: currentPlayer.inventory || inventory,\n        backpack: currentPlayer.backpack || [],\n        setInventory,\n        setBackpack: () => {}, // No-op\n        setCurrentPlayer,\n        updateStatus,\n      });\n      \n      if (!success) {\n        console.warn('Not enough Wood to unlock this slot.');\n        updateStatus(`${strings[177]} ${config.unlockCost} ${getSymbol('Wood')} ${strings[176]} ${strings[178]}`);\n        return;\n      }\n      \n      // If wood was spent successfully, update only this specific slot\n      const updatedSlots = tradeSlots.map((slot, index) => {\n        if (index === slotIndex) {\n          return {\n            ...slot,\n            locked: false\n          };\n        }\n        return slot;\n      });\n      \n      // Update the trade stall on the server\n      await axios.post(`${API_BASE}/api/update-player-trade-stall`, {\n        playerId: currentPlayer.playerId,\n        tradeStall: updatedSlots\n      });\n      \n      // Update local state\n      setTradeSlots(updatedSlots);\n      setCurrentPlayer({\n        ...currentPlayer,\n        tradeStall: updatedSlots\n      });\n      \n      // Refresh player data to ensure consistency\n      await refreshPlayerAfterInventoryUpdate(currentPlayer.playerId, setCurrentPlayer);\n      \n      // Re-fetch trade stall data to ensure UI is in sync\n      await fetchDataForViewedPlayer(true); // Skip inventory fetch since it was just updated\n      \n      updateStatus(`${strings[170]}`);\n    } catch (error) {\n      console.error('Error unlocking slot:', error);\n      updateStatus('Failed to unlock slot');\n    }\n  };\n\n  const calculateTotalSlots = (player) => {\n    // Base slots are now 4 for Free, Gold gets +2 (total 6)\n    const accountStatusSlots = {\n      Free: 4,\n      Bronze: 4, \n      Silver: 4,\n      Gold: 6,\n    };\n    return accountStatusSlots[player.accountStatus] || 4;\n  };\n\n  // Lift fetchDataForViewedPlayer out of useEffect for reuse\n  const fetchDataForViewedPlayer = async (skipInventoryFetch = false) => {\n    try {\n      if (!skipInventoryFetch) {\n        setIsLoadingInitial(true);\n      }\n      // Fetch resource data (e.g., for prices)\n      const resourcesResponse = await axios.get(`${API_BASE}/api/resources`);\n      setResourceData(resourcesResponse.data);\n\n      // Only fetch inventory if not skipping (to avoid overwriting during collections)\n      if (!skipInventoryFetch) {\n        const currentInventoryResponse = await axios.get(`${API_BASE}/api/inventory/${currentPlayer.playerId}`);\n        setInventory(currentInventoryResponse.data.inventory || []);\n      }\n\n      // Fetch trade stall data for the current player\n      const tradeStallResponse = await axios.get(`${API_BASE}/api/player-trade-stall`, {\n        params: { playerId: currentPlayer.playerId },\n      });\n\n      // Always show all 6 slots\n      const serverSlots = tradeStallResponse.data.tradeStall || [];\n      \n      // Ensure we have exactly 6 slots from server, preserve existing slot data\n      const allSlots = Array.from({ length: 6 }, (_, index) => {\n        const existingSlot = serverSlots.find(slot => slot && slot.slotIndex === index);\n        if (existingSlot) {\n          // Preserve all existing slot data including locked state\n          return existingSlot;\n        }\n        // Only create default locked slot if it doesn't exist on server\n        return {\n          slotIndex: index,\n          locked: true,\n          resource: null,\n          amount: 0,\n          price: 0,\n          sellTime: null,\n          boughtBy: null,\n          boughtFor: null\n        };\n      });\n      \n      setTradeSlots(allSlots);\n\n      // Calculate total sell value for current player's stall\n      const total = allSlots.reduce((sum, slot) => {\n        if (slot?.resource && slot?.amount && slot?.price && !slot?.boughtBy) {\n          return sum + slot.amount * slot.price;\n        }\n        return sum;\n      }, 0);\n      setTotalSellValue(total);\n    } catch (error) {\n      console.error('Error fetching TradeStall data:', error);\n    } finally {\n      setIsLoadingInitial(false);\n    }\n  };\n\n  useEffect(() => {\n    // Only fetch data for current player's own trade stall\n    fetchDataForViewedPlayer();\n  }, [currentPlayer?.playerId]); // Only depend on current player\n  \n  // Handle buying from global market\n  const handleGlobalMarketBuy = async (playerId, slotIndex, transactionId, transactionKey) => {\n    try {\n      // Re-fetch latest data to confirm availability\n      const tradeStallResponse = await axios.get(`${API_BASE}/api/player-trade-stall`, {\n        params: { playerId },\n      });\n      const latestSlots = tradeStallResponse.data.tradeStall || [];\n      const currentSlot = latestSlots[slotIndex];\n      \n      if (!currentSlot || currentSlot.boughtBy) {\n        updateStatus(155); // Item was already purchased\n        return;\n      }\n\n      const totalCost = currentSlot.amount * currentSlot.price;\n      const currentMoney = inventory.find((item) => item.type === 'Money')?.quantity || 0;\n\n      if (totalCost > currentMoney) {\n        console.warn('Not enough money to complete the purchase.');\n        updateStatus(152);\n        return;\n      }\n\n      // Use the same purchase logic as the original handleBuy\n      const tempRecipe = { ingredient1: 'Money', ingredient1qty: totalCost };\n\n      const success = await spendIngredients({\n        playerId: currentPlayer.playerId,\n        recipe: tempRecipe,\n        inventory: currentPlayer.inventory || inventory,\n        backpack: currentPlayer.backpack || [],\n        setInventory,\n        setBackpack: () => {},\n        setCurrentPlayer,\n        updateStatus,\n      });\n      \n      if (!success) {\n        console.warn('Not enough Money to buy this item.');\n        return;\n      }\n\n      await gainIngredients({\n        playerId: currentPlayer.playerId,\n        currentPlayer,\n        resource: currentSlot.resource,\n        quantity: currentSlot.amount,\n        inventory: currentPlayer.inventory || inventory,\n        backpack: currentPlayer.backpack || [],\n        setInventory,\n        setBackpack: () => {},\n        setCurrentPlayer,\n        updateStatus,\n        masterResources,\n        globalTuning,\n      });\n\n      // Update the seller's TradeStall to mark the slot as purchased\n      const updatedSlots = [...latestSlots];\n      updatedSlots[slotIndex] = {\n        ...currentSlot,\n        sellTime: null,\n        boughtBy: currentPlayer.username,\n        boughtFor: totalCost,\n      };\n\n      await axios.post(`${API_BASE}/api/update-player-trade-stall`, {\n        playerId: playerId,\n        tradeStall: updatedSlots,\n      });\n\n      updateStatus(22); // Purchase successful\n    } catch (error) {\n      console.error('Error processing global market purchase:', error);\n      throw error;\n    }\n  };\n  \n  // Auto-set max Wheat amount for FTUE users at step 3 or less\n  useEffect(() => {\n    if (selectedSlotIndex !== null && currentPlayer.firsttimeuser === true && currentPlayer.ftuestep <= 3) {\n      // Find wheat in inventory\n      const wheatItem = inventory.find(item => item.type === 'Wheat');\n      if (wheatItem) {\n        const slotConfig = getSlotConfig(selectedSlotIndex);\n        const maxAmount = Math.min(wheatItem.quantity, slotConfig.maxAmount);\n        setAmounts(prev => ({\n          ...prev,\n          'Wheat': maxAmount\n        }));\n      }\n    }\n  }, [selectedSlotIndex, currentPlayer.firsttimeuser, currentPlayer.ftuestep, inventory]);\n\n  const handleSlotClick = (index) => {\n    const slot = tradeSlots[index];\n    const isEmpty = !slot?.resource;\n    const slotUnlocked = isSlotUnlocked(index);\n    const config = getSlotConfig(index);\n    \n    console.log('Slot clicked:', index, 'Is unlocked:', slotUnlocked, 'Is empty:', isEmpty);\n\n    // If slot is locked\n    if (!slotUnlocked) {\n      if (config.requiresGoldPass && currentPlayer.accountStatus !== 'Gold') {\n        // Gold Pass required - do nothing, button will handle it\n        return;\n      } else if (!config.requiresGoldPass) {\n        // Regular unlock with wood - do nothing, button will handle it\n        return;\n      }\n    }\n    \n    // Only allow slot clicks for empty, unlocked slots\n    if (isEmpty && slotUnlocked) {\n      setSelectedSlotIndex(index); // Open inventory modal\n      // Reset amounts when opening modal to prevent quantity persistence bug\n      setAmounts({});\n    }\n    // All other clicks do nothing\n  };\n  \n\n  \n  \n  const handleAmountChange = (type, value) => {\n    const resourceInInventory = inventory.find((item) => item.type === type);\n    const inventoryAmount = resourceInInventory ? resourceInInventory.quantity : 0;\n    const slotConfig = getSlotConfig(selectedSlotIndex);\n    const maxAmount = Math.min(inventoryAmount, slotConfig.maxAmount);\n  \n    setAmounts((prev) => ({\n      ...prev,\n      [type]: Math.min(Math.max(0, value), maxAmount), // Ensure value is within 0 and maxAmount\n    }));\n  };\n\n  const handleAddToSlot = async (transactionId, transactionKey, resource) => {\n    let amount = amounts[resource] || 0;\n    const resourceInInventory = inventory.find((item) => item.type === resource);\n\n    if (selectedSlotIndex === null || amount <= 0 || !resourceInInventory || amount > resourceInInventory.quantity) {\n      console.warn('Invalid amount or resource exceeds available quantity.');\n      return;\n    }\n    \n    // Get slot configuration and enforce max amount limit\n    const slotConfig = getSlotConfig(selectedSlotIndex);\n    if (amount > slotConfig.maxAmount) {\n      amount = slotConfig.maxAmount;\n      console.log(`Amount adjusted to slot limit: ${amount} (max: ${slotConfig.maxAmount})`);\n    }\n\n    // Check if selling all of a crop item\n    if (amount === resourceInInventory.quantity && isACrop(resource, masterResources)) {\n      // Check if the plot for this crop has a cost\n      const plotResource = masterResources.find(res => res.output === resource && res.category === 'farmplot');\n      const plotHasCost = plotResource && plotResource.ingredient1qty > 0;\n      \n      // Only show confirmation if the plot has a cost (e.g., Corn Plot costs 1 Corn)\n      if (plotHasCost) {\n        // Show confirmation modal using standard modal system\n        setModalContent({\n        title: '⚠️ Warning',\n        message: `This will leave you with 0 ${resource}, so you will not be able to plant ${resource} again.`,\n        message2: 'Are you sure?',\n        size: 'small',\n        onClose: () => setIsModalOpen(false),\n        children: (\n          <div className=\"shared-buttons\" style={{ display: 'flex', gap: '10px', justifyContent: 'center', marginTop: '10px' }}>\n            <button\n              className=\"btn-basic btn-neutral\"\n              onClick={() => setIsModalOpen(false)}\n            >\n              Cancel\n            </button>\n            <button \n              className=\"btn-basic btn-danger\"\n              onClick={async () => {\n                setIsModalOpen(false);\n                // Re-check slot limit in case it changed\n                const slotConfig = getSlotConfig(selectedSlotIndex);\n                const finalAmount = Math.min(amount, slotConfig.maxAmount);\n                await performAddToSlot(transactionId, transactionKey, resource, finalAmount);\n              }}\n            >\n              {strings[168]}\n            </button>\n          </div>\n        ),\n      });\n      setIsModalOpen(true);\n      return;\n      }\n    }\n\n    // Continue with normal add to slot\n    await performAddToSlot(transactionId, transactionKey, resource, amount);\n  };\n\n  const performAddToSlot = async (transactionId, transactionKey, resource, amount) => {\n    const resourceDetails = resourceData.find((item) => item.type === resource);\n    const price = resourceDetails?.minprice || 0;\n    const slotConfig = getSlotConfig(selectedSlotIndex);\n\n    const updatedSlots = [...tradeSlots];\n    // Update the specific slot with the new item, preserving slotIndex\n    updatedSlots[selectedSlotIndex] = { \n      slotIndex: selectedSlotIndex,\n      resource, \n      amount, \n      price, \n      sellTime: Date.now() + slotConfig.sellWaitTime,\n      boughtBy: null,\n      boughtFor: null\n    };\n\n    try {\n      await axios.post(`${API_BASE}/api/update-player-trade-stall`, {\n        playerId: currentPlayer.playerId,\n        tradeStall: updatedSlots,\n      });\n\n      await axios.post(`${API_BASE}/api/update-inventory`, {\n        playerId: currentPlayer.playerId,\n        inventory: inventory.map((item) =>\n          item.type === resource\n            ? { ...item, quantity: item.quantity - amount }\n            : item\n        ).filter((item) => item.quantity > 0),\n      });\n\n      await refreshPlayerAfterInventoryUpdate(currentPlayer.playerId, setCurrentPlayer);\n\n      const refreshedInventory = await axios.get(`${API_BASE}/api/inventory/${currentPlayer.playerId}`);\n      setInventory(refreshedInventory.data.inventory);\n\n      setTradeSlots(updatedSlots);\n      setSelectedSlotIndex(null);\n      calculateTotalSellValue(updatedSlots);\n    } catch (error) {\n      console.error('Error adding item to Trade Stall:', error);\n      throw error; // Re-throw to let TransactionButton handle the error state\n    }\n  };\n\n  \n  // Protected function to sell items to game using transaction system\n  const handleSellSingle = async (transactionId, transactionKey, slotIndex) => {\n    console.log(`🔒 [PROTECTED SELL] Starting protected sell for slot ${slotIndex}`);\n    \n    try {\n      const response = await axios.post(`${API_BASE}/api/trade-stall/sell-to-game`, {\n        playerId: currentPlayer.playerId,\n        slotIndex,\n        transactionId,\n        transactionKey: `${transactionKey}-${slotIndex}`\n      });\n\n      if (response.data.success) {\n        // Update local state with server response\n        if (response.data.tradeStall) {\n          setTradeSlots(response.data.tradeStall);\n          // Also update currentPlayer to trigger UI updates\n          setCurrentPlayer(prev => ({\n            ...prev,\n            tradeStall: response.data.tradeStall\n          }));\n        }\n        if (response.data.inventory) {\n          setInventory(response.data.inventory);\n          // Also update currentPlayer's inventory to trigger UI updates\n          setCurrentPlayer(prev => ({\n            ...prev,\n            inventory: response.data.inventory\n          }));\n        }\n        \n        // Track quest progress for selling this item\n        await trackQuestProgress(currentPlayer, 'Sell', response.data.resource, response.data.amount, setCurrentPlayer);\n        \n        // Check if we should increment FTUE step after selling\n        if (currentPlayer.ftuestep === 3) {\n          console.log('🎓 Player at FTUE step 3 sold wheat, incrementing FTUE step');\n          await incrementFTUEStep(currentPlayer.playerId, currentPlayer, setCurrentPlayer);\n        }\n        \n        updateStatus(`${strings[141]} ${response.data.amount}x ${getLocalizedString(response.data.resource, strings)} (💰 ${response.data.sold}).`);\n        \n        // Refresh trade stall data to ensure consistency\n        await fetchDataForViewedPlayer(true); // Skip inventory fetch to preserve server state\n      }\n    } catch (error) {\n      console.error('Error in protected sell:', error);\n      if (error.response?.status === 429) {\n        updateStatus(471);\n      } else {\n        updateStatus('❌ Failed to sell item');\n      }\n    }\n  };\n\n  const calculateTotalSellValue = (slots) => {\n    console.log('Inside calculateTotalSetllValue; Current Inventory:', inventory);\n    const total = slots.reduce((sum, slot) => {\n      if (slot?.amount && slot?.price) {\n        return sum + slot.amount * slot.price;\n      }\n      return sum;\n    }, 0);\n    setTotalSellValue(total);\n  };\n\n  \n  \n  const getSymbol = (resourceType) => {\n    const resource = resourceData.find((res) => res.type === resourceType);\n    return resource?.symbol || '';\n  };\n  \n  // Protected function to collect payment from a bought slot using transaction system\n  const handleCollectPayment = async (transactionId, transactionKey, slotIndex) => {\n    console.log(`🔒 [PROTECTED COLLECTION] Starting protected collection for slot ${slotIndex}`);\n    \n    try {\n      const response = await axios.post(`${API_BASE}/api/trade-stall/collect-payment`, {\n        playerId: currentPlayer.playerId,\n        slotIndex,\n        transactionId,\n        transactionKey: `${transactionKey}-${slotIndex}`\n      });\n\n      if (response.data.success) {\n        // Update local state with server response\n        if (response.data.tradeStall) {\n          setTradeSlots(response.data.tradeStall);\n        }\n        if (response.data.inventory) {\n          setInventory(response.data.inventory);\n          // Force update currentPlayer to trigger UI refresh\n          setCurrentPlayer(prev => ({\n            ...prev,\n            inventory: response.data.inventory,\n            tradeStall: response.data.tradeStall\n          }));\n        }\n\n        // Track quest progress for selling this item\n        await trackQuestProgress(currentPlayer, 'Sell', response.data.resource, response.data.amount, setCurrentPlayer);\n        \n        // Check if we should increment FTUE step after selling\n        if (currentPlayer.ftuestep === 3) {\n          console.log('🎓 Player at FTUE step 3 sold wheat, incrementing FTUE step');\n          await incrementFTUEStep(currentPlayer.playerId, currentPlayer, setCurrentPlayer);\n        }\n        \n        updateStatus(`💰 Collected ${response.data.collected}.`);\n        \n        // Refresh trade stall data to ensure consistency\n        await fetchDataForViewedPlayer(true); // Skip inventory fetch to preserve server state\n      }\n    } catch (error) {\n      console.error('Error in protected collection:', error);\n      if (error.response?.status === 429) {\n        updateStatus(471);\n      } else {\n        updateStatus('❌ Failed to collect payment');\n      }\n    }\n  };\n\n  return (\n    <Panel onClose={onClose} descriptionKey=\"1008\" titleKey=\"1108\" panelName=\"TradeStall\">\n\n      {/* GLOBAL MARKET BUTTON */}\n\n        <div className=\"shared-buttons\" style={{ display: 'flex', justifyContent: 'center', width: '100%', margin: '4px 0' }}>\n          <button \n            className=\"btn-basic btn-success\"\n            style={{ width: '100%' }}\n            onClick={() => setIsGlobalMarketOpen(true)}\n          >\n            🌍 {strings[362] || \"Global Market\"}\n          </button>\n        </div>\n\n      {/* SEPARATOR AND HEADER */}\n      <div style={{ margin: '16px 0' }}>\n        <hr style={{ border: 'none', borderTop: '1px solid #ddd', margin: '0 0 12px 0' }} />\n        <h3 style={{ textAlign: 'center', margin: '0', fontSize: '16px', fontWeight: 'bold', color: '#333' }}>\n          {strings[367] || \"Your Trade Slots:\"}\n        </h3>\n      </div>\n\n      {/* LOADING INDICATOR */}\n      {isLoadingInitial ? (\n        <div style={{ textAlign: 'center', padding: '40px', fontSize: '1.2rem' }}>\n          {strings[98]}\n        </div>\n      ) : (\n        <>\n          {/* TRADE STALL SLOTS */}\n          <div className=\"trade-stall-slots shared-buttons\">\n        {tradeSlots.map((slot, index) => {\n          // Check if we should hide this slot for FTUE users\n          if (currentPlayer.firsttimeuser === true && currentPlayer.ftuestep <= 3 && index > 0) {\n            return null; // Don't render slots after the first one for new players at step 3 or less\n          }\n          const isOwnStall = true; // Always viewing own stall now\n          const isEmpty = !slot?.resource;\n          const isPurchased = slot?.boughtBy;\n          const isReadyToSell = slot?.sellTime && slot.sellTime <= Date.now();\n          const hasTimer = slot?.sellTime && slot.sellTime > Date.now();\n          const slotUnlocked = isSlotUnlocked(index);\n          const config = getSlotConfig(index);\n          \n          return (\n            <React.Fragment key={index}>\n              <div className=\"trade-slot-container\">\n                {/* 1. SLOT DISPLAY */}\n                <div\n                  className={`trade-slot btn-basic ${isEmpty && slotUnlocked ? 'btn-neutral' : ''} ${!isEmpty && !isPurchased && !isReadyToSell ? 'filled' : ''} ${isPurchased ? 'btn-collect' : ''} ${!slotUnlocked && index >= 4 ? 'locked gold-slot btn-gold' : !slotUnlocked ? 'locked' : ''} ${isReadyToSell && !isPurchased ? 'btn-sell' : ''}`}\n                  onClick={() => {\n                    if (isOwnStall && isEmpty && slotUnlocked) {\n                      handleSlotClick(index);\n                    } else if (isOwnStall && isPurchased) {\n                      // Handle collect payment\n                      handleCollectPayment(`collect-${Date.now()}`, 'collect-payment', index);\n                    } else if (isOwnStall && isReadyToSell && !isPurchased) {\n                      // Handle sell to game\n                      handleSellSingle(`sell-${Date.now()}`, 'sell-to-game', index);\n                    }\n                  }}\n                >\n                  {(index >= 4 && currentPlayer.accountStatus !== 'Gold' && isOwnStall) ? (\n                    // Always show Gold Pass required for slots 5-6 for non-Gold users\n                    <div className=\"trade-slot-locked\">\n                      <div className=\"trade-slot-lock-icon\">🔒</div>\n                      <div className=\"trade-slot-lock-text\">{strings[171]}</div>\n                      <div style={{ fontSize: '0.8rem', marginTop: '4px' }}>\n                        {strings[173]} {config.maxAmount}\n                      </div>\n                      <div style={{ fontSize: '0.8rem' }}>\n                        {formatDuration(config.sellWaitTime / 1000)} {strings[174]}\n                      </div>\n                    </div>\n                  ) : (!slotUnlocked && isOwnStall) ? (\n                    // Show unlock UI for locked slots on own stall\n                    <div className=\"trade-slot-locked\">\n                      <div className=\"trade-slot-lock-icon\">🔒</div>\n                      <div style={{ fontSize: '0.8rem', marginTop: '4px' }}>\n                        {strings[173]} {config.maxAmount}\n                      </div>\n                      <div style={{ fontSize: '0.8rem' }}>\n                        {formatDuration(config.sellWaitTime / 1000)} {strings[174]}\n                      </div>\n                    </div>\n                  ) : isEmpty ? (\n                    <div className=\"trade-slot-empty-text\">\n                      <div>➕ {strings[156]}</div>\n                      <div style={{ fontSize: '0.8rem', marginTop: '4px' }}>\n                        {strings[173]} {config.maxAmount}\n                      </div>\n                      <div style={{ fontSize: '0.8rem' }}>\n                        {formatDuration(config.sellWaitTime / 1000)} {strings[174]}\n                      </div>\n                    </div>\n                  ) : (\n                    <div className=\"trade-slot-content\">\n                      <div className=\"trade-slot-item-name\">\n                        {`${slot.amount}x ${getSymbol(slot.resource)} ${getLocalizedString(slot.resource, strings)}`}\n                      </div>\n                      {isPurchased && (\n                        <>\n                          <div className=\"trade-slot-status\">\n                            {strings[157]} {slot.boughtBy}\n                          </div>\n                          <div className=\"trade-slot-status\">\n                            {strings[318]} 💰{slot.boughtFor}\n                          </div>\n                        </>\n                      )}\n                      {hasTimer && !isPurchased && (\n                        <div className=\"trade-slot-status timer\">\n                          {formatCountdown(slot.sellTime, Date.now())}\n                        </div>\n                      )}\n                      {isReadyToSell && !isPurchased && (\n                        <div className=\"trade-slot-status ready\">\n                          {strings[167]} 💰{Math.floor(slot.amount * slot.price * tradeStallHaircut)}\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n\n                {/* 2. BUTTON CONTAINER */}\n                {(index >= 4 && currentPlayer.accountStatus !== 'Gold' && isOwnStall) ? (\n                  // Show Gold Pass purchase button for slots 5-6\n                  <div className=\"trade-button-container\">\n                    <div className=\"shared-buttons\" style={{ display: 'flex', justifyContent: 'center', width: '100%' }}>\n                      <button \n                        className=\"btn-basic btn-gold\"\n                        style={{ width: '100%' }}\n                        onClick={() => handlePurchase(1, currentPlayer, updateStatus)}\n                      >\n                        {strings[9061]}\n                      </button>\n                    </div>\n                  </div>\n                ) : (!slotUnlocked && isOwnStall) ? (\n                  // Show unlock button for locked non-Gold Pass slots\n                  <div className=\"trade-button-container\">\n                    <div className=\"shared-buttons\" style={{ display: 'flex', justifyContent: 'center', width: '100%' }}>\n                      <button \n                        className=\"btn-basic btn-neutral\"\n                        style={{ width: '100%' }}\n                        onClick={() => handleUnlockSlot(index)}\n                      >\n                        {strings[175]} {config.unlockCost} {getSymbol('Wood')} {strings[176]}\n                      </button>\n                    </div>\n                  </div>\n                ) : null}\n              </div>\n            </React.Fragment>\n          );\n        })}\n      </div>\n        </>\n      )}\n\n{/* //////////////////  INVENTORY MODAL  ///////////////////*/}\n\n      {selectedSlotIndex !== null && (\n        <div className=\"inventory-modal wider\">\n          <button\n            className=\"close-button\"\n            onClick={() => setSelectedSlotIndex(null)}\n          >\n            ✖\n          </button>\n          <h2>{strings[160]}</h2>\n          <p style={{ textAlign: 'center', margin: '0 0 10px 0', fontSize: '14px', color: '#666' }}>\n            {getSlotConfig(selectedSlotIndex).maxAmount} {strings[158]}\n          </p>\n          <div className=\"inventory-modal-scroll\">\n            <table>\n              <thead>\n                <tr>\n                  <th>{strings[161]}</th>\n                  <th>{strings[162]}</th>\n                  <th>{strings[163]}</th>\n                  <th>{strings[164]}</th>\n                  <th></th>\n                </tr>\n              </thead>\n              <tbody>\n                {inventory\n                  .filter((item) => {\n                    const resourceDetails = resourceData.find((res) => res.type === item.type);\n                    return (\n                      item.type !== 'Money' && item.type !== 'Gem'\n                    );\n                  })\n                  .map((item) => {\n                    const resourceDetails = resourceData.find((res) => res.type === item.type);\n                    const price = resourceDetails?.minprice || 'N/A';\n\n                    return (\n                      <tr key={item.type}>\n                        <td>{resourceDetails?.symbol} {getLocalizedString(item.type, strings)}</td>\n                        <td>{item.quantity}</td>\n                        <td>💰 {price}</td>\n                        <td>\n                          <div className=\"amount-input\">\n                            <button\n                              onClick={() =>\n                                handleAmountChange(item.type, (amounts[item.type] || 0) - 1)\n                              }\n                              disabled={(amounts[item.type] || 0) <= 0}\n                            >\n                              -\n                            </button>\n                            <input\n                              type=\"number\"\n                              value={amounts[item.type] || 0}\n                              onChange={(e) =>\n                                handleAmountChange(item.type, parseInt(e.target.value, 10) || 0)\n                              }\n                            />\n                            <button\n                              onClick={() =>\n                                handleAmountChange(item.type, (amounts[item.type] || 0) + 1)\n                              }\n                              disabled={(amounts[item.type] || 0) >= Math.min(item.quantity, getSlotConfig(selectedSlotIndex).maxAmount)}\n                            >\n                              +\n                            </button>\n                            <button\n                              onClick={() =>\n                                handleAmountChange(item.type, Math.min(item.quantity, getSlotConfig(selectedSlotIndex).maxAmount))\n                              }\n                              style={{ marginLeft: '4px' }}\n                            >\n                              {strings[165]}\n                            </button>\n                          </div>\n                        </td>\n                        <td>\n                          <TransactionButton\n                            className=\"add-button\"\n                            onAction={(transactionId, transactionKey) => handleAddToSlot(transactionId, transactionKey, item.type)}\n                            transactionKey={`add-to-trade-slot-${item.type}`}\n                            disabled={\n                              !(amounts[item.type] > 0 && amounts[item.type] <= item.quantity) // Validate amount\n                            }\n                          >\n                            {strings[166]}\n                          </TransactionButton>\n                        </td>\n                      </tr>\n                    );\n                  })}\n              </tbody>\n\n            </table>\n          </div>\n        </div>\n      )}\n\n      {/* GLOBAL MARKET MODAL */}\n      <GlobalMarketModal\n        isOpen={isGlobalMarketOpen}\n        onClose={() => setIsGlobalMarketOpen(false)}\n        currentPlayer={currentPlayer}\n        onBuyItem={handleGlobalMarketBuy}\n        masterResources={masterResources}\n        globalTuning={globalTuning}\n      />\n\n    </Panel>\n  );\n};\n\nexport default TradeStall;","import API_BASE from '../../config';\nimport { useStrings } from '../../UI/StringsContext';\nimport { getLocalizedString } from '../../Utils/stringLookup';\nimport React, { useState, useEffect, useContext } from 'react';\nimport Panel from '../../UI/Panel';\nimport TransactionButton from '../../UI/TransactionButton';\nimport axios from 'axios';\nimport './TradeStall.css';\nimport '../../UI/Modal.css';\nimport '../../UI/SharedButtons.css';\nimport { StatusBarContext } from '../../UI/StatusBar/StatusBar';\nimport { trackQuestProgress } from '../Quests/QuestGoalTracker';\nimport { formatCountdown, formatDuration } from '../../UI/Timers';\nimport { isACrop } from '../../Utils/ResourceHelpers';\nimport { handleProtectedSelling } from '../../Utils/ProtectedSelling';\n\nfunction Outpost({ onClose, backpack, setBackpack, currentPlayer, setCurrentPlayer, gridId, setModalContent, setIsModalOpen, isDeveloper, stationType, currentStationPosition, setResources, setInventory, TILE_SIZE, globalTuning }) {\n  const strings = useStrings();\n  const [tradeSlots, setTradeSlots] = useState([]);\n  const [selectedSlotIndex, setSelectedSlotIndex] = useState(null);\n  const [amounts, setAmounts] = useState({}); // Store amounts per resource\n  const [resourceData, setResourceData] = useState([]); // Store resource data\n  const { updateStatus } = useContext(StatusBarContext);\n  const [masterResources, setMasterResources] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [currentTime, setCurrentTime] = useState(Date.now());\n\n  // Use Trading Post configuration from globalTuning\n  const OUTPOST_SLOTS = 4;\n  const OUTPOST_HAIRCUT = globalTuning?.tradeStallHaircut || 0.25;\n  \n  // Get slot-specific configuration\n  const getSlotConfig = (slotIndex) => {\n    const slotConfig = globalTuning?.tradeStallSlots?.find(slot => slot.slotIndex === slotIndex);\n    return slotConfig || {\n      maxAmount: 50,\n      sellWaitTime: 300000\n    };\n  };\n\n  // Initialize trade slots structure\n  useEffect(() => {\n    const initSlots = [];\n    for (let i = 0; i < OUTPOST_SLOTS; i++) {\n      initSlots.push({\n        slotIndex: i,\n        resource: null,\n        amount: 0,\n        price: 0,\n        sellTime: null,\n        boughtBy: null,\n        boughtFor: null,\n        sellerUsername: null,\n        sellerId: null\n      });\n    }\n    setTradeSlots(initSlots);\n  }, []);\n\n  // Fetch data on component mount\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        // Fetch resource data for prices\n        const resourcesResponse = await axios.get(`${API_BASE}/api/resources`);\n        setResourceData(resourcesResponse.data);\n        setMasterResources(resourcesResponse.data);\n\n        // Fetch grid data to get outpost trade stall\n        const gridResponse = await axios.get(`${API_BASE}/api/load-grid/${gridId}`);\n        \n        if (gridResponse.data.outpostTradeStall && Array.isArray(gridResponse.data.outpostTradeStall)) {\n          setTradeSlots(gridResponse.data.outpostTradeStall);\n        }\n        // Otherwise keep the default slots initialized in the previous useEffect\n      } catch (error) {\n        console.error('Error fetching Outpost data:', error);\n        updateStatus('Failed to load Outpost data');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [gridId]);\n\n  // Update current time every second for live countdown\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentTime(Date.now());\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, []);\n\n  const getSymbol = (resourceType) => {\n    const resource = resourceData.find((res) => res.type === resourceType);\n    return resource?.symbol || '';\n  };\n\n  const handleSlotClick = (index) => {\n    const slot = tradeSlots[index];\n    const isEmpty = !slot?.resource;\n    \n    // Only allow adding items to empty slots\n    if (isEmpty) {\n      setSelectedSlotIndex(index);\n      // Reset amounts when opening modal to prevent quantity persistence bug\n      setAmounts({});\n    }\n  };\n\n  const handleAmountChange = (type, value) => {\n    const resourceInBackpack = backpack.find((item) => item.type === type);\n    const backpackAmount = resourceInBackpack ? resourceInBackpack.quantity : 0;\n    const slotConfig = getSlotConfig(selectedSlotIndex);\n    const maxAmount = Math.min(backpackAmount, slotConfig.maxAmount);\n\n    setAmounts((prev) => ({\n      ...prev,\n      [type]: Math.min(Math.max(0, value), maxAmount),\n    }));\n  };\n\n  const handleAddToSlot = async (transactionId, transactionKey, resource) => {\n    let amount = amounts[resource] || 0;\n    const resourceInBackpack = backpack.find((item) => item.type === resource);\n\n    if (selectedSlotIndex === null || amount <= 0 || !resourceInBackpack || amount > resourceInBackpack.quantity) {\n      console.warn('Invalid amount or resource exceeds available quantity.');\n      return;\n    }\n    \n    // Get slot configuration and enforce max amount limit\n    const slotConfig = getSlotConfig(selectedSlotIndex);\n    if (amount > slotConfig.maxAmount) {\n      amount = slotConfig.maxAmount;\n      console.log(`Amount adjusted to slot limit: ${amount} (max: ${slotConfig.maxAmount})`);\n    }\n\n    // Check if selling all of a crop item\n    if (amount === resourceInBackpack.quantity && isACrop(resource, masterResources)) {\n      const plotResource = masterResources.find(res => res.output === resource && res.category === 'farmplot');\n      const plotHasCost = plotResource && plotResource.ingredient1qty > 0;\n      \n      if (plotHasCost) {\n        setModalContent({\n          title: '⚠️ Warning',\n          message: `This will leave you with 0 ${resource}, so you will not be able to plant ${resource} again.`,\n          message2: 'Are you sure?',\n          size: 'small',\n          onClose: () => setIsModalOpen(false),\n          children: (\n            <div className=\"shared-buttons\" style={{ display: 'flex', gap: '10px', justifyContent: 'center', marginTop: '10px' }}>\n              <button\n                className=\"btn-basic btn-neutral\"\n                onClick={() => setIsModalOpen(false)}\n              >\n                Cancel\n              </button>\n              <button\n                className=\"btn-basic btn-success\"\n                onClick={() => {\n                  setIsModalOpen(false);\n                  performAddToSlot(transactionId, transactionKey, resource, amount);\n                }}\n              >\n                Proceed\n              </button>\n            </div>\n          ),\n        });\n        setIsModalOpen(true);\n        return;\n      }\n    }\n    \n    await performAddToSlot(transactionId, transactionKey, resource, amount);\n  };\n\n  const performAddToSlot = async (transactionId, transactionKey, resource, amount) => {\n    const resourceDetails = resourceData.find((item) => item.type === resource);\n    const price = resourceDetails?.minprice || 0;\n    const slotConfig = getSlotConfig(selectedSlotIndex);\n\n    try {\n      // Update grid's outpost trade stall\n      const response = await axios.post(`${API_BASE}/api/outpost/add-item`, {\n        gridId,\n        slotIndex: selectedSlotIndex,\n        resource,\n        amount,\n        price,\n        sellTime: Date.now() + slotConfig.sellWaitTime,\n        sellerUsername: currentPlayer.username,\n        sellerId: currentPlayer.playerId,\n        transactionId,\n        transactionKey\n      });\n\n      if (response.data.success) {\n        // Update local state\n        setTradeSlots(response.data.outpostTradeStall);\n        \n        // Update backpack\n        const updatedBackpack = backpack.map(item =>\n          item.type === resource\n            ? { ...item, quantity: item.quantity - amount }\n            : item\n        ).filter(item => item.quantity > 0);\n        \n        setBackpack(updatedBackpack);\n        setCurrentPlayer(prev => ({\n          ...prev,\n          backpack: updatedBackpack\n        }));\n        \n        setSelectedSlotIndex(null);\n        updateStatus(`Added ${amount}x ${resource} to Outpost`);\n      }\n    } catch (error) {\n      console.error('Error adding item to Outpost:', error);\n      updateStatus('Failed to add item to Outpost');\n      throw error;\n    }\n  };\n\n  const handleBuyItem = async (transactionId, transactionKey, slotIndex) => {\n    const slot = tradeSlots[slotIndex];\n    if (!slot || !slot.resource || slot.boughtBy) return;\n\n    const totalCost = slot.amount * slot.price;\n    const currentMoney = currentPlayer.inventory?.find(item => item.type === 'Money')?.quantity || 0;\n    \n    if (totalCost > currentMoney) {\n      updateStatus(152); // Not enough money\n      return;\n    }\n\n    try {\n      const response = await axios.post(`${API_BASE}/api/outpost/buy-item`, {\n        gridId,\n        slotIndex,\n        buyerId: currentPlayer.playerId,\n        buyerUsername: currentPlayer.username,\n        transactionId,\n        transactionKey\n      });\n\n      if (response.data.success) {\n        // Update local state\n        setTradeSlots(response.data.outpostTradeStall);\n        \n        // Update player's inventory (money and purchased item)\n        if (response.data.inventory) {\n          setCurrentPlayer(prev => ({\n            ...prev,\n            inventory: response.data.inventory\n          }));\n        }\n        \n        updateStatus(`Bought ${slot.amount}x ${slot.resource} for ${totalCost}`);\n      }\n    } catch (error) {\n      console.error('Error buying from Outpost:', error);\n      updateStatus('Failed to buy item');\n      throw error;\n    }\n  };\n\n  const handleCollectPayment = async (transactionId, transactionKey, slotIndex) => {\n    const slot = tradeSlots[slotIndex];\n    if (!slot || slot.sellerId !== currentPlayer.playerId || !slot.boughtBy) return;\n\n    try {\n      const response = await axios.post(`${API_BASE}/api/outpost/collect-payment`, {\n        gridId,\n        slotIndex,\n        playerId: currentPlayer.playerId,\n        transactionId,\n        transactionKey\n      });\n\n      if (response.data.success) {\n        // Update local state\n        setTradeSlots(response.data.outpostTradeStall);\n        \n        // Update player's inventory (money)\n        if (response.data.inventory) {\n          setCurrentPlayer(prev => ({\n            ...prev,\n            inventory: response.data.inventory\n          }));\n        }\n        \n        updateStatus(`💰 Collected ${slot.boughtFor}.`);\n      }\n    } catch (error) {\n      console.error('Error collecting payment:', error);\n      updateStatus('Failed to collect payment');\n      throw error;\n    }\n  };\n\n  const handleSellStation = async (transactionId, transactionKey) => {\n    await handleProtectedSelling({\n      currentPlayer,\n      setInventory,\n      setBackpack,\n      setCurrentPlayer,\n      setResources,\n      stationType,\n      currentStationPosition,\n      gridId,\n      TILE_SIZE,\n      updateStatus,\n      onClose\n    });\n  };\n\n  const handleSellToGame = async (transactionId, transactionKey, slotIndex) => {\n    const slot = tradeSlots[slotIndex];\n    if (!slot || !slot.resource || slot.sellerId !== currentPlayer.playerId) return;\n\n    try {\n      const response = await axios.post(`${API_BASE}/api/outpost/sell-to-game`, {\n        gridId,\n        slotIndex,\n        playerId: currentPlayer.playerId,\n        transactionId,\n        transactionKey\n      });\n\n      if (response.data.success) {\n        // Update local state\n        setTradeSlots(response.data.outpostTradeStall);\n        \n        // Update player's inventory (money)\n        if (response.data.inventory) {\n          setCurrentPlayer(prev => ({\n            ...prev,\n            inventory: response.data.inventory\n          }));\n        }\n        \n        updateStatus(`💰 Sold ${response.data.amount}x ${response.data.resource} for ${response.data.sold}.`);\n      }\n    } catch (error) {\n      console.error('Error selling to game:', error);\n      updateStatus('Failed to sell item');\n      throw error;\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <Panel onClose={onClose} descriptionKey=\"1008\" titleKey=\"1108\" panelName=\"OutpostPanel\">\n        <div style={{ textAlign: 'center', padding: '20px' }}>\n          {strings[98]} {/* Loading... */}\n        </div>\n      </Panel>\n    );\n  }\n\n  return (\n    <Panel onClose={onClose} descriptionKey=\"1008\" titleKey=\"1108\" panelName=\"OutpostPanel\">\n      \n      {/* Outpost header */}\n      <div className=\"outpost-header\">\n        {strings?.[179] || 'Outpost'}\n      </div>\n\n      {/* Trade slots */}\n      <div className=\"trade-stall-slots\">\n        {tradeSlots.slice(0, OUTPOST_SLOTS).map((slot, index) => {\n          const isEmpty = !slot?.resource;\n          const isPurchased = slot?.boughtBy;\n          const isOwnItem = slot?.sellerId === currentPlayer.playerId;\n          const isReadyToSell = slot?.sellTime && slot.sellTime <= currentTime && isOwnItem;\n          const hasTimer = slot?.sellTime && slot.sellTime > currentTime;\n\n          return (\n            <div key={index} className=\"trade-slot-container\">\n              <div\n                className={`trade-slot ${isEmpty ? 'empty' : 'filled'} ${isPurchased ? 'purchased' : ''}`}\n                onClick={() => handleSlotClick(index)}\n                style={{ cursor: isEmpty ? 'pointer' : 'default' }}\n              >\n                {isEmpty ? (\n                  <div className=\"trade-slot-empty-text\">\n                    <div>➕ {strings[156]}</div>\n                    <div style={{ fontSize: '0.8rem', marginTop: '4px' }}>\n                      {strings[173]} {getSlotConfig(index).maxAmount}\n                    </div>\n                    <div style={{ fontSize: '0.8rem' }}>\n                      {formatDuration(getSlotConfig(index).sellWaitTime / 1000)} {strings[174]}\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"trade-slot-content\">\n                    <div className=\"trade-slot-item-name\">\n                      {`${slot.amount}x ${getSymbol(slot.resource)} ${getLocalizedString(slot.resource, strings)}`}\n                    </div>\n                    {slot.sellerUsername && (\n                      <div style={{ fontSize: '0.75rem', color: '#666' }}>\n                        {slot.sellerUsername}\n                      </div>\n                    )}\n                    {isPurchased && (\n                      <div className=\"trade-slot-status\">\n                        {strings[157]} {slot.boughtBy}\n                      </div>\n                    )}\n                    {hasTimer && !isPurchased && (\n                      <div className=\"trade-slot-status timer\">\n                        {formatCountdown(slot.sellTime, currentTime)}\n                      </div>\n                    )}\n                    {isReadyToSell && !isPurchased && (\n                      <div className=\"trade-slot-status ready\">\n                        {strings[159]}\n                      </div>\n                    )}\n                  </div>\n                )}\n              </div>\n\n              {/* Action buttons */}\n              {!isEmpty && (\n                <div className=\"trade-button-container\">\n                  {isPurchased && isOwnItem ? (\n                    <TransactionButton\n                      className=\"trade-collect-button collect-payment\"\n                      onAction={(transactionId, transactionKey) => handleCollectPayment(transactionId, transactionKey, index)}\n                      transactionKey={`outpost-collect-${index}`}\n                    >\n                      Collect 💰{slot.boughtFor}\n                    </TransactionButton>\n                  ) : !isPurchased && !isOwnItem ? (\n                    <TransactionButton\n                      className=\"trade-buy-button enabled\"\n                      onAction={(transactionId, transactionKey) => handleBuyItem(transactionId, transactionKey, index)}\n                      transactionKey={`outpost-buy-${index}`}\n                    >\n                      Buy 💰{slot.amount * slot.price}\n                    </TransactionButton>\n                  ) : isReadyToSell && isOwnItem ? (\n                    <TransactionButton\n                      className=\"trade-collect-button sell-to-game\"\n                      onAction={(transactionId, transactionKey) => handleSellToGame(transactionId, transactionKey, index)}\n                      transactionKey={`outpost-sell-${index}`}\n                    >\n                      Sell 💰{Math.floor(slot.amount * slot.price * OUTPOST_HAIRCUT)}\n                    </TransactionButton>\n                  ) : (\n                    <button className=\"trade-collect-button disabled\" disabled>\n                      {hasTimer ? 'Wait...' : 'No Action'}\n                    </button>\n                  )}\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n\n      {/* Inventory modal for adding items */}\n      {selectedSlotIndex !== null && (\n        <div className=\"inventory-modal wider\">\n          <button\n            className=\"close-button\"\n            onClick={() => setSelectedSlotIndex(null)}\n          >\n            ✖\n          </button>\n          <h3>{strings[160]}</h3>\n          <p style={{ textAlign: 'center', margin: '0 0 10px 0', fontSize: '14px', color: '#666' }}>\n            {getSlotConfig(selectedSlotIndex).maxAmount} {strings[158]}\n          </p>\n          <div className=\"inventory-modal-scroll\">\n            <table>\n              <thead>\n                <tr>\n                  <th>{strings[161]}</th>\n                  <th>{strings[162]}</th>\n                  <th>{strings[163]}</th>\n                  <th>{strings[164]}</th>\n                  <th></th>\n                </tr>\n              </thead>\n              <tbody>\n                {(backpack || [])\n                  .filter(item => item.type !== 'Money' && item.type !== 'Gem')\n                  .map((item) => {\n                    const resourceDetails = resourceData.find((res) => res.type === item.type);\n                    const price = resourceDetails?.minprice || 'N/A';\n\n                    return (\n                      <tr key={item.type}>\n                        <td>{resourceDetails?.symbol} {getLocalizedString(item.type, strings)}</td>\n                        <td>{item.quantity}</td>\n                        <td>{price}</td>\n                        <td>\n                          <div className=\"amount-input\">\n                            <button\n                              onClick={() =>\n                                handleAmountChange(item.type, (amounts[item.type] || 0) - 1)\n                              }\n                              disabled={(amounts[item.type] || 0) <= 0}\n                            >\n                              -\n                            </button>\n                            <input\n                              type=\"number\"\n                              value={amounts[item.type] || 0}\n                              onChange={(e) =>\n                                handleAmountChange(item.type, parseInt(e.target.value, 10) || 0)\n                              }\n                            />\n                            <button\n                              onClick={() =>\n                                handleAmountChange(item.type, (amounts[item.type] || 0) + 1)\n                              }\n                              disabled={(amounts[item.type] || 0) >= Math.min(item.quantity, getSlotConfig(selectedSlotIndex).maxAmount)}\n                            >\n                              +\n                            </button>\n                            <button\n                              onClick={() =>\n                                handleAmountChange(item.type, Math.min(item.quantity, getSlotConfig(selectedSlotIndex).maxAmount))\n                              }\n                              style={{ marginLeft: '5px' }}\n                            >\n                              {strings[165]}\n                            </button>\n                          </div>\n                        </td>\n                        <td>\n                          <TransactionButton\n                            className=\"add-button\"\n                            onAction={(transactionId, transactionKey) => handleAddToSlot(transactionId, transactionKey, item.type)}\n                            transactionKey={`outpost-add-${item.type}`}\n                            disabled={!(amounts[item.type] > 0 && amounts[item.type] <= item.quantity)}\n                          >\n                            {strings[166]}\n                          </TransactionButton>\n                        </td>\n                      </tr>\n                    );\n                  })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n      \n      {/* Sell for Refund button - only visible for developers */}\n      {isDeveloper && (\n        <>\n          <br />\n          <div className=\"shared-buttons\">\n            <TransactionButton \n              className=\"btn-basic btn-success\" \n              onAction={handleSellStation}\n              transactionKey={`sell-refund-${stationType}-${currentStationPosition?.x}-${currentStationPosition?.y}-${gridId}`}\n            >\n              {strings[425] || 'Sell for Refund'}\n            </TransactionButton>\n          </div>\n        </>\n      )}\n    </Panel>\n  );\n}\n\nexport default React.memo(Outpost);","import API_BASE from '../../config';\nimport axios from 'axios';\nimport React, { useState, useEffect, useContext } from 'react';\nimport { StatusBarContext } from '../../UI/StatusBar/StatusBar';\nimport Modal from '../../UI/Modal';\nimport TransactionButton from '../../UI/TransactionButton';\nimport '../../UI/SharedButtons.css';\nimport './Mailbox.css';\nimport { trackQuestProgress } from '../Quests/QuestGoalTracker';\nimport { refreshPlayerAfterInventoryUpdate } from '../../Utils/InventoryManagement';\nimport playersInGridManager from '../../GridState/PlayersInGrid';\nimport { loadMasterResources } from '../../Utils/TuningManager';\nimport { updateBadge } from '../../Utils/appUtils';\nimport { useStrings } from '../../UI/StringsContext';\n\nfunction Mailbox({ \n  onClose, \n  inventory,\n  setInventory, \n  backpack, \n  setBackpack,\n  currentPlayer, \n  setCurrentPlayer, \n  resources,\n  updateStatus,\n  masterResources,\n}) {\n  const strings = useStrings();\n  const [templates, setTemplates] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [markedReadIds, setMarkedReadIds] = useState([]);\n  const gridId = currentPlayer?.location?.g;\n  const [visibleMessages, setVisibleMessages] = useState(currentPlayer?.messages || []);\n\n  useEffect(() => {\n    if (Array.isArray(currentPlayer?.messages)) {\n      setVisibleMessages(currentPlayer.messages);\n    }\n  }, [currentPlayer?.messages]);\n \n  useEffect(() => {\n  const fetchTemplatesAndMessages = async () => {\n    try {\n      const response = await fetch(`${API_BASE}/api/messages`);\n      const templates = await response.json();\n      setTemplates(templates);\n      updateBadge(currentPlayer, () => {}, 'mailbox', false); // 🧼 Clear badge\n      setLoading(false);\n      const res = await axios.get(`${API_BASE}/api/player/${currentPlayer.playerId}`);\n      const freshMessages = res.data.messages || [];\n      const unreadMessages = freshMessages.filter(msg => !msg.read);\n\n      if (unreadMessages.length > 0) {\n        const updatedMessages = freshMessages.map(msg =>\n          !msg.read ? { ...msg, read: true } : msg\n        );\n        // Save only to the DB — don't update local state yet\n        await axios.post(`${API_BASE}/api/update-player-messages`, {\n          playerId: currentPlayer.playerId,\n          messages: updatedMessages,\n        });\n        // Track which ones we updated\n        setMarkedReadIds(unreadMessages.map(msg => msg.messageId));\n      }\n      // Still show original messages (not visually marked as read yet)\n      setCurrentPlayer(prev => ({ ...prev, messages: freshMessages }));\n      setVisibleMessages(freshMessages);\n\n    } catch (err) {\n      console.error(\"❌ Error fetching or updating mailbox data:\", err);\n    }\n  };\n  fetchTemplatesAndMessages();\n}, []);\n\n\n  // Protected function to collect mailbox rewards using transaction system\n  const handleCollect = async (transactionId, transactionKey, messageIndex) => {\n    console.log(`🔒 [PROTECTED MAILBOX] Starting protected collection for message ${messageIndex}`);\n    \n    try {\n      const response = await axios.post(`${API_BASE}/api/mailbox/collect-rewards`, {\n        playerId: currentPlayer.playerId,\n        messageIndex,\n        transactionId,\n        transactionKey\n      });\n\n      if (response.data.success) {\n        // Update local state with server response\n        const { messages, inventory, backpack, skills, powers, relocations, collectedItems } = response.data;\n        \n        // Update all player data from server response\n        setCurrentPlayer(prev => ({\n          ...prev,\n          messages: messages || prev.messages,\n          inventory: inventory || prev.inventory,\n          backpack: backpack || prev.backpack,\n          skills: skills || prev.skills,\n          powers: powers || prev.powers,\n          relocations: relocations !== undefined ? relocations : prev.relocations\n        }));\n\n        // Update local state\n        if (inventory) setInventory(inventory);\n        if (backpack) setBackpack(backpack);\n        setVisibleMessages(messages || []);\n\n        // Handle quest progress tracking for skills\n        if (skills && collectedItems) {\n          for (const item of collectedItems) {\n            const match = item.match(/(\\d+)\\s+(.+)/);\n            if (match) {\n              const [, qty, skillType] = match;\n              if (skills.some(s => s.type === skillType)) {\n                await trackQuestProgress(currentPlayer, 'Gain skill with', skillType, parseInt(qty), setCurrentPlayer);\n              }\n            }\n          }\n        }\n\n        // Refresh player data to ensure consistency\n        await refreshPlayerAfterInventoryUpdate(currentPlayer.playerId, setCurrentPlayer);\n\n        const template = templates.find(t => t.id === currentPlayer.messages[messageIndex]?.messageId);\n        updateStatus(`Collected rewards: ${collectedItems.join(', ')}`);\n      }\n    } catch (error) {\n      console.error('Error in protected mailbox collection:', error);\n      if (error.response?.status === 429) {\n        updateStatus(471);\n      } else {\n        updateStatus('❌ Failed to collect rewards');\n      }\n    }\n  };\n\n  const getSymbol = (type) => {\n    return resources.find(r => r.type === type)?.symbol || \"\";\n  };\n\n\nconst renderRewards = (rewards) => {\n  if (!rewards || rewards.length === 0) return null;\n  return (\n    <div className=\"reward-summary\">\n      {rewards.map((r, idx) => (\n        <span key={idx} className=\"reward-item\">\n          {getSymbol(r.item)} {r.qty} {r.item}\n        </span>\n      ))}\n    </div>\n  );\n};\n\n  // Prevent error if player or messages are not loaded\n  if (!currentPlayer || !Array.isArray(currentPlayer.messages)) {\n    return (\n      <Modal onClose={onClose} title={strings[1606]} message=\"No messages available.\" />\n    );\n  }\n\n  const deleteMessage = async (playerId, messageIndex) => {\n    try {\n      const updatedMessages = [...currentPlayer.messages];\n      updatedMessages.splice(messageIndex, 1); // Remove the one at this index only\n    \n      await axios.post(`${API_BASE}/api/update-player-messages`, {\n        playerId,\n        messages: updatedMessages,\n      });\n  \n      setCurrentPlayer((prev) => ({\n        ...prev,\n        messages: updatedMessages,\n      }));\n  \n      updateStatus(1607);\n    } catch (error) {\n      console.error(\"❌ Error deleting message:\", error);\n      updateStatus(\"❌ Failed to delete message.\");\n    }\n  };\n\n  const handleClose = () => {\n    console.log(\"📭 Closing mailbox\");\n    setMarkedReadIds([]); // clear visual state\n    onClose();            // call parent-provided close\n  };\n\n\n  return (\n    <Modal onClose={handleClose} title={strings[1606]} className=\"mailbox-modal\">\n      {loading && visibleMessages.length === 0 ? (\n        <p>{strings[1601]}</p>\n      ) : visibleMessages.length === 0 ? (\n        <p>{strings[1602]}</p>\n      ) : (\n        [...visibleMessages].reverse().map((msg, index) => {\n          const template = templates.find((t) => t.id === msg.messageId);\n\n          if (!template) {\n            console.warn(`📭 No template found for messageId: ${msg.messageId}`);\n            return null;\n          }\n\n          const rewards = (msg.rewards && msg.rewards.length > 0)\n            ? msg.rewards\n            : template.rewards;\n\n          return (\n            <div key={index} className=\"mailbox-message\">\n              {/* Left side: message content */}\n              <div className=\"message-left\">\n                <h3>\n                  {template.title}\n                  {(!msg.read || markedReadIds.includes(msg.messageId)) && (\n                    <span className=\"unread-tag\">🆕</span>\n                  )}\n                </h3>\n                <p className=\"message-body\">{template.body}</p>\n                <p className=\"mailbox-timestamp\">\n                  {strings[1603]}: {new Date(msg.timestamp).toLocaleString()}\n                </p>\n              </div>\n\n              {/* Right side: reward line + buttons */}\n              <div className=\"message-actions\">\n                {rewards?.length > 0 && renderRewards(rewards)}\n\n                <div className=\"shared-buttons\" style={{ display: 'flex', gap: '8px' }}>\n                  {rewards?.length > 0 && (\n                    <TransactionButton\n                      className=\"btn-basic btn-success btn-modal-small\"\n                      transactionKey={`mailbox-collect-${msg.messageId}-${visibleMessages.length - 1 - index}`}\n                      onAction={(transactionId, transactionKey) => handleCollect(transactionId, transactionKey, visibleMessages.length - 1 - index)}\n                    >\n                      {strings[1604]} \n                    </TransactionButton>\n                  )}\n                  <button\n                    className=\"btn-basic btn-neutral btn-modal-small\"\n                    style={{ width: '40px', backgroundColor: '#e0e0e0' }}\n                    title=\"Delete\"\n                    onClick={() => {\n                      if (window.confirm(\"Are you sure you want to delete this message?\")) {\n                        deleteMessage(currentPlayer.playerId, index);\n                      }\n                    }}\n                  >\n                    🗑️\n                  </button>\n                </div>\n              </div>\n            </div>\n          );\n        })\n      )}                      \n      <p>{strings[1605]}</p>\n    </Modal>\n  );\n}\n\nexport default Mailbox;","// src/GameFeatures/Seasons/OffSeasonModal.js\nimport React, { useState, useEffect } from 'react';\nimport Modal from '../../UI/Modal';\nimport { useStrings } from '../../UI/StringsContext';\nimport { formatCountdown } from '../../UI/Timers';\nimport axios from 'axios';\nimport API_BASE from '../../config';\n\nfunction OffSeasonModal({ onClose, currentPlayer }) {\n  const strings = useStrings();\n  const [countdown, setCountdown] = useState(\"...\");\n  const [seasons, setSeasons] = useState([]);\n  const [seasonData, setSeasonData] = useState({ type: \"Unknown\", phase: \"Unknown\", endTime: null });\n  const [richestCitizens, setRichestCitizens] = useState([]);\n  const [secondsLeft, setSecondsLeft] = useState(null);\n\n  // Load timers from localStorage\n  useEffect(() => {\n    const storedTimers = JSON.parse(localStorage.getItem(\"timers\"));\n    const data = storedTimers?.seasons || { type: \"Unknown\", phase: \"Unknown\", endTime: null };\n    setSeasonData(data);\n  }, []);\n\n  // Fetch tuning data (seasons.json)\n  useEffect(() => {\n    const fetchSeasons = async () => {\n      try {\n        const response = await axios.get(`${API_BASE}/api/tuning/seasons`);\n        setSeasons(response.data);\n      } catch (err) {\n        console.error(\"❌ Failed to load season tuning:\", err);\n      }\n    };\n\n    fetchSeasons();\n  }, []);\n\n  // Update live countdown\n  useEffect(() => {\n    const update = () => {\n      const now = new Date();\n      const end = new Date(seasonData.endTime);\n      setCountdown(formatCountdown(end, now));\n    };\n\n    update();\n    const interval = setInterval(update, 1000);\n    return () => clearInterval(interval);\n  }, [seasonData]);\n\n    // Calculate raw seconds remaining (for refresh trigger)\n    useEffect(() => {\n      const interval = setInterval(() => {\n        const now = Date.now();\n        const end = new Date(seasonData.endTime).getTime();\n        const diff = Math.floor((end - now) / 1000);\n        setSecondsLeft(diff);\n      }, 1000);\n      return () => clearInterval(interval);\n    }, [seasonData]);\n\n  // 🔁 Force refresh when 20 seconds remain\n  useEffect(() => {\n    if (secondsLeft === 20) {\n      console.warn(\"🔁 Forcing refresh — countdown reached 10s\");\n      window.location.reload();\n    }\n  }, [secondsLeft]);\n\n\n  useEffect(() => {\n    const fetchSeasonWinners = async () => {\n      try {\n        if (!currentPlayer?.frontierId) return;\n\n        const response = await axios.get(`${API_BASE}/api/get-frontier/${currentPlayer.frontierId}`);\n        const seasonLog = response.data?.seasonlog || [];\n        const currentSeasonNumber = response.data?.seasons?.seasonNumber;\n\n        const lastSeason = seasonLog.find(entry => entry.seasonnumber === currentSeasonNumber);\n        const winners = lastSeason?.seasonwinners || [];\n\n        setRichestCitizens(winners.map((w, i) => ({\n          username: w.username,\n          netWorth: w.networth\n        })));\n      } catch (error) {\n        console.error(\"❌ Error fetching season winners:\", error);\n      }\n    };\n\n    fetchSeasonWinners();\n  }, [currentPlayer]);\n\n\n\n\n  const currentIndex = seasons.findIndex(s => s.seasonType === seasonData.type);\n  const previousIndex = (currentIndex - 1 + seasons.length) % seasons.length;\n  \n  const previousSeason = currentIndex >= 0\n    ? seasons[previousIndex]\n    : { seasonType: \"Unknown\" };\n    \n  const title = `🗓️ ${previousSeason.seasonType} → ${seasonData.type}`;\n  const message = strings[\"5035\"];   // \"We are between seasons!\"\n  const message2 = strings[\"5036\"]; // \"Valley View is temporarily unavailable while we reset the season.\"\n\n  return (\n    <Modal\n      isOpen={true}\n      onClose={onClose}\n      title={title}\n      message={message}\n      message2={message2}\n      size=\"standard\"\n    >\n      <h2><strong>{seasonData.type} begins in:</strong> {countdown}</h2>\n\n        <h3>💰 Results from {previousSeason.seasonType}</h3>\n        {richestCitizens.length > 0 ? (\n        richestCitizens.map((c, i) => (\n            <p key={i}>{i + 1}. <strong>{c.username}</strong> – Net Worth: {c.netWorth}</p>\n        ))\n        ) : (\n        <p>No data available.</p>\n        )}\n        <br />\n\n\n      <ul style={{ paddingLeft: \"1.5rem\", marginBottom: \"1rem\" }}>\n        <p>🧑‍🌾 Sending players home</p>\n        <p>🛠️ Resetting towns and valleys</p>\n        <p>💰 Nerfing money accounts</p>\n        <p>📬 Sending out rewards</p>\n      </ul>\n\n\n      <br />\n    </Modal>\n  );\n}\n\nexport default OffSeasonModal;","import API_BASE from '../config';\nimport React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\nimport Modal from './Modal';\nimport './TownNews.css';\nimport { StatusBarContext } from './StatusBar/StatusBar';\nimport { useStrings } from './StringsContext';\nimport { formatCountdown } from './Timers';\nimport { getMayorUsername } from '../GameFeatures/Government/GovUtils';\n\nfunction TownNews({ onClose, currentPlayer, setCurrentPlayer }) {\n    const strings = useStrings();\n    // Settlement data\n    const [settlementName, setSettlementName] = useState(\"\");\n    const [mayor, setMayor] = useState(\"\");\n    const [taxRate, setTaxRate] = useState(0);\n\n    // Timer states\n    const [electionPhase, setElectionPhase] = useState(\"\");\n    const [trainPhase, setTrainPhase] = useState(\"\");\n    const [bankPhase, setBankPhase] = useState(\"\");\n    \n    // Offer states\n    const [currentTrainOffers, setCurrentTrainOffers] = useState([]);\n    const [nextTrainOffers, setNextTrainOffers] = useState([]);\n    const [bankOffers, setBankOffers] = useState([]);\n    \n    // Countdown timers\n    const [trainTimer, setTrainTimer] = useState(\"\");\n    const [electionTimer, setElectionTimer] = useState(\"\");\n    const [bankTimer, setBankTimer] = useState(\"\");\n\n    // Simplify to just show unique items\n    const formatOffers = (offers) => {\n        if (!offers?.length) return \"no items\";\n        const uniqueItems = [...new Set(offers.map(offer => offer.itemBought))];\n        return uniqueItems.join(\", \");\n    };\n\n    const fetchTownData = async () => {\n        try { \n            // Fetch settlement data\n            const settlementResponse = await axios.get(\n                `${API_BASE}/api/get-settlement/${currentPlayer.settlementId}`);\n            const settlement = settlementResponse.data;\n            \n            console.log(\"Settlement data fetched:\", settlement);\n            setSettlementName(settlement.displayName);\n            setTaxRate(settlement.taxrate);\n\n            const mayorName = await getMayorUsername(currentPlayer.settlementId);\n            console.log(\"👑 Mayor:\", mayorName);\n            setMayor(mayorName);\n\n            // Get current train offers\n            setCurrentTrainOffers(settlement.currentoffers);\n            setNextTrainOffers(settlement.nextoffers);\n\n            // Get Bank offers from frontier\n            const frontierResponse = await axios.get(`${API_BASE}/api/get-frontier/${currentPlayer.frontierId}`);\n            setBankOffers(frontierResponse.data.bank?.offers || []);\n\n            // Get phases and timers from localStorage\n            const storedTimers = JSON.parse(localStorage.getItem(\"timers\")) || {};\n            setBankPhase(storedTimers.bank?.phase || \"\");\n            setTrainPhase(storedTimers.train?.phase || \"\");\n            setElectionPhase(storedTimers.elections?.phase || \"\");\n\n            // Update timers\n            const now = Date.now();\n            setTrainTimer(formatCountdown(storedTimers.train?.endTime, now));\n            setElectionTimer(formatCountdown(storedTimers.elections?.endTime, now));\n            setBankTimer(formatCountdown(storedTimers.bank?.endTime, now));\n\n        } catch (error) {\n            console.error('Error fetching town data:', error);\n        }\n    };\n \n    // Initial fetch and timer updates\n    useEffect(() => {\n        fetchTownData();\n        const interval = setInterval(fetchTownData, 1000);\n        return () => clearInterval(interval);\n    }, [currentPlayer]);\n\n    return (\n        <Modal \n            onClose={onClose} \n            className=\"modal-TownNews\"\n            size=\"standard\"\n        >\n            <h3>{strings[\"1501\"]} \"{settlementName || \"...\"}\"</h3>\n            \n            {mayor ? (\n                /* The current mayor is */\n                <p>{strings[\"1502\"]} {mayor}{strings[\"1503\"]} {taxRate}%.</p>  \n            ) : (\n                /* No mayor */\n                <> <p>{strings[\"1512\"]} {strings[\"1515\"]} {taxRate}%.</p>  </>\n            )}\n            \n            <h4>{strings[\"1504\"]}</h4>\n\n            {/* Election Updates */}\n            {electionPhase === \"Campaigning\" && (\n                <p>{strings[\"1505\"]}</p>\n            )}\n            {electionPhase === \"Voting\" && (\n                <p>{strings[\"1506\"]}</p>\n            )}\n            {electionPhase === \"Counting\" && (\n                <p>{strings[\"1518\"]} {electionTimer}.</p>\n            )}\n\n            {/* Modified Train Updates */}\n            {trainPhase === \"arriving\" && (\n                <p>{strings[\"1507\"]} {formatOffers(currentTrainOffers)}.</p>\n            )}\n            {trainPhase === \"departing\" && (\n                <p>{strings[\"1513\"]} {trainTimer}. {strings[\"1514\"]} {formatOffers(nextTrainOffers)}.</p>\n            )}\n            {trainPhase === \"loading\" && (\n                <>\n                    <p>{strings[\"1509\"]} {formatOffers(currentTrainOffers)}. {strings[\"1517\"]} {trainTimer}.</p>\n                </>\n            )}\n\n            {/* Bank Updates */}\n            {bankPhase === \"active\" && (\n                <p>{strings[\"1516\"]} {formatOffers(bankOffers)}.</p>\n            )}\n            {bankPhase === \"refreshing\" && (\n                <p>{strings[\"1511\"]}</p>\n            )}\n        </Modal>\n    );\n}\n\nexport default TownNews;","import API_BASE from '../../config';\nimport React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport Panel from '../../UI/Panel';\nimport { formatCountdown } from '../../UI/Timers';\nimport '../../UI/Modal.css';\nimport '../../UI/SharedButtons.css';\nimport { calculateSettlementPopulation } from '../../Utils/PopulationUtils';\nimport { useStrings } from '../../UI/StringsContext';\n\nfunction SeasonPanel({ onClose, currentPlayer, setModalContent, setIsModalOpen }) {\n  const strings = useStrings();\n  const [countdown, setCountdown] = useState(\"\");\n  const [topCitizens, setTopCitizens] = useState([]);\n  const [topSettlementName, setTopSettlementName] = useState(\"\");\n  const [seasonCycle, setSeasonCycle] = useState([]);\n  const [highestWealth, setHighestWealth] = useState(0);\n  const [settlementMap, setSettlementMap] = useState({});\n\n\n  // ✅ Fetch season data from local storage\n  const getSeasonData = () => {\n    const storedTimers = JSON.parse(localStorage.getItem(\"timers\"));\n    return storedTimers?.seasons || { type: \"Unknown\", phase: \"Unknown\", endTime: null };\n  };\n\n  const getNextSeason = (currentSeason) => {\n    if (!seasonCycle.length || !currentSeason) return \"Unknown\";\n    const currentIndex = seasonCycle.findIndex(s => s.seasonType === currentSeason);\n    const nextIndex = (currentIndex + 1) % seasonCycle.length;\n    return seasonCycle[nextIndex]?.seasonType || \"Unknown\";\n  };\n  \n  useEffect(() => {\n    const fetchSeasonCycle = async () => {\n      try {\n        const response = await axios.get(`${API_BASE}/api/tuning/seasons`);\n        setSeasonCycle(response.data);\n      } catch (error) {\n        console.error(\"❌ Failed to fetch season cycle\", error);\n      }\n    };\n  \n    fetchSeasonCycle();\n  }, []);\n\n  // ✅ Compute real-time countdown from local timer state\n  useEffect(() => {\n    const updateCountdown = () => {\n      const seasonData = getSeasonData();\n      const now = new Date();\n      const end = new Date(seasonData?.endTime);\n      setCountdown(formatCountdown(end, now));\n    };\n  \n    updateCountdown();\n    const interval = setInterval(updateCountdown, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n\n  // ✅ Fetch top 3 wealthiest citizens across the frontier and leading settlement\n  useEffect(() => {\n    const fetchTopCitizensAndSettlement = async () => {\n      if (!currentPlayer || !currentPlayer.frontierId) {\n        console.warn(\"⚠️ currentPlayer or frontierId is not available yet.\");\n        return;\n      }\n      try {\n        console.log(\"💰 Fetching top citizens and leading settlement for frontier:\", currentPlayer.frontierId);\n        \n        // Fetch all players in this frontier with developer status\n        const response = await axios.get(`${API_BASE}/api/players-by-frontier-with-dev-status/${currentPlayer.frontierId}`);\n        const players = response.data;\n\n        const settlementRes = await axios.get(`${API_BASE}/api/settlements`);\n        const settlements = settlementRes.data;\n        const settlementMap = settlements.reduce((acc, s) => {\n          acc[s._id] = s.displayName || s.name || \"Unknown Settlement\";\n          return acc;\n        }, {});\n        setSettlementMap(settlementMap);\n\n        // Group players by settlementId and sum their net worths, excluding developers\n        const settlementWealthMap = {};\n        players.forEach(player => {\n          if (player.isDeveloper) return; // Skip developers\n          const settlementId = player.settlementId || \"unknown\";\n          const netWorth = player.netWorth || 0;\n          if (!settlementWealthMap[settlementId]) {\n            settlementWealthMap[settlementId] = { totalNetWorth: 0, settlementName: settlementMap[settlementId] || \"Unknown Settlement\" };\n          }\n          settlementWealthMap[settlementId].totalNetWorth += netWorth;\n        });\n\n        // Find the settlement with highest total net worth\n        let leadingSettlementId = null;\n        let highestWealth = -1;\n        for (const [settlementId, data] of Object.entries(settlementWealthMap)) {\n          if (data.totalNetWorth > highestWealth) {\n            highestWealth = data.totalNetWorth;\n            leadingSettlementId = settlementId;\n          }\n        }\n        const leadingSettlementName = leadingSettlementId && settlementWealthMap[leadingSettlementId] ? settlementWealthMap[leadingSettlementId].settlementName : \"No data available\";\n        // Add logic to retrieve population using derived calculation:\n        let leadingSettlementPopulation = \"Unknown\";\n        if (leadingSettlementId && settlements) {\n          const matching = settlements.find(s => s._id === leadingSettlementId);\n          if (matching) {\n            leadingSettlementPopulation = calculateSettlementPopulation(matching);\n          }\n        }\n        // store population into settlementMap with a compound key to retrieve later\n        if (leadingSettlementName) {\n          settlementMap[leadingSettlementName + \"_pop\"] = leadingSettlementPopulation;\n        }\n        setHighestWealth(highestWealth);\n\n        // Sort all players by net worth and take top 3, excluding developers\n        const topPlayers = players\n          .filter(player => !player.isDeveloper)\n          .map(player => ({\n            username: player.username,\n            netWorth: player.netWorth || 0\n          }))\n          .sort((a, b) => b.netWorth - a.netWorth)\n          .slice(0, 3);\n\n        setTopCitizens(topPlayers);\n        setTopSettlementName(leadingSettlementName);\n      } catch (error) {\n        console.error(\"❌ Error fetching top citizens and settlement:\", error);\n      }\n    };\n\n    fetchTopCitizensAndSettlement(); \n  }, [currentPlayer]); // Runs when `currentPlayer` updates\n\n\n    // ✅ Get current season data from local storage\n  const seasonData = getSeasonData();\n  const nextSeasonType = getNextSeason(seasonData?.type);\n\n\n  // Function to show season rules in modal\n  const handleShowSeasonRules = () => {\n    const rulesContent = (\n      <div style={{ textAlign: 'left', paddingLeft: '20px', paddingRight: '20px' }}>\n        {/* Header 1 - string 15002 */}\n        <p>{strings[15001]}</p>\n        <h3 style={{ marginTop: '20px', marginBottom: '10px' }}>{strings[15002]}</h3>\n        <ol style={{ paddingLeft: '40px' }}>\n          <li>{strings[15003]}</li>\n          <li>{strings[15004]}</li>\n          <li>{strings[15005]}</li>\n          <li>{strings[15006]}</li>\n        </ol>\n        \n        {/* Header 2 - string 15007 */}\n        <h3 style={{ marginTop: '20px', marginBottom: '10px' }}>{strings[15007]}</h3>\n        <ol start=\"7\" style={{ paddingLeft: '40px' }}>\n          <li>{strings[15008]}</li>\n          <li>{strings[15009]}</li>\n          <li>{strings[15010]}</li>\n          <li>{strings[15011]}</li>\n          <li>{strings[15012]}</li>\n          <li>{strings[15013]}</li>\n          <li>{strings[15014]}</li>\n          <li>{strings[15015]}</li>\n          <li>{strings[15016]}</li>\n          <li>{strings[15017]}</li>\n        </ol>\n        \n        {/* Header 3 - string 15018 */}\n        <h3 style={{ marginTop: '20px', marginBottom: '10px' }}>{strings[15018]}</h3>\n        <ol start=\"17\" style={{ paddingLeft: '40px' }}>\n          <li>{strings[15019]}</li>\n          <li>{strings[15020]}</li>\n          <li>{strings[15021]}</li>\n          <li>{strings[15022]}</li>\n        </ol>\n      </div>\n    );\n\n    setModalContent({\n      title: \"Season Rules\",\n      size: \"large\",\n      custom: rulesContent,\n    });\n    setIsModalOpen(true);\n  };\n\n  // New: Function to fetch and open season log\n  const handleShowSeasonLog = async () => {\n    if (!currentPlayer?.frontierId) { \n      console.warn(\"⚠️ Cannot show season log: frontierId missing.\");\n      return;\n    }\n\n    console.log(\"📜 Fetching season log for frontier:\", currentPlayer.frontierId);\n\n    try {\n      const response = await axios.get(`${API_BASE}/api/frontier/${currentPlayer.frontierId}/seasonlog`);\n      const seasonlog = response.data.seasonlog || [];\n\n      const seasonLogTable = (\n        <table className=\"season-log-table\" style={{ width: \"100%\", textAlign: \"left\", borderCollapse: \"collapse\" }}>\n          <thead>\n            <tr>\n              <th style={{ padding: \"6px 12px\" }}>Season</th>\n              <th style={{ padding: \"6px 12px\" }}>Date</th>\n              <th style={{ padding: \"6px 12px\" }}>Top Settlement</th>\n              <th style={{ padding: \"6px 12px\" }}>Top Players by Net Worth</th>\n              <th style={{ padding: \"6px 12px\" }}>Grids Reset</th>\n              <th style={{ padding: \"6px 12px\" }}>Players Relocated</th>\n            </tr>\n          </thead>\n          <tbody>\n            {[...seasonlog].reverse().map((entry, i) => (\n              <tr key={i}>\n                <td style={{ padding: \"6px 12px\" }}>#{entry.seasonnumber} {entry.seasontype}</td>\n                <td style={{ padding: \"6px 12px\" }}>{new Date(entry.date).toLocaleDateString()}</td>\n                <td style={{ padding: \"6px 12px\" }}>{entry.winningsettlement}</td>\n                <td style={{ padding: \"6px 12px\", whiteSpace: \"pre-line\" }}>\n                  {entry.seasonwinners.map(w => `${w.username}: ${w.networth.toLocaleString()}`).join('\\n')}\n                </td>\n                <td style={{ padding: \"6px 12px\" }}>{entry.gridsreset}</td>\n                <td style={{ padding: \"6px 12px\" }}>{entry.playersrelocated}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      );\n\n      setModalContent({\n        title: \"Season Log\",\n        size: \"large\",\n        message: seasonlog.length === 0 ? \"No season history found.\" : undefined,\n        custom: seasonLogTable,\n      });\n      setIsModalOpen(true);\n    } catch (error) {\n      console.error(\"❌ Failed to fetch season log:\", error);\n      setModalContent({\n        title: \"Error\",\n        message: \"Failed to load season log.\",\n        size: \"small\",\n      });\n      setIsModalOpen(true);\n    }\n  };\n\n\n  return (\n    <Panel onClose={onClose} descriptionKey=\"1015\" titleKey=\"1115\" panelName=\"SeasonPanel\">\n      {seasonData?.phase === \"onSeason\" ? (\n        <>\n          <h2>{strings[3053]} {seasonData?.type || strings[3054]}</h2>\n          <p>{strings[3055]}</p> \n          <h2>{countdown}</h2>\n        </>\n      ) : (\n        <>\n          <h2>{strings[3056]}</h2>\n        </>\n      )}\n\n      <div className=\"shared-buttons\">\n        <button className=\"btn-panel btn-success\"\n          onClick={handleShowSeasonRules}\n        >\n          {strings[15000]}\n        </button>\n      </div>\n\n\n      <p>{strings[3057]}</p>\n      <h3>{strings[3058]}</h3>\n      <p>{strings[3051]}</p>\n      {topCitizens.length > 0 ? (\n        <div>\n          {topCitizens.map((citizen, index) => (\n            <p key={index}>\n              {index + 1}. <strong>{citizen.username}</strong> : {citizen.netWorth.toLocaleString()}\n            </p>\n          ))}\n        </div>\n      ) : (\n        <p>{strings[3052]}</p>\n      )}\n\n      <h3>{strings[3059]}</h3>\n      {topSettlementName ? (\n        <>\n          <p><strong>{topSettlementName}</strong></p>\n          <p>{strings[3060]} {highestWealth.toLocaleString()}</p>\n          <p>{strings[3061]} {settlementMap[topSettlementName + \"_pop\"]?.toLocaleString() || strings[3062]}</p>\n        </>\n      ) : (\n        <p>{strings[3063]}</p>\n      )}\n\n      <div className=\"shared-buttons\">\n        <button className=\"btn-panel btn-success\"\n          onClick={handleShowSeasonLog}\n        >\n          {strings[3064]}\n        </button>\n      </div>\n    </Panel>\n  );\n}\n\nexport default SeasonPanel;","import API_BASE from '../../config.js';\nimport ChangeIconModal from '../../UI/ChangeIconModal';\nimport React, { useState, useEffect, useContext } from 'react';\nimport Panel from '../../UI/Panel';\nimport axios from 'axios';\nimport { StatusBarContext } from '../../UI/StatusBar/StatusBar';\nimport { usePanelContext } from '../../UI/PanelContext';\nimport { spendIngredients } from '../../Utils/InventoryManagement';\nimport NPCsInGridManager from '../../GridState/GridStateNPCs.js';\nimport playersInGridManager from '../../GridState/PlayersInGrid';\nimport RelationshipCard from '../Relationships/RelationshipCard';\nimport '../Relationships/Relationships.css';\nimport socket from '../../socketManager';\nimport { earnTrophy } from '../Trophies/TrophyUtils';\n\nconst SocialPanel = ({\n  onClose,\n  pcData,\n  currentPlayer,\n  setCurrentPlayer,\n  inventory,\n  setInventory,\n  backpack,\n  setBackpack,\n  updateStatus,\n  masterInteractions,\n  masterTrophies,\n  isDeveloper,\n  controllerUsername,\n  setControllerUsername,\n}) => {\n  const [tentCount, setTentCount] = useState(0);\n  const [boatCount, setBoatCount] = useState(0);\n  const [isCamping, setIsCamping] = useState(false);\n  const [isInBoat, setIsInBoat] = useState(false);\n  const [displayedPCData, setDisplayedPCData] = useState(pcData);\n  const [showChangeIconModal, setShowChangeIconModal] = useState(false);\n\n  console.log('made it to SocialPanel; pc = ', pcData);\n\n  useEffect(() => {\n    if (!pcData) return;\n    \n    // ✅ Update displayed data when viewing other players\n    if (pcData.username !== currentPlayer.username) {\n      const gridId = currentPlayer?.location?.g;\n      if (!gridId) return;\n      \n      const NPCsInGrid = playersInGridManager.getPlayersInGrid(gridId);\n      const latestData = NPCsInGrid[pcData.playerId];\n      if (latestData) {\n          setIsCamping(latestData.iscamping || false);\n          setIsInBoat(latestData.isinboat || false);\n          setDisplayedPCData(prev => ({\n            ...prev,\n            iscamping: latestData.iscamping,\n            isinboat: latestData.isinboat,\n            hp: latestData.hp,\n            username: latestData.username,\n          }));\n      }\n    }\n}, [pcData, currentPlayer]);\n\n\n  useEffect(() => {\n    if (!pcData) {\n      console.warn(\"SocialPanel was opened with missing pcData.\");\n      setDisplayedPCData({ username: \"Unknown\", hp: 0, iscamping: false });\n      return;\n    }\n\n    // ✅ Check if the selected PC is the current player\n    if (pcData.username === currentPlayer.username) {\n      // Update displayed data with current player's latest state\n      setDisplayedPCData({\n        ...pcData,\n        iscamping: currentPlayer.iscamping || false,\n        isinboat: currentPlayer.isinboat || false,\n        hp: currentPlayer.hp || pcData.hp\n      });\n      \n      setIsCamping(currentPlayer.iscamping || false);\n      setIsInBoat(currentPlayer.isinboat || false);\n\n      // ✅ Get tent count from Backpack\n      const tentsInBackpack = currentPlayer.backpack?.find(item => item.type === \"Tent\")?.quantity || 0;\n      setTentCount(tentsInBackpack);\n\n      // ✅ Get boat count from Backpack\n      const boatsInBackpack = currentPlayer.backpack?.find(item => item.type === \"Boat\")?.quantity || 0;\n      setBoatCount(boatsInBackpack);\n    } else {\n      setDisplayedPCData(pcData);\n    }\n  }, [pcData, currentPlayer, currentPlayer.iscamping, currentPlayer.isinboat]);\n\n  // ✅ Handle Pitching a Tent\n  const handlePitchTent = async () => {\n    console.log(\"⛺️ handlePitchTent called; tentCount = \", tentCount);\n    if (tentCount <= 0) return;\n\n    // Optimistically update UI immediately\n    setIsCamping(true);\n    setDisplayedPCData(prev => ({ ...prev, iscamping: true }));\n    setCurrentPlayer(prev => ({ ...prev, iscamping: true }));\n    \n    // Optimistically reduce tent count\n    setTentCount(prev => prev - 1);\n\n    try {\n      // First update the camping status\n      const response = await axios.post(`${API_BASE}/api/update-profile`, {\n        playerId: currentPlayer.playerId,\n        updates: { iscamping: true },\n      });\n\n      if (!response.data.success) {\n        // Revert all optimistic updates if server update failed\n        setIsCamping(false);\n        setDisplayedPCData(prev => ({ ...prev, iscamping: false }));\n        setCurrentPlayer(prev => ({ ...prev, iscamping: false }));\n        setTentCount(prev => prev + 1);\n        return;\n      }\n\n      // Then spend the tent\n      const fakeRecipe = { ingredient1: \"Tent\", ingredient1qty: 1 };\n      const success = await spendIngredients({\n        playerId: currentPlayer.playerId,\n        recipe: fakeRecipe,\n        inventory,\n        backpack,\n        setInventory,\n        setBackpack,\n        setCurrentPlayer,\n        updateStatus,\n      });\n\n      if (!success) {\n        // Revert camping status if we couldn't spend the tent\n        await axios.post(`${API_BASE}/api/update-profile`, {\n          playerId: currentPlayer.playerId,\n          updates: { iscamping: false },\n        });\n        setIsCamping(false);\n        setDisplayedPCData(prev => ({ ...prev, iscamping: false }));\n        setCurrentPlayer(prev => ({ ...prev, iscamping: false }));\n        setTentCount(prev => prev + 1);\n        return;\n      }\n\n      console.log('⛺️ iscamping: updated profile successfully');\n      updateStatus(28);\n      \n      // Award Adventurer trophy for first time camping\n      if (currentPlayer?.playerId) {\n        earnTrophy(currentPlayer.playerId, 'Adventurer', 1, currentPlayer, masterTrophies, setCurrentPlayer);\n      }\n      \n      // Update PlayersInGrid directly\n      const gridId = currentPlayer?.location?.g;\n      if (gridId) {\n        playersInGridManager.updatePC(gridId, currentPlayer.playerId, { iscamping: true });\n      }\n    } catch (error) {\n      console.error(\"❌ Error pitching tent:\", error);\n      updateStatus(29);\n      // Revert all optimistic updates on error\n      setIsCamping(false);\n      setDisplayedPCData(prev => ({ ...prev, iscamping: false }));\n      setCurrentPlayer(prev => ({ ...prev, iscamping: false }));\n      setTentCount(prev => prev + 1);\n    }\n  };\n\n  \n\n  // ✅ Handle Putting Away a Tent\n  const handlePutAwayTent = async () => {\n    // Optimistically update UI immediately\n    setIsCamping(false);\n    setDisplayedPCData(prev => ({ ...prev, iscamping: false }));\n    setCurrentPlayer(prev => ({ ...prev, iscamping: false }));\n    \n    // Optimistically increase tent count (getting tent back)\n    setTentCount(prev => prev + 1);\n\n    try {\n      // ✅ Update camping status in the database\n      const response = await axios.post(`${API_BASE}/api/update-profile`, {\n        playerId: currentPlayer.playerId,\n        updates: { iscamping: false },\n      });\n\n      if (response.data.success) {\n        updateStatus(30);\n\n        // Update PlayersInGrid directly\n        const gridId = currentPlayer?.location?.g;\n        if (gridId) {\n          playersInGridManager.updatePC(gridId, currentPlayer.playerId, { iscamping: false });\n        }\n      } else {\n        // Revert optimistic update if server update failed\n        setIsCamping(true);\n        setDisplayedPCData(prev => ({ ...prev, iscamping: true }));\n        setCurrentPlayer(prev => ({ ...prev, iscamping: true }));\n        setTentCount(prev => prev - 1);\n      }\n    } catch (error) {\n      console.error(\"❌ Error putting away tent:\", error);\n      updateStatus(29);\n      // Revert optimistic update on error\n      setIsCamping(true);\n      setDisplayedPCData(prev => ({ ...prev, iscamping: true }));\n      setCurrentPlayer(prev => ({ ...prev, iscamping: true }));\n      setTentCount(prev => prev - 1);\n    }\n};\n\n  // ✅ Handle Getting in Boat\n  const handleGetInBoat = async () => {\n    console.log(\"🛶 handleGetInBoat called; boatCount = \", boatCount);\n    if (boatCount <= 0) return;\n\n    // Optimistically update UI immediately\n    setIsInBoat(true);\n    setDisplayedPCData(prev => ({ ...prev, isinboat: true }));\n    setCurrentPlayer(prev => ({ ...prev, isinboat: true }));\n\n    try {\n      // Note: Unlike tent, we don't consume the boat item\n      const response = await axios.post(`${API_BASE}/api/update-profile`, {\n        playerId: currentPlayer.playerId,\n        updates: { isinboat: true },\n      });\n\n      if (response.data.success) {\n        console.log('🛶 isinboat: updated profile successfully; response = ', response);\n        updateStatus(\"You got in your boat.\"); // TODO: Add proper string ID\n        \n        // Update PlayersInGrid directly\n        const gridId = currentPlayer?.location?.g;\n        if (gridId) {\n          playersInGridManager.updatePC(gridId, currentPlayer.playerId, { isinboat: true });\n        }\n      } else {\n        // Revert optimistic update if server update failed\n        setIsInBoat(false);\n        setDisplayedPCData(prev => ({ ...prev, isinboat: false }));\n        setCurrentPlayer(prev => ({ ...prev, isinboat: false }));\n      }\n    } catch (error) {\n      console.error(\"❌ Error getting in boat:\", error);\n      updateStatus(\"Failed to get in boat.\"); // TODO: Add proper string ID\n      // Revert optimistic update on error\n      setIsInBoat(false);\n      setDisplayedPCData(prev => ({ ...prev, isinboat: false }));\n      setCurrentPlayer(prev => ({ ...prev, isinboat: false }));\n    }\n  };\n\n  // ✅ Handle Getting out of Boat\n  const handleGetOutOfBoat = async () => {\n    // Optimistically update UI immediately\n    setIsInBoat(false);\n    setDisplayedPCData(prev => ({ ...prev, isinboat: false }));\n    setCurrentPlayer(prev => ({ ...prev, isinboat: false }));\n\n    try {\n      // ✅ Update boat status in the database\n      const response = await axios.post(`${API_BASE}/api/update-profile`, {\n        playerId: currentPlayer.playerId,\n        updates: { isinboat: false },\n      });\n\n      if (response.data.success) {\n        updateStatus(\"You got out of your boat.\"); // TODO: Add proper string ID\n        \n        // Update PlayersInGrid directly\n        const gridId = currentPlayer?.location?.g;\n        if (gridId) {\n          playersInGridManager.updatePC(gridId, currentPlayer.playerId, { isinboat: false });\n        }\n      } else {\n        // Revert optimistic update if server update failed\n        setIsInBoat(true);\n        setDisplayedPCData(prev => ({ ...prev, isinboat: true }));\n        setCurrentPlayer(prev => ({ ...prev, isinboat: true }));\n      }\n    } catch (error) {\n      console.error(\"❌ Error getting out of boat:\", error);\n      updateStatus(\"Failed to get out of boat.\"); // TODO: Add proper string ID\n      // Revert optimistic update on error\n      setIsInBoat(true);\n      setDisplayedPCData(prev => ({ ...prev, isinboat: true }));\n      setCurrentPlayer(prev => ({ ...prev, isinboat: true }));\n    }\n};\n\n  // ✅ Handle Remove from GridState (Debug)\n  const handleRemoveFromGridState = async () => {\n    if (!pcData || !pcData.playerId) {\n      console.error(\"❌ Cannot remove: No player data\");\n      updateStatus(\"Failed to remove player from grid state\");\n      return;\n    }\n\n    const gridId = currentPlayer?.location?.g;\n    if (!gridId) {\n      console.error(\"❌ Cannot remove: No grid ID found\");\n      updateStatus(\"Failed to remove player from grid state\");\n      return;\n    }\n\n    const playerId = pcData.playerId;\n    \n    console.log(`🗑️ Removing player ${pcData.username} (${playerId}) from grid ${gridId}`);\n    \n    try {\n      // Step 1: Remove from database first\n      console.log('📤 Calling /remove-single-pc to remove player from database...');\n      const response = await axios.post(`${API_BASE}/api/remove-single-pc`, {\n        gridId: gridId,\n        playerId: playerId,\n      });\n      \n      if (!response.data.success) {\n        throw new Error('Failed to remove player from database');\n      }\n      \n      console.log(`✅ Successfully removed player ${pcData.username} from database`);\n      \n      // Step 2: Remove from local state\n      playersInGridManager.removePC(gridId, playerId);\n      console.log(`✅ Successfully removed player ${pcData.username} from local grid state`);\n      \n      // Step 3: Force NPCController transfer if the removed player was the controller\n      // Check if the removed player was the controller\n      if (controllerUsername === pcData.username) {\n        console.log(`🎮 Removed player ${pcData.username} was the NPCController, clearing controller`);\n        // Clear the controller username locally first\n        if (setControllerUsername) {\n          setControllerUsername(null);\n        }\n      }\n      \n      if (socket) {\n        console.log(`🎮 Forcing NPCController reassignment after removing ${pcData.username}`);\n        // Tell the server to remove this player and reassign controller\n        // Using existing socket events that the server already handles\n        socket.emit('leave-grid', { \n          gridId: gridId,\n          playerId: playerId,\n          username: pcData.username\n        });\n        \n        // Request fresh player list from server to ensure state consistency\n        setTimeout(() => {\n          console.log('🔄 Requesting current players from server after removal');\n          socket.emit('request-current-grid-players', { gridId });\n        }, 50);\n        \n        // If they were the controller, request to become the new controller\n        if (controllerUsername === pcData.username) {\n          setTimeout(() => {\n            socket.emit('request-npc-controller', { gridId: gridId });\n          }, 100);\n        }\n      }\n      \n      updateStatus(`Removed ${pcData.username} from grid${controllerUsername === pcData.username ? ' and cleared NPC control' : ''}`);\n      \n      // Close the panel since the player is no longer in the grid\n      if (pcData.username !== currentPlayer.username) {\n        onClose();\n      }\n    } catch (error) {\n      console.error(\"❌ Error removing player from grid state:\", error);\n      updateStatus(\"Failed to remove player from grid state\");\n    }\n  };\n\n  return (\n    <Panel onClose={onClose} descriptionKey=\"1014\" titleKey=\"1114\" panelName=\"SocialPanel\">\n        <div className=\"panel-content\">\n        <h2>{displayedPCData.username}{displayedPCData.username === currentPlayer.username && \" (You)\"}</h2>\n        <h3>❤️‍🩹 HP: {displayedPCData.hp}</h3>\n\n<br/>\n        {displayedPCData.username === currentPlayer.username && (\n          <div className=\"shared-buttons\">\n            <button \n              className=\"btn-basic btn-success\" \n              onClick={() => setShowChangeIconModal(true)}\n            >\n              {currentPlayer.icon || '🙂'} Change Avatar\n            </button>\n          </div>\n        )}\n        \n        {/* Show camping/boat status for other players */}\n        {displayedPCData.username !== currentPlayer.username && (\n          <>\n            {displayedPCData.iscamping && (\n              <h3 style={{ fontWeight: \"bold\", color: \"#4CAF50\" }}>🏕️ Camping.</h3>\n            )}\n            {displayedPCData.isinboat && (\n              <h3 style={{ fontWeight: \"bold\", color: \"#2196F3\" }}>🛶 In a boat.</h3>\n            )}\n          </>\n        )}\n\n        {/* Show RelationshipCard only for other players */}\n        {/* TODO: Relationship feature is in progress - temporarily commented out\n        {displayedPCData.username !== currentPlayer.username && (\n          <RelationshipCard\n            currentPlayer={currentPlayer}\n            setCurrentPlayer={setCurrentPlayer}\n            targetName={displayedPCData.username}\n            targetType=\"player\"\n            showActions={true}\n            compact={false}\n            masterInteractions={masterInteractions}\n            updateStatus={updateStatus}\n            onRelationshipChange={(interaction, success) => {\n              // Additional handling if needed after interaction completes\n            }}\n          />\n        )}\n        */}\n\n        {/* Debug button for developers to remove player from grid state */}\n        {isDeveloper && displayedPCData.username !== currentPlayer.username && (\n          <div className=\"shared-buttons\">\n            <button \n              className=\"btn-basic btn-danger\" \n              onClick={handleRemoveFromGridState}\n            >\n              🗑️ Remove from GridState (dev only)\n            </button>\n          </div>\n        )}\n        \n\n        {/* ✅ Show camping and boat buttons only for current player */}\n        {displayedPCData.username === currentPlayer.username && (\n          <>\n            {/* Tent functionality */}\n            <br /><br />\n            {isCamping ? (\n              <h3 style={{ fontWeight: \"bold\", color: \"#4CAF50\" }}>🏕️ Camping.</h3>\n            ) : (\n              <p>⛺️ You have <strong>{tentCount}</strong> tents.</p>\n            )}\n            \n            {isCamping ? (\n              <div className=\"shared-buttons\">\n                <button className=\"btn-basic btn-success\" onClick={handlePutAwayTent}>⛺ Put Away Tent</button>\n              </div>\n            ) : (\n              <div className=\"shared-buttons\">\n                <button \n                  className=\"btn-basic btn-success\" \n                  disabled={isInBoat}\n                  onClick={() => {\n                    if (tentCount <= 0) {\n                      console.warn(\"🚫 No tents found. Button press ignored.\");\n                      updateStatus(27); // \"You don't have a tent.\"\n                    } else {\n                      handlePitchTent();\n                    }\n                  }}\n                >\n                  🏕️ Pitch Tent\n                </button>\n              </div>\n            )}\n<br />\n\n            {/* Boat functionality */}\n            {isInBoat ? (\n              <h3 style={{ fontWeight: \"bold\", color: \"#2196F3\" }}>🛶 In a boat.</h3>\n            ) : (\n              <p>🛶 You have <strong>{boatCount}</strong> boats.</p>\n            )}\n            \n            {isInBoat ? (\n              <div className=\"shared-buttons\">\n                <button className=\"btn-basic btn-success\" onClick={handleGetOutOfBoat}>🛶 Get Out of Boat</button>\n              </div>\n            ) : (\n              <div className=\"shared-buttons\">\n                <button \n                  className=\"btn-basic btn-success\" \n                  disabled={isCamping}\n                  onClick={() => {\n                    if (boatCount <= 0) {\n                      console.warn(\"🚫 No boats found. Button press ignored.\");\n                      updateStatus(\"You don't have a boat.\"); // TODO: Add proper string ID\n                    } else {\n                      handleGetInBoat();\n                    }\n                  }}\n                >\n                  🛶 Get in Boat\n                </button>\n              </div>\n            )}\n\n          </>\n        )}\n\n        </div>\n      {showChangeIconModal && (\n        <ChangeIconModal\n          currentPlayer={currentPlayer}\n          setCurrentPlayer={setCurrentPlayer}\n          updateStatus={updateStatus}\n          currentIcon={currentPlayer.icon}\n          playerId={currentPlayer.playerId}\n          onClose={() => setShowChangeIconModal(false)}\n          onSave={(newIcon) => {\n            setDisplayedPCData(prev => ({ ...prev, icon: newIcon }));\n            setShowChangeIconModal(false);\n          }}\n        />\n      )}\n    </Panel>\n  );\n};\n\nexport default React.memo(SocialPanel);","import './CombatPanel.css';\nimport API_BASE from '../../config';\nimport React, { useState, useEffect, useContext } from 'react';\nimport Panel from '../../UI/Panel';\nimport axios from 'axios';\nimport { StatusBarContext } from '../../UI/StatusBar/StatusBar';\nimport playersInGridManager from '../../GridState/PlayersInGrid';\nimport '../../UI/ResourceButton.css'; // ✅ Ensure the correct path\nimport '../../UI/SharedButtons.css';\nimport { useStrings } from '../../UI/StringsContext';\n\nconst CombatPanel = ({ onClose, currentPlayer, setCurrentPlayer, masterResources, masterSkills, TILE_SIZE }) => {\n  const strings = useStrings();\n  const [allResources, setAllResources] = useState([]);\n  const [isContentLoading, setIsContentLoading] = useState(false);\n  const { updateStatus } = useContext(StatusBarContext);\n  const [fetchTrigger, setFetchTrigger] = useState(0);\n  const [playerStats, setPlayerStats] = useState({});\n  \n  // Equipment state\n  const getEquippedWeapon = () => currentPlayer.settings?.equippedWeapon || null;\n  const getEquippedArmor = () => currentPlayer.settings?.equippedArmor || null;\n  \n  // Helper functions to categorize powers\n  const isWeapon = (resource) => resource.passable === true && typeof resource.damage === 'number' && resource.damage > 0;\n  const isArmor = (resource) => resource.passable === true && typeof resource.armorclass === 'number' && resource.armorclass > 0;\n  const isMagicEnhancement = (resource) => !isWeapon(resource) && !isArmor(resource);\n  \n  // Check if player is in a valid location for equipment changes\n  const canChangeEquipment = () => {\n    const gridType = currentPlayer.location.gtype;\n    return gridType === 'homestead' || gridType === 'town';\n  };\n\n  // Equipment change handlers\n  const handleEquipWeapon = async (weaponType) => {\n    if (!canChangeEquipment()) {\n      updateStatus(strings[520] || 'Cannot change equipment in this location');\n      return;\n    }\n\n    try {\n      const updatedSettings = {\n        ...currentPlayer.settings,\n        equippedWeapon: weaponType\n      };\n      \n      await axios.post(`${API_BASE}/api/update-profile`, {\n        playerId: currentPlayer.playerId,\n        updates: { settings: updatedSettings }\n      });\n      \n      // Update player state first\n      const updatedPlayer = {\n        ...currentPlayer,\n        settings: updatedSettings\n      };\n      setCurrentPlayer(updatedPlayer);\n      \n      // Wait a moment for state to settle, then refresh with updated player data\n      setTimeout(() => {\n        refreshCombatStatsWithPlayer(updatedPlayer);\n        // Also force immediate update of displayed stats\n        const stats = playersInGridManager.getAllPCs(currentPlayer.location.g)?.[currentPlayer._id];\n        if (stats) {\n          setPlayerStats(stats);\n        }\n      }, 100);\n      \n      updateStatus(weaponType ? `Equipped ${weaponType}` : 'Unequipped weapon');\n    } catch (error) {\n      console.error('Error equipping weapon:', error);\n      updateStatus('Failed to equip weapon');\n    }\n  };\n  \n  const handleEquipArmor = async (armorType) => {\n    if (!canChangeEquipment()) {\n      updateStatus(strings[520] || 'Cannot change equipment in this location');\n      return;\n    }\n\n    try {\n      const updatedSettings = {\n        ...currentPlayer.settings,\n        equippedArmor: armorType\n      };\n      \n      await axios.post(`${API_BASE}/api/update-profile`, {\n        playerId: currentPlayer.playerId,\n        updates: { settings: updatedSettings }\n      });\n      \n      // Update player state first\n      const updatedPlayer = {\n        ...currentPlayer,\n        settings: updatedSettings\n      };\n      setCurrentPlayer(updatedPlayer);\n      \n      // Wait a moment for state to settle, then refresh with updated player data\n      setTimeout(() => {\n        refreshCombatStatsWithPlayer(updatedPlayer);\n        // Also force immediate update of displayed stats\n        const stats = playersInGridManager.getAllPCs(currentPlayer.location.g)?.[currentPlayer._id];\n        if (stats) {\n          setPlayerStats(stats);\n        }\n      }, 100);\n      \n      updateStatus(armorType ? `Equipped ${armorType}` : 'Unequipped armor');\n    } catch (error) {\n      console.error('Error equipping armor:', error);\n      updateStatus('Failed to equip armor');\n    }\n  };\n\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const stats = playersInGridManager.getAllPCs(currentPlayer.location.g)?.[currentPlayer._id];\n      if (stats) {\n        setPlayerStats(stats);\n      }\n    }, 500); // Poll every 500ms\n\n    return () => clearInterval(interval);\n  }, [currentPlayer._id, currentPlayer.location.g]);\n\n  // --- Stat helpers ---\n\n  const getPlayerStats = () => {\n    return playersInGridManager.getAllPCs(currentPlayer.location.g)?.[currentPlayer._id] || {};\n  };\n  const getStatBreakdown = (stat) => {\n    const total = playerStats?.[stat] || 0;\n    // Handle special case for maxhp -> baseMaxhp (capital M)\n    let basePropertyName;\n    if (stat === 'maxhp') {\n      basePropertyName = 'baseMaxhp';\n    } else if (stat === 'hp') {\n      basePropertyName = 'baseHp';\n    } else {\n      // For other stats: damage -> baseDamage, attackrange -> baseAttackrange, etc.\n      basePropertyName = `base${stat.charAt(0).toUpperCase() + stat.slice(1)}`;\n    }\n    const base = currentPlayer[basePropertyName] || 0;\n    const modifier = total - base;\n    return { base, modifier, total };\n  };\n\n  const hp = getStatBreakdown('hp');\n  const maxhp = getStatBreakdown('maxhp');\n  const damage = getStatBreakdown('damage');\n  const armorclass = getStatBreakdown('armorclass');\n  const attackbonus = getStatBreakdown('attackbonus');\n  const attackrange = getStatBreakdown('attackrange');\n  const speed = getStatBreakdown('speed');\n\n\n\n  // Refresh function that uses current player data (for button)\n  const handleRefreshCombatStats = () => {\n    refreshCombatStatsWithPlayer(currentPlayer);\n  };\n\n  // Core refresh function that accepts player data parameter (to avoid race conditions)\n  const refreshCombatStatsWithPlayer = (playerData) => {\n    const gridId = playerData.location.g;\n    const playerId = playerData._id;\n\n    const baseStats = {\n      hp: playerData.baseHp || 0,  // Add hp calculation\n      maxhp: playerData.baseMaxhp || 0,\n      damage: playerData.baseDamage || 0,\n      armorclass: playerData.baseArmorclass || 0,\n      attackbonus: playerData.baseAttackbonus || 0,\n      attackrange: playerData.baseAttackrange || 0,\n      speed: playerData.baseSpeed || 0,\n    };\n\n    const powers = playerData.powers || [];\n    const powerBonuses = {\n      hp: 0, maxhp: 0, damage: 0, armorclass: 0, attackbonus: 0, attackrange: 0, speed: 0,\n    };\n\n    const equippedWeapon = playerData.settings?.equippedWeapon || null;\n    const equippedArmor = playerData.settings?.equippedArmor || null;\n\n    powers.forEach(power => {\n      const res = masterResources.find(r => r.type === power.type);\n      if (res && res.category === 'power') {\n        const powerQty = power.quantity || 0;\n        \n        // Only count equipped weapons and armor, or all magic enhancements\n        const shouldCount = isMagicEnhancement(res) || \n                           (isWeapon(res) && power.type === equippedWeapon) ||\n                           (isArmor(res) && power.type === equippedArmor);\n        \n        if (shouldCount) {\n          // Check for multiple combat attributes on the power\n          Object.keys(powerBonuses).forEach(stat => {\n            if (typeof res[stat] === 'number') {\n              powerBonuses[stat] += powerQty * res[stat];\n            }\n          });\n        }\n      }\n    });\n\n    const finalStats = {};\n    Object.keys(baseStats).forEach(stat => {\n      finalStats[stat] = baseStats[stat] + (powerBonuses[stat] || 0);\n    });\n\n    // Special handling for HP - use current HP if available, otherwise use max HP\n    const currentPCStats = getPlayerStats();\n    if (currentPCStats?.hp !== undefined) {\n      finalStats.hp = currentPCStats.hp; // Keep current HP value\n    } else if (!finalStats.hp || finalStats.hp === 0) {\n      finalStats.hp = finalStats.maxhp; // Set HP to max if not already set\n    }\n\n    finalStats.playerId = playerId;\n    finalStats.username = playerData.username;\n    finalStats.position = playerData.position || {};\n    finalStats.icon = playerData.icon || \"😀\";\n    finalStats.iscamping = playerData.iscamping || false;\n    finalStats.isinboat = playerData.isinboat || false;\n    finalStats.lastUpdated = new Date().toISOString();\n\n    const pc = getPlayerStats();\n    const pcPosition = pc?.position;\n    finalStats.position = (pcPosition && typeof pcPosition.x === 'number' && typeof pcPosition.y === 'number')\n      ? pcPosition : { x: 0, y: 0 }; // Fallback\n      \n    playersInGridManager.updatePC(gridId, playerId, finalStats);\n  };\n\n  return (\n    <Panel onClose={onClose} descriptionKey=\"1024\" titleKey=\"1124\" panelName=\"CombatPanel\">\n      <div className=\"standard-panel\">\n      {isContentLoading ? (\n          <p>Loading...</p>\n        ) : (\n          <>\n            <div className=\"combat-stats\">\n              <h3>{strings[10112]} <span className=\"stat-total\">{hp.total}</span></h3><br/>\n              <h4>{strings[550]}: <span className=\"stat-total blue-text\">{maxhp.modifier !== 0 ? maxhp.total : maxhp.base}</span><br></br>\n                {\"  (\"} {maxhp.base} + <span className=\"stat-total blue-text\">{maxhp.modifier}</span> {\")\"} </h4>\n              <h4>{strings[551]}: <span className=\"stat-total blue-text\">{armorclass.modifier !== 0 ? armorclass.total : armorclass.base}</span><br></br>\n                {\"  (\"} {armorclass.base} + <span className=\"stat-total blue-text\">{armorclass.modifier}</span> {\")\"}</h4>\n              <h4>{strings[552]}: <span className=\"stat-total blue-text\">{attackbonus.modifier !== 0 ? attackbonus.total : attackbonus.base}</span><br></br>\n                {\"  (\"} {attackbonus.base} + <span className=\"stat-total blue-text\">{attackbonus.modifier}</span> {\")\"}</h4>\n              <h4>{strings[553]}: <span className=\"stat-total blue-text\">{damage.modifier !== 0 ? damage.total : damage.base}</span><br></br>\n                {\"  (\"} {damage.base} + <span className=\"stat-total blue-text\">{damage.modifier}</span> {\")\"}</h4>\n              <h4>{strings[555]}: <span className=\"stat-total blue-text\">{attackrange.modifier !== 0 ? attackrange.total : attackrange.base}</span><br></br>\n                {\"  (\"} {attackrange.base} + <span className=\"stat-total blue-text\">{attackrange.modifier}</span> {\")\"} </h4>\n              <h4>{strings[554]}: <span className=\"stat-total blue-text\">{speed.modifier !== 0 ? speed.total : speed.base}</span><br></br>\n                {\"  (\"} {speed.base} + <span className=\"stat-total blue-text\">{speed.modifier}</span> {\")\"}</h4>\n            </div>\n            <div className=\"shared-buttons\">\n              <button className=\"btn-basic btn-success\" onClick={handleRefreshCombatStats}>🔄 Fix Combat Stats</button>\n            </div>\n            <br></br>\n\n            <div className=\"combat-equip\">\n              <h3>{strings[522]}</h3>\n              <br></br>\n              {currentPlayer.powers?.filter(power => {\n                const resource = masterResources.find(r => r.type === power.type);\n                return resource && isArmor(resource);\n              }).length > 0 ? (\n                currentPlayer.powers\n                  .filter(power => {\n                    const resource = masterResources.find(r => r.type === power.type);\n                    return resource && isArmor(resource);\n                  })\n                  .map((power, index) => {\n                    const resource = masterResources.find(r => r.type === power.type);\n                    const isEquipped = power.type === getEquippedArmor();\n                    const stats = [];\n                    \n                    const combatAttributes = ['hp', 'maxhp', 'damage', 'armorclass', 'attackbonus', 'attackrange', 'speed'];\n                    combatAttributes.forEach(attr => {\n                      if (typeof resource[attr] === 'number') {\n                        const value = (power.quantity || 0) * resource[attr];\n                        const label = strings[attr] || attr;\n                        stats.push(`${value > 0 ? '+' : ''}${value} ${label}`);\n                      }\n                    });\n                    \n                    return (\n                      <div key={`armor-${index}`} className=\"equipment-item\">\n                        <input\n                          type=\"checkbox\"\n                          checked={isEquipped}\n                          onChange={() => handleEquipArmor(isEquipped ? null : power.type)}\n                          className=\"equipment-checkbox\"\n                          disabled={!canChangeEquipment()}\n                        />\n                        <div className=\"equipment-content\">\n                          <strong>{resource.type}</strong><br/>\n                          {stats.map((stat, statIndex) => (\n                            <div key={statIndex} className=\"equipment-stat\">\n                              {stat}\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    );\n                  })\n              ) : (\n                <p>{strings[523]}</p>\n              )}\n              \n              <br></br>\n              <h3>{strings[524]}</h3>\n              <br></br>\n              {currentPlayer.powers?.filter(power => {\n                const resource = masterResources.find(r => r.type === power.type);\n                return resource && isWeapon(resource);\n              }).length > 0 ? (\n                currentPlayer.powers\n                  .filter(power => {\n                    const resource = masterResources.find(r => r.type === power.type);\n                    return resource && isWeapon(resource);\n                  })\n                  .map((power, index) => {\n                    const resource = masterResources.find(r => r.type === power.type);\n                    const isEquipped = power.type === getEquippedWeapon();\n                    const stats = [];\n                    \n                    const combatAttributes = ['hp', 'maxhp', 'damage', 'armorclass', 'attackbonus', 'attackrange', 'speed'];\n                    combatAttributes.forEach(attr => {\n                      if (typeof resource[attr] === 'number') {\n                        const value = (power.quantity || 0) * resource[attr];\n                        const label = strings[attr] || attr;\n                        stats.push(`${value > 0 ? '+' : ''}${value} ${label}`);\n                      }\n                    });\n                    \n                    return (\n                      <div key={`weapon-${index}`} className=\"equipment-item\">\n                        <input\n                          type=\"checkbox\"\n                          checked={isEquipped}\n                          onChange={() => handleEquipWeapon(isEquipped ? null : power.type)}\n                          className=\"equipment-checkbox\"\n                          disabled={!canChangeEquipment()}\n                        />\n                        <div className=\"equipment-content\">\n                          <strong>{resource.type}</strong><br/>\n                          {stats.map((stat, statIndex) => (\n                            <div key={statIndex} className=\"equipment-stat\">\n                              {stat}\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    );\n                  })\n              ) : (\n                <p>{strings[525]}</p>\n              )}\n            </div>\n\n            <div className=\"combat-powers\">\n              <h3>{strings[526]}</h3>\n              <br></br>\n              {currentPlayer.powers?.filter(power => {\n                const resource = masterResources.find(r => r.type === power.type);\n                return resource && isMagicEnhancement(resource);\n              }).length > 0 ? (\n                currentPlayer.powers\n                  .filter(power => {\n                    const resource = masterResources.find(r => r.type === power.type);\n                    return resource && isMagicEnhancement(resource);\n                  })\n                  .map((power, index) => {\n                    const resource = masterResources.find(r => r.type === power.type);\n                    if (!resource) return null;\n\n                    const powerQty = power.quantity || 0;\n                    const combatAttributes = ['hp', 'maxhp', 'damage', 'armorclass', 'attackbonus', 'attackrange', 'speed'];\n                    \n                    // Collect all combat stats this power provides\n                    const stats = [];\n                    combatAttributes.forEach(attr => {\n                      if (typeof resource[attr] === 'number') {\n                        const value = powerQty * resource[attr];\n                        const label = strings[attr] || attr;\n                        stats.push(`${value > 0 ? '+' : ''}${value} ${label}`);\n                      }\n                    });\n                    \n                    \n                    return (\n                      <div key={`magic-${index}`} className=\"magic-enhancement-item\">\n                        <div className=\"equipment-content\">\n                          <strong>{resource.type}</strong><br />\n                          {stats.length > 0 ? (\n                            stats.map((stat, statIndex) => (\n                              <div key={statIndex} className=\"equipment-stat\">\n                                {stat}\n                              </div>\n                            ))\n                          ) : (\n                            <div className=\"no-combat-effects\">\n                              (No combat effects)\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    );\n                  })\n              ) : (\n                <p>{strings[527]}</p>\n              )}\n              <br></br>\n              <h3>{strings[528]}</h3>\n              <h4>{strings[556]}: {currentPlayer.iscamping ? strings[558] : strings[559]}</h4>\n              <h4>{strings[557]}: {currentPlayer.isinboat ? strings[558] : strings[559]}</h4>\n            </div>\n          </>\n        )}\n      </div>\n      <br />\n    </Panel>\n  );\n};\n\nexport default React.memo(CombatPanel);","import React, { memo } from 'react';\nimport Panel from './Panel'; \nimport { handlePurchase } from '../Store/Store';\nimport './SharedButtons.css'; \nimport { useStrings } from './StringsContext';\n\n\nconst GoldBenefitsPanel = memo(({ currentPlayer, updateStatus, onClose }) => {\n  \n  const strings = useStrings();\n  const isGold = currentPlayer.accountStatus === 'Gold';\n\n  return (\n    <Panel onClose={onClose} descriptionKey=\"1027\" titleKey=\"1127\" panelName=\"GoldBenefitsPanel\">\n      <div className=\"panel-content\">\n\n        <div className=\"shared-buttons\" style={{ display: 'flex', justifyContent: 'center', width: '100%' }}>\n          {isGold ? (\n            <p>{strings[9060]}</p>\n          ) : (\n            <button className=\"btn-gold\" style={{ width: '100%' }} onClick={() => handlePurchase(1, currentPlayer, updateStatus)}>{strings[9061]}</button>\n          )}\n        </div>\n<br />\n        <h2>{strings[9050]}</h2>\n        <p>{strings[9051]}</p>\n        <p>{strings[9052]}</p>\n        <p>{strings[9053]}</p>\n        <p>{strings[9054]}</p>\n        <p>{strings[9055]}</p>\n        <p>{strings[9056]}</p>\n        <p>{strings[9057]}</p>\n        <p>{strings[9058]}</p>\n\n      </div>\n    </Panel>\n  );\n});\n\nexport default GoldBenefitsPanel;\n","export function shareToNetwork(network, url) {\n  let shareUrl = '';\n\n  switch (network) {\n    case 'facebook':\n      shareUrl = `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(url)}`;\n      break;\n    case 'twitter':\n      shareUrl = `https://twitter.com/intent/tweet?text=Come+play+Valley+View!&url=${encodeURIComponent(url)}`;\n      break;\n    case 'reddit':\n      shareUrl = `https://www.reddit.com/submit?url=${encodeURIComponent(url)}&title=Check+out+Valley+View!`;\n      break;\n    default:\n      console.warn('Unsupported network:', network);\n      return;\n  }\n\n  window.open(shareUrl, '_blank', 'noopener,noreferrer');\n}\n\nexport function copyToClipboard(text) {\n  navigator.clipboard.writeText(text)\n    .then(() => alert('✅ Link copied to clipboard!'))\n    .catch(() => alert('❌ Failed to copy link.'));\n}","import React from 'react';\nimport { shareToNetwork, copyToClipboard } from '../Utils/share';\nimport { useStrings } from './StringsContext';\nimport './Modal.css';\nimport './ShareModal.css';\nimport './SharedButtons.css';\n\nfunction ShareModal({ onClose }) {\n\n  const strings = useStrings();\n  const url = window.location.href;\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"share-modal\">\n        <h2>📢 Share Valley View</h2>\n        <p>{strings[95]}</p>\n        \n\n        <div className=\"shared-buttons\">\n          <button className=\"btn-basic facebook-btn btn-modal\" onClick={() => shareToNetwork('facebook', url)}>Facebook</button>\n          <button className=\"btn-basic twitter-btn btn-modal\" onClick={() => shareToNetwork('twitter', url)}>Twitter / X</button>\n          <button className=\"btn-basic reddit-btn btn-modal\" onClick={() => shareToNetwork('reddit', url)}>Reddit</button>\n        </div>\n\n        <div className=\"copy-link\">\n          <input type=\"text\" readOnly value={url} />\n          <div className=\"shared-buttons\">\n            <button className=\"btn-basic btn-modal-small\" onClick={() => copyToClipboard(url)}>📋 Copy</button>\n          </div>\n        </div>\n\n        <div className=\"discord-section\">\n          <p>and</p>\n          <div className=\"shared-buttons\">\n            <button\n              className=\"btn-basic discord-btn btn-modal\"\n              onClick={() => window.open('https://discord.gg/mQgRP2K9', '_blank')}\n            >\n              Join our Discord\n            </button>\n          </div>\n        </div>\n\n<br />\n        <div className=\"shared-buttons\">\n          <button className=\"btn-basic btn-modal btn-success\" onClick={onClose}>{strings[796]}</button>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default ShareModal;","import React, { useState, useEffect } from 'react';\n\nconst CowboyAnimation = () => {\n  const [position, setPosition] = useState({ x: 100, y: 100 });\n  const [targetPosition, setTargetPosition] = useState({ x: 100, y: 100 });\n  const [duration, setDuration] = useState(0);\n  const speed = 100; // pixels per second\n\n  useEffect(() => {\n    const moveToNewPosition = () => {\n      // Pick a random direction (0: up, 1: right, 2: down, 3: left)\n      const direction = Math.floor(Math.random() * 4);\n      \n      // Calculate distance to travel (random between 100-300 pixels)\n      const distance = 100 + Math.random() * 200;\n      \n      // Calculate new position based on direction\n      let newX = position.x;\n      let newY = position.y;\n      \n      switch (direction) {\n        case 0: // up\n          newY = Math.max(50, position.y - distance);\n          break;\n        case 1: // right\n          newX = Math.min(950, position.x + distance);\n          break;\n        case 2: // down\n          newY = Math.min(550, position.y + distance);\n          break;\n        case 3: // left\n          newX = Math.max(50, position.x - distance);\n          break;\n      }\n      \n      // Calculate animation duration based on actual distance and speed\n      const actualDistance = Math.sqrt(\n        Math.pow(newX - position.x, 2) + Math.pow(newY - position.y, 2)\n      );\n      const animationDuration = actualDistance / speed; // in seconds\n      \n      setDuration(animationDuration);\n      setTargetPosition({ x: newX, y: newY });\n      setPosition({ x: newX, y: newY });\n    };\n\n    // Start movement every 5 seconds + animation duration\n    const timer = setTimeout(moveToNewPosition, 1000 + (duration * 1000));\n    \n    return () => clearTimeout(timer);\n  }, [position, duration]);\n\n  return (\n    <div\n      className=\"cowboy-emoji\"\n      style={{\n        position: 'absolute',\n        left: `${targetPosition.x}px`,\n        top: `${targetPosition.y}px`,\n        fontSize: '28px',\n        transition: duration > 0 ? `all ${duration}s linear` : 'none',\n        zIndex: 10,\n        userSelect: 'none'\n      }}\n    >\n      🤠\n    </div>\n  );\n};\n\nexport default CowboyAnimation;","import './App.css';\nimport './GameFeatures/Chat/Chat.css';\nimport './VFX/VFX.css';\nimport './UI/SharedButtons.css';\nimport axios from 'axios';\nimport API_BASE from './config.js';\nimport Chat from './GameFeatures/Chat/Chat';\nimport React, { useContext, useState, useEffect, useLayoutEffect, memo, useMemo, useCallback, useRef, act } from 'react';\nimport { registerNotificationClickHandler } from './UI/Notifications/Notifications';\nimport { initializeGrid } from './AppInit';\nimport { loadMasterSkills, loadMasterResources, loadMasterInteractions, loadGlobalTuning, loadMasterTraders, loadMasterTrophies } from './Utils/TuningManager';\nimport { RenderGrid } from './Render/Render';\nimport DynamicRenderer from './Render/RenderDynamic.js';\nimport { handleResourceClick } from './ResourceClicking';\nimport { isMobile } from './Utils/appUtils';\nimport { useUILock } from './UI/UILockContext';\n\nimport socket from './socketManager';\nimport {\n  socketListenForPCJoinAndLeave,\n  socketListenForPCstateChanges,\n  socketListenForNPCStateChanges,\n  socketListenForResourceChanges,\n  socketListenForTileChanges,\n  socketListenForNPCControllerStatus,\n  socketListenForSeasonReset,\n  socketListenForPlayerConnectedAndDisconnected,\n  socketListenForConnectAndDisconnect,\n  socketListenForChatMessages,\n  socketListenForBadgeUpdates,\n  socketListenForStoreBadgeUpdates,\n} from './socketManager';\n\nimport farmState from './FarmState';\nimport GlobalGridStateTilesAndResources from './GridState/GlobalGridStateTilesAndResources';\nimport FTUE from './GameFeatures/FTUE/FTUE';\n\nimport playersInGridManager from './GridState/PlayersInGrid';\nimport { usePlayersInGrid, useGridStatePCUpdate } from './GridState/GridStatePCContext';\nimport NPCsInGridManager from './GridState/GridStateNPCs.js';\nimport { useGridState, useGridStateUpdate } from './GridState/GridStateContext';\nimport npcController from './GridState/NPCController';\n\nimport SettlementView from './ZoomedOut/SettlementView';\nimport FrontierView from './ZoomedOut/FrontierView';\n\nimport Modal from './UI/Modal';\nimport LanguagePickerModal from './UI/LanguagePickerModal';\nimport { useStrings } from './UI/StringsContext';\nimport LANGUAGE_OPTIONS from './UI/Languages.json';\n\nimport ProfilePanel from './Authentication/ProfilePanel';\nimport LoginPanel from './Authentication/LoginPanel';\nimport DebugPanel from './Utils/debug';\nimport InventoryPanel from './GameFeatures/Inventory/InventoryPanel';\nimport WarehousePanel from './GameFeatures/Inventory/WarehousePanel';\nimport TrophyPanel from './GameFeatures/Trophies/TrophyPanel.js';\nimport HowToPanel from './UI/HowToPanel';\nimport HowToMoneyPanel from './UI/HowToMoneyPanel';\nimport HowToGemsPanel from './UI/HowToGemsPanel';\nimport QuestPanel from './GameFeatures/Quests/QuestPanel';\nimport NPCPanel from './GameFeatures/NPCs/NPCsPanel.js';\nimport BuildPanel from './GameFeatures/Build/BuildPanel';\nimport BuyPanel from './GameFeatures/Buy/BuyPanel';\nimport BuyDecoPanel from './GameFeatures/Deco/BuyDecoPanel';\nimport FarmingPanel from './GameFeatures/Farming/FarmingPanel';\nimport ToolsPanel from './GameFeatures/Farming/ToolsPanel';\nimport SkillsPanel from './GameFeatures/Skills/SkillsPanel';\nimport GovPanel from './GameFeatures/Government/GovPanel';\nimport BankPanel from './GameFeatures/Trading/Bank';\nimport TrainPanel from './GameFeatures/Trading/Train';\nimport CourthousePanel from './GameFeatures/Government/Courthouse';\nimport CraftingStation from './GameFeatures/Crafting/CraftingStation';\nimport FarmHouse from './GameFeatures/Crafting/FarmHouse';\nimport FarmHandPanel from './GameFeatures/FarmHands/FarmHand.js';\nimport ShopStation from './GameFeatures/Crafting/ShopStation';\nimport ScrollStation from './GameFeatures/Crafting/ScrollStation';\nimport PetPanel from './GameFeatures/Pets/PetPanel';\nimport AnimalStall from './GameFeatures/FarmAnimals/AnimalStall';\nimport AnimalPanel from './GameFeatures/FarmAnimals/FarmAnimals.js';\nimport CropPanel from './GameFeatures/Farming/CropPanel.js';\nimport DecoPanel from './GameFeatures/Deco/DecoPanel';\nimport TradeStall from './GameFeatures/Trading/TradeStall';\nimport Outpost from './GameFeatures/Trading/Outpost';\nimport Mailbox from './GameFeatures/Mailbox/Mailbox';\nimport Store from './Store/Store';\nimport OffSeasonModal from './GameFeatures/Seasons/OffSeasonModal.js';\nimport TownNews from './UI/TownNews.js';\nimport SeasonPanel from './GameFeatures/Seasons/SeasonPanel';\nimport SocialPanel from './GameFeatures/Social/SocialPanel';\nimport CombatPanel from './GameFeatures/Combat/CombatPanel';\nimport GoldBenefitsPanel from './UI/GoldBenefitsPanel';\nimport ShareModal from './UI/ShareModal';\n\nimport { usePanelContext } from './UI/PanelContext';\nimport { useModalContext } from './UI/ModalContext';\nimport { checkDeveloperStatus, updateBadge, getBadgeState } from './Utils/appUtils';\nimport { useBulkOperation } from './UI/BulkOperationContext';\nimport FloatingTextManager from './UI/FloatingText';\nimport StatusBar from './UI/StatusBar/StatusBar';\nimport { StatusBarContext } from './UI/StatusBar/StatusBar';\nimport { formatCountdown } from './UI/Timers';\nimport CowboyAnimation from './UI/CowboyAnimation';\n\nimport { fetchGridData, updateGridStatus } from './Utils/GridManagement';\nimport { handleKeyMovement, handleKeyDown as handleMovementKeyDown, handleKeyUp as handleMovementKeyUp, centerCameraOnPlayer, centerCameraOnPlayerFast } from './PlayerMovement';\nimport { mergeResources, mergeTiles, enrichResourceFromMaster } from './Utils/ResourceHelpers.js';\nimport { fetchHomesteadOwner, calculateDistance } from './Utils/worldHelpers.js';\nimport { getDerivedRange } from './Utils/worldHelpers';\nimport { handlePlayerDeath } from './Utils/playerManagement';\n\nfunction App() {\n\n  const appInstanceId = Math.floor(Math.random() * 10000);\n//console.log(`🧩 App mounted. Instance ID: ${appInstanceId}`);\n\nuseEffect(() => {\n  const id = Math.floor(Math.random() * 10000);\n  console.log(`🧩 App mounted. Instance ID: ${id}`);\n  console.trace();\n}, []);\n\nuseEffect(() => {\n  const appEl = document.getElementById('root');\n  console.log(\"📦 App mounted. Parent contents:\", appEl?.innerHTML?.slice(0, 200));\n  return () => {\n    console.log(\"💥 App unmounted.\");\n  };\n}, []);\n\n\n  const strings = useStrings();\n  const { uiLocked } = useUILock();\n  const [isDeveloper, setIsDeveloper] = useState(false);\n  const { activeModal, setActiveModal, openModal, closeModal } = useModalContext();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalContent, setModalContent] = useState({ title: '', message: '', message2: '' });\n  const { updateStatus } = useContext(StatusBarContext);\n  const bulkOperationContext = useBulkOperation();\n\n  // Mobile device detection: Show modal if on mobile\n  useEffect(() => {\n    if (isMobile()) {\n      setModalContent({\n        title: 'Unsupported Device',\n        size: 'small',\n        children: (\n          <div style={{ fontSize: '1rem', textAlign: 'center', padding: '1rem' }}>\n            🚫 This game is intended for desktop browsers only.<br /><br />\n            Please revisit on a laptop or desktop computer.\n          </div>\n        ),\n        onClose: () => {},\n      });\n      setIsModalOpen(true);\n    }\n  }, []);\n  const openMailbox = () => openModal && openModal('Mailbox');\n\n  // Store purchase fulfillment effect\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const purchaseSuccess = params.get(\"purchase\");\n    const playerId = params.get(\"playerId\");\n    const offerId = params.get(\"offerId\");\n\n    if (purchaseSuccess === \"success\" && playerId && offerId) {\n      console.log(\"🧾 Processing store purchase via App.js effect:\", { playerId, offerId });\n\n      axios.post(`${API_BASE}/api/purchase-store-offer`, {\n        playerId, offerId\n      }).then(() => {\n        console.log(\"📬 Purchase reward sent successfully.\");\n\n        /// If Gold Pass was purchased, show modal and panel\n        if (String(offerId) === \"1\") {\n          updateStatus && updateStatus(\"🎉 Congratulations on purchasing a Gold Pass!\");\n          // Re-fetch player to get updated accountStatus\n          axios.get(`${API_BASE}/api/player/${playerId}`).then((playerResponse) => {            \n          openPanel('GoldBenefitsPanel');\n          setModalContent({\n              title: strings[\"5060\"],\n              message: strings[\"5061\"],\n              message2: strings[\"5062\"],\n              size: \"small\",\n            });\n          setIsModalOpen(true);\n          }).catch((err) => {\n            console.error(\"❌ Failed to refresh player data after Gold purchase:\", err);\n          });\n        /// If anything else was purchased, open Mailbox\n        } else {\n          updateStatus && updateStatus(\"✅ Purchase successful! Check your Inbox.\");\n          openMailbox && openMailbox();\n        }\n      }).catch((err) => {\n        console.error(\"❌ Failed to fulfill purchase:\", err);\n        updateStatus && updateStatus(\"⚠️ Purchase may not have been fulfilled. Contact support if missing.\");\n      });\n\n      // Clean up the URL to remove query params\n      const url = new URL(window.location.href);\n      url.search = \"\";\n      window.history.replaceState({}, document.title, url.toString());\n    }\n  }, []);\n\n  // Server connectivity check: periodically ping server and show modal if down\n  useEffect(() => {\n    let interval;\n    let serverPreviouslyDown = false;\n    const checkServer = async () => {\n      try {\n        // await axios.get(`${API_BASE}/api/ping`);\n        // Always close modal if server is reachable\n        if (modalContent?.title === strings[10000]) {\n          setIsModalOpen(false);\n        }\n        // If it was previously down, reload the page\n        if (serverPreviouslyDown) { window.location.reload(); }\n      } catch (err) {\n        console.warn(\"❌ Server unreachable:\", err.message);\n        if (!serverPreviouslyDown) {\n          setModalContent({\n            title: strings[10000],\n            message: strings[10001],\n            message2: strings[10002],\n          });\n          setIsModalOpen(true);\n          serverPreviouslyDown = true;\n        }\n      }\n    };\n    interval = setInterval(checkServer, 2000);\n    return () => clearInterval(interval);\n  }, []);\n\n\n  useEffect(() => {\n    const checkInitialSeasonPhase = async () => {\n      console.log(\"Checking for on or off Season on app start\");\n      const raw = localStorage.getItem(\"timers\");\n      if (!raw) { console.warn(\"No timers in localStorage yet.\"); return; }\n      let storedTimers = null;\n      try {\n        storedTimers = JSON.parse(raw);\n      } catch (err) {\n        console.warn(\"Malformed timers in localStorage:\", err);\n        return;\n      }\n      if (storedTimers?.seasons?.phase === \"offSeason\") {\n        console.log(\"🕵️ Initial local phase is offSeason, confirming with server...\");\n        try {\n          const res = await axios.get(`${API_BASE}/api/get-global-season-phase`);\n          const serverPhase = res.data?.phase;\n          setIsOffSeason(serverPhase === \"offSeason\");\n          console.log(serverPhase === \"offSeason\" ? \"✅ Server confirms offSeason\" : \"❌ Server says it's not offSeason\");\n        } catch (error) {\n          console.error(\"❌ Error confirming season with server:\", error);\n        }\n      }\n    };\n    checkInitialSeasonPhase();\n  }, []);\n\n    // ✅ Fetch season data from local storage\n  const getSeasonData = () => {\n    const storedTimers = JSON.parse(localStorage.getItem(\"timers\"));\n    return storedTimers?.seasons || { type: \"Unknown\", phase: \"Unknown\", endTime: null };\n  };\n  const seasonData = getSeasonData();\n  const [currentPlayer, setCurrentPlayer] = useState(null); // Ensure this is defined\n\n  // Initialize gridId with localStorage (do not depend on currentPlayer here)\n  const [gridId, setGridId] = useState(() => {\n    const storedGridId = localStorage.getItem('gridId');\n    return storedGridId || null;\n  });\n  const [resources, setResources] = useState([]);\n  const [tileTypes, setTileTypes] = useState([]);\n  const [grid, setGrid] = useState([]);\n  const [masterResources, setMasterResources] = useState([]);\n  const [isMasterResourcesReady, setIsMasterResourcesReady] = useState([]);\n  const [masterSkills, setMasterSkills] = useState([]);\n  const [globalTuning, setGlobalTuning] = useState(null);\n  const [masterInteractions, setMasterInteractions] = useState([]);\n  const [masterTraders, setMasterTraders] = useState([]);\n  const [masterTrophies, setMasterTrophies] = useState([]);\n\n// Synchronize tiles with GlobalGridStateTilesAndResources -- i did this so NPCs have knowledge of tiles and resources as they change\nuseEffect(() => {\n  // Always update, even if tileTypes is empty array\n  if (tileTypes !== undefined && tileTypes !== null) {\n    GlobalGridStateTilesAndResources.setTiles(tileTypes);\n    console.log('GlobalGridStateTilesAndResources tiles updated:', tileTypes);\n  }\n}, [tileTypes]);\n// Synchronize resources with GlobalGridStateTilesAndResources -- i did this so NPCs have knowledge of tiles and resources as they change\nuseEffect(() => {\n  // Always update, even if resources is empty array (important for grid transitions!)\n  if (resources !== undefined && resources !== null) {\n    // Defensive cleanup: Check for crops with invalid growEnd fields\n    let cleanedResources = resources;\n    const invalidCrops = resources.filter(res => {\n      // Check if this is a crop (output of a farmplot) with growEnd\n      if (res.growEnd && masterResources) {\n        const isCrop = masterResources.some(mr => \n          mr.category === 'farmplot' && mr.output === res.type\n        );\n        return isCrop;\n      }\n      return false;\n    });\n    \n    if (invalidCrops.length > 0) {\n      console.warn(`🧹 Found ${invalidCrops.length} crops with invalid growEnd fields, cleaning up...`);\n      invalidCrops.forEach(crop => {\n        console.log(`  - ${crop.type} at (${crop.x}, ${crop.y}) has growEnd=${crop.growEnd}`);\n      });\n      cleanedResources = resources.map(res => {\n        // If this is one of the invalid crops, remove growEnd\n        const needsCleanup = invalidCrops.some(ic => ic.x === res.x && ic.y === res.y);\n        if (needsCleanup) {\n          const { growEnd, ...cleanedRes } = res;\n          console.log(`🌾 Cleaned crop ${res.type} at (${res.x}, ${res.y})`);\n          return cleanedRes;\n        }\n        return res;\n      });\n      setResources(cleanedResources);\n    }\n    \n    GlobalGridStateTilesAndResources.setResources(cleanedResources);\n    console.log('GlobalGridStateTilesAndResources resources updated:', cleanedResources);\n  }\n}, [resources, masterResources]);\n\nconst [zoomLevel, setZoomLevel] = useState('close'); // Default zoom level\nconst TILE_SIZES = globalTuning?.closerZoom ? {\n  closer: globalTuning.closerZoom,\n  close: globalTuning.closeZoom,\n  far: globalTuning.farZoom\n} : { closer: 50, close: 30, far: 16 }; // Use globalTuning or fallback to defaults\nconst activeTileSize = TILE_SIZES[zoomLevel]; // Get the active TILE_SIZE\nconst [isRelocating, setIsRelocating] = useState(null);\n\nconst [visibleSettlementId, setVisibleSettlementId] = useState(null);\nuseEffect(() => {\n  // currentPlayer may be null on first render, so initialize only when available\n  if (currentPlayer?.location?.s) {\n    setVisibleSettlementId(currentPlayer.location.s);\n  }\n}, [currentPlayer]);\n\n// Maintain camera position during zoom transitions\nuseLayoutEffect(() => {\n  if (zoomLevel && zoomLevel !== 'settlement' && zoomLevel !== 'frontier' && currentPlayer?.location?.g && currentPlayer?._id) {\n    const gridId = currentPlayer.location.g;\n    const playerIdStr = String(currentPlayer._id);\n    const playerPos = playersInGrid?.[gridId]?.pcs?.[playerIdStr]?.position;\n    \n    if (playerPos && activeTileSize) {\n      // Use fast centering without animation to prevent jump\n      centerCameraOnPlayerFast(playerPos, activeTileSize);\n    }\n  }\n}, [zoomLevel, activeTileSize]);\n\n// Track the last shown FTUE step to detect changes\nconst [lastShownFTUEStep, setLastShownFTUEStep] = useState(null);\n\nconst [inventory, setInventory]  = useState({});\nconst [backpack, setBackpack] = useState({});\nconst [playerPosition, setPlayerPosition] = useState(null);\n\nconst NPCsInGrid = useGridState();\nconst setGridState = useGridStateUpdate();\nuseEffect(() => {\n  NPCsInGridManager.registerSetGridState(setGridState);\n}, [setGridState]);\n\nconst playersInGrid = usePlayersInGrid();\nconst setPlayersInGrid = useGridStatePCUpdate();\nuseEffect(() => {\n  playersInGridManager.registerSetPlayersInGrid(setPlayersInGrid);\n}, [setPlayersInGrid]);\nuseEffect(() => {\n  playersInGridManager.registerTileSize(activeTileSize);\n}, [activeTileSize]);\n\nconst [isLoginPanelOpen, setisLoginPanelOpen] = useState(false);\nconst [isOffSeason, setIsOffSeason] = useState(false); // Track if it's off-season\nconst { activePanel, openPanel, closePanel } = usePanelContext();\nconst { closeAllPanels } = usePanelContext(); \nconst [activeQuestGiver, setActiveQuestGiver] = useState(null);\nconst [activeSocialPC, setActiveSocialPC] = useState(null);\nconst [activeStation, setActiveStation] = useState(null);\nconst [showShareModal, setShowShareModal] = useState(false);\nconst [showFTUE, setShowFTUE] = useState(false);\n\n// Register notification click handlers\nuseEffect(() => {\n  registerNotificationClickHandler('Trophy', (data) => {\n    openPanel('TrophyPanel');\n  });\n  \n  registerNotificationClickHandler('To Do', (data) => {\n    openPanel('QuestPanel');\n  });\n}, [openPanel]);\n\nuseEffect(() => {\n  const storedPlayer = localStorage.getItem('player');\n  if (!storedPlayer) {\n    console.log('[Watcher] No stored player found — showing login panel.');\n    setisLoginPanelOpen(true);\n    openPanel(\"LoginPanel\");\n    setShowKeyArt(true);\n  }\n}, [activePanel]);\n\nconst handleNPCPanel = (npc) => {\n  console.log('App.js: Handling an NPC Panel:', npc, npc.action);\n  switch (npc.action) {\n    case 'quest':\n    case 'trade':\n    case 'heal': {\n      setActiveQuestGiver(npc);  // Set the active quest giver globally\n      openPanel('NPCPanel');  \n      break;\n    }\n    case 'worker': {\n      setActiveQuestGiver(npc);  // Set the active quest giver globally\n      // Set activeStation data for NPC-based access to ensure gridId is available\n      setActiveStation({\n        type: npc.type, // Use the actual NPC type (Farmer, Farm Hand, Rancher, Lumberjack)\n        position: npc.position,\n        gridId: currentPlayer.location?.g\n      });\n      openPanel('FarmHandPanel');  \n      break;\n    }\n    default: { break; }\n  }\n};\n\nconst handlePCClick = (pc) => {\n  console.log('App.js: Opening SocialPanel for PC:', pc);\n  setActiveSocialPC(pc);  // Set the active clicked PC globally\n  openPanel('SocialPanel');  // Open the panel\n};\n\nconst [hoverTooltip, setHoverTooltip] = useState(null);\n\nconst [controllerUsername, setControllerUsername] = useState(null); // Add state for controller username\nconst [isSocketConnected, setIsSocketConnected] = useState(false);\nconst [connectedPlayers, setConnectedPlayers] = useState(() => new Set());\nconst [chatMessages, setChatMessages] = useState({});\nconst [badgeState, setBadgeState] = useState({ chat: false, store: false, mailbox: false });\n\n//Forgot why we did this:\nconst memoizedGrid = useMemo(() => grid, [grid]);\nconst memoizedTileTypes = useMemo(() => tileTypes, [tileTypes]);\nconst memoizedResources = useMemo(() => resources, [resources]);\n\nconst [showKeyArt, setShowKeyArt] = useState(false);\n\n\n/////////// APP INITIALIZATION /////////////////////////\n\n// Flags to track initialization\nlet isInitializing = false; // Declare inside useEffect to avoid global persistence\nconst [isAppInitialized, setIsAppInitialized] = useState(false);\n\n// Central INITIALIZATION for player and grid data //////////////////////////////////////////////////////\n\n// --- SOCKET \"connect\" LISTENER: Register before other listeners\n// This effect runs once at mount to set up socket.on('connect') as early as possible\nuseEffect(() => {\n  if (!socket) return;\n  // Remove any previous connect listeners to avoid duplicate logs\n  socket.off('connect', socket.__vvgame_connect_listener);\n  const connectListener = () => {\n    console.log('📡 Socket connected!');\n    if (currentPlayer?.playerId) {\n      console.log('📡 Rejoining playerId room:', currentPlayer.playerId);\n      socket.emit('join-player-room', currentPlayer.playerId);\n    }\n  };\n  socket.on('connect', connectListener);\n  // Save a reference for cleanup\n  socket.__vvgame_connect_listener = connectListener;\n  return () => {\n    socket.off('connect', connectListener);\n    delete socket.__vvgame_connect_listener;\n  };\n  // Depend on currentPlayer so we can re-emit join-player-room if playerId changes\n}, [socket, currentPlayer]);\n\nuseEffect(() => {\n  let cleanupBadges = null;\n\n  const initializeAppWrapper = async () => {\n    console.log('🏁🏁🏁 App initialization begun.');\n    if (isInitializing) {\n      console.log('Initialization is already in progress. Skipping.');\n      return;\n    }\n    isInitializing = true;\n\n    try {\n      // Step 1. Load tuning data\n      console.log('🏁✅ 1 InitAppWrapper; Merging player data and initializing inventory...');\n      const [skills, resources, globalTuningData, interactions, traders, trophies] = await Promise.all([loadMasterSkills(), loadMasterResources(), loadGlobalTuning(), loadMasterInteractions(), loadMasterTraders(), loadMasterTrophies()]);\n      setMasterResources(resources);\n      setMasterSkills(skills);\n      setGlobalTuning(globalTuningData);\n      setMasterInteractions(interactions);\n      setMasterTraders(traders);\n      setMasterTrophies(trophies);\n      setIsMasterResourcesReady(true); // ✅ Mark ready\n\n      // Step 2. Fetch stored player from localStorage\n      console.log('🏁✅ 2 InitAppWrapper; getting local player...');\n      const storedPlayer = localStorage.getItem('player');\n\n      if (!storedPlayer) {\n        console.log('No stored player found, showing login screen.');\n        setisLoginPanelOpen(true);    \n        openPanel(\"LoginPanel\");  \n        setShowKeyArt(true);  // 👈 NEW STATE FLAG TO TRIGGER IMAGE\n        return;\n      }\n      const parsedPlayer = JSON.parse(storedPlayer);\n\n      // 2.1 Fetch the full player data from the server\n      console.log('🏁✅ 2.1 InitAppWrapper; fetching player from server...');\n      const response = await axios.get(`${API_BASE}/api/player/${parsedPlayer.playerId}`);\n      const DBPlayerData = response.data;\n      if (!DBPlayerData || !DBPlayerData.playerId) {\n        console.error('Invalid full player data from server:', DBPlayerData);\n        setisLoginPanelOpen(true);\n        return;\n      }\n      \n      // 2.2 Update lastActive timestamp for app initialization\n      console.log('🏁✅ 2.2 InitAppWrapper; updating lastActive timestamp...');\n      try {\n        await axios.post(`${API_BASE}/api/update-last-active`, {\n          playerId: parsedPlayer.playerId\n        });\n      } catch (error) {\n        console.warn('Failed to update lastActive:', error);\n        // Don't block app initialization if this fails\n      }\n\n      // Step 2.5: Check for stale gridId (e.g. after offSeason relocation)\n      console.log('🏁✅ 2.5 InitAppWrapper; checking for stale gridId after relocation...');\n      const storedGridId = localStorage.getItem(\"gridId\");\n      const resolvedGridId = DBPlayerData.location?.g;\n      if (storedGridId && resolvedGridId && storedGridId !== resolvedGridId) {\n        console.warn(\"🌪️ Detected stale gridId from localStorage. Updating to new home grid.\");\n        localStorage.setItem(\"gridId\", resolvedGridId);\n        setGridId(resolvedGridId); // ✅ Use setter to update React state\n      }\n\n      // Step 3. Combine local and server data, prioritizing newer info from the server\n      console.log('🏁✅ 3 InitAppWrapper; Merging player data and initializing inventory...');\n      let updatedPlayerData = { ...parsedPlayer, ...DBPlayerData };\n      setCurrentPlayer(updatedPlayerData);\n      if (updatedPlayerData?.username) {\n        const isDev = await checkDeveloperStatus(updatedPlayerData.username);\n        setIsDeveloper(isDev);\n      }\n      setInventory(DBPlayerData.inventory || []);  // Initialize inventory properly\n      setBackpack(DBPlayerData.backpack || []);\n\n      // Step 4. Determine initial gridId from player or storage\n      console.log('🏁✅ 4. Determining local gridId...');\n      const initialGridId = parsedPlayer?.location?.g || localStorage.getItem('gridId');\n      if (!initialGridId) {\n        console.error('No gridId found. Unable to initialize grid.');\n        return;\n      }\n      setGridId(initialGridId);\n      localStorage.setItem('gridId', initialGridId); // Save to local storage\n\n      // 4.5. Open the socket\n      socket.connect();\n      // Join the grid for grid-based updates\n      socket.emit('join-grid', { gridId: initialGridId, playerId: DBPlayerData.playerId });\n      console.log(\"📡 Connected to socket and joined grid:\", initialGridId);\n      socket.emit('player-joined-grid', {\n        gridId: initialGridId,\n        playerId: DBPlayerData.playerId,\n        username: DBPlayerData.username,\n        playerData: DBPlayerData,\n      });\n      // Join the player room for personal updates\n      socket.emit('join-player-room', { playerId: DBPlayerData.playerId });\n      console.log(`📡 Joined socket room for playerId: ${DBPlayerData.playerId}`);\n      socket.emit('set-username', { username: DBPlayerData.username });\n      \n      // Request current NPCController status to clear any stale controller data\n      console.log(`🎮 Requesting current NPCController for grid: ${initialGridId}`);\n      socket.emit('request-npc-controller', { gridId: initialGridId });\n\n      // Step 5. Initialize grid tiles, resources\n      console.log('🏁✅ 5 InitAppWrapper; Initializing grid tiles and resources...');\n      await initializeGrid(\n        activeTileSize,\n        initialGridId,\n        setGrid,\n        setResources,\n        setTileTypes,\n        updateStatus,\n        DBPlayerData,\n        masterResources\n      );\n\n      // Step 6. Initialize NPCs\n      console.log('🏁✅ 6 InitAppWrapper; Initializing NPC NPCsInGrid...');\n      await NPCsInGridManager.initializeGridState(initialGridId);\n      const freshNPCState = NPCsInGridManager.getNPCsInGrid(initialGridId);\n      console.log('initializedState (NPCs): ',freshNPCState);\n\n      // Step 7. Initialize PCs\n      console.log('🏁✅ 7 InitAppWrapper; Initializing playersInGrid...');\n      await playersInGridManager.initializePlayersInGrid(initialGridId);\n      const freshPCState = playersInGridManager.getPlayersInGrid(initialGridId);\n      const playerId = String(parsedPlayer.playerId);\n      const playerPosition = freshPCState?.[playerId]?.position;\n      console.log('Player position from playersInGrid:', playerPosition);\n      if (playerPosition) {\n        centerCameraOnPlayer(playerPosition, activeTileSize);\n      }\n\n      // Step 8. Resolve player location \n      console.log('🏁✅ 8 InitAppWrapper; Resolving player location...');\n      const playerIdStr = DBPlayerData._id.toString();\n      let gridPlayer = freshPCState?.[playerIdStr];\n\n      // Step A: Detect location mismatch or missing from NPCsInGrid\n      const isLocationMismatch = DBPlayerData.location?.g !== initialGridId;\n      const isMissingFromGrid = !gridPlayer;\n\n      console.log('isLocationMismatch = ', isLocationMismatch);\n      console.log('isMissingFromGrid = ', isMissingFromGrid);\n\n      if (isMissingFromGrid && gridId === DBPlayerData.location.g) {\n        console.warn(\"🧭 Player not in correct NPCsInGrid or missing entirely. Repositioning...\");\n        const targetPosition = { x: 0, y: 0 };\n        console.warn('InitAppWrapper: adding PC to NPCsInGrid');\n        await playersInGridManager.addPlayer(gridId, DBPlayerData.playerId, DBPlayerData);\n        // Refresh the NPCsInGrid and React state\n        console.warn('InitAppWrapper: refreshing NPCsInGrid');\n        setPlayersInGrid((prev) => ({\n          ...prev,\n          [gridId]: playersInGridManager.getPlayersInGrid(gridId),\n        }));\n        const gridPlayer = playersInGridManager.getPlayersInGrid(gridId)?.[playerIdStr];\n        console.log('Refreshed gridPlayer:', gridPlayer);\n        // Update gridId and storage to match actual grid\n        console.warn('InitAppWrapper: adding PC to NPCsInGrid');\n        setGridId(gridId);\n        localStorage.setItem(\"gridId\", gridId);\n        // Update player's in-memory and stored location\n        DBPlayerData.location = {\n          ...DBPlayerData.location,\n          x: targetPosition.x,\n          y: targetPosition.y,\n          g: gridId,\n        };\n\n        console.log(\"✅ Player repositioned into NPCsInGrid:\", gridPlayer);\n      } else {\n        console.log('✅ Player found in local NPCsInGrid.');\n      }\n\n      // Step 11: Update local storage with final player state\n      console.log('🏁✅ 11 InitAppWrapper: updating localStorage with player data');\n      updatedPlayerData = {\n        ...DBPlayerData,\n        location: {\n          ...DBPlayerData.location,\n          x: gridPlayer?.position?.x || 3,\n          y: gridPlayer?.position?.y || 3,\n          g: DBPlayerData.location.g,\n        },\n      };\n\n      setCurrentPlayer(updatedPlayerData);\n      localStorage.setItem('player', JSON.stringify(updatedPlayerData));\n      console.log(`✅ LocalStorage updated with combat stats:`, updatedPlayerData);\n\n      // Step 12: Check for death flag and show modal if needed\n      if (updatedPlayerData.settings?.hasDied) {\n        console.log(\"☠️ Player died last session. Showing death modal.\");\n        setModalContent({\n          title: strings[\"5001\"],\n          message: strings[\"5002\"],\n          message2: strings[\"5003\"],\n          size: \"small\",\n        });\n        setIsModalOpen(true);\n\n        // Clear the flag in DB\n        await axios.post(`${API_BASE}/api/update-profile`, {\n          playerId: updatedPlayerData.playerId,\n          updates: { settings: { ...updatedPlayerData.settings, hasDied: false } },\n        });\n\n        // Clear the flag in localStorage\n        updatedPlayerData.settings.hasDied = false;\n        localStorage.setItem('player', JSON.stringify(updatedPlayerData));\n      }\n\n      // Step 13: Check for buttons that need to be badged\n      const storedBadges = getBadgeState(updatedPlayerData);\n      setBadgeState(storedBadges); // ✅ apply localStorage state to UI immediately\n\n      // 🔍 Badge the mailbox if any messages are unread\n      const hasUnreadMail = (updatedPlayerData.messages || []).some(msg => !msg.read);\n      if (hasUnreadMail) {\n        updateBadge(updatedPlayerData, setBadgeState, 'mailbox', true); // ✅ Use your helper\n      }\n\n      cleanupBadges = socketListenForBadgeUpdates(updatedPlayerData, setBadgeState, updateBadge);\n\n      console.log('✅🏁✅🏁✅🏁✅ App initialization complete.');\n\n      //setShowTimers(true);    // default \"Happening In Town\" details open (true) or closed (flase)\n\n      const zoom = localStorage.getItem(\"initialZoomLevel\");\n      if (zoom) {\n        setZoomLevel(zoom);\n        localStorage.removeItem(\"initialZoomLevel\");\n      }\n\n      setIsAppInitialized(true);\n      \n      // Store FTUE info but don't show yet - wait for grid to load\n      if (updatedPlayerData.firsttimeuser === true && updatedPlayerData.ftuestep !== undefined && updatedPlayerData.ftuestep >= 0) {\n        console.log('🎓 FTUE step detected for first-time user:', updatedPlayerData.ftuestep, ', will show after grid loads');\n        // Don't show FTUE yet - let the grid load first\n      }\n\n    } catch (error) {\n      console.error('Error during app initialization:', error);\n      \n      // If player not found (404), clear local storage and show login panel\n      if (error.response?.status === 404) {\n        console.log('Player not found (possibly deleted). Clearing local storage and showing login panel.');\n        localStorage.removeItem(\"player\");\n        localStorage.removeItem(\"playerId\");\n        setCurrentPlayer(null);\n        setisLoginPanelOpen(true);\n      } else {\n        updateStatus(error.code === 'ERR_NETWORK' ? 1 : 0);  // Handle other errors\n      }\n    }\n  };\n\n\n  initializeAppWrapper();\n\n  return () => {\n    cleanupBadges?.();\n  };\n}, []);  // Only run once when the component mounts\n\n\n// Establish UI BADGING (Chat, Mailbox, Store) //////////////////////////////////////////////////////\nuseEffect(() => {\n  if (!currentPlayer?.username) return;\n  // Load badge state from localStorage\n  const stored = localStorage.getItem(`badges_${currentPlayer.username}`);\n  if (stored) {\n    setBadgeState(JSON.parse(stored));\n  }\n  // Set up badge socket listener\n  const cleanupBadges = socketListenForBadgeUpdates(currentPlayer, setBadgeState, updateBadge);\n  // Clean up on unmount or player change\n  return () => {\n    cleanupBadges?.();\n  };\n}, [currentPlayer, socket]);\n\n// Watch for ftuestep changes to show FTUE modal\nuseEffect(() => {\n  // Only process FTUE if player is explicitly a first-time user\n  if (currentPlayer?.firsttimeuser === true && currentPlayer?.ftuestep !== undefined && currentPlayer.ftuestep >= 0) {\n    // Only show modal if this is a different step than last shown AND it's a forward progression\n    if (currentPlayer.ftuestep !== lastShownFTUEStep && \n        (lastShownFTUEStep === null || currentPlayer.ftuestep > lastShownFTUEStep)) {\n      \n      // Check if app is initialized and grid has loaded\n      const gridLoaded = isAppInitialized && tileTypes.length > 0 && resources.length > 0;\n      \n      if (gridLoaded) {\n        console.log('🎓 FTUE step changed to:', currentPlayer.ftuestep, ', showing FTUE (grid loaded)');\n        // Close any open panels before showing FTUE modal to ensure clean state\n        closePanel();\n        setActiveStation(null); // Clear active station to prevent panels from re-opening\n        setShowFTUE(true);\n        setLastShownFTUEStep(currentPlayer.ftuestep);\n      } else {\n        console.log('🎓 FTUE step changed to:', currentPlayer.ftuestep, ', but waiting for grid to load');\n      }\n    }\n  }\n}, [currentPlayer?.ftuestep, lastShownFTUEStep, isAppInitialized, tileTypes.length, resources.length, closePanel]);\n\n// Also check when grid loads to show pending FTUE\nuseEffect(() => {\n  if (currentPlayer?.firsttimeuser === true && \n      currentPlayer?.ftuestep !== undefined && \n      currentPlayer.ftuestep >= 0 &&\n      !showFTUE &&\n      isAppInitialized && \n      tileTypes.length > 0 && \n      resources.length > 0) {\n    \n    // If we have a pending FTUE step that hasn't been shown yet\n    if (currentPlayer.ftuestep !== lastShownFTUEStep) {\n      console.log('🎓 Grid loaded, showing pending FTUE step:', currentPlayer.ftuestep);\n      // Close any open panels before showing FTUE modal to ensure clean state\n      closePanel();\n      setActiveStation(null); // Clear active station to prevent panels from re-opening\n      setShowFTUE(true);\n      setLastShownFTUEStep(currentPlayer.ftuestep);\n    }\n  }\n}, [isAppInitialized, tileTypes.length, resources.length, currentPlayer, lastShownFTUEStep, showFTUE, closePanel]);\n\n\n// FARM STATE - Farming Seed Timer Management //////////////////////////////////////////////////////\nuseEffect(() => {\n  if (gridId && masterResources) {\n    farmState.initializeFarmState(resources); // ✅ Works for seeds\n    farmState.startSeedTimer({gridId,setResources,masterResources});\n  }\n  return () => { farmState.stopSeedTimer(); };\n}, [gridId, resources, masterResources]);  \n\n\n\n// 🔄 NPC Management Loop\nuseEffect(() => {\n  if (!isAppInitialized) { console.log('App not initialized. Skipping NPC management.'); return; }\n  //console.log('🔄 NPC Management Loop started for gridId:', gridId);\n\n  const interval = setInterval(() => {\n    const currentGridNPCs = NPCsInGrid?.[gridId]?.npcs;\n    if (!currentGridNPCs) {\n      console.warn('No NPCs in NPCsInGrid for gridId:', gridId);\n      return;\n    }\n    const isController = controllerUsername === currentPlayer?.username;\n    //console.log(\"🧑‍🌾 NPC Controller Username =\", controllerUsername, \"; currentPlayer =\", currentPlayer?.username, \"; isController =\", isController);\n\n    if (isController) {\n      Object.values(currentGridNPCs).forEach((npc) => {\n        if (typeof npc.update !== 'function') {\n          console.warn(`🛑 Skipping NPC without update() method:`, npc);\n          return;\n        }\n        \n        // Verify NPC belongs to current grid before updating\n        if (npc.gridId && npc.gridId !== gridId) {\n          console.warn(`⚠️ NPC ${npc.id} (${npc.type}) has gridId ${npc.gridId} but is being updated in grid ${gridId}. Skipping.`);\n          return;\n        }\n        \n        //console.log(`[🐮 NPC LOOP] Controller running update() for NPC ${npc.id}, state=${npc.state}`);\n        npc.update(Date.now(), NPCsInGrid[gridId], gridId, activeTileSize);\n      });\n    } else {\n      //console.log('🛑 Not the NPC controller. Skipping NPC updates.');\n    }\n  }, 1000);\n\n  return () => clearInterval(interval);\n}, [isAppInitialized, gridId, NPCsInGrid, currentPlayer, activeTileSize, controllerUsername]);\n\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// 🔄 PC Management Loop: Check for player death & lava //////////////////////////////////////////////////////\nuseEffect(() => {\n  if (!isAppInitialized) { console.log('App not initialized. Skipping PC management.'); return; }\n\n  const interval = setInterval(async () => {\n    if (playersInGrid && gridId && currentPlayer?._id) {\n      const playerId = String(currentPlayer._id);\n      const playerPC = playersInGrid?.[gridId]?.pcs?.[playerId];\n      const col = playerPC?.position?.x;\n      const row = playerPC?.position?.y;\n      const onTileType = tileTypes?.[row]?.[col];\n\n      if (playerPC?.hp <= 0 && currentPlayer) {\n        console.log(\"💀 Player is dead. Handling death...\");\n        await handlePlayerDeath(\n          currentPlayer,\n          setCurrentPlayer,\n          setGridId,\n          setGrid,\n          setResources,\n          setTileTypes,\n          activeTileSize,\n          updateStatus,\n          setModalContent,\n          setIsModalOpen,\n          closeAllPanels\n        );\n        setModalContent({\n          title: strings[\"5001\"],\n          message: strings[\"5002\"],\n          message2: strings[\"5003\"],\n          size: \"small\",\n        });\n        setIsModalOpen(true);\n\n      } else {\n        // 🔥 Check for lava tile\n        if (onTileType === \"l\") {\n          const lavaDamage = 2;\n          playersInGrid[gridId].pcs[playerId].hp -= lavaDamage;\n          FloatingTextManager.addFloatingText(`- ${lavaDamage} ❤️‍🩹 HP`, col, row, activeTileSize);\n          console.log(\"🔥 Player is standing on lava. Applying 2 damage.\");\n        }\n\n      }\n    }\n  }, 1000);\n  return () => clearInterval(interval);\n// Add dependencies for resources, setResources, setInventory, setBackpack, inventory, backpack, masterResources, masterSkills\n}, [\n  isAppInitialized,\n  gridId,\n  playersInGrid,\n  currentPlayer,\n  activeTileSize,\n  resources,\n  setResources,\n  setInventory,\n  setBackpack,\n  inventory,\n  backpack,\n  masterResources,\n  masterSkills,\n]);\n\n// 🔄 PC Management Loop: Check for low health //////////////////////////////////////////////////////\nuseEffect(() => {\n  if (!isAppInitialized) { console.log('App not initialized. Skipping PC Health Check.'); return; }\n\n  const interval = setInterval(async () => {\n      if (playersInGrid && gridId && currentPlayer?._id) {\n        const playerId = String(currentPlayer._id);\n        const playerPC = playersInGrid?.[gridId]?.pcs?.[playerId];\n        const col = playerPC?.position?.x;\n        const row = playerPC?.position?.y;\n\n      if (playerPC?.hp <= (currentPlayer.baseMaxhp/2) && currentPlayer.location.gtype === 'homestead') {\n          const healing = 2;\n          playersInGrid[gridId].pcs[playerId].hp += healing;\n          FloatingTextManager.addFloatingText(`+ ${healing} ❤️‍🩹 HP`, col, row, activeTileSize);\n        }\n    }\n  }, 10000);\n  return () => clearInterval(interval);\n}, [\n  isAppInitialized,\n  gridId,\n  playersInGrid,\n  currentPlayer,\n  activeTileSize,\n  resources,\n  setResources,\n  setInventory,\n  setBackpack,\n  inventory,\n  backpack,\n  masterResources,\n  masterSkills,\n]);\n\n/////// TIMERS & SEASONS //////////////////////////////////////////////////////\n\n// TIMERS Step 1: Global State for Timers\nconst [timers, setTimers] = useState(() => {\n  // Load from local storage (if available)\n  const storedTimers = JSON.parse(localStorage.getItem(\"timers\"));\n  return storedTimers || {\n    seasons: { phase: \"\", endTime: null, type: \"\" },\n    elections: { phase: \"\", endTime: null },\n    train: { phase: \"\", endTime: null },\n    taxes: { phase: \"\", endTime: null },  \n    bank: { phase: \"\", endTime: null },  \n  }; \n});\nconst [countdowns, setCountdowns] = useState({ seasons: \"\", elections: \"\", train: \"\", taxes: \"\", bank: \"\" });\n\n// TIMERS Step 2: Initialize Timers on app start/refresh; run once\nuseEffect(() => {\n  //console.log(\"🔄 currentPlayer = \",currentPlayer);\n\n  if (!currentPlayer?.settlementId) return;\n  const initializeTimers = async () => {\n      await fetchTimersData();\n      console.log(\"✅ Timers initialized:\", timers);\n  };\n  initializeTimers();\n  const interval = setInterval(fetchTimersData, 60 * 1000); // ✅ Refresh every 60s; DO WE NEED THIS??\n  return () => clearInterval(interval);\n}, [currentPlayer]); // ✅ Runs when currentPlayer is updated\n\n// TIMERS Step 3: Fetch initial timers from the server\nconst fetchTimersData = async () => {\n  //console.log(\"🔄 Fetching initial timers from the server...\");\n  \n  if (!currentPlayer) { console.warn(\"⛔ No player loaded — skipping fetchTimersData.\"); return; }\n  if (!currentPlayer?.settlementId || !currentPlayer?.frontierId) return;\n\n  try {\n    const res = await axios.get(`${API_BASE}/api/get-frontier/${currentPlayer.frontierId}`);\n    const frontierData = res.data;\n    const updatedTimers = {\n      seasons: {\n        type: frontierData.seasons?.seasonType || \"Unknown\",\n        phase: frontierData.seasons?.phase || \"Unknown\",\n        endTime: frontierData.seasons?.endTime ? new Date(frontierData.seasons.endTime).getTime() : null,\n      },\n      elections: {\n        phase: frontierData.elections?.phase || \"Unknown\",\n        endTime: frontierData.elections?.endTime ? new Date(frontierData.elections.endTime).getTime() : null,\n      },\n      train: {\n        phase: frontierData.train?.phase || \"Unknown\",\n        endTime: frontierData.train?.endTime ? new Date(frontierData.train.endTime).getTime() : null,\n      },\n      taxes: {\n        phase: frontierData.taxes?.phase || \"Unknown\",\n        endTime: frontierData.taxes?.endTime ? new Date(frontierData.taxes.endTime).getTime() : null,\n      },\n      bank: {\n        phase: frontierData.bank?.phase || \"Unknown\",\n        endTime: frontierData.bank?.endTime ? new Date(frontierData.bank.endTime).getTime() : null,\n      }\n    };\n\n    setTimers(updatedTimers);\n    localStorage.setItem(\"timers\", JSON.stringify(updatedTimers)); // Save to local storage\n    console.log(\"✅ Current Time:\", Date.now());\n    \n  } catch (error) {\n    console.error(\"❌ Error fetching timers data:\", error);\n  }\n};\n\n// TIMERS Step 4: Update countdown timers\nuseEffect(() => {\n  const updateCountdowns = () => {\n    const now = Date.now(); // Get current timestamp\n\n    setCountdowns({\n      seasons: formatCountdown(timers.seasons.endTime, now),\n      elections: formatCountdown(timers.elections.endTime, now),\n      train: formatCountdown(timers.train.endTime, now),\n      taxes: formatCountdown(timers.taxes.endTime, now),\n      bank: formatCountdown(timers.bank.endTime, now),\n    });\n  };\n\n  updateCountdowns(); // Run immediately\n  const interval = setInterval(updateCountdowns, 1000); // Update UI every second\n\n  return () => clearInterval(interval); // Cleanup on unmount\n}, [timers]); // Runs when timers update\n\n\n// TIMERS Step 5: Check Phase Transitions (LOCAL)\nuseEffect(() => {\n  const checkPhaseTransitions = async () => {\n    //console.log(\"🔍checkPhaseTransitions;  season = \",timers.seasons.phase);\n    const now = Date.now();\n    let shouldFetchNewTimers = false;\n    // console.log(\"🕰️ Checking season timer... now =\", new Date(now).toLocaleTimeString(), \n    //   \"| endTime =\", new Date(timers.seasons.endTime).toLocaleTimeString()\n    // );\n    if (timers.seasons.endTime && now >= timers.seasons.endTime) {\n      console.log(\"🌱 Season phase ended.\");\n      shouldFetchNewTimers = true;\n    }\n    if (timers.elections.endTime && now >= timers.elections.endTime) {\n      console.log(\"🏛️ Election phase ended. Fetching new election data...\");\n      shouldFetchNewTimers = true;\n    }\n    if (timers.train.endTime && now >= timers.train.endTime) {\n      console.log(\"🚂 Train cycle ended. Fetching new train data...\");\n      shouldFetchNewTimers = true;\n    }\n    if (timers.taxes.endTime && now >= timers.taxes.endTime) {\n      console.log(\"💰 Tax cycle ended. Fetching new tax data...\");\n      shouldFetchNewTimers = true;\n    }\n    if (timers.bank.endTime && now >= timers.bank.endTime) {\n      console.log(\"💰 Bank cycle ended. Fetching new bank timer...\");\n      shouldFetchNewTimers = true;\n    }\n    if (shouldFetchNewTimers) {\n      console.log(\"⏳ A phase has ended! Fetching updated timers...\");\n      await fetchTimersData();\n      const updatedPhase = JSON.parse(localStorage.getItem(\"timers\"))?.seasons?.phase;\n      if (updatedPhase === \"offSeason\") {\n        setIsOffSeason(true);\n        console.log(\"🕓 OffSeason detected immediately after fetch.\");\n      }\n    }\n  };\n\n  if (timers.seasons.phase === \"offSeason\") { \n    setIsOffSeason(true);\n  } else {\n    setIsOffSeason(false); \n  }\n\n  const interval = setInterval(checkPhaseTransitions, 1000); // ✅ Check every 1s\n  return () => clearInterval(interval);\n}, [timers]); // Runs when timers update\n\n\nconst previousPhaseRef = useRef(timers.seasons?.phase);\n\n// 🔄 Refresh client when offSeason ends\nuseEffect(() => {\n  const currentPhase = timers.seasons?.phase;\n  if (\n    previousPhaseRef.current === \"offSeason\" &&\n    currentPhase === \"onSeason\"\n  ) {\n    console.warn(\"🔁 offSeason ended — forcing full app reload.\");\n    window.location.reload();\n  }\n  previousPhaseRef.current = currentPhase;\n}, [timers.seasons?.phase]);\n\n\n\n/////////// SOCKET LISTENERS /////////////////////////\n\n// 🔄 SOCKET LISTENER: Real-time updates for PC join and leave\nuseEffect(() => {\n  socketListenForPCJoinAndLeave(gridId, currentPlayer, isMasterResourcesReady, setPlayersInGrid, controllerUsername, setControllerUsername);\n}, [socket, gridId, isMasterResourcesReady, currentPlayer, controllerUsername]);\n\n// 🔄 SOCKET LISTENER: PCs: Real-time updates for GridState (PC sync)\nuseEffect(() => {\n  if (!isAppInitialized) { console.log('App not initialized. Skipping PC socket changes.'); return; }  \n  socketListenForPCstateChanges(activeTileSize, gridId, currentPlayer, setPlayersInGrid, localPlayerMoveTimestampRef);\n}, [socket, gridId, currentPlayer]);\n\n// 🔄 SOCKET LISTENER: NPCs:  Real-time updates for GridStateNPC snc\nuseEffect(() => {\n  if (!isAppInitialized) { console.log('App not initialized. Skipping NPC socket changes.'); return; }  \n  socketListenForNPCStateChanges(activeTileSize, gridId, setGridState, npcController);\n}, [socket, gridId, isAppInitialized]);\n\n// 🔄 SOCKET LISTENER: Real-time updates for resources\nuseEffect(() => {\n  socketListenForResourceChanges(activeTileSize, gridId, isMasterResourcesReady, setResources, masterResources, enrichResourceFromMaster);\n}, [socket, gridId, isMasterResourcesReady]); // ← Add isMasterResourcesReady as a dependency\n\n// 🔄 SOCKET LISTENER: Real-time updates for tiles\nuseEffect(() => {\n  socketListenForTileChanges(gridId, setTileTypes, mergeTiles);\n}, [socket, gridId]);\n\n// Add socket event listeners for NPC controller status\nuseEffect(() => {\n  socketListenForNPCControllerStatus(gridId, currentPlayer, setControllerUsername);\n}, [socket, gridId, currentPlayer]);\n\n// 🔄 SOCKET LISTENER: Force refresh on season reset\nuseEffect(() => {\n  socketListenForSeasonReset();\n}, [socket]);\n\nuseEffect(() => {\n  if (!socket || !currentPlayer || !gridId) return;\n  socketListenForConnectAndDisconnect(gridId, currentPlayer, setIsSocketConnected);\n}, [socket, currentPlayer, gridId]);\n\nuseEffect(() => {\n  if (!socket || !gridId) return;\n  const cleanup = socketListenForPlayerConnectedAndDisconnected(gridId, setConnectedPlayers);\n  return cleanup;\n}, [socket, gridId]);\n\n// 🔄 SOCKET LISTENER: Real-time updates for mailbox badge\nuseEffect(() => {\n  if (!socket || !currentPlayer?.playerId) return;\n  const cleanup = socketListenForBadgeUpdates(currentPlayer, setBadgeState, updateBadge);\n  return cleanup;\n}, [socket, currentPlayer]);\n\n// 🔄 SOCKET LISTENER: Real-time chat messages\nuseEffect(() => {\n  if (!socket || !currentPlayer) return;\n  const cleanup = socketListenForChatMessages(setChatMessages); // ✅ Must pass correct setter\n  return cleanup;\n}, [socket, currentPlayer]);\n\n\n/////////// HANDLE ZOOMING & RESIZING /////////////////////////\n\nconst zoomIn = async () => {\n  const gridId = currentPlayer?.location?.g;\n  if (!gridId || !currentPlayer?._id) { console.warn(\"No valid gridId or playerId found for currentPlayer.\"); return; }\n  const playerIdStr = String(currentPlayer._id);\n  const playerPos = playersInGrid?.[gridId]?.pcs?.[playerIdStr]?.position;\n  if (currentPlayer.iscamping) { updateStatus(32); return; }\n  \n  if (zoomLevel === 'frontier') {\n    setZoomLevel('settlement'); // Zoom into the settlement view\n    updateStatus(12); // \"Settlement view.\"\n  } else if (zoomLevel === 'settlement') {\n    centerCameraOnPlayerFast(playerPos, TILE_SIZES.far); \n    setZoomLevel('far'); // Zoom into the grid view\n    const { username, gridType } = await fetchHomesteadOwner(gridId);\n\n    if (gridType === 'town') {\n      updateStatus(14);\n    } else if ([\"valley0\", 'valley1', 'valley2', 'valley3'].includes(gridType)) {\n      updateStatus(16);\n    } else if (gridType === 'homestead') {\n      if (username) {\n        await updateGridStatus(gridType, username, updateStatus, currentPlayer, currentPlayer.location.g);\n      } else {\n        updateStatus('This homestead is unoccupied.');\n      }\n    } else {\n      console.warn(`Unexpected gridType: ${gridType}`);\n      updateStatus('Unknown location.');\n    }\n\n  } else if (zoomLevel === 'far') {\n    setTimeout(() => {\n      centerCameraOnPlayerFast(playerPos, TILE_SIZES.close);\n    }, 50); // Allow brief render before scrolling\n    setZoomLevel('close'); // Zoom into a detailed view\n  } else if (zoomLevel === 'close') {\n    setTimeout(() => {\n      centerCameraOnPlayerFast(playerPos, TILE_SIZES.closer);\n    }, 50); // Allow brief render before scrolling\n    setZoomLevel('closer');\n  }\n};\n\nconst zoomOut = () => {\n  const gridId = currentPlayer?.location?.g;\n  if (!gridId || !currentPlayer?._id) { console.warn(\"No valid gridId or playerId found for currentPlayer.\"); return; }\n  const playerIdStr = String(currentPlayer._id);\n  const playerPos = playersInGrid?.[gridId]?.pcs?.[playerIdStr]?.position;\n\n  if (currentPlayer.iscamping) { updateStatus(32); return; }\n  if (zoomLevel === 'closer') {\n    setZoomLevel('close');\n    setTimeout(() => {\n      centerCameraOnPlayerFast(playerPos, TILE_SIZES.close);\n    }, 50); // Allow brief render before scrolling\n  } else if (zoomLevel === 'close') {\n    setZoomLevel('far'); // Zoom out to grid view\n    setTimeout(() => {\n      centerCameraOnPlayerFast(playerPos, TILE_SIZES.far);\n    }, 50); // Allow brief render before scrolling\n  } else if (zoomLevel === 'far') {\n    setZoomLevel('settlement'); // Zoom out to settlement view\n    updateStatus(12); // \"Settlement view.\"\n  } else if (zoomLevel === 'settlement') {\n    setZoomLevel('frontier'); // Zoom out to frontier view\n    updateStatus(13); // \"Frontier view.\"\n  }\n};\n\n/////////// HANDLE KEY MOVEMENT /////////////////////////\n\nconst localPlayerMoveTimestampRef = useRef(0);\n\nuseEffect(() => {\n  const handleKeyDown = (event) => {\n    if (activeModal) { return; } // Keyboard input disabled while modal is open\n    if (isOffSeason) { return; } // Keyboard input disabled while offseason\n    if (zoomLevel === 'frontier' || zoomLevel === 'settlement') { return; }  // Prevent input if zoomed out\n    const activeElement = document.activeElement;\n    if (activeElement && (activeElement.tagName === 'INPUT' || activeElement.tagName === 'TEXTAREA')) { return; } // Prevent movement if a text input is focused\n    if ([\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].includes(event.key)) { event.preventDefault(); }  // Prevent the browser from scrolling when using arrow keys\n\n    handleMovementKeyDown(event, currentPlayer, activeTileSize, masterResources,\n        setCurrentPlayer, \n        setGridId, \n        setGrid, \n        setTileTypes, \n        setResources, \n        updateStatus, \n        closeAllPanels,\n        localPlayerMoveTimestampRef,\n        bulkOperationContext,\n        strings\n    );\n  };\n  \n  const handleKeyUp = (event) => {\n    // Handle key release for diagonal movement\n    handleMovementKeyUp(event);\n  };\n  \n  window.addEventListener('keydown', handleKeyDown); \n  window.addEventListener('keyup', handleKeyUp);\n  return () => {\n    window.removeEventListener('keydown', handleKeyDown); \n    window.removeEventListener('keyup', handleKeyUp);\n  };\n}, [currentPlayer, masterResources, activeTileSize, activeModal, zoomLevel]);\n\n\n\n//////////// HANDLE CLICKING /////////////////////////\n\nlet isProcessing = false; // Guard against duplicate clicks\n\nconst handleTileClick = useCallback(async (rowIndex, colIndex) => {\n  if (isProcessing) return; // Skip if still processing\n  isProcessing = true;\n\n  // Find resource including multi-tile resources\n  const resource = resources.find((res) => {\n    const range = res.range || 1;\n    // Check if the clicked tile falls within the resource's range\n    // Resource is anchored at lower-left (res.x, res.y)\n    return colIndex >= res.x && colIndex < res.x + range &&\n           rowIndex <= res.y && rowIndex > res.y - range;\n  });\n  console.log('⬆️ handleTileClick invoked with:', { rowIndex, colIndex, resource });\n\n  // 🛡️ Prevent interaction on another player's homestead\n  const isOnOwnHomestead = currentPlayer?.gridId === currentPlayer?.location?.g;\n  if (resource && currentPlayer?.location?.gtype === 'homestead' && !isOnOwnHomestead && !isDeveloper) {\n    const isFriend = false; // 🧪 Future: replace with actual friend-checking logic\n    const alwaysBlocked = ['Mailbox', 'Trade Stall', 'Warehouse'];\n    const isForbiddenStation = resource?.category === 'station' && alwaysBlocked.includes(resource?.type);\n    const isSafe = resource?.category === 'npc' || resource?.category === 'travel'; // Expand as needed\n    if (isForbiddenStation || (!isSafe && !isFriend)) {\n      console.warn(\"🚫 Blocked interaction on another player's homestead.\");\n      updateStatus(90);\n      isProcessing = false;\n      return;\n    }\n  }\n\n  // Validate `gridId` and `username`\n  if (!gridId || typeof gridId !== 'string') { console.error('Invalid gridId:', gridId); return; }\n  if (!currentPlayer?.username || typeof currentPlayer.username !== 'string') { console.error('Invalid username:', currentPlayer?.username); return; }\n  // ✅ Get player position from playersInGrid\n  if (!currentPlayer?._id) { console.error('No player ID found'); return; }\n  const playerPos = playersInGridManager.getPlayerPosition(gridId, String(currentPlayer._id));\n  const targetPos = { x: colIndex, y: rowIndex };\n  if (!playerPos || typeof playerPos.x === 'undefined' || typeof playerPos.y === 'undefined') {\n      console.error(\"⚠️ Player position is invalid in NPCsInGrid; playerPos: \", playerPos);\n      isProcessing = false;\n      return;\n  }\n  // If clicking a resource, check range before interacting (except NPCs)\n//  if (resource && resource.category !== 'npc' && !isOnOwnHomestead) {\n  if (resource && resource.category !== 'npc') {\n    const distance = calculateDistance(playerPos, targetPos);\n    const playerRange = getDerivedRange(currentPlayer, masterResources);    \n    if (distance > playerRange) {\n      FloatingTextManager.addFloatingText(24, targetPos.x, targetPos.y, activeTileSize);\n      isProcessing = false;\n      return;\n    }\n  }\n  if (resource) {\n    console.log('App.js: Resource clicked:', resource);\n    if (resource.category === 'npc') { } // handled in RenderDynamic\n    else if (resource.category === 'travel') {\n      // Check if any bulk operation is active\n      if (bulkOperationContext?.isAnyBulkOperationActive?.()) {\n        const activeOps = bulkOperationContext.getActiveBulkOperations();\n        updateStatus(470);\n        return;\n      }\n      \n      // Handle clickable signposts\n      const { handleTransitSignpost } = await import('./GameFeatures/Transit/Transit');\n      await handleTransitSignpost(\n        currentPlayer,\n        resource.type,\n        setCurrentPlayer,\n        setGridId,\n        setGrid,\n        setTileTypes,\n        setResources,\n        updateStatus,\n        activeTileSize,\n        currentPlayer.skills,\n        closeAllPanels,\n        bulkOperationContext,\n        masterResources,\n        strings,\n        masterTrophies\n      );\n    }\n    else if (resource.category === 'training') {\n      setActiveStation({type: resource.type, position: { x: resource.x, y: resource.y }, gridId: gridId, });\n      openPanel('SkillsPanel'); \n    }\n    else if (resource.category === 'crafting') {\n      setActiveStation({type: resource.type,position: { x: resource.x, y: resource.y }, gridId: gridId, });\n      switch (resource.type) {\n        case 'Ancient Temple':\n          openPanel('ScrollStation'); \n          break;\n        default:\n          openPanel('CraftingStation');\n          break;\n      }\n    } \n    else if (resource.category === 'farmhouse') {\n      setActiveStation({type: resource.type,position: { x: resource.x, y: resource.y }, gridId: gridId, });\n      openPanel('FarmHouse');\n    } \n    else if (resource.category === 'shop') {\n      setActiveStation({type: resource.type,position: { x: resource.x, y: resource.y }, gridId: gridId, });\n      openPanel('ShopStation');\n    } \n    else if (resource.category === 'stall') {\n      setActiveStation({type: resource.type, position: { x: resource.x, y: resource.y }, gridId: gridId, });\n      openPanel('AnimalStall');\n    } \n    else if (resource.category === 'farmplot') {\n      setActiveStation({type: resource.type, position: { x: resource.x, y: resource.y }, gridId: gridId, resource: resource });\n      openPanel('CropPanel');\n    } \n    else if (resource.category === 'deco') {\n      setActiveStation({type: resource.type, position: { x: resource.x, y: resource.y }, gridId: gridId, });\n      openPanel('DecoPanel');\n    } \n    else if (resource.category === 'pet') {\n      setActiveStation({type: resource.type, position: { x: resource.x, y: resource.y }, gridId: gridId, });\n      openPanel('PetPanel');\n    } \n    else if (resource.category === 'station') {\n      setActiveStation({type: resource.type, position: { x: resource.x, y: resource.y }, gridId: gridId, });\n      switch (resource.type) {\n        case 'Courthouse':\n          openPanel('Courthouse'); break;\n        case 'Trade Stall':\n        case 'Trade':\n        case 'Trading Post':\n          openPanel('TradeStall'); \n          break;\n        case 'Outpost':\n          openPanel('OutpostPanel'); \n          break;\n        case 'Mailbox':\n          openModal('Mailbox'); break;\n        case 'Warehouse':\n          openPanel('WarehousePanel'); break;\n        case 'Train':\n          openPanel('TrainPanel'); break;\n        case 'Bank':\n          openPanel('BankPanel'); break;\n        case 'Worker Slot':\n          // Find the Farm House on the grid\n          const farmHouse = resources.find(res => res.type === 'Farm House' && res.category === 'farmhouse');\n          if (farmHouse) {\n            // Set the Farm House as the active station\n            setActiveStation({\n              type: 'Farm House', \n              position: { x: farmHouse.x, y: farmHouse.y }, \n              gridId: gridId\n            });\n            openPanel('FarmHouse');\n          } else {\n            console.warn('Farm House not found on grid');\n            updateStatus('Farm House not found');\n          }\n          break;\n        default:\n          console.warn(`Unhandled station type: ${resource.type}`);\n      }\n    } else {\n      // Pass to handleResourceClick for all other resources\n      // Use resource's anchor position for multi-tile resources\n      handleResourceClick(\n        resource,\n        resource.y,  // Use resource's actual y position\n        resource.x,  // Use resource's actual x position\n        resources,\n        setResources,\n        setInventory,\n        setBackpack,\n        inventory,\n        backpack,\n        FloatingTextManager.addFloatingText,\n        gridId,\n        activeTileSize,\n        tileTypes,\n        currentPlayer,\n        setCurrentPlayer,\n        setGridId,\n        setGrid,\n        setTileTypes,\n        updateStatus,\n        masterResources,\n        masterSkills,\n        setModalContent,\n        setIsModalOpen,\n        closeAllPanels,\n        strings,\n        bulkOperationContext,\n        openPanel,\n        masterTrophies\n      ).finally(() => {\n        isProcessing = false; // Reset flag after processing\n      });\n    }\n  } else {\n    console.log('isTeleportEnabled:', currentPlayer?.settings?.isTeleportEnabled);\n  \n    if (currentPlayer?.settings?.isTeleportEnabled) {\n      const targetPosition = { x: colIndex, y: rowIndex };\n      console.log('📍 Player teleporting to grid position:', targetPosition);\n  \n      // Update currentPlayer state\n      const updatedPlayer = {\n        ...currentPlayer,\n        position: targetPosition\n      };\n      setCurrentPlayer(updatedPlayer);\n      localStorage.setItem('player', JSON.stringify(updatedPlayer));\n  \n      // Multiplayer sync — update PC in grid\n      if (currentPlayer?._id) {\n        playersInGridManager.updatePC(gridId, currentPlayer._id, {\n          position: targetPosition\n        });\n      }\n    }\n  }\n  isProcessing = false; // Reset flag here\n\n}, [resources, gridId, inventory, currentPlayer, playerPosition, activeTileSize]);\n  \n\n  \n//////////// HANDLE LOGIN and LOGOUT /////////////////////////\n\nconst handleLogout = () => {\n  console.log('Logging out user...');\n  NPCsInGridManager.stopGridStateUpdates();  // Clear all states\n  setCurrentPlayer(null);\n  setInventory({});\n  setPlayerPosition({ x: 0, y: 0 });\n  setGrid([]); // Clear the grid\n  setResources([]); // Clear resources\n  setTileTypes([]); // Clear tile types\n  setGridId(null); // Clear gridId\n  localStorage.removeItem('gridId'); // Remove gridId from local storage\n  localStorage.removeItem('player');  // Remove player data from local storage\n  window.location.reload();  // Force a state reset by triggering the login modal\n  console.log('Player has logged out, and state has been reset.');\n};\n\nconst handleLoginSuccess = async (player) => {\n  console.log('Handling login success for player:', player);  // Store player data in localStorage\n  localStorage.setItem('player', JSON.stringify(player));  // Reload the app (triggers full initialization)\n  window.location.reload();\n};\n\n\n  /////////////// HANDLE INACTIVITY for controller relinquishment and refresh //////////////\n\n  useEffect(() => {\n    let lastActivity = Date.now();\n    const INACTIVITY_LIMIT = 15 * 60 * 1000; // 15 minutes\n    const REFRESH_TIMEOUT = 20 * 60 * 1000; // 20 minutes\n    const updateActivity = () => { lastActivity = Date.now(); };\n\n    const checkStaleness = () => {\n      const now = Date.now();\n      const inactiveTime = now - lastActivity;\n      if (inactiveTime >= REFRESH_TIMEOUT) {\n        console.warn('🔁 Inactive too long. Showing refresh modal.');\n        setModalContent({\n          title: strings[\"70\"],\n          message: strings[\"71\"],\n          message2: strings[\"72\"],\n          size: \"small\",\n          onClose: () => setIsModalOpen(false),\n          children: (\n            <div style={{ display: 'flex', gap: '10px', justifyContent: 'center', marginTop: '10px' }}>\n              <div className=\"shared-buttons\">\n                <button\n                  className=\"btn-panel btn-success\"\n                  onClick={() => {\n                    setIsModalOpen(false);\n                    window.location.reload();\n                  }}\n                >\n                  {strings[\"73\"]}\n                </button>\n              </div>\n            </div>\n          ),\n        });\n        setIsModalOpen(true);\n\n        // Set a backup auto-refresh after 30 seconds\n        setTimeout(() => {\n          console.warn(\"🔁 Auto-refreshing due to inactivity...\");\n          window.location.reload();\n        }, 30000);\n\n      } else if (inactiveTime >= INACTIVITY_LIMIT) {\n        console.warn('👋 Inactive for a while. Releasing controller role.');\n        if (controllerUsername === currentPlayer?.username) {\n          socket.emit('relinquish-npc-controller', { gridId });\n        }\n      }\n    };\n\n    window.addEventListener('mousemove', updateActivity);\n    window.addEventListener('keydown', updateActivity);\n    document.addEventListener('visibilitychange', () => {\n      if (document.visibilityState === 'visible') updateActivity();\n    });\n\n    const interval = setInterval(checkStaleness, 60000); // check every minute\n\n    return () => {\n      window.removeEventListener('mousemove', updateActivity);\n      window.removeEventListener('keydown', updateActivity);\n      clearInterval(interval);\n    };\n  }, [currentPlayer, controllerUsername, gridId]);\n\n\n  ///////////////// FOR THE PANELS:\n\n  const [showTimers, setShowTimers] = useState(false);\n  const [showStats, setShowStats] = useState(false); // Toggle for combat stats UI\n  const isOnOwnHomestead = currentPlayer?.gridId === currentPlayer?.location?.g;\n\n  // Chat panel slideout state\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  const [isChatClosing, setIsChatClosing] = useState(false);\n  \n  const handleCloseChat = () => {\n    setIsChatClosing(true);\n    setTimeout(() => {\n      setIsChatOpen(false);\n      setIsChatClosing(false);\n    }, 300); // Match the animation duration\n  };\n\n\n  ///////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////\n  /////////////// RENDERING THE APP /////////////////////////\n  ///////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////\n\nreturn (\n    <>\n    <FloatingTextManager />\n\n{/* //////////////////////  Header  //////////////////////// */}\n\n    <header className=\"app-header\">\n            \n        <div className=\"header-controls-left\">\n\n  <h1 style={{ transform: 'translateX(40px)', marginRight: '20px' }}>{strings[0]}</h1>\n\n        {currentPlayer?.accountStatus === 'Gold' && (\n          <div className=\"shared-buttons\">\n            <button className=\"btn-basic btn-header btn-gold\" onClick={() => openPanel('ProfilePanel')}>{currentPlayer.icon} {currentPlayer.username}</button>\n          </div>\n        )}\n        {currentPlayer?.accountStatus === 'Free' && (\n          <div className=\"shared-buttons\">\n            <button className=\"btn-basic btn-header\" onClick={() => openPanel('ProfilePanel')}>{currentPlayer.icon} {currentPlayer.username}</button>\n          </div>\n        )}\n\n        <div className=\"shared-buttons\">\n          <button className=\"btn-basic btn-header\" disabled={!currentPlayer} onClick={() => openPanel('InventoryPanel')}>{strings[10103]} </button>\n        </div>\n        <div className=\"shared-buttons\">\n          <button className=\"btn-basic btn-header\"\n            onClick={() => openPanel('HowToMoneyPanel')}\n          >\n            💰 {Array.isArray(currentPlayer?.inventory)\n              ? (currentPlayer.inventory.find((item) => item.type === \"Money\")?.quantity || 0).toLocaleString()\n              : \"...\"}\n          </button>\n        </div>\n        <div className=\"shared-buttons\">\n          <button className=\"btn-basic btn-header\"\n            onClick={() => openPanel('HowToGemsPanel')}\n          >\n            💎 {Array.isArray(currentPlayer?.inventory)\n              ? (currentPlayer.inventory.find((item) => item.type === \"Gem\")?.quantity || 0).toLocaleString()\n              : \"...\"}\n          </button>\n        </div>\n        <div className=\"nav-button-wrapper\">\n          <div className=\"shared-buttons\">\n            <button className=\"btn-basic btn-header\" disabled={!currentPlayer} onClick={() => openModal('Mailbox')}>{strings[10105]}</button>\n          </div>\n          {badgeState.mailbox && <div className=\"badge-dot\" />}\n        </div>\n        <div className=\"nav-button-wrapper\">\n          <div className=\"shared-buttons\">\n            <button className=\"btn-basic btn-header btn-gold\" disabled={!currentPlayer} onClick={() => setActiveModal(\"Store\")}>{strings[10104]}</button>\n          </div>\n          {badgeState.store && <div className=\"badge-dot\" />}\n        </div>\n\n      </div>\n        <div className=\"header-controls-right\">\n            <div className=\"nav-button-wrapper\">\n              <div className=\"shared-buttons\">\n                <button className=\"btn-basic btn-header\" disabled={!currentPlayer} onClick={() => setIsChatOpen(prev => !prev)}>{strings[10107]}</button>\n              </div>\n              {badgeState.chat && <div className=\"badge-dot\" />}\n            </div>\n            <div className=\"shared-buttons\">\n              <button className=\"btn-basic btn-header\" onClick={() => setShowShareModal(true)}>{strings[10106]}</button>\n            </div>\n            <div className=\"shared-buttons\">\n              <button className=\"btn-basic btn-header\" disabled={!currentPlayer} onClick={() => setActiveModal('LanguagePicker')}>\n                🌎 {LANGUAGE_OPTIONS.find(l => l.code === currentPlayer?.language)?.label || 'Language'}\n              </button>\n            </div>\n        </div>\n    </header>\n    \n    <div className=\"status-bar-wrapper\"> <StatusBar /> </div>\n\n    {/* Chat Slideout Panel */}\n    {isChatOpen && currentPlayer && (\n      <div className={`chat-panel-slideout ${isChatClosing ? 'closing' : ''}`}>\n        <Chat\n          currentGridId={currentPlayer.location?.g}\n          currentSettlementId={currentPlayer.location?.s}\n          currentFrontierId={currentPlayer.frontierId}\n          currentPlayer={currentPlayer}\n          onClose={handleCloseChat}\n        />\n      </div>\n    )}\n\n\n{/* //////////////// Left Side Navigation Column ///////////////// */}\n\n    <div className=\"nav-column\">\n\n        <div className=\"zoom-controls\">\n          <div className=\"zoom-button-container\">\n            <button className=\"zoom-button zoom-in\" disabled={!currentPlayer} onClick={zoomIn}><span>+</span></button>\n            <button className=\"zoom-button zoom-out\" disabled={!currentPlayer} onClick={zoomOut}><span>−</span></button>\n          </div>\n        </div>\n\n      <button className={`nav-button ${!activePanel ? 'selected' : ''}`} title={strings[12009]} onClick={() => closePanel()}>🏡</button>\n      <button className={`nav-button ${activePanel === 'QuestPanel' ? 'selected' : ''}`} title={strings[12004]} disabled={!currentPlayer} onClick={() => openPanel('QuestPanel')}>✅</button>\n\n      <button \n        className={`nav-button ${activePanel === 'FarmingPanel' ? 'selected' : ''}`} title={strings[12001]} disabled={!currentPlayer} \n        onClick={() => {\n          if (currentPlayer.iscamping || currentPlayer.isinboat) {updateStatus(340);return;}\n          if (currentPlayer?.location?.gtype === 'homestead' && !isOnOwnHomestead && !isDeveloper) {updateStatus(90);return;}\n          openPanel('FarmingPanel');\n        }}\n      >🚜</button>\n      <button \n        className={`nav-button ${activePanel === 'ToolsPanel' ? 'selected' : ''}`} title={strings[12012]} disabled={!currentPlayer} \n        onClick={() => {\n          if (currentPlayer.iscamping || currentPlayer.isinboat) {updateStatus(340);return;}\n          if (currentPlayer?.location?.gtype === 'homestead' && !isOnOwnHomestead) {updateStatus(90);return;}\n          openPanel('ToolsPanel');\n        }}\n      >⛏️</button>\n      <button \n        className={`nav-button ${activePanel === 'BuyPanel' ? 'selected' : ''}`} title={strings[12003]} disabled={!currentPlayer} \n        onClick={() => {\n          if (currentPlayer.iscamping || currentPlayer.isinboat) {updateStatus(340);return;}\n          if (currentPlayer?.location?.gtype === 'homestead' && !isOnOwnHomestead && !isDeveloper) {updateStatus(90);return;}\n          openPanel('BuyPanel');\n        }}\n      >🐮</button>\n      <button \n        className={`nav-button ${activePanel === 'BuildPanel' ? 'selected' : ''}`} title={strings[12002]} disabled={!currentPlayer} \n        onClick={() => {\n          if (currentPlayer.iscamping || currentPlayer.isinboat) {updateStatus(340);return;}\n          if (currentPlayer?.location?.gtype === 'homestead' && !isOnOwnHomestead && !isDeveloper) {updateStatus(90);return;}\n          openPanel('BuildPanel');\n        }}\n      >⚒️</button>\n      <button className={`nav-button ${activePanel === 'SkillsPanel' ? 'selected' : ''}`} title={strings[12005]} disabled={!currentPlayer} onClick={() => {\n          setActiveStation(null); // ✅ Reset activeStation\n          openPanel(\"SkillsPanel\"); // ✅ Open the panel normally\n        }}>💪</button>\n\n      {!currentPlayer?.firsttimeuser && (\n        <button \n          className={`nav-button ${activePanel === 'BuyDecoPanel' ? 'selected' : ''}`} title={strings[12011]} disabled={!currentPlayer} \n          onClick={() => {\n            if (currentPlayer.iscamping || currentPlayer.isinboat) {updateStatus(340);return;}\n            // Check if on another player's homestead\n            if (currentPlayer?.location?.gtype === 'homestead' && !isOnOwnHomestead && !isDeveloper) {updateStatus(90);return;}\n            openPanel('BuyDecoPanel');\n          }}\n        >🪴</button>\n      )}\n\n      {!currentPlayer?.firsttimeuser && (\n        <button className={`nav-button ${activePanel === 'CombatPanel' ? 'selected' : ''}`} title={strings[12006]} disabled={!currentPlayer} onClick={() => openPanel('CombatPanel')}>⚔️</button>\n      )}\n      {!currentPlayer?.firsttimeuser && (\n        <button className={`nav-button ${activePanel === 'GovPanel' ? 'selected' : ''}`} title={strings[12007]} onClick={() => openPanel('GovPanel')}>🏛️</button>\n      )}\n\n      <button className={`nav-button ${activePanel === 'TrophyPanel' ? 'selected' : ''}`} title={strings[12013]} onClick={() => openPanel('TrophyPanel')}>🏆</button>\n\n      {isDeveloper && (\n        <button className={`nav-button ${activePanel === 'DebugPanel' ? 'selected' : ''}`} title=\"Debug\" onClick={() => openPanel('DebugPanel')}>\n          🐞\n        </button>\n      )}\n    </div>\n\n    <div className=\"app-container\">\n\n\n{/* ///////////////////  Base Panel  ///////////////////// */}\n\n    <div className=\"base-panel\">\n \n      <div className=\"shared-buttons\">\n        <button className=\"btn-basic\" onClick={() => openPanel('HowToPanel')}>{strings[10109]} AWSD</button>\n      </div>\n      <div className=\"shared-buttons\">\n        <button className=\"btn-basic\" onClick={() => openPanel('HowToPanel')}>{strings[10110]}</button>\n      </div>\n      <br/>\n\n      {/* Add Role display if player has one */}\n      {currentPlayer?.role === \"Mayor\" && (\n        <> <h2 className=\"player-role\"> {strings[10111]} </h2>\n          <br />\n        </>\n      )}\n\n      {/* Hit Points */}\n      <div className=\"shared-buttons\">\n        <button className=\"btn-basic\" onClick={() => openPanel('CombatPanel')}>{strings[10112]} <strong>{currentPlayer?._id ? playersInGrid?.[gridId]?.pcs?.[String(currentPlayer._id)]?.hp ?? \"?\" : \"?\"} / {currentPlayer?._id ? playersInGrid?.[gridId]?.pcs?.[String(currentPlayer._id)]?.maxhp ?? \"?\" : \"?\"}</strong></button>\n      </div>\n      <br />\n\n      {/* Season */}\n      {timers.seasons.phase === \"onSeason\" ? (\n        <>\n          <h2>{strings[10113]} {seasonData?.type || \"[Season unknown]\"}</h2>\n          <div className=\"shared-buttons\">\n            <button className=\"btn-basic\" onClick={() => openPanel('SeasonPanel')}>{strings[10114]}<br /><strong>{countdowns.seasons}</strong></button>\n          </div>\n        </>\n      ) : (\n        <>\n          <h2>{strings[10113]} {seasonData?.type || \"[Season unknown]\"}</h2>\n          <div className=\"shared-buttons\">\n            <button className=\"btn-basic\" onClick={() => openPanel('SeasonPanel')}>{strings[10115]}<br /><strong>{countdowns.seasons}</strong></button>\n          </div>\n        </>\n      )}\n      <br />\n      \n      <h2>{strings[10116]}\n        <span \n          onClick={() => setShowTimers(!showTimers)} \n          style={{ cursor: \"pointer\", fontSize: \"16px\", marginLeft: \"5px\" }}\n        >\n          {showTimers ? \"▼\" : \"▶\"}\n        </span>\n      </h2>\n\n      {showTimers && (\n        <div className=\"timers-panel\">\n\n      <br />\n\n          {timers.taxes.phase === \"waiting\" ? (\n        <>\n          <h3>{strings[10117]}</h3> \n          <p>{strings[10118]}{countdowns.taxes}</p>\n        </>\n      ) : (\n        <>\n          <h4>{strings[10119]}</h4>\n        </>\n      )}\n          <h3>{strings[10120]}{timers.elections.phase}</h3>\n          <p>{strings[10121]}{countdowns.elections}</p>\n          <h3>{strings[10122]}{timers.train.phase}</h3>\n          <p>{strings[10121]}{countdowns.train}</p>\n          <h3>{strings[10123]}{timers.bank.phase}</h3>\n          <p>{strings[10124]}{countdowns.bank}</p>\n          <div className=\"shared-buttons\">\n            <button className=\"btn-basic\" onClick={() => openModal('TownNews')}>{strings[10125]}</button>\n          </div>\n        </div>\n      )}\n      <br />\n\n      <h2>{strings[96]}</h2>\n      <div className=\"shared-buttons\">\n        <button\n          className=\"btn-basic\"\n          onClick={() => window.open('https://discord.gg/SZMw4vpUJV', '_blank')}\n        >\n          Join Discord Server\n        </button>\n      </div>\n      \n      <div className=\"shared-buttons\">\n        <button\n          className=\"btn-basic\"\n          onClick={() => window.location.href = 'mailto:valleyviewgamedev@gmail.com'}\n        >\n          {strings[97]}\n        </button>\n      </div>\n\n      <br />\n      <h3>{strings[10126]}</h3>\n      <div>\n      {playersInGrid?.[gridId]?.pcs && typeof playersInGrid[gridId].pcs === 'object' ? (\n          Object.entries(playersInGrid[gridId].pcs).length === 0 ? (\n            <h4 style={{ color: \"white\" }}>{strings[10127]}</h4>\n          ) : (\n            Object.entries(playersInGrid[gridId].pcs).map(([playerId, pc]) => (\n              <p key={playerId} style={{ color: \"white\" }}>\n                {connectedPlayers.has(playerId) && '📡 '}\n                <strong>{pc.username}</strong>\n              </p>\n            ))\n          )\n        ) : (\n          <h4 style={{ color: \"white\" }}>{strings[10127]}</h4>\n        )}\n        <h4 style={{ color: \"white\" }}>\n          {controllerUsername \n            ? `🐮 ${controllerUsername}` \n            : \"There is no NPCController\"}\n        </h4>\n      </div>\n      <br />\n    </div>\n\n      \n{/* //////////////////// Game Board //////////////////// */}\n\n    <div className=\"homestead\">\n\n      {showKeyArt && (\n        <div className=\"keyart-wrapper\">\n          <img\n            src=\"/assets/images/ValleyViewLoadScreen.png\"\n            alt=\"Valley View Key Art\"\n            className=\"keyart-image\"\n          />\n          <CowboyAnimation />\n        </div>\n      )}\n\n      {zoomLevel === 'far' || zoomLevel === 'closer' || zoomLevel === 'close' ? (\n      <>\n        <RenderGrid\n          grid={memoizedGrid}\n          tileTypes={memoizedTileTypes}\n          resources={memoizedResources}\n          handleTileClick={handleTileClick}\n          TILE_SIZE={activeTileSize}\n          setHoverTooltip={setHoverTooltip}\n          currentPlayer={currentPlayer}\n          strings={strings}\n          badgeState={badgeState}\n          electionPhase={timers.elections.phase}\n        />\n        <DynamicRenderer\n          TILE_SIZE={activeTileSize}\n          openPanel={openPanel}\n          setActiveStation={setActiveStation}\n          setInventory={setInventory}\n          setBackpack={setBackpack}\n          setResources={setResources}\n          currentPlayer={currentPlayer}\n          setCurrentPlayer={setCurrentPlayer}\n          onNPCClick={handleNPCPanel}  // Pass the callback\n          onPCClick={handlePCClick}  // Pass the callback\n          masterResources={masterResources}\n          masterSkills={masterSkills}\n          masterTrophies={masterTrophies}\n          setHoverTooltip={setHoverTooltip}\n          setModalContent={setModalContent}\n          setIsModalOpen={setIsModalOpen} \n          updateStatus={updateStatus}\n          strings={strings}\n        /> \n        {/* <RenderVFX \n          toggleVFX={currentPlayer?.settings?.toggleVFX}\n          // Placeholder for VFX\n          TILE_SIZE={activeTileSize}\n        /> */}\n\n        </>\n      ) : null}\n\n{/* //////////////////  ZOOM OUTS  ///////////////////*/}\n\n    {/* Settlement zoom view */}\n    {zoomLevel === 'settlement' && (\n      <SettlementView\n        currentPlayer={currentPlayer}\n        isDeveloper={isDeveloper}\n        setZoomLevel={setZoomLevel}\n        isRelocating={isRelocating}\n        setIsRelocating={setIsRelocating}\n        setCurrentPlayer={setCurrentPlayer}\n        setGridId={setGridId}\n        setGrid={setGrid}\n        setResources={setResources}\n        setTileTypes={setTileTypes}\n        TILE_SIZE={activeTileSize}\n        masterResources={masterResources}\n        closeAllPanels={closeAllPanels}\n        visibleSettlementId={visibleSettlementId}\n        setVisibleSettlementId={setVisibleSettlementId}\n        onClose={() => setZoomLevel('far')}\n      />\n    )}\n    {zoomLevel === 'frontier' && (\n      <FrontierView\n        currentPlayer={currentPlayer}\n        isDeveloper={isDeveloper}\n        setZoomLevel={setZoomLevel} \n        isRelocating={isRelocating}\n        setIsRelocating={setIsRelocating}\n        setCurrentPlayer={setCurrentPlayer}\n        setGridId={setGridId}              \n        setGrid={setGrid}            \n        setResources={setResources}  \n        setTileTypes={setTileTypes}\n        masterResources={masterResources}\n        masterTrophies={masterTrophies}\n        TILE_SIZE={activeTileSize}\n        closeAllPanels={closeAllPanels}\n        visibleSettlementId={visibleSettlementId}\n        setVisibleSettlementId={setVisibleSettlementId}\n        onClose={() => setZoomLevel('settlement')}\n      />\n    )}\n    </div>\n\n{/* ///////////////////// MODALS ////////////////////// */}\n\n      {showShareModal && (\n        <ShareModal onClose={() => setShowShareModal(false)} />\n      )}\n      \n      {showFTUE && (\n        <FTUE \n          currentPlayer={currentPlayer}\n          setCurrentPlayer={setCurrentPlayer}\n          onClose={() => setShowFTUE(false)}\n          openPanel={openPanel}\n          setActiveQuestGiver={setActiveQuestGiver}\n          gridId={gridId}\n          setActiveStation={setActiveStation}\n          masterResources={masterResources}\n          setResources={setResources}\n          TILE_SIZE={activeTileSize}\n        />\n      )}\n\n      <Modal \n        isOpen={isModalOpen} \n        onClose={() => {\n          if (modalContent?.onClose) {\n            modalContent.onClose();\n          } else {\n            setIsModalOpen(false);\n          }\n        }}\n        title={modalContent.title} \n        message={modalContent.message} \n        message2={modalContent.message2} \n        size={modalContent.size || \"standard\"}\n      >\n        {modalContent.children}\n        {modalContent.custom}\n      </Modal>\n\n      {activeModal === 'Mailbox' && (\n        <Mailbox\n          onClose={closeModal}  // ✅ This sets activeModal = null\n          inventory={inventory}\n          setInventory={setInventory}\n          backpack={backpack}\n          setBackpack={setBackpack}\n          currentPlayer={currentPlayer}\n          setCurrentPlayer={setCurrentPlayer}\n          resources={masterResources}\n          updateStatus={updateStatus}\n          masterResources={masterResources}\n        />\n      )}\n      {activeModal === 'TownNews' && (\n        <TownNews\n          onClose={closeModal}  // ✅ This sets activeModal = null\n          currentPlayer={currentPlayer}\n          setCurrentPlayer={setCurrentPlayer}\n          resources={masterResources}\n        />\n      )}\n      {activeModal === 'LanguagePicker' && (\n        <LanguagePickerModal\n          currentPlayer={currentPlayer}\n          setCurrentPlayer={setCurrentPlayer}\n          updateStatus={updateStatus}\n          onClose={() => setActiveModal(null)}\n          onSave={() => setActiveModal(null)}\n        />\n      )}\n      {activeModal === \"Store\" && (\n        <Store\n          onClose={({ openMailbox } = {}) => {\n            setActiveModal(null);\n            if (openMailbox) {\n              setTimeout(() => setActiveModal(\"Mailbox\"), 100);\n            }\n          }}\n          currentPlayer={currentPlayer}\n          setCurrentPlayer={setCurrentPlayer}\n          resources={masterResources}\n          setModalContent={setModalContent}\n \t        setIsModalOpen={setIsModalOpen}\n        />\n      )}\n      {isOffSeason && (\n        <OffSeasonModal\n          currentPlayer={currentPlayer}\n          timers={timers}\n        />\n      )}\n\n{/* ///////////////////// PANELS ////////////////////// */}\n\n      {activePanel === 'ProfilePanel' && (\n        <ProfilePanel\n        onClose={closePanel}\n        currentPlayer={currentPlayer}\n        setCurrentPlayer={setCurrentPlayer}\n        handleLogout={handleLogout}\n        isRelocating={isRelocating}\n        setIsRelocating={setIsRelocating}\n        zoomLevel={zoomLevel}\n        setZoomLevel={setZoomLevel} \n       />\n      )}\n      {activePanel === 'LoginPanel' && (\n        <LoginPanel\n          onClose={closePanel}\n          setCurrentPlayer={(player) => {\n            setCurrentPlayer(player);\n            closePanel(); \n          }}\n          zoomLevel={zoomLevel}\n          setZoomLevel={setZoomLevel} \n          onLoginSuccess={async (username, password) => {\n            await handleLoginSuccess(username, password);\n          }}\n        />\n      )}\n      {activePanel === 'DebugPanel' && (\n        <DebugPanel\n          onClose={closePanel}\n          currentPlayer={currentPlayer}\n          setCurrentPlayer={setCurrentPlayer}\n          setInventory={setInventory}\n          setResources={setResources}\n          currentGridId={currentPlayer?.location?.g}\n          updateStatus={updateStatus}\n          TILE_SIZE={activeTileSize}\n          setGrid={setGrid}\n          setGridId={setGridId}\n          setTileTypes={setTileTypes}\n          closeAllPanels={closeAllPanels}\n        />\n      )}\n      {activePanel === 'InventoryPanel' && (\n        <InventoryPanel\n          onClose={closePanel} \n          masterResources={masterResources}\n          currentPlayer={currentPlayer}\n          setCurrentPlayer={setCurrentPlayer}\n          setInventory={setInventory}\n          setBackpack={setBackpack}\n          updateStatus={updateStatus}\n          openPanel={openPanel}\n          setActiveStation={setActiveStation}\n          setModalContent={setModalContent}\n          setIsModalOpen={setIsModalOpen}\n        />\n      )}\n      {activePanel === 'WarehousePanel' && (\n        <WarehousePanel\n          onClose={closePanel} \n          masterResources={masterResources}\n          currentPlayer={currentPlayer}\n          setCurrentPlayer={setCurrentPlayer}\n          setInventory={setInventory}\n          stationType={activeStation?.type} \n          globalTuning={globalTuning}\n          updateStatus={updateStatus}\n        />\n      )}\n      {activePanel === 'TrophyPanel' && (\n        <TrophyPanel\n          onClose={closePanel} \n          masterResources={masterResources}\n          masterTrophies={masterTrophies}\n          currentPlayer={currentPlayer}\n          setCurrentPlayer={setCurrentPlayer}\n          updateStatus={updateStatus}\n          openPanel={openPanel}\n          setActiveStation={setActiveStation}\n          inventory={inventory}\n          setInventory={setInventory}\n          backpack={backpack}\n          setBackpack={setBackpack}\n        />\n      )}\n      {activePanel === 'BankPanel' && (\n        <BankPanel\n          onClose={closePanel} \n          inventory={inventory}\n          setInventory={setInventory}\n          backpack={backpack}\n          setBackpack={setBackpack}\n          currentPlayer={currentPlayer}\n          setCurrentPlayer={setCurrentPlayer}\n          updateStatus={updateStatus}\n          masterResources={masterResources}\n        />\n      )}\n      {activePanel === 'TrainPanel' && (\n        <TrainPanel\n          onClose={closePanel} \n          inventory={inventory}\n          setInventory={setInventory}\n          backpack={backpack}\n          setBackpack={setBackpack}\n          currentPlayer={currentPlayer}\n          setCurrentPlayer={setCurrentPlayer}\n          updateStatus={updateStatus}\n          masterResources={masterResources}\n          setModalContent={setModalContent}\n          setIsModalOpen={setIsModalOpen}\n        />\n      )}\n      {activePanel === 'HowToPanel' && (\n        <HowToPanel \n          onOpen={openPanel}\n          onClose={closePanel}\n        />\n      )}\n      {activePanel === 'HowToMoneyPanel' && (\n        <HowToMoneyPanel \n          onOpen={openPanel}\n          onClose={closePanel}\n        />\n      )}\n      {activePanel === 'HowToGemsPanel' && (\n        <HowToGemsPanel \n          currentPlayer={currentPlayer}\n          updateStatus={updateStatus}\n          onOpen={openPanel}\n          onClose={closePanel}\n        />\n      )}\n      {activePanel === 'GoldBenefitsPanel' && (\n        <GoldBenefitsPanel \n          currentPlayer={currentPlayer}\n          updateStatus={updateStatus}\n          onOpen={openPanel}\n          onClose={closePanel}\n        />\n      )}\n      {activePanel === 'GovPanel' && (\n        <GovPanel\n          onClose={closePanel}\n          currentPlayer={currentPlayer}\n          setCurrentPlayer={setCurrentPlayer}\n          setModalContent={setModalContent}\n          setIsModalOpen={setIsModalOpen}\n        />\n      )}\n      {activePanel === 'Courthouse' && (\n        <CourthousePanel\n          onClose={closePanel}\n          currentPlayer={currentPlayer}\n          setCurrentPlayer={setCurrentPlayer}\n        />\n      )}\n      {activePanel === 'QuestPanel' && (\n        <QuestPanel\n          onClose={closePanel}\n          currentPlayer={currentPlayer}\n          setCurrentPlayer={setCurrentPlayer}\n        />\n      )}\n      {activePanel === 'SkillsPanel' && (\n        <SkillsPanel\n          onClose={closePanel}\n          inventory={inventory}\n          setInventory={setInventory}\n          backpack={backpack}\n          setBackpack={setBackpack} \n          currentPlayer={currentPlayer}\n          setCurrentPlayer={setCurrentPlayer}\n          stationType={activeStation?.type} \n          currentStationPosition={activeStation?.position}\n          gridId={activeStation?.gridId}\n          isDeveloper={isDeveloper}\n          TILE_SIZE={activeTileSize}\n          updateStatus={updateStatus}\n          masterSkills={masterSkills}\n          setResources={setResources}\n        />\n      )}\n      {activePanel === 'CombatPanel' && (\n        <CombatPanel\n          onClose={closePanel}\n          inventory={inventory}\n          setInventory={setInventory}\n          currentPlayer={currentPlayer}\n          setCurrentPlayer={setCurrentPlayer}\n          masterResources={masterResources} \n          masterSkills={masterSkills} \n          TILE_SIZE={activeTileSize}\n          updateStatus={updateStatus}\n        />\n      )}\n      {activePanel === 'CraftingStation' && (\n        <CraftingStation\n          onClose={closePanel}\n          inventory={inventory}\n          setInventory={setInventory}\n          backpack={backpack}\n          setBackpack={setBackpack}\n          currentPlayer={currentPlayer}\n          setCurrentPlayer={setCurrentPlayer}\n          setResources={setResources}\n          stationType={activeStation?.type} \n          currentStationPosition={activeStation?.position} \n          gridId={activeStation?.gridId} \n          masterResources={masterResources} \n          masterSkills={masterSkills} \n          TILE_SIZE={activeTileSize}\n          updateStatus={updateStatus}\n          isDeveloper={isDeveloper}\n          currentSeason={seasonData?.type}\n        />\n      )}\n      {activePanel === 'FarmHouse' && (\n        <FarmHouse\n          onClose={closePanel}\n          inventory={inventory}\n          setInventory={setInventory}\n          backpack={backpack}\n          setBackpack={setBackpack}\n          currentPlayer={currentPlayer}\n          setCurrentPlayer={setCurrentPlayer}\n          setResources={setResources}\n          stationType={activeStation?.type} \n          currentStationPosition={activeStation?.position} \n          gridId={activeStation?.gridId} \n          masterResources={masterResources} \n          masterSkills={masterSkills} \n          masterTrophies={masterTrophies}\n          TILE_SIZE={activeTileSize}\n          updateStatus={updateStatus}\n          isDeveloper={isDeveloper}\n        />\n      )}\n      {activePanel === 'ShopStation' && (\n        <ShopStation\n          onClose={closePanel}\n          inventory={inventory}\n          setInventory={setInventory}\n          backpack={backpack}\n          setBackpack={setBackpack}\n          currentPlayer={currentPlayer}\n          setCurrentPlayer={setCurrentPlayer}\n          setResources={setResources}\n          stationType={activeStation?.type} \n          currentStationPosition={activeStation?.position} \n          gridId={activeStation?.gridId}\n          TILE_SIZE={activeTileSize}\n          updateStatus={updateStatus}\n          masterResources={masterResources}\n          masterTrophies={masterTrophies}\n          isDeveloper={isDeveloper}\n        />\n      )}\n      {activePanel === 'ScrollStation' && (\n        <ScrollStation\n          onClose={closePanel}\n          inventory={inventory}\n          setInventory={setInventory}\n          backpack={backpack}\n          setBackpack={setBackpack}\n          currentPlayer={currentPlayer}\n          setCurrentPlayer={setCurrentPlayer}\n          setResources={setResources}\n          stationType={activeStation?.type} \n          currentStationPosition={activeStation?.position} \n          gridId={activeStation?.gridId}\n          TILE_SIZE={activeTileSize}\n          updateStatus={updateStatus}\n          masterResources={masterResources}\n          masterTrophies={masterTrophies}\n          isDeveloper={isDeveloper}\n        />\n      )}\n      {activePanel === 'FarmingPanel' && (\n        <FarmingPanel\n          onClose={closePanel}\n          TILE_SIZE={activeTileSize}\n          inventory={inventory}\n          setInventory={setInventory}\n          backpack={backpack}\n          setBackpack={setBackpack}\n          resources={resources}\n          setResources={setResources}\n          tiles={grid}\n          tileTypes={tileTypes}\n          setTileTypes={setTileTypes}\n          currentPlayer={currentPlayer}\n          setCurrentPlayer={setCurrentPlayer}\n          gridId={gridId}\n          masterResources={masterResources} \n          masterSkills={masterSkills} \n          updateStatus={updateStatus}\n          currentSeason={seasonData?.type}\n        />\n      )}\n      {activePanel === 'ToolsPanel' && (\n        <ToolsPanel\n          onClose={closePanel}\n          TILE_SIZE={activeTileSize}\n          inventory={inventory}\n          setInventory={setInventory}\n          backpack={backpack}\n          setBackpack={setBackpack}\n          resources={resources}\n          setResources={setResources}\n          tiles={grid}\n          tileTypes={tileTypes}\n          setTileTypes={setTileTypes}\n          currentPlayer={currentPlayer}\n          setCurrentPlayer={setCurrentPlayer}\n          gridId={gridId}\n          masterResources={masterResources} \n          masterSkills={masterSkills} \n          updateStatus={updateStatus}\n          isDeveloper={isDeveloper}\n        />\n      )}\n      {activePanel === 'BuildPanel' && (\n        <BuildPanel\n          onClose={closePanel}\n          TILE_SIZE={activeTileSize}\n          inventory={inventory}\n          setInventory={setInventory}\n          backpack={backpack}\n          setBackpack={setBackpack}\n          resources={resources}\n          setResources={setResources}\n          currentPlayer={currentPlayer}\n          setCurrentPlayer={setCurrentPlayer}\n          gridId={gridId}\n          masterResources={masterResources} \n          masterSkills={masterSkills} \n          updateStatus={updateStatus}\n          isDeveloper={isDeveloper}\n          currentSeason={seasonData?.type}\n        />\n      )}\n      {activePanel === 'BuyPanel' && (\n        <BuyPanel\n          onClose={closePanel}\n          TILE_SIZE={activeTileSize}\n          inventory={inventory}\n          setInventory={setInventory}\n          backpack={backpack}\n          setBackpack={setBackpack}\n          resources={resources}\n          setResources={setResources}\n          currentPlayer={currentPlayer}\n          setCurrentPlayer={setCurrentPlayer}\n          gridId={gridId}\n          masterResources={masterResources} \n          masterSkills={masterSkills} \n          updateStatus={updateStatus}\n          isDeveloper={isDeveloper}\n          currentSeason={seasonData?.type}\n        />\n      )}\n      {activePanel === 'BuyDecoPanel' && (\n        <BuyDecoPanel\n          onClose={closePanel}\n          TILE_SIZE={activeTileSize}\n          inventory={inventory}\n          setInventory={setInventory}\n          backpack={backpack}\n          setBackpack={setBackpack}\n          resources={resources}\n          setResources={setResources}\n          currentPlayer={currentPlayer}\n          setCurrentPlayer={setCurrentPlayer}\n          gridId={gridId}\n          masterResources={masterResources} \n          masterSkills={masterSkills} \n          updateStatus={updateStatus}\n          isDeveloper={isDeveloper}\n          currentSeason={seasonData?.type}\n        />\n      )}\n      {activePanel === 'NPCPanel' && (\n        <NPCPanel\n          onClose={closePanel}\n          npcData={activeQuestGiver}\n          inventory={inventory}\n          setInventory={setInventory}\n          backpack={backpack}\n          setBackpack={setBackpack}\n          currentPlayer={currentPlayer}\n          setCurrentPlayer={setCurrentPlayer}\n          setResources={setResources}\n          TILE_SIZE={activeTileSize}\n          updateStatus={updateStatus}\n          masterResources={masterResources}\n          masterInteractions={masterInteractions}\n          masterTraders={masterTraders}\n          masterTrophies={masterTrophies}\n          zoomLevel={zoomLevel}\n          setZoomLevel={setZoomLevel}\n          centerCameraOnPlayer={centerCameraOnPlayer}\n        />\n      )}\n      {activePanel === 'FarmHandPanel' && (\n        <FarmHandPanel\n          onClose={closePanel}\n          npc={activeQuestGiver}\n          inventory={inventory}\n          setInventory={setInventory}\n          backpack={backpack}\n          setBackpack={setBackpack}\n          currentPlayer={currentPlayer}\n          setCurrentPlayer={setCurrentPlayer}\n          resources={resources}\n          setResources={setResources}\n          stationType={activeStation?.type} \n          currentStationPosition={activeStation?.position} \n          gridId={activeStation?.gridId}\n          TILE_SIZE={activeTileSize}\n          updateStatus={updateStatus}\n          masterResources={masterResources}\n          masterSkills={masterSkills}\n          currentSeason={seasonData?.type}\n        />\n      )}\n      {activePanel === 'SocialPanel' && (\n        <SocialPanel\n          onClose={closePanel}\n          pcData={activeSocialPC}\n          currentPlayer={currentPlayer}\n          setCurrentPlayer={setCurrentPlayer}\n          inventory={inventory}\n          setInventory={setInventory}  \n          backpack={backpack}\n          setBackpack={setBackpack} \n          updateStatus={updateStatus}\n          masterInteractions={masterInteractions}\n          masterTrophies={masterTrophies}\n          isDeveloper={isDeveloper}\n          controllerUsername={controllerUsername}\n          setControllerUsername={setControllerUsername}\n        />\n      )}\n      {activePanel === 'AnimalStall' && (\n        <AnimalStall\n          onClose={closePanel}\n          inventory={inventory}\n          setInventory={setInventory}\n          backpack={backpack}\n          setBackpack={setBackpack}\n          currentPlayer={currentPlayer}\n          setCurrentPlayer={setCurrentPlayer}\n          setResources={setResources}\n          stationType={activeStation?.type} \n          currentStationPosition={activeStation?.position} \n          gridId={activeStation?.gridId} \n          TILE_SIZE={activeTileSize}\n          updateStatus={updateStatus}\n          masterResources={masterResources}\n          isDeveloper={isDeveloper}\n        />\n      )}\n      {activePanel === 'AnimalPanel' && (\n        <AnimalPanel\n          onClose={closePanel}\n          inventory={inventory}\n          setInventory={setInventory}\n          backpack={backpack}\n          setBackpack={setBackpack}\n          currentPlayer={currentPlayer}\n          setCurrentPlayer={setCurrentPlayer}\n          setResources={setResources}\n          stationType={activeStation?.type} \n          currentStationPosition={activeStation?.position} \n          gridId={activeStation?.gridId} \n          npcId={activeStation?.npcId}\n          TILE_SIZE={activeTileSize}\n          updateStatus={updateStatus}\n          masterResources={masterResources}\n        />\n      )}\n      {activePanel === 'CropPanel' && (\n        <CropPanel\n          onClose={closePanel}\n          inventory={inventory}\n          setInventory={setInventory}\n          backpack={backpack}\n          setBackpack={setBackpack}\n          currentPlayer={currentPlayer}\n          setCurrentPlayer={setCurrentPlayer}\n          setResources={setResources}\n          stationType={activeStation?.type} \n          currentStationPosition={activeStation?.position} \n          gridId={activeStation?.gridId} \n          currentResource={activeStation?.resource}\n          TILE_SIZE={activeTileSize}\n          updateStatus={updateStatus}\n          masterResources={masterResources}\n        />\n      )}\n      {activePanel === 'DecoPanel' && (\n        <DecoPanel\n          onClose={closePanel}\n          inventory={inventory}\n          setInventory={setInventory}\n          backpack={backpack}\n          setBackpack={setBackpack}\n          currentPlayer={currentPlayer}\n          setCurrentPlayer={setCurrentPlayer}\n          setResources={setResources}\n          stationType={activeStation?.type} \n          currentStationPosition={activeStation?.position} \n          gridId={activeStation?.gridId} \n          TILE_SIZE={activeTileSize}\n          updateStatus={updateStatus}\n          masterResources={masterResources}\n          isDeveloper={isDeveloper}\n        />\n      )}\n      {activePanel === 'PetPanel' && (\n        <PetPanel\n          onClose={closePanel}\n          inventory={inventory}\n          setInventory={setInventory}\n          backpack={backpack}\n          setBackpack={setBackpack}\n          currentPlayer={currentPlayer}\n          setCurrentPlayer={setCurrentPlayer}\n          setResources={setResources}\n          petResource={resources.find(r => r.x === activeStation?.position?.x && r.y === activeStation?.position?.y)}\n          currentPetPosition={activeStation?.position}\n          gridId={activeStation?.gridId}\n          masterResources={masterResources}\n          masterSkills={masterSkills}\n          masterTrophies={masterTrophies}\n          TILE_SIZE={activeTileSize}\n          isDeveloper={isDeveloper}\n        />\n      )}\n      {activePanel === 'TradeStall' && (\n        <TradeStall\n          onClose={closePanel}\n          inventory={inventory}\n          setInventory={setInventory}\n          currentPlayer={currentPlayer}\n          setCurrentPlayer={setCurrentPlayer}\n          updateStatus={updateStatus}\n          globalTuning={globalTuning}\n          setModalContent={setModalContent}\n          setIsModalOpen={setIsModalOpen}\n        />\n      )}\n      {activePanel === 'OutpostPanel' && (\n        <Outpost\n          onClose={closePanel}\n          backpack={backpack}\n          setBackpack={setBackpack}\n          currentPlayer={currentPlayer}\n          setCurrentPlayer={setCurrentPlayer}\n          gridId={activeStation?.gridId}\n          setModalContent={setModalContent}\n          setIsModalOpen={setIsModalOpen}\n          isDeveloper={isDeveloper}\n          stationType={activeStation?.type}\n          currentStationPosition={activeStation?.position}\n          setResources={setResources}\n          setInventory={setInventory}\n          TILE_SIZE={activeTileSize}\n          globalTuning={globalTuning}\n        />\n      )}\n      {activePanel === 'SeasonPanel' && (\n        <SeasonPanel\n          onClose={closePanel}\n          currentPlayer={currentPlayer}\n          setCurrentPlayer={setCurrentPlayer}\n          setModalContent={setModalContent}\n          setIsModalOpen={setIsModalOpen}\n        />\n      )}\n\n      {hoverTooltip && (\n        <div\n          className=\"HoverTooltip\"\n          style={{\n            position: 'fixed',\n            zIndex: 9999,\n            top: hoverTooltip.y,\n            left: hoverTooltip.x,\n            transform: 'translate(-50%, -100%) translateY(-8px)', // ⬅️ Center horizontally and offset upward\n            pointerEvents: 'none',\n          }}\n          dangerouslySetInnerHTML={{ __html: hoverTooltip.content }}\n        />\n      )}\n      </div>\n\n      {uiLocked && (\n        <div\n          style={{\n            position: 'fixed',\n            inset: 0,\n            zIndex: 9999,\n            backgroundColor: 'rgba(0,0,0,0.0)', // transparent blocker\n            cursor: 'wait',\n          }}\n        />\n      )}\n\n    </>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { StringsProvider } from './UI/StringsContext';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { StatusBarProvider } from './UI/StatusBar/StatusBar';\nimport { PanelProvider } from './UI/PanelContext'; \nimport { GridStateProvider } from './GridState/GridStateContext';\nimport { GridStatePCProvider } from './GridState/GridStatePCContext';\nimport { ModalProvider } from './UI/ModalContext';\nimport { UILockProvider } from './UI/UILockContext';\nimport { NPCOverlayProvider } from './UI/NPCOverlayContext';\nimport { BulkOperationProvider } from './UI/BulkOperationContext';\n\nconsole.warn(\"🔥 index.js evaluated again — app may remount\");\n\n// Prevent HMR from creating multiple instances\nif (window.__app_initialized__) {\n  console.log(\"🛑 App already initialized, preventing HMR remount\");\n  // Don't execute the rest of the file\n} else {\n  window.__app_initialized__ = true;\n\n// Cache the language to prevent provider recreation when player data changes\nlet cachedLanguage = 'en';\ntry {\n  const savedPlayer = localStorage.getItem('player');\n  if (savedPlayer) {\n    const parsedPlayer = JSON.parse(savedPlayer);\n    if (parsedPlayer?.language) {\n      cachedLanguage = parsedPlayer.language;\n    }\n  }\n} catch (e) {\n  console.warn('Failed to parse player data for language:', e);\n}\nconst savedLanguage = cachedLanguage;\nconst rootEl = document.getElementById('root');\nconsole.log(\"🪵 root element:\", rootEl);\n\nif (!window.__root_created__) {\n  console.warn(\"🧪 Creating React root\");\n  window.__root_created__ = true;\n  window.__root = ReactDOM.createRoot(rootEl);\n} else {\n  console.error(\"❌ React root was already created!\");\n}\n\nif (!window.__app_rendered__) {\n  console.warn(\"🧪 Rendering App...\");\n  window.__app_rendered__ = true;\n  window.__root.render(\n    <UILockProvider>\n      <NPCOverlayProvider>\n        <BulkOperationProvider>\n          <StringsProvider language={savedLanguage}>\n            <GridStateProvider>\n              <GridStatePCProvider>\n                <StatusBarProvider>\n                  <PanelProvider>\n                    <ModalProvider>\n                      <App />\n                    </ModalProvider>\n                  </PanelProvider>\n                </StatusBarProvider>\n              </GridStatePCProvider>\n            </GridStateProvider>\n          </StringsProvider>\n        </BulkOperationProvider>\n      </NPCOverlayProvider>\n    </UILockProvider>\n  );\n} else {\n  console.error(\"❌ App already rendered — something is wrong\");\n}\n\n} // Close the main HMR prevention block\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"names":["async","handleFarmAnimalBehavior","gridId","updateThisNPC","NPCsInGridManager","this","id","state","grazeEnd","position","tiles","GlobalGridStateTilesAndResources","getTiles","resources","getResources","npcs","Object","values","handleIdleState","currentTime","Date","now","console","log","targetGrassTile","targetTileType","type","grassTiles","findTileInRange","Array","isArray","length","tileTypeName","warn","unoccupiedGrassTiles","filter","tile","some","res","x","y","sort","a","b","calculateDistance","dx","Math","floor","dy","direction","isMoving","moved","moveOneTile","growTime","fullGridState","targetStall","findNearestResource","find","triedStall","otherNPCsAtStall","otherNpc","_otherNpc$position","_otherNpc$position2","action","map","n","_NPCsInGridManager$ge","Promise","resolve","setTimeout","updatedNPC","error","handleRoamState","lastProcessingLog","npcInstance","handleQuestGiverBehavior","playersInGridManager","getPlayersInGrid","pc","range","hp","canSeeTarget","npcPosition","targetPosition","lineOfSightTiles","start","end","x0","y0","x1","y1","abs","sx","sy","err","push","e2","getLineOfSightTiles","handleEnemyBehavior","TILE_SIZE","pcs","visiblePCsInRange","getDistance","targetPC","random","username","pursueTimerStart","call","pcsInRange","_this$targetPC3","_this$targetPC","playerId","_this$targetPC2","currentDistance","attackrange","timeSincePursueStart","distance","closestVisiblePC","closestPC","minDistance","Infinity","forEach","findClosestVisiblePC","canSeeTargetNow","_this$targetPC5","_this$targetPC4","handlePursueWithLineOfSight","distanceToPlayer","_this$targetPC6","_this$targetPC7","iscamping","attackbonus","armorclass","damage","amountToMod","newHP","max","FloatingTextManager","addFloatingText","updatePC","lastUpdated","speed","pos1","pos2","sqrt","handleHealBehavior","handleSpawnBehavior","npcsObject","playersInGrid","oldPosition","npc","requires","qtycollected","nextspawn","spawnNPC","handleWorkerBehavior","handleTraderBehavior","NPC","constructor","properties","_properties$nextspawn","Error","updateInterval","symbol","output","maxhp","growtime","processingStartTime","undefined","assign","update","NPCsInGrid","processState","idleDuration","onTransition","arguments","idleTimer","validDirections","dir","getAdjacentTile","isValidTile","randomDirection","roamSteps","currentDirection","directions","N","S","E","W","NE","SE","SW","NW","handlePursueState","playerPosition","onAttackTransition","newDistanceToPlayer","delta","targetX","targetY","startTime","performance","startX","startY","step","elapsedTime","socket","connected","emit","npcId","newPosition","emitterId","progress","requestAnimationFrame","resourceInTile","passable","tileType","potentialTiles","_tiles$y","targetResource","availableResources","category","aPos","bPos","prototype","attachGrazingBehavior","attachQuestBehavior","attachEnemyBehavior","attachHealBehavior","attachSpawnBehavior","attachFarmerBehavior","attachTraderBehavior","STRINGS_MAP","en","stringsEN","fr","stringsFR","es","stringsES","de","stringsDE","it","stringsIT","pt","stringsPT","ru","stringsRU","no","stringsNO","sv","stringsSV","fi","stringsFI","StringsContext","createContext","StringsProvider","_ref","language","children","selectedStrings","toLowerCase","rawLanguage","normalized","resolvedFile","_jsx","Provider","value","useStrings","useContext","module","exports","renderPositions","pressedKeys","Set","MODIFIER_KEYS","handleKeyDown","event","currentPlayer","masterResources","setCurrentPlayer","setGridId","setGrid","setTileTypes","setResources","updateStatus","closeAllPanels","localPlayerMoveTimestampRef","bulkOperationContext","strings","includes","key","add","ArrowUp","w","ArrowDown","s","ArrowLeft","A","ArrowRight","d","D","totalDx","totalDy","movement","min","location","_id","toString","g","currentPosition","round","skills","handleTransitSignpost","canMove","isinboat","tileResource","resource","isTileValidForPlayer","isValidMove","finalPosition","current","centerCameraOnPlayer","processMovement","handleKeyUp","delete","clear","gameContainer","document","querySelector","centerX","window","innerWidth","centerY","innerHeight","maxScrollLeft","scrollWidth","clientWidth","maxScrollTop","scrollHeight","clientHeight","clampedX","clampedY","scrollTo","left","top","behavior","centerCameraOnPlayerFast","addEventListener","hidden","debugMovementKeys","from","resetMovementKeys","masterSkills","globalTuning","masterInteractions","masterTraders","masterTrophies","loadMasterSkills","response","axios","get","API_BASE","data","loadMasterResources","loadGlobalTuning","loadMasterInteractions","loadMasterTraders","loadMasterTrophies","f","require","k","Symbol","for","l","m","hasOwnProperty","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","ref","__self","__source","q","c","e","h","defaultProps","$$typeof","props","_owner","Fragment","jsx","jsxs","updateGridResource","broadcast","growEnd","craftEnd","craftedItem","payload","patch","success","updatedResources","convertTileType","newType","prevTiles","updated","mergeTiles","updatedTiles","message","changePlayerLocation","fromLocation","toLocation","_bulkOperationContext","isAnyBulkOperationActive","_playersInGridManager","_fromGridResponse$dat","_fromGridResponse$dat2","_toGridResponse$data","_toGridResponse$data$","_fromPlayerState$hp","_ref2","_fromPlayerState$maxh","_ref3","_fromPlayerState$armo","_ref4","_fromPlayerState$atta","_ref5","_fromPlayerState$dama","_ref6","_fromPlayerState$spee","_ref7","_fromPlayerState$atta2","_ref8","_fromPlayerState$isca","_ref9","_fromPlayerState$isin","inMemoryFromPlayerState","fromPCs","fromPlayerState","removeResponse","post","removed","removeError","playerData","icon","toPayload","locationResponse","gtype","startsWith","_currentPlayer$trophi","trophies","trophy","name","trophyResult","earnTrophy","showNotification","title","updatedPlayer","localStorage","setItem","JSON","stringify","cleanupError","all","initializeGrid","freshGridState","freshPCState","setGridStateReact","NPCsInGridLastUpdated","setPlayersInGridReact","playersInGridLastUpdated","finalX","finalY","findSignpost","signpost","updatedPlayerData","updateGridStatus","fetchGridData","DBPlayerData","gridData","gridType","fetchedGridId","ownerId","combinedGridState","ownerUsername","fetchHomesteadOwner","r","t","u","v","z","iterator","B","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","C","context","refs","updater","F","G","isReactComponent","setState","forceUpdate","H","isPureReactComponent","I","J","K","L","M","O","P","Q","replace","escape","R","next","done","String","keys","join","T","_status","_result","then","default","U","V","transition","ReactCurrentDispatcher","ReactCurrentBatchConfig","X","Children","apply","count","toArray","only","Component","Profiler","PureComponent","StrictMode","Suspense","act","cloneElement","_currentValue","_currentValue2","_threadCount","Consumer","_defaultValue","_globalName","_context","createElement","createFactory","bind","createRef","forwardRef","render","isValidElement","lazy","_payload","_init","memo","compare","startTransition","unstable_act","useCallback","useDebugValue","useDeferredValue","useEffect","useId","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useSyncExternalStore","useTransition","version","fn","thisArg","getPrototypeOf","kindOf","cache","create","thing","str","slice","kindOfTest","typeOfTest","isUndefined","isArrayBuffer","isString","isFunction","isNumber","isObject","isPlainObject","val","toStringTag","isDate","isFile","isBlob","isFileList","isURLSearchParams","isReadableStream","isRequest","isResponse","isHeaders","obj","i","allOwnKeys","getOwnPropertyNames","len","findKey","_key","_global","globalThis","self","global","isContextDefined","isTypedArray","TypedArray","Uint8Array","isHTMLForm","prop","isRegExp","reduceDescriptors","reducer","descriptors","getOwnPropertyDescriptors","reducedDescriptors","descriptor","ret","defineProperties","isAsyncFn","_setImmediate","setImmediateSupported","postMessageSupported","setImmediate","token","callbacks","source","shift","cb","postMessage","asap","queueMicrotask","process","nextTick","isBuffer","isFormData","kind","FormData","append","isArrayBufferView","result","ArrayBuffer","isView","buffer","isBoolean","isStream","pipe","merge","caseless","assignValue","targetKey","extend","trim","stripBOM","content","charCodeAt","inherits","superConstructor","defineProperty","toFlatObject","sourceObj","destObj","propFilter","merged","endsWith","searchString","lastIndex","indexOf","arr","forEachEntry","pair","matchAll","regExp","matches","exec","hasOwnProp","freezeMethods","enumerable","writable","set","toObjectSet","arrayOrString","delimiter","define","split","toCamelCase","p1","p2","toUpperCase","noop","toFiniteNumber","defaultValue","Number","isFinite","isSpecCompliantForm","toJSONObject","stack","visit","target","reducedValue","isThenable","catch","AxiosError","code","config","request","captureStackTrace","status","utils","toJSON","description","number","fileName","lineNumber","columnNumber","customProps","axiosError","cause","isVisitable","removeBrackets","renderKey","path","dots","concat","predicates","test","formData","options","TypeError","metaTokens","indexes","option","visitor","defaultVisitor","useBlob","Blob","convertValue","toISOString","Buffer","isFlatArray","el","index","exposedHelpers","build","pop","encode","charMap","encodeURIComponent","match","AxiosURLSearchParams","params","_pairs","toFormData","encoder","_encode","buildURL","url","serialize","serializeFn","serializedParams","hashmarkIndex","handlers","use","fulfilled","rejected","synchronous","runWhen","eject","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","isBrowser","classes","URLSearchParams","protocols","hasBrowserEnv","_navigator","navigator","hasStandardBrowserEnv","product","hasStandardBrowserWebWorkerEnv","WorkerGlobalScope","importScripts","origin","href","platform","buildPath","isNumericKey","isLast","arrayToObject","entries","parsePropPath","defaults","transitional","transitionalDefaults","adapter","transformRequest","headers","contentType","getContentType","hasJSONContentType","isObjectPayload","formDataToJSON","setContentType","helpers","isNode","toURLEncodedForm","formSerializer","_FormData","env","rawValue","parser","parse","stringifySafely","transformResponse","JSONRequested","responseType","strictJSONParsing","ERR_BAD_RESPONSE","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","common","method","ignoreDuplicateOf","$internals","normalizeHeader","header","normalizeValue","matchHeaderValue","isHeaderNameFilter","AxiosHeaders","valueOrRewrite","rewrite","setHeader","_value","_header","_rewrite","lHeader","setHeaders","rawHeaders","parsed","line","substring","parseHeaders","tokens","tokensRE","parseTokens","has","matcher","deleted","deleteHeader","normalize","format","char","formatHeader","_len","targets","asStrings","first","computed","_len2","_key2","accessor","accessors","defineAccessor","accessorName","methodName","arg1","arg2","arg3","configurable","buildAccessors","mapped","headerValue","transformData","fns","isCancel","__CANCEL__","CanceledError","ERR_CANCELED","settle","reject","ERR_BAD_REQUEST","samplesCount","bytes","timestamps","firstSampleTS","head","tail","chunkLength","startedAt","bytesCount","passed","freq","lastArgs","timer","timestamp","threshold","invoke","args","clearTimeout","flush","progressEventReducer","listener","isDownloadStream","bytesNotified","_speedometer","speedometer","throttle","loaded","total","lengthComputable","progressBytes","rate","estimated","progressEventDecorator","throttled","asyncDecorator","isMSIE","URL","protocol","host","port","userAgent","write","expires","domain","secure","cookie","toGMTString","read","RegExp","decodeURIComponent","remove","buildFullPath","baseURL","requestedURL","allowAbsoluteUrls","isRelativeUrl","relativeURL","combineURLs","headersToObject","mergeConfig","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","paramsSerializer","timeoutMessage","withCredentials","withXSRFToken","onUploadProgress","onDownloadProgress","decompress","beforeRedirect","transport","httpAgent","httpsAgent","cancelToken","socketPath","responseEncoding","configValue","newConfig","auth","btoa","password","unescape","Boolean","isURLSameOrigin","xsrfValue","cookies","XMLHttpRequest","_config","resolveConfig","requestData","requestHeaders","onCanceled","uploadThrottled","downloadThrottled","flushUpload","flushDownload","unsubscribe","signal","removeEventListener","onloadend","responseHeaders","getAllResponseHeaders","responseText","statusText","open","onreadystatechange","readyState","responseURL","onabort","ECONNABORTED","onerror","ERR_NETWORK","ontimeout","timeoutErrorMessage","ETIMEDOUT","setRequestHeader","upload","cancel","abort","subscribe","aborted","parseProtocol","send","composeSignals","signals","controller","AbortController","reason","streamChunk","chunk","chunkSize","byteLength","pos","readStream","stream","asyncIterator","reader","getReader","trackStream","onProgress","onFinish","iterable","readBytes","_onFinish","ReadableStream","pull","close","loadedBytes","enqueue","return","highWaterMark","isFetchSupported","fetch","Request","Response","isReadableStreamSupported","encodeText","TextEncoder","arrayBuffer","supportsRequestStream","duplexAccessed","hasContentType","body","duplex","supportsResponseStream","resolvers","_","ERR_NOT_SUPPORT","resolveBodyLength","getContentLength","size","_request","getBodyLength","knownAdapters","http","xhr","xhrAdapter","fetchOptions","composedSignal","toAbortSignal","requestContentLength","contentTypeHeader","isCredentialsSupported","credentials","isStreamResponse","responseContentLength","responseData","renderReason","isResolvedHandle","adapters","nameOrAdapter","rejectedReasons","reasons","throwIfCancellationRequested","throwIfRequested","dispatchRequest","VERSION","validators","deprecatedWarnings","validator","formatMessage","opt","desc","opts","ERR_DEPRECATED","spelling","correctSpelling","assertOptions","schema","allowUnknown","ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","Axios","instanceConfig","interceptors","InterceptorManager","configOrUrl","dummy","boolean","function","baseUrl","withXsrfToken","contextHeaders","requestInterceptorChain","synchronousRequestInterceptors","interceptor","unshift","responseInterceptorChain","promise","chain","onFulfilled","onRejected","getUri","generateHTTPMethod","isForm","CancelToken","executor","resolvePromise","_listeners","onfulfilled","_resolve","splice","HttpStatusCode","Continue","SwitchingProtocols","Processing","EarlyHints","Ok","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","ImUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","Unused","TemporaryRedirect","PermanentRedirect","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","UriTooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","TooEarly","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HttpVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","createInstance","defaultConfig","instance","Cancel","promises","spread","callback","isAxiosError","formToJSON","getAdapter","sortIndex","unstable_now","expirationTime","priorityLevel","scheduling","isInputPending","MessageChannel","port2","port1","onmessage","unstable_IdlePriority","unstable_ImmediatePriority","unstable_LowPriority","unstable_NormalPriority","unstable_Profiling","unstable_UserBlockingPriority","unstable_cancelCallback","unstable_continueExecution","unstable_forceFrameRate","unstable_getCurrentPriorityLevel","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_requestPaint","unstable_runWithPriority","unstable_scheduleCallback","delay","unstable_shouldYield","unstable_wrapCallback","VFX_TIMING","recentEffects","Map","calculateTileCenter","createCollectEffect","effectKey","lastEffectTime","querySelectorAll","tileElement","tileTop","parseInt","style","tileLeft","rect","getBoundingClientRect","containerRect","width","height","calcX","calcY","particle","createParticleElement","innerText","pointerEvents","zIndex","fontSize","appendChild","transform","opacity","removeChild","createSourceConversionEffect","requiredSkill","emoji","trophyName","progressIncrement","trophyDef","isNewMilestone","prevPlayer","updatedTrophies","existingTrophyIndex","findIndex","qty","collected","shouldShowNotification","visible","nextMilestone","createRoot","hydrateRoot","pendingUpdates","batchInterval","BATCH_SAVE_INTERVAL","registerSetPlayersInGrid","setter","registerTileSize","tileSize","startBatchSaving","setInterval","processPendingUpdates","stopBatchSaving","clearInterval","updates","forceSavePendingUpdates","initializePlayersInGrid","getTime","pcData","prev","unloadListenerAdded","getAllPCs","_this$playersInGrid","_this$playersInGrid$g","getPlayerPosition","_this$playersInGrid2","_this$playersInGrid2$","_this$playersInGrid2$2","_this$playersInGrid2$3","setAllPCs","pcsObject","addPlayer","_pcData$settings","_pcData$settings2","modifiers","equippedWeapon","settings","equippedArmor","isWeapon","isArmor","powers","power","powerQty","quantity","isMagicEnhancement","attr","getStat","baseKey","modKey","newPC","addPC","_prev$gridId","newProperties","_this$playersInGrid$g2","_gridPCs$playerId","gridPCs","currentData","every","updatedPC","animateRemotePC","_prev$gridId2","updateKey","removePC","_this$playersInGrid$g3","_this$playersInGrid$g4","_prev$gridId3","updatedGrid","REACT_APP_SERVER_URL","to","stepCount","currentX","currentY","animate","interpolatedX","interpolatedY","fetchHomesteadSignpostPosition","signpostTown","fetchTownSignpostPosition","train","gridResponse","playerResponse","pow","getDerivedRange","_currentPlayer$skills","_currentPlayer$locati","baseRange","bonusRangeFromSkills","reduce","sum","skill","master","PACKET_TYPES","PACKET_TYPES_REVERSE","ERROR_PACKET","withNativeBlob","withNativeArrayBuffer","encodePacket","supportsBinary","encodeBlobAsBase64","fileReader","FileReader","onload","readAsDataURL","byteOffset","TEXT_ENCODER","chars","lookup","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","arraybuffer","decode","SEPARATOR","fromCharCode","createPacketEncoderStream","TransformStream","packet","encoded","encodePacketToBinary","payloadLength","DataView","setUint8","view","setUint16","setBigUint64","BigInt","TEXT_DECODER","totalLength","chunks","acc","concatChunks","j","Emitter","mixin","on","_callbacks","once","off","removeListener","removeAllListeners","emitReserved","listeners","hasListeners","setTimeoutFn","globalThisShim","Function","pick","NATIVE_SET_TIMEOUT","NATIVE_CLEAR_TIMEOUT","installTimerFunctions","useNativeTimers","clearTimeoutFn","randomString","TransportError","super","Transport","query","forceBase64","onError","doOpen","doClose","onClose","packets","onOpen","onData","onPacket","details","pause","onPause","createUri","_hostname","_port","_query","hostname","encodedQuery","Polling","_polling","_poll","doPoll","decodePayload","encodedPayload","encodedPackets","decodedPacket","encodePayload","doWrite","uri","timestampRequests","timestampParam","sid","b64","hasCORS","empty","BaseXHR","isSSL","xd","req","xhrStatus","pollXhr","createRequest","_opts","_method","_uri","_data","_create","_a","xdomain","_xhr","extraHeaders","setDisableHeaderCheck","cookieJar","addCookies","requestTimeout","parseCookies","getResponseHeader","_onLoad","_onError","_index","requestsCount","requests","_cleanup","fromError","attachEvent","unloadHandler","hasXHR2","newRequest","isReactNative","BaseWS","ws","createSocket","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","ev","lastPacket","WebSocketCtor","WebSocket","MozWebSocket","transports","websocket","_packet","webtransport","_transport","WebTransport","transportOptions","closed","ready","createBidirectionalStream","decoderStream","maxPayload","TextDecoder","expectedLength","isBinary","headerArray","getUint16","getUint32","createPacketDecoderStream","MAX_SAFE_INTEGER","readable","pipeThrough","encoderStream","pipeTo","_writer","getWriter","polling","re","parts","src","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","withEventListeners","OFFLINE_EVENT_LISTENERS","SocketWithoutUpgrade","writeBuffer","_prevBufferLen","_pingInterval","_pingTimeout","_maxPayload","_pingTimeoutTime","parsedUri","_transportsByName","transportName","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","closeOnBeforeunload","qs","qry","pairs","_beforeunloadEventListener","_offlineEventListener","_onClose","_cookieJar","createCookieJar","_open","createTransport","EIO","priorWebsocketSuccess","setTransport","_onDrain","_onPacket","onHandshake","_sendPacket","_resetPingTimeout","pingInterval","pingTimeout","_pingTimeoutTimer","upgrading","_getWritablePackets","payloadSize","utf8Length","ceil","_hasPingExpired","hasExpired","msg","compress","cleanupAndClose","waitForUpgrade","tryAllTransports","SocketWithUpgrade","_upgrades","_probe","failed","onTransportOpen","cleanup","freezeTransport","onTransportClose","onupgrade","_filterUpgrades","upgrades","filteredUpgrades","Socket","o","DEFAULT_TRANSPORTS","withNativeFile","File","hasBinary","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","num","newData","reconstructPacket","_reconstructPacket","RESERVED_EVENTS","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","deconstruction","Decoder","reviver","reconstructor","decodeString","isBinaryEvent","BinaryReconstructor","takeBinaryData","buf","tryParse","substr","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","_b","_c","retries","fromQueue","volatile","_addToQueue","ack","_registerAckCallback","isTransportWritable","engine","isConnected","notifyOutgoingListeners","_this","ackTimeout","_len3","_key3","withError","emitWithAck","_len4","_key4","_this2","tryCount","pending","_len5","responseArgs","_key5","_drainQueue","force","_sendConnectPacket","_pid","pid","offset","_lastOffset","_clearAcks","onconnect","onevent","onack","ondisconnect","emitEvent","_anyListeners","sent","_len6","_key6","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","factor","jitter","attempts","duration","rand","deviation","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","decoder","autoConnect","_reconnection","skipReconnect","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","onreconnect","attempt","loc","sameNamespace","forceNew","multiplex","socketListenForPCJoinAndLeave","isMasterResourcesReady","setPlayersInGrid","controllerUsername","setControllerUsername","handlePlayerJoinedGrid","prevState","_prevState$gridId","_prevState$gridId$pcs","existing","incomingTime","localTime","_prevState$gridId2","handlePlayerLeftGrid","_prevState$gridId3","_prevState$gridId4","handleCurrentGridPlayers","receivedGridId","socketListenForPCstateChanges","handlePCSync","gridEntries","incomingPC","currentPlayerId","_prevState$gridId5","_prevState$gridId5$pc","localPC","changedFields","damageTaken","prevPosition","prevGridState","prevPCs","socketListenForNPCStateChanges","setGridState","npcController","handleNPCSync","isController","isControllingGrid","_NPCsInGridManager$NP","updatedNPCs","liveGrid","incomingNPC","localNPC","rehydrated","handleNPCMoveSync","handleNPCRemoval","_NPCsInGridManager$NP2","socketListenForResourceChanges","enrichResourceFromMaster","handleResourceSync","prevResources","newRes","indexToRemove","enriched","filtered","finalResources","anchorKey","shadowResource","parentAnchorKey","socketListenForTileChanges","handleTileSync","_ref10","socketListenForNPCControllerStatus","_ref11","_ref12","controlledGridId","_ref13","revokedGridId","socketListenForSeasonReset","_ref14","reload","socketListenForConnectAndDisconnect","setIsSocketConnected","handleConnect","handleDisconnect","socketListenForPlayerConnectedAndDisconnected","setConnectedPlayers","handlePlayerConnected","_ref15","handlePlayerDisconnected","_ref16","newSet","handleCurrentConnectedPlayers","_ref17","connectedPlayerIds","socketListenForChatMessages","setMessagesByScope","handleIncomingChatMessage","scope","scopeId","prevMessages","hasUpdate","emitChatMessage","_ref18","socketListenForBadgeUpdates","setBadgeState","updateBadge","handleBadge","_ref19","isMatch","gridTimer","externalSetGridState","registerSetGridState","setterFunction","initializeGridState","hydratedState","lightweightNPC","npcTemplate","hydrated","getNPCsInGrid","npcType","_npcType","addNPC","updatedGridState","setAllNPCs","updateNPC","_NPCsInGrid$npcs","_NPCsInGrid$npcs2","npcData","removeNPC","saveGridStateNPCs","dehydratedNPCs","startGridTimer","stopGridTimer","stopGridStateUpdates","existingState","TRANSIT_POSITIONS","resourceType","_currentPlayer$_id","_currentPlayer$locati2","_playerData$position$","_playerData$position","_playerData$position$2","_playerData$position2","currentGridId","settlementId","frontierId","hasHorse","item","gridCoord","signpostPosition","newPlayerPosition","settlement","grids","townGrid","flat","grid","firsttimeuser","newFtueStep","incrementFTUEStep","ftuestep","offsets","currentGrid","frontierTier","frontierIndex","setRow","setCol","gRow","gCol","coord","padStart","decodeCoord","rowOffset","colOffset","newGRow","newGCol","newSetRow","newSetCol","targetSettlement","targetGrid","entryPosition","fromX","fromY","getEntryPosition","aa","ca","da","ea","fa","ha","ia","ja","ka","la","ma","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","removeEmptyString","ra","sa","ta","pa","isNaN","qa","oa","removeAttribute","setAttribute","setAttributeNS","xlinkHref","ua","va","wa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","Ka","La","Ma","Na","Oa","prepareStackTrace","Reflect","construct","displayName","Pa","tag","Qa","Ra","Sa","Ta","nodeName","Va","_valueTracker","getOwnPropertyDescriptor","getValue","setValue","stopTracking","Ua","Wa","checked","Xa","activeElement","Ya","defaultChecked","_wrapperState","initialChecked","Za","initialValue","controlled","ab","bb","db","ownerDocument","eb","fb","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","hb","ib","jb","textContent","kb","lb","mb","nb","namespaceURI","innerHTML","valueOf","firstChild","MSApp","execUnsafeLocalFunction","ob","lastChild","nodeType","nodeValue","pb","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","order","orphans","tabSize","widows","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","qb","rb","sb","setProperty","tb","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","track","wbr","ub","vb","is","wb","xb","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","Nb","Ob","Pb","Qb","Rb","Sb","Tb","Vb","alternate","Wb","memoizedState","dehydrated","Xb","Zb","child","sibling","Yb","$b","ac","bc","cc","dc","ec","fc","gc","hc","ic","jc","kc","lc","oc","clz32","qc","LN2","rc","sc","tc","uc","pendingLanes","suspendedLanes","pingedLanes","entangledLanes","entanglements","vc","xc","yc","zc","Ac","eventTimes","Cc","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Pc","Qc","Rc","Sc","pointerId","Tc","nativeEvent","blockedOn","domEventName","eventSystemFlags","targetContainers","Vc","Wc","priority","isDehydrated","containerInfo","Xc","Yc","dispatchEvent","Zc","$c","ad","bd","cd","dd","ed","fd","gd","hd","Uc","stopPropagation","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","cancelBubble","persist","isPersistent","wd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","isTrusted","td","ud","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","pseudoElement","Id","clipboardData","Jd","Ld","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","repeat","locale","which","Rd","Td","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","ae","be","documentMode","ce","ee","fe","ge","he","ie","le","color","date","datetime","email","month","search","tel","text","time","week","me","ne","oe","pe","qe","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","De","Ee","Fe","He","Ie","Je","Ke","node","nextSibling","Le","contains","compareDocumentPosition","Me","HTMLIFrameElement","contentWindow","Ne","contentEditable","Oe","focusedElem","selectionRange","documentElement","selectionStart","selectionEnd","defaultView","getSelection","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","element","scrollLeft","scrollTop","focus","Pe","Qe","Re","Se","Te","Ue","Ve","We","animationend","animationiteration","animationstart","transitionend","Xe","Ye","Ze","animation","$e","af","bf","cf","df","ef","ff","gf","hf","lf","mf","nf","Ub","of","pf","qf","rf","sf","capture","passive","tf","uf","parentWindow","vf","wf","na","xa","$a","ba","je","ke","xf","yf","zf","Af","Bf","Cf","Df","Ef","__html","Ff","Gf","Hf","Jf","If","Kf","Lf","Mf","previousSibling","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","Vf","Wf","Xf","Yf","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Zf","childContextTypes","$f","ag","bg","getChildContext","cg","__reactInternalMemoizedMergedChildContext","dg","eg","fg","gg","hg","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","ug","vg","wg","xg","yg","zg","Ag","Bg","elementType","deletions","Cg","pendingProps","overflow","treeContext","retryLane","Dg","mode","Eg","Fg","Gg","memoizedProps","Hg","Ig","Jg","Kg","Lg","_stringRef","Mg","Ng","Og","Pg","Qg","Rg","implementation","Sg","Tg","Ug","Vg","Wg","Xg","Yg","Zg","$g","ah","bh","childLanes","ch","dependencies","firstContext","lanes","dh","eh","memoizedValue","fh","gh","hh","interleaved","ih","jh","kh","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","effects","lh","mh","eventTime","lane","nh","oh","ph","qh","rh","sh","th","uh","vh","wh","xh","yh","tagName","zh","Ah","Bh","Ch","revealOrder","Dh","Eh","_workInProgressVersionPrimary","Fh","Gh","Hh","Ih","Jh","Kh","Lh","Mh","Nh","Oh","Ph","Qh","Rh","Sh","Th","baseQueue","queue","Uh","Vh","Wh","lastRenderedReducer","hasEagerState","eagerState","lastRenderedState","dispatch","Xh","Yh","Zh","$h","ai","getSnapshot","bi","ci","di","lastEffect","stores","ei","gi","hi","ii","deps","ji","ki","li","mi","ni","oi","pi","qi","ri","si","ti","ui","vi","wi","xi","yi","zi","Ai","Bi","readContext","useMutableSource","unstable_isNewReconciler","identifierPrefix","Ci","Di","Ei","_reactInternals","Fi","shouldComponentUpdate","Gi","contextType","Hi","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","Ii","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Ji","digest","Ki","Li","Mi","WeakMap","Ni","Oi","Pi","Qi","getDerivedStateFromError","componentDidCatch","Ri","componentStack","Si","pingCache","Ti","Ui","Vi","Wi","Xi","Yi","Zi","$i","aj","bj","cj","dj","baseLanes","cachePool","transitions","ej","fj","gj","hj","ij","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","jj","kj","pendingContext","lj","zj","Aj","Bj","Cj","mj","nj","oj","fallback","pj","qj","sj","dataset","dgst","tj","uj","_reactRetry","rj","subtreeFlags","vj","wj","isBackwards","rendering","renderingStartTime","last","tailMode","xj","Dj","Ej","Fj","wasMultiple","multiple","suppressHydrationWarning","onClick","onclick","createElementNS","autoFocus","createTextNode","Gj","Hj","Ij","Jj","Kj","WeakSet","Lj","Mj","Nj","Pj","Qj","Rj","Sj","Tj","Uj","Vj","insertBefore","_reactRootContainer","Wj","Xj","Yj","Zj","onCommitFiberUnmount","componentWillUnmount","ak","bk","ck","dk","ek","isHidden","fk","gk","display","hk","ik","jk","kk","__reactInternalSnapshotBeforeUpdate","Vk","lk","mk","nk","ok","Y","Z","pk","qk","rk","sk","tk","uk","vk","wk","xk","yk","zk","Ak","Bk","Ck","Dk","callbackNode","expirationTimes","expiredLanes","wc","callbackPriority","ig","Ek","Fk","Gk","Hk","Ik","Jk","Kk","Lk","Mk","Nk","finishedWork","finishedLanes","Pk","timeoutHandle","Qk","Rk","Sk","Tk","Uk","mutableReadLanes","Bc","Oj","onCommitFiberRoot","mc","onRecoverableError","Wk","onPostCommitFiberRoot","Xk","Yk","$k","pendingChildren","al","mutableSourceEagerHydrationData","bl","pendingSuspenseBoundaries","dl","fl","gl","hl","il","yj","Zk","kl","reportError","ll","_internalRoot","ml","nl","ol","pl","rl","ql","unmount","unstable_scheduleHydration","form","sl","usingClientEntryPoint","Events","tl","findFiberByHostInstance","bundleType","rendererPackageName","ul","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setErrorHandler","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","vl","isDisabled","supportsFiber","inject","createPortal","cl","unstable_strictMode","findDOMNode","flushSync","hydrate","hydratedSources","_getVersion","_source","unmountComponentAtNode","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","getIngredientDetails","recipe","allResources","ingredients","ingredientType","ingredientQty","ingredientResource","existingTiles","newTiles","row","changed","oldTile","raw","template","getCurrentTileCoordinates","tileX","tileY","getPersonalizedWarehouseRarity","itemType","_rarityRotation$itemT","rarityGroup","hash","getPlayerRarityGroup","isACrop","checkAndDropWarehouseIngredient","collectedItemType","inventory","backpack","setInventory","setBackpack","gainIngredients","trackQuestProgress","getLocalizedString","selectWeightedRandomItem","dropped","dropRate","harvestDropRate","roll","toFixed","warehouseIngredients","scrollchance","selectedIngredient","ingredient","added","calculateBulkWarehouseDrops","numPlotsHarvested","warehouseDrops","personalizedIngredients","rarity","aggregateWarehouseDrops","aggregated","drop","calculateGemSpeedupCost","remainingTimeMs","remainingMinutes","getPersonalizedPetRewards","petRewards","reward","setTiles","newResources","currentStep","nextStep","FTUEstepsData","addAcceptedQuest","questIndex","questTemplate","newQuest","questId","goal1","goal2","goal3","completed","rewardCollected","goal1action","goal1item","goal1qty","goal2action","goal2item","goal2qty","goal3action","goal3item","goal3qty","currentActiveQuests","activeQuests","updatedActiveQuests","openPanel","setActiveQuestGiver","setActiveStation","currentStepData","setCurrentStepData","imageLoaded","setImageLoaded","showFeedbackModal","setShowFeedbackModal","positiveReasons","setPositiveReasons","negativeReasons","setNegativeReasons","_currentPlayer$ftueFe","_currentPlayer$ftueFe2","step1Data","hasFeedback","ftueFeedback","positive","negative","stepData","advanceToStep6","image","Image","handleFeedbackSubmit","browserType","getBrowserType","isPositive","browser","completeTutorial","wizardQuestExists","finalActiveQuests","handleAspirationChoice","aspiration","toggleReason","reasonIndex","className","_jsxs","onChange","titleKey","bodyKey","alt","actualCurrentStep","hasNextStep","notificationKey","playerAfterQuest5","playerAfterQuest18","continue","farmTimer","farmState","initializeFarmState","addSeed","seed","startSeedTimer","completedSeeds","successfulCount","newCrop","forceProcessPendingSeeds","updatePromises","successfulUpdates","seedPositions","processedSeeds","stopSeedTimer","notificationRoot","notificationTimer","globalClickHandlers","Notification","onDismiss","React","cursor","renderContent","_Fragment","registerNotificationClickHandler","handler","container","getElementById","ReactDOM","clickHandler","handleDismiss","globalFloatingTexts","globalForceUpdate","tick","setTick","displayText","newId","EDGE_THRESHOLD","gridSize","onAnimationEnd","PanelContext","PanelProvider","activePanel","setActivePanel","closePanel","panelName","usePanelContext","checkDCE","processedResources","loadedResources","rawResource","shadowX","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","chunkId","miniCssF","inProgress","dataWebpackPrefix","script","needAttach","scripts","getElementsByTagName","getAttribute","charset","nc","onScriptComplete","doneFns","installedChunks","installedChunkData","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","chunkLoadingGlobal","checkDeveloperStatus","_response$data","isDeveloper","getItem","currentSettlementId","currentFrontierId","messages","setMessages","inputText","setInputText","endRef","_false","json","fetchMessages","_endRef$current","scrollIntoView","handleSend","trimmed","onKeyDown","GridStateContext","GridStateUpdateContext","useGridState","GridStateProvider","GridStatePCContext","GridStatePCUpdateContext","usePlayersInGrid","GridStatePCProvider","player","_player$activeQuests","questUpdated","updatedQuests","quest","goalsCompleted","totalGoals","goalAction","goalItem","goalQty","isWallBlocking","checkRange","playerPos","targetPos","extractXY","playerRange","isAHit","attackRoll","hitRoll","calculateDamage","randomDamageModifier","isCurrency","calculateSkillMultiplier","playerSkills","applicableSkills","multiplier","_masterSkills$skill$t","buffValue","hasSkills","deriveWarehouseAndBackpackCapacity","baseWarehouse","warehouseCapacity","baseBackpack","backpackCapacity","isGold","accountStatus","warehouseBonus","warehouseCapacityGold","backpackBonus","backpackCapacityGold","skillDetails","bonus","warehouse","canAfford","amount","inv","bp","backpackItem","inventoryItem","hasRoomFor","isCurrencyItem","isHomestead","maxBackpack","capacity","fetchInventory","_response$data5","refreshPlayerAfterInventoryUpdate","preserveInventory","_merged$location","gridPlayer","_playersInGridManager2","_updatedPlayerData$lo","storingInBackpack","_currentPlayer$skills2","isCapacityError","isNetworkError","deltaPayload","_err$response","_err$response2","_err$response3","_err$response4","_err$response4$data","_err$response4$data$e","_err$response5","_err$response5$data","_err$response5$data$e","_err$response6","spendIngredients","updatedInventory","updatedBackpack","deltaChanges","remaining","used","descriptionKey","xmlns","viewBox","fill","stroke","strokeLinecap","strokeLinejoin","x2","y2","reverseLookupMap","getStringIdByValue","createReverseLookupMap","reverseMap","stringId","onAction","transactionKey","isProcessing","setIsProcessing","transactionId","AnimalPanel","stationType","currentStationPosition","stallDetails","setStallDetails","currentNPC","setCurrentNPC","setCurrentTime","stallResource","updateNPCData","npcsInGrid","interval","storedInventory","serverInventory","syncInventory","Panel","remainingTime","getNPCStatusText","TransactionButton","totalRefund","formatCollectionResults","operation","results","skillsInfo","replantInfo","label","itemParts","skillInfo","localizedName","skillsStr","replantParts","formatSingleCollection","handleProtectedFarmAnimalCollection","currentNPCState","collectedQuantity","collectedItem","skillsApplied","animalsAtSamePosition","otherAnimal","_error$response","_error$response2","_error$response3","_error$response3$data","_error$response4","errorMessage","errorDetails","currentUsage","serverStateMatch","serverState","otherProcessingAnimal","_otherNpc$position3","_otherNpc$position4","handleNPCClick","setModalContent","setIsModalOpen","allAnimalsAtPosition","_otherNpc$position5","_otherNpc$position6","processingAnimalAtSamePosition","freshNPC","resourceDetails","enrichedResource","_currentPlayer$active","handleAttackOnNPC","NPCOverlayContext","NPCOverlayProvider","npcOverlays","setNpcOverlays","setNPCOverlay","overlayType","clickable","overlay","clearNPCOverlay","getNPCOverlay","setBusyOverlay","setQuestOverlay","setAttackOverlay","useNPCOverlay","cacheTime","cacheExpiry","pendingRequest","getQuests","invalidate","getQuestsForNPC","giver","activeConversations","relationshipOutcomes","addSpeech","speakerId","topic","notifyListeners","removeSpeech","getSpeech","showOutcome","getOutcome","renderOverlay","parentDiv","getOverlayContent","renderSpeechBubble","speakerType","speech","ConversationManager","existingBubble","_existingBubble$query","existingEmoji","bubble","bottom","marginBottom","scale","getComputedStyle","padding","borderWidth","emojiDiv","renderRelationshipOutcome","outcome","existingOutcome","existingType","existingTimestamp","outcomeDiv","textShadow","onNPCClick","onPCClick","setHoverTooltip","hoveredEntityIdRef","suppressTooltipRef","masterResourcesRef","containerRef","animationFrameId","reloadRef","npcElements","pcElements","hoveredNPCDivRef","questNPCStatusRef","conversationVersion","setConversationVersion","checkQuestNPCStatus","npcQuests","questCache","_currentPlayer$comple","activeQuest","repeatable","completedQuests","_currentPlayer$active2","checkTradeNPCStatus","tradeRecipes","renderNPCs","_NPCsInGrid$gridId","existingIds","npcDiv","overridePos","renderX","renderY","overlayData","existingOverlay","cachedStatus","tradeSymbol","npcDivCheck","alignItems","justifyContent","_currentPlayer$locati3","isOnOwnHomestead","_playersInGrid$gridId","_playersInGrid$gridId2","_pcState$speed","pcState","baseSpeed","_currentPlayer$locati4","_npc$position","_npc$position2","npcPos","_npc$position3","_npc$position4","_currentPlayer$locati5","onmouseenter","localizedNPCType","tooltipContent","countdownText","handleNPCHover","onmouseleave","classList","handleNPCHoverLeave","npcSpeakerId","div","renderPCs","_currentPlayer$locati6","_playersInGrid$gridId3","pcDiv","_currentPlayer$locati10","_currentPlayer$locati11","isNotSelf","isAttackable","isTown","_playersInGridManager3","handleAttackOnPC","handlePCClick","handlePCHover","handlePCHoverLeave","pcSpeakerId","startRenderingLoop","_currentPlayer$settin","_currentPlayer$locati7","_playersInGrid$gridId4","_playersInGrid$gridId5","_playersInGrid$gridId6","_playersInGrid$gridId7","_playersInGrid$gridId8","_playersInGrid$gridId9","_currentPlayer$locati8","rangeOn","rangeCircle","backgroundColor","border","borderRadius","pixelX","pixelY","radius","attackRange","attackRangeRing","attackRadius","existingAttackRing","renderPlayerRange","_currentPlayer$settin2","_currentPlayer$locati9","_NPCsInGrid$gridId2","rangeElement","renderNPCAttackRanges","cancelAnimationFrame","existingRangeCircle","circle","generateResourceTooltip","lines","localizedResourceType","days","hours","minutes","seconds","RenderGrid","tileTypes","handleTileClick","badgeState","electionPhase","forceTick","hoverTimersRef","craftingStatus","petStatus","searching","hungry","tradingStatus","tradeStall","trade","sellTime","boughtBy","rowIndex","colIndex","_tileTypes$rowIndex","tileClass","isCraftReady","isCraftInProgress","isTradingReady","isPetReady","isPetSearching","isPetHungry","resourceKey","onMouseEnter","updateTooltip","onMouseLeave","mailbox","lockedResources","unlockResource","STANDARD_RARITY_TABLE","getRarityChance","level","baseRarity","rarityScale","items","totalWeight","cumulative","handleResourceClick","_tileTypes$row","_bulkOperationContext2","fetchedInventory","fetchedBackpack","_response$data2","_response$data3","_response$data4","fetchInventoryAndBackpack","handleDooberClick","handleSourceConversion","activeOps","getActiveBulkOperations","baseQtyCollected","dooberId","_processingDoobers","qtyCollected","_masterSkills$item$ty","isSkill","appliesToResource","buffItem","buff","_masterSkills$buff","gainResult","gridUpdateResponse","pendingKeyResolve","requirement","isSkillOrUpgrade","isKey","usedKey","_currentPlayer$invent","_currentPlayer$backpa","_currentPlayer$backpa2","handleNo","totalOwned","message2","gap","marginTop","ingredient1","ingredient1qty","handleUseKey","originalResource","filteredResources","enrichedNewResource","UILockContext","UILockProvider","uiLocked","setUILocked","controlledGrids","setupSocketListeners","retryTimeout","setAsController","removeController","joinGrid","leaveGrid","controllerData","StatusBarContext","StatusBarProvider","messageIdRef","newMessage","predefinedMessage","messageObject","StatusBar","displayMessages","setDisplayMessages","slideOffset","setSlideOffset","scrollPosition","setScrollPosition","canScrollRight","setCanScrollRight","prevFirstId","newMessageRef","messagesContainerRef","viewportRef","_messages$","currentFirstId","offsetWidth","containerWidth","viewportWidth","handleScrollLeft","_viewportRef$current","visibility","whiteSpace","handleScrollRight","maxScroll","BulkOperationContext","BulkOperationProvider","activeBulkOperations","setActiveBulkOperations","startBulkOperation","operationType","operationId","endBulkOperation","newState","useBulkOperation","getGridBackgroundColor","setZoomLevel","isRelocating","setIsRelocating","visibleSettlementId","setVisibleSettlementId","settlementGrid","setSettlementGrid","players","setPlayers","setError","NPCsInGrids","setGridStates","playersInGridMap","gridStates","playersArray","playersById","gridIds","gridStateResponse","mergedPlayersInGrid","_gridStateResponse$da","_gridStateResponse$da2","fetchData","playerGridId","playerRow","playerCol","_settlementGrid$row$c","playerTile","block","inline","updatedRect","right","tileCenterX","tileCenterY","windowCenterX","windowCenterY","scrollX","scrollY","centerCameraOnPlayerGrid","available","fromGridId","targetGridCoord","relocationResponse","processRelocation","_pcs","arrivalX","arrivalY","renderMiniGrid","tileData","settlementTileData","isPlayerHere","owner","ownerIdStr","tooltip","getTooltip","miniX","miniY","isValleyGrid","playerPCs","playerPC","_playerPCs","_playerPC","cell","stall","_owner2","role","_owner3","_owner3$netWorth","netWorth","toLocaleString","frontierGrid","setFrontierGrid","settlementGrids","setSettlementGrids","checkAndShowFrontierTip","_settlementGrids$tile","frontierTileData","settlementType","flatSettlementGrid","ownedHomestead","isOpen","custom","LanguagePickerModal","onSave","selectedLanguage","setSelectedLanguage","LANGUAGE_OPTIONS","flag","stripePromise","RELEASE_TRAIN","ORIGIN","STRIPE_JS_URL","V3_URL_REGEX","STRIPE_JS_URL_REGEX","EXISTING_SCRIPT_MESSAGE","injectScript","queryString","advancedFraudSignals","headOrBody","stripePromise$1","onErrorListener","onLoadListener","loadScript","Stripe","findScript","_script$parentNode","onLoad","loadCalled","getStripePromise","loadStripe","maybeStripe","isTestKey","runtimeVersionToUrlVersion","expectedVersion","stripe","_registerWrapper","registerWrapper","initStripe","handlePurchase","offerId","redirectToCheckout","sessionId","openMailbox","offers","setOffers","purchaseSuccess","history","replaceState","fetchOffers","Modal","activeOffers","offer","shelflifeDays","created","isOfferExpired","processedIds","offer3","offer4","rewards","_resources$find","price","_resources$find2","offer6","offer7","offer8","_resources$find3","_resources$find4","_resources$find5","_resources$find6","ChangeIconModal","currentIcon","setModalIsOpen","selectedIcon","setSelectedIcon","freeIcons","ICON_OPTIONS","paidIcons","locked","isEmoji","updatedCurrentPlayer","updatePlayerIcon","alert","ModalContext","useModalContext","ModalProvider","activeModal","setActiveModal","openModal","modalName","closeModal","_LANGUAGE_OPTIONS$fin","handleLogout","zoomLevel","setIsDeveloper","hasCheckedDeveloperStatus","showChangeIconModal","setShowChangeIconModal","_res$data","_res$data2","checkDevStatus","setFormData","isSaving","setIsSaving","setErrorMessage","localSettings","setLocalSettings","isStateMachineEnabled","isTeleportEnabled","toggleVFX","_settings$isStateMach","_settings$isTeleportE","_settings$toggleVFX","_settings$rangeOn","handleInputChange","handleToggleChange","updatedSettings","newSettings","updatePlayerSettings","roleName","_error$response$data","handleGoldPanelSwitch","confirm","removeItem","relocations","handleLanguage","newIcon","setIsLoggedIn","setUsername","setPassword","setLanguage","isSubmitting","setIsSubmitting","onSubmit","frontierName","frontierResponse","frontier","assignedSettlementId","assignedGridCoord","settlementRow","settlements","settlementResponse","availableGrid","registerPayload","assignedGridId","baseHp","baseMaxhp","baseAttackbonus","baseArmorclass","baseDamage","baseAttackrange","messageId","mailError","_err$response$data","onLoginSuccess","showCreateAccount","setShowCreateAccount","CreateAccount","htmlFor","required","formatJSON","currentNPCs","currentPCs","_currentPlayer$wareho","timers","setTimers","setNPCs","setPCs","setUpdatedNPCs","refreshDebug","setRefreshDebug","singleGridCoord","setSingleGridCoord","toGridCoord","setToGridCoord","usernameToDelete","setUsernameToDelete","messageIdentifier","setMessageIdentifier","resourcesWithTimers","fetchTimers","timerInterval","prevTimers","growTimeRemaining","craftTimeRemaining","fetchGridStateEntities","handleGenerateValley","valleyType","frontierData","valleyGrids","settlementData","valleyGrid","generateValleyGrids","resetResponse","townGrids","gridError","generateTownGrids","filteredInventory","clearedSkills","clearedPowers","combatStats","command","clearGridState","clearedTrophies","resourcesToAdd","skillResources","skillsResponse","updatedSkills","existingSkill","foundGrid","foundSettlementId","foundFrontierId","createSingleValleyGrid","parsedCoord","coordStr","matchingGridObj","handleTeleport","_username","deleteResponse","handleDeleteAccount","sendMessageToAll","warehouseLevel","GridStateDebugPanel","_inventory$find","_inventory$find2","_inventory$find3","_inventory$find4","_inventory$find5","showBackpackModal","setShowBackpackModal","showWarehouseModal","setShowWarehouseModal","backpackAmounts","setBackpackAmounts","warehouseAmounts","setWarehouseAmounts","hasBackpackSkill","finalCapacities","warehouseGoldBonus","backpackGoldBonus","calculateTotalQuantity","handleAmountChange","amounts","setAmounts","maxValue","clampedValue","handleMoveAll","isAtHome","itemsToMove","totalToMove","currentWarehouseUsage","updatedWarehouseInventory","existingIndex","invItem","itemsToKeep","_masterResources$find","_masterResources$find2","nonTentBoatItems","isAddAllDisabled","_masterResources$find3","isTentAtHome","isBoatAtHome","isTentOrBoatNotHome","marginLeft","spaceAvailable","updatedWarehouse","newQuantity","handleMoveItem","_masterResources$find4","handleDiscardWarehouseItem","handleDiscardAllWarehouse","calculateGemPurchase","_safeInventory$find","_safeBackpack$find","overrideGemCost","safeInventory","safeBackpack","safeMasterResources","playerGems","ownedSkills","totalValueCalc","totalHasCalc","spendingItems","_safeInventory$find2","_safeBackpack$find2","resourceData","moneyValue","moneyvalue","playerQty","willSpend","skillMoneyValue","gemCost","crafttime","craftTimeMs","timeCost","missingIngredientCost","_safeInventory$find3","_safeBackpack$find3","missingQty","gemcost","_safeInventory$find4","_safeBackpack$find4","ingredientGemCost","calculatedCost","hasEnoughGems","getModifiedRecipe","modifiedRecipe","_safeInventory$find5","_safeBackpack$find5","gemSlot","info","hideInfo","onTransactionAction","isTransactionMode","onGemPurchase","hideGem","showInfo","setShowInfo","tooltipPosition","setTooltipPosition","showGemTooltip","setShowGemTooltip","gemTooltipPosition","setGemTooltipPosition","buttonRef","shouldCalculateGem","gemCalculation","updateTooltipPosition","updateGemTooltipPosition","onMouseMove","masterWarehouse","currentLevel","setCurrentLevel","nextLevel","setNextLevel","needsLevelMigration","setNeedsLevelMigration","migrateLevelToPlayer","handleUpgrade","customRecipe","recipeToUse","newCapacity","newLevel","Level","margin","ResourceButton","setTrophies","loading","setLoading","collecting","setCollecting","fetchTrophies","playerTrophyA","playerTrophyB","isEarnedA","isEarnedB","hasUncollectedRewardA","hasUncollectedRewardB","playerTrophy","isEarned","progressInfo","getProgressInfo","currentProgress","progressArray","lastAchievedMilestone","lastMilestone","milestoneDifference","percentage","hasAchievedAll","hasUncollectedReward","isCollecting","gemReward","prevTrophies","handleCollectReward","offerData","offerMap","flexDirection","QuestButton","goals","rewardqty","goal","QuestGiverButton","buttonText","playerQuests","setPlayerQuests","questTemplates","setQuestTemplates","fetchQuestTemplates","_quest$progress","_quest$progress2","_quest$progress3","textbody","updateRelationship","targetName","_currentPlayer$relati","relationships","rel","relationship","initialScore","updateRelationshipStatus","allCharacters","RelationshipMatrix","metCharacters","met","charName","trophyResponse","trophyError","getRelationshipStatus","relscore","getRelationshipMultiplier","npcName","_currentPlayer$relati4","npcEntry","entry","buff4friend","buff4love","buff4marriage","bonusMessage","married","love","friend","conversationResults","matchingInterests","matchingRandom","totalRounds","playConversation","playerEmoji","npcEmoji","onComplete","interaction","numExchanges","rounds","getCurrentTileSize","gridElement","firstTile","topicContext","playerIcon","npcIcon","roundNum","playerSpeakerId","playerTopicKey","playerTopic","getTopicSymbol","showSpeech","animateCharacter","hideSpeech","npcTopicKey","npcTopic","topicKey","isPlayerTurn","topItems","npcInterests","interest","interests","secretTopics","randomTopics","weatherTopics","characterType","characterElement","playerElements","parseFloat","expectedX","expectedY","RelationshipCard","targetType","targetEmoji","onRelationshipChange","showActions","compact","checkDistance","onInteractionClick","setRelationship","isInitializing","setIsInitializing","loadOrCreateRelationship","existingRel","newRel","handleInteraction","relationshipCheck","checkOtherRelationships","targetNPC","relbitadd","allowed","_currentPlayer$relati2","existingMarriage","targetRivals","rival","_currentPlayer$relati3","playerRelWithRival","targetNPCEntry","targetLoves","conversationTargetEmoji","targetId","baseChance","chance","modifiedChance","calculateModifiedChance","relstatus","buffField","handleInteractionOutcome","scoreChange","relscoreresult","updatedRel","statusResult","npcReactions","getNPCReactions","newStatus","reactions","npcRelationshipWithTarget","setScore","clearAllStatuses","setStatus","reaction","_statusResult$player$","_statusResult$player$2","scoreResult","statuses","isaninteraction","metResult","finalResult","_scoreResult$player$r","updatedRelWithReactor","statusMessage","negativeReactions","positiveReactions","generateRelationshipStatusMessage","relbitremove","removeResult","statusesToRemove","relscoremin","statusKey","statusItem","scoreColor","score","visibleStatuses","isvisible","availableInteractions","_interaction$relscore","_interaction$relscore2","minScore","maxScore","relscoremax","relbitrequired","blockField","crush","NPCPanel","questList","setQuestList","healRecipes","setHealRecipes","setTradeRecipes","setStatusMessage","canQuest","setCanQuest","hasHiddenQuests","setHasHiddenQuests","questThreshold","setQuestThreshold","canTrade","setCanTrade","tradeThreshold","setTradeThreshold","devStatus","checkStatus","questInteraction","currentScore","tradeInteraction","timeoutId","fetchQuests","filteredRecipes","trader","trades","resourceDef","gives","tradeqty","requiresArray","requiresSkill","isInCompleted","questsHiddenByRelationship","handleGemPurchase","actionType","handleHeal","handleTrade","playerInGridState","currentHp","maxHp","healAmount","statToMod","updatedValue","modifyPlayerStatsInGridState","quantityToGive","hasRoom","isMoney","isGem","spendResult","ingredientList","ingredientString","handleSellNPC","npcResource","_currentPlayer$_id2","npcInGrid","_currentPlayer$_id3","_NPCsInGridManager$ge2","_currentPlayer$_id4","_playersInGridManager4","closerTileSize","closerZoom","_currentPlayer$_id5","_playersInGridManager5","textAlign","fontStyle","rewardQuantity","updatedCompletedQuests","prevList","handleGetReward","questTitle","acceptedQuest","initialProgress","isQuestCompleted","handleAcceptQuest","_currentPlayer$_id6","_playersInGridManager6","affordable","_currentPlayer$_id7","_playersInGridManager7","_NPCsInGridManager$ge3","_currentPlayer$_id8","_playersInGridManager8","_NPCsInGridManager$ge4","_currentPlayer$locati12","_currentPlayer$_id9","_playersInGridManager9","_currentPlayer$locati13","_currentPlayer$_id10","_playersInGridManager10","formattedCosts","_backpack$find","ingredientsList","_backpack$find2","storyStringMap","Iago","Juliet","Falstaff","Apothecary","Gertrude","Leontes","Caliban","handleConstructionWithGems","modifiedBuildOptions","buildOptions","handleConstruction","selectedItem","coords","selectedResource","resourceRange","tilesToCheck","occupiedTile","costDetails","costString","debugBefore","getMayorUsername","_settlement$roles","mayorRole","roles","BuildPanel","currentSeason","setBuildOptions","setAllResources","isContentLoading","setIsContentLoading","isMayor","setIsMayor","homeSettlementId","currentLocation","isPlayerMayor","mayorUsername","playerUsername","inventoryResponse","allResourcesData","buildTownResources","validBuildOptions","currentSettlementStr","homeSettlementStr","settlementsMatch","currentSettlement","homeSettlement","season","existingPetOfType","layoutkey","buildTownInFinal","totalOptions","buildTownIncluded","shouldHaveBuildTown","requirementsMet","owned","hasRequiredSkill","_allResources$find","inventoryQty","backpackQty","skillColor","BuyPanel","buyOptions","setBuyOptions","purchasableItems","_allResources$find2","BuyDecoPanel","formatCountdown","endTime","timeDiff","formatDuration","secs","FarmingPanel","farmPlots","setFarmPlots","coolingDownItems","setCoolingDownItems","farmPlotsWithSeasonInfo","isOffSeason","handleFarmPlacementWithCooldown","itemKey","cooldownTimer","_tiles$tileY","growEndTime","cropName","handleFarmPlotPlacement","isCoolingDown","ToolsPanel","COOLDOWN_DURATION","farmPlotItems","handleTerraformWithCooldown","_tileTypes$tileY","handleTerraform","handleProtectedSelling","resourcesAtPosition","stationX","stationY","refundIngredients","totalMoneyRefund","removedStation","soldResource","_error$response5","_error$response5$data","_error$response4$data","SkillsPanel","entryPoint","setEntryPoint","skillsToAcquire","setSkillsToAcquire","setOwnedSkills","stationEmoji","setStationEmoji","resourcesResponse","serverBackpack","serverSkills","stationResource","availableSkills","canAcquireSkill","fetchResourcesAndInventory","showSellButton","meetsRequirement","attributeModifier","buffText","buffedItems","unlocks","calculateSettlementPopulation","_settlementData$grids","setSettlementData","taxRate","setTaxRate","population","setPopulation","taxLog","setTaxLog","mayor","setMayor","buildingCounts","School","Hospital","Library","taxlog","taxrate","mayorName","fetchGovernmentData","taxLogTable","borderCollapse","reverse","toLocaleDateString","totalcollected","currentmayor","mayortake","bankOffers","setBankOffers","bankTimer","setBankTimer","bankPhase","setBankPhase","coolingDownButtons","setCoolingDownButtons","fetchBankOffers","_response$data$bank","_response$data$bank2","bank","phase","updateCountdown","bankTimerData","handleTradeWithCooldown","buttonIndex","itemBought","qtyBought","itemGiven","qtyGiven","getSymbol","isInHomeSettlement","trainOffers","setTrainOffers","trainPhase","setTrainPhase","trainTimer","setTrainTimer","nextOffers","setNextOffers","trainRewards","setTrainRewards","latestInventory","setLatestInventory","playerUsernames","setPlayerUsernames","currentTrainNumber","setCurrentTrainNumber","fetchTrainOffers","trainTimerData","currentoffers","nextoffers","currentTrain","trainlog","trainnumber","fetchUsernames","playerIds","claimedBy","usernamePromises","usernameMap","showLogicModal","setShowLogicModal","logicModalData","setLogicModalData","logic","trainNumber","handleShowTrainLog","trainLogTable","alloffersfilled","totalwinners","combinedRewards","totalQty","handleShowLogic","logicText","renderOfferSection","_latestInventory$find","isYours","isCompleted","filled","updateOffer","newOffers","handleFulfill","offerIndex","updatedOffer","handleClaim","claimedByYou","claimedByOthers","allOrdersFilled","renderRewardSection","renderNextShipment","seen","uniqueOffers","setSettlement","setElectionPhase","countdown","setCountdown","campaignPromises","setCampaignPromises","newPromise","setNewPromise","selectedCandidate","setSelectedCandidate","hasVoted","setHasVoted","votedFor","setVotedFor","candidateList","setCandidateList","tempTaxRate","setTempTaxRate","hoveredCandidate","setHoveredCandidate","tempSettlementName","setTempSettlementName","isModalOpen","modalContent","fetchElectionData","updateTimerAndPhase","electionData","elections","newPhase","populationCount","votes","playerVote","voterId","_settlementData$campa","votedCandidate","candidateId","_settlementData$campa2","uniqueCandidates","maxWidth","electionlog","electionLogTable","_entry$candidates","candidates","electedmayor","candidate","_campaignPromises$fin","getCandidatePromise","CraftingStation","recipes","setRecipes","stationDetails","setStationDetails","activeTimer","setActiveTimer","setCraftedItem","craftingCountdown","setCraftingCountdown","isCrafting","setIsCrafting","isReadyToCollect","setIsReadyToCollect","npcRefreshKey","setNpcRefreshKey","stationRefreshKey","setStationRefreshKey","_GlobalGridStateTiles","station","existingNPCTypes","handleCraft","updatedGlobalResources","handleCollect","baseQuantity","isNPC","updatedStation","finalQtyCollected","craftedResource","handleGemSpeedup","_currentPlayer$invent2","updateResponse","skillMessage","getSkillBonusMessage","skillName","stations","hasSkill","unownedSkills","combinedMultiplier","skillsList","skillResource","skillSource","gemSpeedupCost","craftTimeText","ingredient2","ingredient3","ingredient4","minprice","FarmHouse","toLocaleTimeString","placementData","workerPlacementData","workerType","offsetX","offsetY","spawnPosition","recipeType","hasInventory","isGemPurchase","frame","setFrame","hourglassFrames","BulkHarvestModal","crops","getFreshCrops","onExecute","showBulkReplant","selectedCropTypes","setSelectedCropTypes","selectedReplantTypes","setSelectedReplantTypes","defaultSelection","crop","defaultReplantSelection","replantRequires","isInSeason","farmplot","allSelected","allReplantSelected","allHarvestSelected","paddingLeft","maxHeight","overflowY","canReplant","borderBottom","handleToggleCrop","cropType","newValue","replantPrev","marginRight","cropPrev","freshCrops","validCropTypes","validReplantTypes","executeBulkHarvest","selectedTypes","currentResources","pendingFarmplots","maxAttempts","resourceAtPosition","freshResources","capacityCheck","totalCapacityNeeded","harvestDetails","currentBackpackUsage","capacities","totalCapacity","currentTotalUsage","availableSpace","baseCrop","baseYield","yieldPerCrop","totalYield","skillMultiplier","positions","replantDetails","seedsNeeded","totalNeeded","farmplotType","hasEnoughSeeds","canReplantAll","seedType","needed","totalHas","enough","canHarvest","calculateBulkHarvestCapacity","spaceNeeded","missingSeeds","operations","shouldReplant","replant","expectedYield","buildBulkHarvestOperations","harvestedPositions","harvested","replanted","growTimeMs","stage","harvestSkillsInfo","harvestResults","warehouseDropsArray","aggregatedWarehouseDrops","_response$data$invent","_response$data$invent2","questProgressCategory","itemName","seedsUsed","prepareBulkHarvestData","cropCounts","hasHarvestResults","hasReplantInfo","hasWarehouseDrops","hasSkillBonus","cropResource","cropSymbol","seedsUsedForCrop","BulkAnimalModal","animals","selectedAnimalTypes","setSelectedAnimalTypes","animal","handleExecute","BulkCraftingModal","stationGroups","hasBulkRestartCraft","selectedGroups","setSelectedGroups","selectedRestartStations","setSelectedRestartStations","defaultRestartSelection","group","canRestart","isGroupSelected","isRestartDisabled","selectAll","selectNone","selectAllRestarts","allRestartSelection","groupsToSelect","selectNoneRestarts","needs","stationCount","totalAvailable","calculateGroupNeeds","restartPrev","handleToggleGroup","stationSymbol","craftedSymbol","restartLabel","getRestartLabel","groupsPrev","handleToggleRestart","idx","executeBulkCrafting","batchStations","flatMap","shouldRestart","restartRecipe","stationGroup","successfulCollects","successfulRestarts","appliedSkillsInfo","stationUpdates","itemCollected","restarted","newCraftEnd","newCraftedItem","playerBuffs","appliesToStation","restartedItem","currentInventory","currentBackpack","hasCollections","hasRestarts","totalProcessed","restartInfo","formatRestartResults","FarmHandPanel","workerSkills","setFarmhandSkills","workerUpgrades","setFarmhandUpgrades","isHarvestModalOpen","setIsHarvestModalOpen","availableCrops","setAvailableCrops","bulkHarvestResults","setBulkHarvestResults","isResultsModalOpen","setIsResultsModalOpen","isAnimalModalOpen","setIsAnimalModalOpen","availableAnimals","setAvailableAnimals","isCraftingModalOpen","setIsCraftingModalOpen","selectedCraftingStations","setSelectedCraftingStations","availableCraftingStations","setAvailableCraftingStations","hasBulkReplant","bulkProgressModal","setBulkProgressModal","executeBulkOperation","operationName","workerNPC","asyncOperation","pendingStatusMessage","showBulkHarvest","showBulkAnimalCollect","showLogging","showCropPurchase","showBulkCrafting","farmOutputs","ownedTypes","validSources","executeSelectiveAnimalCollect","animalsToCollect","wait","animalSkillsInfo","executeBulkAnimalCollect","getFreshCropData","getSkillTooltip","skillType","processingAnimals","animalCounts","animalsWithDetails","animalType","maxTrees","lumberjackNPC","farmerNPC","centerPos","centerType","treeResources","tree","treesToChop","choppedTreePositions","wood","workerNPCCleanup","readyStations","stationDef","prepareBulkCraftingData","stationsWithDetails","playerInventory","hasAllIngredients","handlePurchaseSkill","cost","maxprice","ProgressModal","BulkHarvestResultsModal","ShopStation","fetchTrigger","setFetchTrigger","updatedPowers","powerIndex","statUpdates","oldValue","_currentPlayer$powers","hasRequirement","outputSummary","effectsHtml","infoContent","ScrollStation","scrollCount","setScrollCount","revealedItemQty","setRevealedItemQty","setIsCollecting","checkStation","isRevealed","scrolls","handleCollectReveal","_currentPlayer$skills3","_currentPlayer$powers2","collectedQty","revealedResource","categoryEmoji","updatedRange","gainSkillOrPower","rarityText","scrollableItems","scrollqty","fallbackItem","getRandomScrollReveal","revealScrollResource","reveal","getRevealDisplayString","craftTime","getRandomPetReward","petLevel","selectedReward","quantityRanges","getDropQuantity","PetPanel","petResource","currentPetPosition","rewardItem","setRewardItem","feedingCountdown","setFeedingCountdown","isFeeding","setIsFeeding","revealedRewardQty","setRevealedRewardQty","revealedRewardRarity","setRevealedRewardRarity","canAffordFeeding","setCanAffordFeeding","petName","petSymbol","feedIngredient","feedQuantity","feedingTime","checkAffordability","checkPetState","pet","rewardResource","ingredientDetails","isValid","feedMessage","AnimalStall","outputDetails","setOutputDetails","CropPanel","currentResource","isActionCoolingDown","setIsActionCoolingDown","cropDetails","setCropDetails","getCropStatusText","DecoPanel","setResourceDetails","availableResource","onBuyItem","settlementPlayers","setSettlementPlayers","playerTradeStalls","setPlayerTradeStalls","setResourceData","isLoading","setIsLoading","tradeStallPromises","tradeStallResults","tradeStallsData","fetchGlobalMarketData","playersWithItems","slot","localeCompare","availableSlots","slotIndex","actualSlotIndex","totalCost","handleBuyItem","tradeSlots","setTradeSlots","selectedSlotIndex","setSelectedSlotIndex","totalSellValue","setTotalSellValue","isLoadingInitial","setIsLoadingInitial","isGlobalMarketOpen","setIsGlobalMarketOpen","tradeStallHaircut","tradeStallSlotConfig","tradeStallSlots","getSlotConfig","maxAmount","sellWaitTime","unlocked","unlockCost","requiresGoldPass","isSlotUnlocked","fetchDataForViewedPlayer","skipInventoryFetch","currentInventoryResponse","serverSlots","allSlots","existingSlot","boughtFor","wheatItem","slotConfig","resourceInInventory","inventoryAmount","performAddToSlot","updatedSlots","refreshedInventory","calculateTotalSellValue","slots","borderTop","isEmpty","isPurchased","isReadyToSell","hasTimer","slotUnlocked","handleSlotClick","handleCollectPayment","sold","handleSellSingle","tempRecipe","handleUnlockSlot","plotResource","finalAmount","handleAddToSlot","GlobalMarketModal","latestSlots","currentSlot","Outpost","setMasterResources","OUTPOST_HAIRCUT","_globalTuning$tradeSt","initSlots","sellerUsername","sellerId","outpostTradeStall","resourceInBackpack","backpackAmount","isOwnItem","handleSellToGame","buyerId","buyerUsername","templates","setTemplates","markedReadIds","setMarkedReadIds","visibleMessages","setVisibleMessages","freshMessages","unreadMessages","updatedMessages","fetchTemplatesAndMessages","renderRewards","handleClose","messageIndex","collectedItems","_currentPlayer$messag","deleteMessage","seasons","setSeasons","seasonData","setSeasonData","richestCitizens","setRichestCitizens","secondsLeft","setSecondsLeft","storedTimers","fetchSeasons","diff","_response$data2$seaso","seasonLog","seasonlog","currentSeasonNumber","seasonNumber","lastSeason","seasonnumber","winners","seasonwinners","networth","fetchSeasonWinners","currentIndex","seasonType","previousIndex","previousSeason","settlementName","setSettlementName","currentTrainOffers","setCurrentTrainOffers","nextTrainOffers","setNextTrainOffers","electionTimer","setElectionTimer","formatOffers","fetchTownData","_frontierResponse$dat","_storedTimers$bank","_storedTimers$train","_storedTimers$electio","_storedTimers$train2","_storedTimers$electio2","_storedTimers$bank2","_settlementMap","topCitizens","setTopCitizens","topSettlementName","setTopSettlementName","seasonCycle","setSeasonCycle","highestWealth","setHighestWealth","settlementMap","setSettlementMap","getSeasonData","fetchSeasonCycle","settlementWealthMap","totalNetWorth","leadingSettlementId","leadingSettlementName","leadingSettlementPopulation","matching","topPlayers","fetchTopCitizensAndSettlement","_seasonCycle$nextInde","nextIndex","getNextSeason","handleShowSeasonRules","rulesContent","paddingRight","citizen","seasonLogTable","seasontype","winningsettlement","gridsreset","playersrelocated","SocialPanel","tentCount","setTentCount","boatCount","setBoatCount","isCamping","setIsCamping","isInBoat","setIsInBoat","displayedPCData","setDisplayedPCData","latestData","_currentPlayer$backpa3","_currentPlayer$backpa4","tentsInBackpack","boatsInBackpack","fakeRecipe","handlePitchTent","handleGetInBoat","CombatPanel","_currentPlayer$powers3","playerStats","setPlayerStats","canChangeEquipment","stats","getPlayerStats","getStatBreakdown","stat","basePropertyName","modifier","refreshCombatStatsWithPlayer","_playerData$settings","_playerData$settings2","baseStats","powerBonuses","finalStats","currentPCStats","pcPosition","handleRefreshCombatStats","isEquipped","getEquippedArmor","armorType","handleEquipArmor","statIndex","getEquippedWeapon","weaponType","handleEquipWeapon","shareToNetwork","network","shareUrl","readOnly","copyToClipboard","clipboard","writeText","CowboyAnimation","setPosition","setTargetPosition","setDuration","moveToNewPosition","newX","newY","actualDistance","userSelect","_timers$seasons","_timers$seasons3","_playersInGrid$gridId14","_playersInGrid$gridId15","_playersInGrid$gridId16","_playersInGrid$gridId17","_playersInGrid$gridId18","_playersInGrid$gridId19","_playersInGrid$gridId20","_playersInGrid$gridId21","_playersInGrid$gridId22","_currentPlayer$locati16","trace","_appEl$innerHTML","appEl","serverPreviouslyDown","_storedTimers","_storedTimers$seasons","serverPhase","setIsOffSeason","checkInitialSeasonPhase","setIsMasterResourcesReady","setMasterSkills","setGlobalTuning","setMasterInteractions","setMasterTraders","setMasterTrophies","cleanedResources","invalidCrops","mr","cleanedRes","TILE_SIZES","closer","closeZoom","far","farZoom","activeTileSize","playerIdStr","lastShownFTUEStep","setLastShownFTUEStep","setPlayerPosition","isLoginPanelOpen","setisLoginPanelOpen","activeQuestGiver","activeSocialPC","setActiveSocialPC","activeStation","showShareModal","setShowShareModal","showFTUE","setShowFTUE","setShowKeyArt","hoverTooltip","isSocketConnected","connectedPlayers","chatMessages","setChatMessages","chat","store","memoizedGrid","memoizedTileTypes","memoizedResources","showKeyArt","isAppInitialized","setIsAppInitialized","__vvgame_connect_listener","connectListener","cleanupBadges","_DBPlayerData$locatio","_updatedPlayerData","_parsedPlayer$locatio","_freshPCState$playerI","_DBPlayerData$locatio2","_gridPlayer$position","_gridPlayer$position2","_updatedPlayerData$se","globalTuningData","interactions","traders","storedPlayer","parsedPlayer","storedGridId","resolvedGridId","isDev","initialGridId","freshNPCState","isLocationMismatch","isMissingFromGrid","hasDied","storedBadges","stored","getBadgeState","initializeAppWrapper","_cleanupBadges","currentGridNPCs","_playerPC$position","_playerPC$position2","onTileType","targetLocation","updatedLocation","restoredHp","filteredBackpack","originalLocation","handlePlayerDeath","lavaDamage","_playerPC$position3","_playerPC$position4","healing","taxes","countdowns","setCountdowns","fetchTimersData","initializeTimers","_frontierData$seasons","_frontierData$seasons2","_frontierData$seasons3","_frontierData$electio","_frontierData$electio2","_frontierData$train","_frontierData$train2","_frontierData$taxes","_frontierData$taxes2","_frontierData$bank","_frontierData$bank2","updatedTimers","updateCountdowns","shouldFetchNewTimers","_JSON$parse","_JSON$parse$seasons","previousPhaseRef","_timers$seasons2","currentPhase","handleMovementKeyDown","handleMovementKeyUp","isFriend","alwaysBlocked","isForbiddenStation","isSafe","farmHouse","finally","lastActivity","updateActivity","visibilityState","checkStaleness","inactiveTime","showTimers","setShowTimers","showStats","setShowStats","isChatOpen","setIsChatOpen","isChatClosing","setIsChatClosing","Chat","handleCloseChat","_playersInGrid$gridId10","zoomOut","_playersInGrid$gridId11","_playersInGrid$gridId12","_playersInGrid$gridId13","_currentPlayer$locati14","_currentPlayer$locati15","DynamicRenderer","SettlementView","FrontierView","ShareModal","FTUE","Mailbox","TownNews","Store","OffSeasonModal","ProfilePanel","LoginPanel","handleLoginSuccess","DebugPanel","InventoryPanel","WarehousePanel","TrophyPanel","BankPanel","TrainPanel","HowToPanel","HowToMoneyPanel","HowToGemsPanel","GoldBenefitsPanel","GovPanel","CourthousePanel","QuestPanel","_activeStation$positi","_activeStation$positi2","TradeStall","SeasonPanel","inset","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","__app_initialized__","cachedLanguage","savedPlayer","savedLanguage","rootEl","__root_created__","__root","__app_rendered__","App","reportWebVitals"],"sourceRoot":""}